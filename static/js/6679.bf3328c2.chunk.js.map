{"version":3,"file":"static/js/6679.bf3328c2.chunk.js","mappings":"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","sources":["../node_modules/clsx/dist/clsx.m.js","../node_modules/preact/src/constants.js","../node_modules/preact/src/util.js","../node_modules/preact/src/options.js","../node_modules/preact/src/create-element.js","../node_modules/preact/src/component.js","../node_modules/preact/src/diff/props.js","../node_modules/preact/src/create-context.js","../node_modules/preact/src/diff/children.js","../node_modules/preact/src/diff/index.js","../node_modules/preact/src/render.js","../node_modules/preact/src/clone-element.js","../node_modules/preact/src/diff/catch-error.js","../node_modules/preact/hooks/src/index.js"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 2;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 1;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nexport const XHTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n\nexport const NULL = null;\nexport const UNDEFINED = undefined;\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import { EMPTY_ARR } from './constants';\n\nexport const isArray = Array.isArray;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-expect-error We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {import('./index').ContainerNode} node The node to remove\n */\nexport function removeNode(node) {\n\tif (node && node.parentNode) node.parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","import { slice } from './util';\nimport options from './options';\nimport { NULL, UNDEFINED } from './constants';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component constructor for this\n * virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the\n * virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != NULL) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] == UNDEFINED) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, NULL);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\t/** @type {import('./internal').VNode} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: NULL,\n\t\t_parent: NULL,\n\t\t_depth: 0,\n\t\t_dom: NULL,\n\t\t_component: NULL,\n\t\tconstructor: UNDEFINED,\n\t\t_original: original == NULL ? ++vnodeId : original,\n\t\t_index: -1,\n\t\t_flags: 0\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == NULL && options.vnode != NULL) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: NULL };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != NULL && vnode.constructor == UNDEFINED;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\nimport { MODE_HYDRATE, NULL } from './constants';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function BaseComponent(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nBaseComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != NULL && this._nextState != this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == NULL) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nBaseComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](https://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {ComponentChildren | void}\n */\nBaseComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == NULL) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._index + 1)\n\t\t\t: NULL;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != NULL && sibling._dom != NULL) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : NULL;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet oldVNode = component._vnode,\n\t\toldDom = oldVNode._dom,\n\t\tcommitQueue = [],\n\t\trefQueue = [];\n\n\tif (component._parentDom) {\n\t\tconst newVNode = assign({}, oldVNode);\n\t\tnewVNode._original = oldVNode._original + 1;\n\t\tif (options.vnode) options.vnode(newVNode);\n\n\t\tdiff(\n\t\t\tcomponent._parentDom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tcomponent._parentDom.namespaceURI,\n\t\t\toldVNode._flags & MODE_HYDRATE ? [oldDom] : NULL,\n\t\t\tcommitQueue,\n\t\t\toldDom == NULL ? getDomSibling(oldVNode) : oldDom,\n\t\t\t!!(oldVNode._flags & MODE_HYDRATE),\n\t\t\trefQueue\n\t\t);\n\n\t\tnewVNode._original = oldVNode._original;\n\t\tnewVNode._parent._children[newVNode._index] = newVNode;\n\t\tcommitRoot(commitQueue, newVNode, refQueue);\n\n\t\tif (newVNode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(newVNode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != NULL && vnode._component != NULL) {\n\t\tvnode._dom = vnode._component.base = NULL;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != NULL && child._dom != NULL) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce != options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c,\n\t\tl = 1;\n\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile (rerenderQueue.length) {\n\t\t// Keep the rerender queue sorted by (depth, insertion order). The queue\n\t\t// will initially be sorted on the first iteration only if it has more than 1 item.\n\t\t//\n\t\t// New items can be added to the queue e.g. when rerendering a provider, so we want to\n\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t// single pass\n\t\tif (rerenderQueue.length > l) {\n\t\t\trerenderQueue.sort(depthSort);\n\t\t}\n\n\t\tc = rerenderQueue.shift();\n\t\tl = rerenderQueue.length;\n\n\t\tif (c._dirty) {\n\t\t\trenderComponent(c);\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n","import { IS_NON_DIMENSIONAL, NULL, SVG_NAMESPACE } from '../constants';\nimport options from '../options';\n\nfunction setStyle(style, key, value) {\n\tif (key[0] == '-') {\n\t\tstyle.setProperty(key, value == NULL ? '' : value);\n\t} else if (value == NULL) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\nconst CAPTURE_REGEX = /(PointerCapture)$|Capture$/i;\n\n// A logical clock to solve issues like https://github.com/preactjs/preact/issues/3927.\n// When the DOM performs an event it leaves micro-ticks in between bubbling up which means that\n// an event can trigger on a newly reated DOM-node while the event bubbles up.\n//\n// Originally inspired by Vue\n// (https://github.com/vuejs/core/blob/caeb8a68811a1b0f79/packages/runtime-dom/src/modules/events.ts#L90-L101),\n// but modified to use a logical clock instead of Date.now() in case event handlers get attached\n// and events get dispatched during the same millisecond.\n//\n// The clock is incremented after each new event dispatch. This allows 1 000 000 new events\n// per second for over 280 years before the value reaches Number.MAX_SAFE_INTEGER (2**53 - 1).\nlet eventClock = 0;\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {string} namespace Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, namespace) {\n\tlet useCapture;\n\n\to: if (name == 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] != oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] == 'o' && name[1] == 'n') {\n\t\tuseCapture = name != (name = name.replace(CAPTURE_REGEX, '$1'));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (\n\t\t\tname.toLowerCase() in dom ||\n\t\t\tname == 'onFocusOut' ||\n\t\t\tname == 'onFocusIn'\n\t\t)\n\t\t\tname = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tvalue._attached = eventClock;\n\t\t\t\tdom.addEventListener(\n\t\t\t\t\tname,\n\t\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\t\tuseCapture\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tvalue._attached = oldValue._attached;\n\t\t\t}\n\t\t} else {\n\t\t\tdom.removeEventListener(\n\t\t\t\tname,\n\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\tuseCapture\n\t\t\t);\n\t\t}\n\t} else {\n\t\tif (namespace == SVG_NAMESPACE) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname != 'width' &&\n\t\t\tname != 'height' &&\n\t\t\tname != 'href' &&\n\t\t\tname != 'list' &&\n\t\t\tname != 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname != 'tabIndex' &&\n\t\t\tname != 'download' &&\n\t\t\tname != 'rowSpan' &&\n\t\t\tname != 'colSpan' &&\n\t\t\tname != 'role' &&\n\t\t\tname != 'popover' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == NULL ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value == 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != NULL && (value !== false || name[4] == '-')) {\n\t\t\tdom.setAttribute(name, name == 'popover' && value == true ? '' : value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Create an event proxy function.\n * @param {boolean} useCapture Is the event handler for the capture phase.\n * @private\n */\nfunction createEventProxy(useCapture) {\n\t/**\n\t * Proxy an event to hooked event handlers\n\t * @param {import('../internal').PreactEvent} e The event object from the browser\n\t * @private\n\t */\n\treturn function (e) {\n\t\tif (this._listeners) {\n\t\t\tconst eventHandler = this._listeners[e.type + useCapture];\n\t\t\tif (e._dispatched == NULL) {\n\t\t\t\te._dispatched = eventClock++;\n\n\t\t\t\t// When `e._dispatched` is smaller than the time when the targeted event\n\t\t\t\t// handler was attached we know we have bubbled up to an element that was added\n\t\t\t\t// during patching the DOM.\n\t\t\t} else if (e._dispatched < eventHandler._attached) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn eventHandler(options.event ? options.event(e) : e);\n\t\t}\n\t};\n}\n\nconst eventProxy = createEventProxy(false);\nconst eventProxyCapture = createEventProxy(true);\n","import { enqueueRender } from './component';\nimport { NULL } from './constants';\n\nexport let i = 0;\n\nexport function createContext(defaultValue) {\n\tfunction Context(props) {\n\t\tif (!this.getChildContext) {\n\t\t\t/** @type {Set<import('./internal').Component> | null} */\n\t\t\tlet subs = new Set();\n\t\t\tlet ctx = {};\n\t\t\tctx[Context._id] = this;\n\n\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\tthis.componentWillUnmount = () => {\n\t\t\t\tsubs = NULL;\n\t\t\t};\n\n\t\t\tthis.shouldComponentUpdate = function (_props) {\n\t\t\t\t// @ts-expect-error even\n\t\t\t\tif (this.props.value != _props.value) {\n\t\t\t\t\tsubs.forEach(c => {\n\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.sub = c => {\n\t\t\t\tsubs.add(c);\n\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\tif (subs) {\n\t\t\t\t\t\tsubs.delete(c);\n\t\t\t\t\t}\n\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t};\n\t\t\t};\n\t\t}\n\n\t\treturn props.children;\n\t}\n\n\tContext._id = '__cC' + i++;\n\tContext._defaultValue = defaultValue;\n\n\t/** @type {import('./internal').FunctionComponent} */\n\tContext.Consumer = (props, contextValue) => {\n\t\treturn props.children(contextValue);\n\t};\n\n\t// we could also get rid of _contextRef entirely\n\tContext.Provider =\n\t\tContext._contextRef =\n\t\tContext.Consumer.contextType =\n\t\t\tContext;\n\n\treturn Context;\n}\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport {\n\tEMPTY_OBJ,\n\tEMPTY_ARR,\n\tINSERT_VNODE,\n\tMATCHED,\n\tUNDEFINED,\n\tNULL\n} from '../constants';\nimport { isArray } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * @typedef {import('../internal').ComponentChildren} ComponentChildren\n * @typedef {import('../internal').Component} Component\n * @typedef {import('../internal').PreactElement} PreactElement\n * @typedef {import('../internal').VNode} VNode\n */\n\n/**\n * Diff the children of a virtual node\n * @param {PreactElement} parentDom The DOM element whose children are being\n * diffed\n * @param {ComponentChildren[]} renderResult\n * @param {VNode} newParentVNode The new virtual node whose children should be\n * diff'ed against oldParentVNode\n * @param {VNode} oldParentVNode The old virtual node whose children should be\n * diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\tlet i,\n\t\t/** @type {VNode} */\n\t\toldVNode,\n\t\t/** @type {VNode} */\n\t\tchildVNode,\n\t\t/** @type {PreactElement} */\n\t\tnewDom,\n\t\t/** @type {PreactElement} */\n\t\tfirstChildDom;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\t/** @type {VNode[]} */\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet newChildrenLength = renderResult.length;\n\n\toldDom = constructNewChildrenArray(\n\t\tnewParentVNode,\n\t\trenderResult,\n\t\toldChildren,\n\t\toldDom,\n\t\tnewChildrenLength\n\t);\n\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\tchildVNode = newParentVNode._children[i];\n\t\tif (childVNode == NULL) continue;\n\n\t\t// At this point, constructNewChildrenArray has assigned _index to be the\n\t\t// matchingIndex for this VNode's oldVNode (or -1 if there is no oldVNode).\n\t\tif (childVNode._index == -1) {\n\t\t\toldVNode = EMPTY_OBJ;\n\t\t} else {\n\t\t\toldVNode = oldChildren[childVNode._index] || EMPTY_OBJ;\n\t\t}\n\n\t\t// Update childVNode._index to its final index\n\t\tchildVNode._index = i;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tlet result = diff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\n\t\t// Adjust DOM nodes\n\t\tnewDom = childVNode._dom;\n\t\tif (childVNode.ref && oldVNode.ref != childVNode.ref) {\n\t\t\tif (oldVNode.ref) {\n\t\t\t\tapplyRef(oldVNode.ref, NULL, childVNode);\n\t\t\t}\n\t\t\trefQueue.push(\n\t\t\t\tchildVNode.ref,\n\t\t\t\tchildVNode._component || newDom,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t}\n\n\t\tif (firstChildDom == NULL && newDom != NULL) {\n\t\t\tfirstChildDom = newDom;\n\t\t}\n\n\t\tif (\n\t\t\tchildVNode._flags & INSERT_VNODE ||\n\t\t\toldVNode._children === childVNode._children\n\t\t) {\n\t\t\toldDom = insert(childVNode, oldDom, parentDom);\n\t\t} else if (typeof childVNode.type == 'function' && result !== UNDEFINED) {\n\t\t\toldDom = result;\n\t\t} else if (newDom) {\n\t\t\toldDom = newDom.nextSibling;\n\t\t}\n\n\t\t// Unset diffing flags\n\t\tchildVNode._flags &= ~(INSERT_VNODE | MATCHED);\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\treturn oldDom;\n}\n\n/**\n * @param {VNode} newParentVNode\n * @param {ComponentChildren[]} renderResult\n * @param {VNode[]} oldChildren\n */\nfunction constructNewChildrenArray(\n\tnewParentVNode,\n\trenderResult,\n\toldChildren,\n\toldDom,\n\tnewChildrenLength\n) {\n\t/** @type {number} */\n\tlet i;\n\t/** @type {VNode} */\n\tlet childVNode;\n\t/** @type {VNode} */\n\tlet oldVNode;\n\n\tlet oldChildrenLength = oldChildren.length,\n\t\tremainingOldChildren = oldChildrenLength;\n\n\tlet skew = 0;\n\n\tnewParentVNode._children = new Array(newChildrenLength);\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\t// @ts-expect-error We are reusing the childVNode variable to hold both the\n\t\t// pre and post normalized childVNode\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == NULL ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tnewParentVNode._children[i] = NULL;\n\t\t\tcontinue;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint' ||\n\t\t\tchildVNode.constructor == String\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tNULL,\n\t\t\t\tchildVNode,\n\t\t\t\tNULL,\n\t\t\t\tNULL,\n\t\t\t\tNULL\n\t\t\t);\n\t\t} else if (isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tNULL,\n\t\t\t\tNULL,\n\t\t\t\tNULL\n\t\t\t);\n\t\t} else if (childVNode.constructor == UNDEFINED && childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : NULL,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\tconst skewedIndex = i + skew;\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Temporarily store the matchingIndex on the _index property so we can pull\n\t\t// out the oldVNode in diffChildren. We'll override this to the VNode's\n\t\t// final index after using this property to get the oldVNode\n\t\tconst matchingIndex = (childVNode._index = findMatchingIndex(\n\t\t\tchildVNode,\n\t\t\toldChildren,\n\t\t\tskewedIndex,\n\t\t\tremainingOldChildren\n\t\t));\n\n\t\toldVNode = NULL;\n\t\tif (matchingIndex != -1) {\n\t\t\toldVNode = oldChildren[matchingIndex];\n\t\t\tremainingOldChildren--;\n\t\t\tif (oldVNode) {\n\t\t\t\toldVNode._flags |= MATCHED;\n\t\t\t}\n\t\t}\n\n\t\t// Here, we define isMounting for the purposes of the skew diffing\n\t\t// algorithm. Nodes that are unsuspending are considered mounting and we detect\n\t\t// this by checking if oldVNode._original == null\n\t\tconst isMounting = oldVNode == NULL || oldVNode._original == NULL;\n\n\t\tif (isMounting) {\n\t\t\tif (matchingIndex == -1) {\n\t\t\t\t// When the array of children is growing we need to decrease the skew\n\t\t\t\t// as we are adding a new element to the array.\n\t\t\t\t// Example:\n\t\t\t\t// [1, 2, 3] --> [0, 1, 2, 3]\n\t\t\t\t// oldChildren   newChildren\n\t\t\t\t//\n\t\t\t\t// The new element is at index 0, so our skew is 0,\n\t\t\t\t// we need to decrease the skew as we are adding a new element.\n\t\t\t\t// The decrease will cause us to compare the element at position 1\n\t\t\t\t// with value 1 with the element at position 0 with value 0.\n\t\t\t\t//\n\t\t\t\t// A linear concept is applied when the array is shrinking,\n\t\t\t\t// if the length is unchanged we can assume that no skew\n\t\t\t\t// changes are needed.\n\t\t\t\tif (newChildrenLength > oldChildrenLength) {\n\t\t\t\t\tskew--;\n\t\t\t\t} else if (newChildrenLength < oldChildrenLength) {\n\t\t\t\t\tskew++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we are mounting a DOM VNode, mark it for insertion\n\t\t\tif (typeof childVNode.type != 'function') {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t} else if (matchingIndex != skewedIndex) {\n\t\t\t// When we move elements around i.e. [0, 1, 2] --> [1, 0, 2]\n\t\t\t// --> we diff 1, we find it at position 1 while our skewed index is 0 and our skew is 0\n\t\t\t//     we set the skew to 1 as we found an offset.\n\t\t\t// --> we diff 0, we find it at position 0 while our skewed index is at 2 and our skew is 1\n\t\t\t//     this makes us increase the skew again.\n\t\t\t// --> we diff 2, we find it at position 2 while our skewed index is at 4 and our skew is 2\n\t\t\t//\n\t\t\t// this becomes an optimization question where currently we see a 1 element offset as an insertion\n\t\t\t// or deletion i.e. we optimize for [0, 1, 2] --> [9, 0, 1, 2]\n\t\t\t// while a more than 1 offset we see as a swap.\n\t\t\t// We could probably build heuristics for having an optimized course of action here as well, but\n\t\t\t// might go at the cost of some bytes.\n\t\t\t//\n\t\t\t// If we wanted to optimize for i.e. only swaps we'd just do the last two code-branches and have\n\t\t\t// only the first item be a re-scouting and all the others fall in their skewed counter-part.\n\t\t\t// We could also further optimize for swaps\n\t\t\tif (matchingIndex == skewedIndex - 1) {\n\t\t\t\tskew--;\n\t\t\t} else if (matchingIndex == skewedIndex + 1) {\n\t\t\t\tskew++;\n\t\t\t} else {\n\t\t\t\tif (matchingIndex > skewedIndex) {\n\t\t\t\t\tskew--;\n\t\t\t\t} else {\n\t\t\t\t\tskew++;\n\t\t\t\t}\n\n\t\t\t\t// Move this VNode's DOM if the original index (matchingIndex) doesn't\n\t\t\t\t// match the new skew index (i + new skew)\n\t\t\t\t// In the former two branches we know that it matches after skewing\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any. Loop forwards so that as we\n\t// unmount DOM from the beginning of the oldChildren, we can adjust oldDom to\n\t// point to the next child, which needs to be the first DOM node that won't be\n\t// unmounted.\n\tif (remainingOldChildren) {\n\t\tfor (i = 0; i < oldChildrenLength; i++) {\n\t\t\toldVNode = oldChildren[i];\n\t\t\tif (oldVNode != NULL && (oldVNode._flags & MATCHED) == 0) {\n\t\t\t\tif (oldVNode._dom == oldDom) {\n\t\t\t\t\toldDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {VNode} parentVNode\n * @param {PreactElement} oldDom\n * @param {PreactElement} parentDom\n * @returns {PreactElement}\n */\nfunction insert(parentVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\n\tif (typeof parentVNode.type == 'function') {\n\t\tlet children = parentVNode._children;\n\t\tfor (let i = 0; children && i < children.length; i++) {\n\t\t\tif (children[i]) {\n\t\t\t\t// If we enter this code path on sCU bailout, where we copy\n\t\t\t\t// oldVNode._children to newVNode._children, we need to update the old\n\t\t\t\t// children's _parent pointer to point to the newVNode (parentVNode\n\t\t\t\t// here).\n\t\t\t\tchildren[i]._parent = parentVNode;\n\t\t\t\toldDom = insert(children[i], oldDom, parentDom);\n\t\t\t}\n\t\t}\n\n\t\treturn oldDom;\n\t} else if (parentVNode._dom != oldDom) {\n\t\tif (oldDom && parentVNode.type && !parentDom.contains(oldDom)) {\n\t\t\toldDom = getDomSibling(parentVNode);\n\t\t}\n\t\tparentDom.insertBefore(parentVNode._dom, oldDom || NULL);\n\t\toldDom = parentVNode._dom;\n\t}\n\n\tdo {\n\t\toldDom = oldDom && oldDom.nextSibling;\n\t} while (oldDom != NULL && oldDom.nodeType == 8);\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {ComponentChildren} children The unflattened children of a virtual\n * node\n * @returns {VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == NULL || typeof children == 'boolean') {\n\t} else if (isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\n/**\n * @param {VNode} childVNode\n * @param {VNode[]} oldChildren\n * @param {number} skewedIndex\n * @param {number} remainingOldChildren\n * @returns {number}\n */\nfunction findMatchingIndex(\n\tchildVNode,\n\toldChildren,\n\tskewedIndex,\n\tremainingOldChildren\n) {\n\tconst key = childVNode.key;\n\tconst type = childVNode.type;\n\tlet oldVNode = oldChildren[skewedIndex];\n\n\t// We only need to perform a search if there are more children\n\t// (remainingOldChildren) to search. However, if the oldVNode we just looked\n\t// at skewedIndex was not already used in this diff, then there must be at\n\t// least 1 other (so greater than 1) remainingOldChildren to attempt to match\n\t// against. So the following condition checks that ensuring\n\t// remainingOldChildren > 1 if the oldVNode is not already used/matched. Else\n\t// if the oldVNode was null or matched, then there could needs to be at least\n\t// 1 (aka `remainingOldChildren > 0`) children to find and compare against.\n\t//\n\t// If there is an unkeyed functional VNode, that isn't a built-in like our Fragment,\n\t// we should not search as we risk re-using state of an unrelated VNode. (reverted for now)\n\tlet shouldSearch =\n\t\t// (typeof type != 'function' || type === Fragment || key) &&\n\t\tremainingOldChildren >\n\t\t(oldVNode != NULL && (oldVNode._flags & MATCHED) == 0 ? 1 : 0);\n\n\tif (\n\t\t(oldVNode === NULL && childVNode.key == null) ||\n\t\t(oldVNode &&\n\t\t\tkey == oldVNode.key &&\n\t\t\ttype == oldVNode.type &&\n\t\t\t(oldVNode._flags & MATCHED) == 0)\n\t) {\n\t\treturn skewedIndex;\n\t} else if (shouldSearch) {\n\t\tlet x = skewedIndex - 1;\n\t\tlet y = skewedIndex + 1;\n\t\twhile (x >= 0 || y < oldChildren.length) {\n\t\t\tif (x >= 0) {\n\t\t\t\toldVNode = oldChildren[x];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) == 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype == oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t\tx--;\n\t\t\t}\n\n\t\t\tif (y < oldChildren.length) {\n\t\t\t\toldVNode = oldChildren[y];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) == 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype == oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn y;\n\t\t\t\t}\n\t\t\t\ty++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn -1;\n}\n","import {\n\tEMPTY_OBJ,\n\tMATH_NAMESPACE,\n\tMODE_HYDRATE,\n\tMODE_SUSPENDED,\n\tNULL,\n\tRESET_MODE,\n\tSVG_NAMESPACE,\n\tUNDEFINED,\n\tXHTML_NAMESPACE\n} from '../constants';\nimport { BaseComponent, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { setProperty } from './props';\nimport { assign, isArray, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * @typedef {import('../internal').ComponentChildren} ComponentChildren\n * @typedef {import('../internal').Component} Component\n * @typedef {import('../internal').PreactElement} PreactElement\n * @typedef {import('../internal').VNode} VNode\n */\n\n/**\n * @template {any} T\n * @typedef {import('../internal').Ref<T>} Ref<T>\n */\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {PreactElement} parentDom The parent of the DOM element\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\t/** @type {any} */\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor != UNDEFINED) return NULL;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._flags & MODE_SUSPENDED) {\n\t\tisHydrating = !!(oldVNode._flags & MODE_HYDRATE);\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\touter: if (typeof newType == 'function') {\n\t\ttry {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\t\t\tconst isClassComponent =\n\t\t\t\t'prototype' in newType && newType.prototype.render;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif (isClassComponent) {\n\t\t\t\t\t// @ts-expect-error The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-expect-error Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new BaseComponent(\n\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (isClassComponent && c._nextState == NULL) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (isClassComponent && newType.getDerivedStateFromProps != NULL) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == NULL &&\n\t\t\t\t\tc.componentWillMount != NULL\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidMount != NULL) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == NULL &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != NULL\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != NULL &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original == oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original != oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.some(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != NULL) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidUpdate != NULL) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\t\t\tc._force = false;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif (isClassComponent) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != NULL) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (isClassComponent && !isNew && c.getSnapshotBeforeUpdate != NULL) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != NULL && tmp.type === Fragment && tmp.key == NULL;\n\t\t\tlet renderResult = tmp;\n\n\t\t\tif (isTopLevelFragment) {\n\t\t\t\trenderResult = cloneNode(tmp.props.children);\n\t\t\t}\n\n\t\t\toldDom = diffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnamespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._flags &= RESET_MODE;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = NULL;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tnewVNode._original = NULL;\n\t\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\t\tif (isHydrating || excessDomChildren != NULL) {\n\t\t\t\tif (e.then) {\n\t\t\t\t\tnewVNode._flags |= isHydrating\n\t\t\t\t\t\t? MODE_HYDRATE | MODE_SUSPENDED\n\t\t\t\t\t\t: MODE_SUSPENDED;\n\n\t\t\t\t\twhile (oldDom && oldDom.nodeType == 8 && oldDom.nextSibling) {\n\t\t\t\t\t\toldDom = oldDom.nextSibling;\n\t\t\t\t\t}\n\n\t\t\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = NULL;\n\t\t\t\t\tnewVNode._dom = oldDom;\n\t\t\t\t} else {\n\t\t\t\t\tfor (let i = excessDomChildren.length; i--; ) {\n\t\t\t\t\t\tremoveNode(excessDomChildren[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t}\n\t\t\toptions._catchError(e, newVNode, oldVNode);\n\t\t}\n\t} else if (\n\t\texcessDomChildren == NULL &&\n\t\tnewVNode._original == oldVNode._original\n\t) {\n\t\tnewVNode._children = oldVNode._children;\n\t\tnewVNode._dom = oldVNode._dom;\n\t} else {\n\t\toldDom = newVNode._dom = diffElementNodes(\n\t\t\toldVNode._dom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\t}\n\n\tif ((tmp = options.diffed)) tmp(newVNode);\n\n\treturn newVNode._flags & MODE_SUSPENDED ? undefined : oldDom;\n}\n\n/**\n * @param {Array<Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {VNode} root\n */\nexport function commitRoot(commitQueue, root, refQueue) {\n\tfor (let i = 0; i < refQueue.length; i++) {\n\t\tapplyRef(refQueue[i], refQueue[++i], refQueue[++i]);\n\t}\n\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-expect-error Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-expect-error See above comment on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\nfunction cloneNode(node) {\n\tif (\n\t\ttypeof node != 'object' ||\n\t\tnode == NULL ||\n\t\t(node._depth && node._depth > 0)\n\t) {\n\t\treturn node;\n\t}\n\n\tif (isArray(node)) {\n\t\treturn node.map(cloneNode);\n\t}\n\n\treturn assign({}, node);\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {PreactElement} dom The DOM element representing the virtual nodes\n * being diffed\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n * @returns {PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating,\n\trefQueue\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = /** @type {string} */ (newVNode.type);\n\t/** @type {any} */\n\tlet i;\n\t/** @type {{ __html?: string }} */\n\tlet newHtml;\n\t/** @type {{ __html?: string }} */\n\tlet oldHtml;\n\t/** @type {ComponentChildren} */\n\tlet newChildren;\n\tlet value;\n\tlet inputValue;\n\tlet checked;\n\n\t// Tracks entering and exiting namespaces when descending through the tree.\n\tif (nodeType == 'svg') namespace = SVG_NAMESPACE;\n\telse if (nodeType == 'math') namespace = MATH_NAMESPACE;\n\telse if (!namespace) namespace = XHTML_NAMESPACE;\n\n\tif (excessDomChildren != NULL) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tvalue = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tvalue &&\n\t\t\t\t'setAttribute' in value == !!nodeType &&\n\t\t\t\t(nodeType ? value.localName == nodeType : value.nodeType == 3)\n\t\t\t) {\n\t\t\t\tdom = value;\n\t\t\t\texcessDomChildren[i] = NULL;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == NULL) {\n\t\tif (nodeType == NULL) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tdom = document.createElementNS(\n\t\t\tnamespace,\n\t\t\tnodeType,\n\t\t\tnewProps.is && newProps\n\t\t);\n\n\t\t// we are creating a new node, so we can assume this is a new subtree (in\n\t\t// case we are hydrating), this deopts the hydrate\n\t\tif (isHydrating) {\n\t\t\tif (options._hydrationMismatch)\n\t\t\t\toptions._hydrationMismatch(newVNode, excessDomChildren);\n\t\t\tisHydrating = false;\n\t\t}\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = NULL;\n\t}\n\n\tif (nodeType == NULL) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data != newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\t// If we are in a situation where we are not hydrating but are using\n\t\t// existing DOM (e.g. replaceNode) we should read the existing DOM\n\t\t// attributes to diff them\n\t\tif (!isHydrating && excessDomChildren != NULL) {\n\t\t\toldProps = {};\n\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\tvalue = dom.attributes[i];\n\t\t\t\toldProps[value.name] = value.value;\n\t\t\t}\n\t\t}\n\n\t\tfor (i in oldProps) {\n\t\t\tvalue = oldProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\toldHtml = value;\n\t\t\t} else if (!(i in newProps)) {\n\t\t\t\tif (\n\t\t\t\t\t(i == 'value' && 'defaultValue' in newProps) ||\n\t\t\t\t\t(i == 'checked' && 'defaultChecked' in newProps)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tsetProperty(dom, i, NULL, value, namespace);\n\t\t\t}\n\t\t}\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tfor (i in newProps) {\n\t\t\tvalue = newProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t\tnewChildren = value;\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\tnewHtml = value;\n\t\t\t} else if (i == 'value') {\n\t\t\t\tinputValue = value;\n\t\t\t} else if (i == 'checked') {\n\t\t\t\tchecked = value;\n\t\t\t} else if (\n\t\t\t\t(!isHydrating || typeof value == 'function') &&\n\t\t\t\toldProps[i] !== value\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, value, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\tif (\n\t\t\t\t!isHydrating &&\n\t\t\t\t(!oldHtml ||\n\t\t\t\t\t(newHtml.__html != oldHtml.__html && newHtml.__html != dom.innerHTML))\n\t\t\t) {\n\t\t\t\tdom.innerHTML = newHtml.__html;\n\t\t\t}\n\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\tif (oldHtml) dom.innerHTML = '';\n\n\t\t\tdiffChildren(\n\t\t\t\t// @ts-expect-error\n\t\t\t\tnewVNode.type == 'template' ? dom.content : dom,\n\t\t\t\tisArray(newChildren) ? newChildren : [newChildren],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnodeType == 'foreignObject' ? XHTML_NAMESPACE : namespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != NULL) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tremoveNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// As above, don't diff props during hydration\n\t\tif (!isHydrating) {\n\t\t\ti = 'value';\n\t\t\tif (nodeType == 'progress' && inputValue == NULL) {\n\t\t\t\tdom.removeAttribute('value');\n\t\t\t} else if (\n\t\t\t\tinputValue != UNDEFINED &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(inputValue !== dom[i] ||\n\t\t\t\t\t(nodeType == 'progress' && !inputValue) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType == 'option' && inputValue != oldProps[i]))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, inputValue, oldProps[i], namespace);\n\t\t\t}\n\n\t\t\ti = 'checked';\n\t\t\tif (checked != UNDEFINED && checked != dom[i]) {\n\t\t\t\tsetProperty(dom, i, checked, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {Ref<any> & { _unmount?: unknown }} ref\n * @param {any} value\n * @param {VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') {\n\t\t\tlet hasRefUnmount = typeof ref._unmount == 'function';\n\t\t\tif (hasRefUnmount) {\n\t\t\t\t// @ts-ignore TS doesn't like moving narrowing checks into variables\n\t\t\t\tref._unmount();\n\t\t\t}\n\n\t\t\tif (!hasRefUnmount || value != NULL) {\n\t\t\t\t// Store the cleanup function on the function\n\t\t\t\t// instance object itself to avoid shape\n\t\t\t\t// transitioning vnode\n\t\t\t\tref._unmount = ref(value);\n\t\t\t}\n\t\t} else ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {VNode} vnode The virtual node to unmount\n * @param {VNode} parentVNode The parent of the VNode that initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current == vnode._dom) {\n\t\t\tapplyRef(r, NULL, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != NULL) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = NULL;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type != 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\tvnode._component = vnode._parent = vnode._dom = UNDEFINED;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ, NULL } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\t// https://github.com/preactjs/preact/issues/3794\n\tif (parentDom == document) {\n\t\tparentDom = document.documentElement;\n\t}\n\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode == 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? NULL\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating && replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, NULL, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [],\n\t\trefQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.namespaceURI,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t\t? NULL\n\t\t\t\t: parentDom.firstChild\n\t\t\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t\t\t: NULL,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t\t? oldVNode._dom\n\t\t\t\t: parentDom.firstChild,\n\t\tisHydrating,\n\t\trefQueue\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode, refQueue);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { assign, slice } from './util';\nimport { createVNode } from './create-element';\nimport { NULL, UNDEFINED } from './constants';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used\n * as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\n\tlet defaultProps;\n\n\tif (vnode.type && vnode.type.defaultProps) {\n\t\tdefaultProps = vnode.type.defaultProps;\n\t}\n\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse if (props[i] == UNDEFINED && defaultProps != UNDEFINED) {\n\t\t\tnormalizedProps[i] = defaultProps[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tNULL\n\t);\n}\n","import { NULL } from '../constants';\n\n/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw the error that was caught (except\n * for unmounting when this parameter is the highest parent that was being\n * unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component,\n\t\t/** @type {import('../internal').ComponentType} */\n\t\tctor,\n\t\t/** @type {boolean} */\n\t\thandled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != NULL) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != NULL) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { options as _options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\n// Cast to use internal Options type\nconst options = /** @type {import('./internal').Options} */ (_options);\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\nlet oldRoot = options._root;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._root = (vnode, parentDom) => {\n\tif (vnode && parentDom._children && parentDom._children._mask) {\n\t\tvnode._mask = parentDom._children._mask;\n\t}\n\n\tif (oldRoot) oldRoot(vnode, parentDom);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingArgs = hookItem._nextValue = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentIndex = 0;\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\n// TODO: Improve typing of commitQueue parameter\n/** @type {(vnode: import('./internal').VNode, commitQueue: any) => void} */\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\n\treturn hooks._list[index];\n}\n\n/**\n * @template {unknown} S\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} [initialState]\n * @returns {[S, (state: S) => void]}\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @template {unknown} S\n * @template {unknown} A\n * @param {import('./index').Reducer<S, A>} reducer\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ S, (state: S) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function (p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\t/** @type {(x: import('./internal').HookState) => x is import('./internal').ReducerHookState} */\n\t\t\t\tconst isStateHook = x => !!x._component;\n\t\t\t\tconst stateHooks =\n\t\t\t\t\thookState._component.__hooks._list.filter(isStateHook);\n\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = hookState._component.props !== p;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn prevScu\n\t\t\t\t\t? prevScu.call(this, p, s, c) || shouldUpdate\n\t\t\t\t\t: shouldUpdate;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\n/** @type {(initialValue: unknown) => unknown} */\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tconst result = ref(createHandle());\n\t\t\t\treturn () => {\n\t\t\t\t\tref(null);\n\t\t\t\t\tif (result && typeof result == 'function') result();\n\t\t\t\t};\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @template {unknown} T\n * @param {() => T} factory\n * @param {unknown[]} args\n * @returns {T}\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState<T>} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {unknown[]} args\n * @returns {() => void}\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(\n\t\t\tformatter ? formatter(value) : /** @type {any}*/ (value)\n\t\t);\n\t}\n}\n\n/**\n * @param {(error: unknown, errorInfo: import('preact').ErrorInfo) => void} cb\n * @returns {[unknown, () => void]}\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/** @type {() => string} */\nexport function useId() {\n\t/** @type {import('./internal').IdHookState} */\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n * @returns {void}\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').HookState} hook\n * @returns {void}\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n * @returns {void}\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {unknown[]} oldArgs\n * @param {unknown[]} newArgs\n * @returns {boolean}\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\n/**\n * @template Arg\n * @param {Arg} arg\n * @param {(arg: Arg) => any} f\n * @returns {any}\n */\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n"],"names":["r","e","t","f","n","Array","isArray","length","clsx","arguments","slice","options","vnodeId","isValidElement","rerenderQueue","prevDebounce","defer","depthSort","CAPTURE_REGEX","eventClock","eventProxy","eventProxyCapture","i","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","assign","obj","props","node","parentNode","removeChild","type","children","key","ref","normalizedProps","call","defaultProps","undefined","createVNode","original","vnode","__k","__","__b","__e","__c","constructor","__v","__i","__u","createRef","current","BaseComponent","context","this","getDomSibling","childIndex","sibling","updateParentDomPointers","child","base","c","__d","push","process","__r","debounceRendering","component","newVNode","oldVNode","oldDom","commitQueue","refQueue","l","sort","shift","__P","diff","__n","namespaceURI","commitRoot","diffChildren","parentDom","renderResult","newParentVNode","oldParentVNode","globalContext","namespace","excessDomChildren","isHydrating","childVNode","newDom","firstChildDom","result","oldChildren","newChildrenLength","constructNewChildrenArray","applyRef","insert","nextSibling","skewedIndex","matchingIndex","oldChildrenLength","remainingOldChildren","skew","String","Fragment","findMatchingIndex","unmount","parentVNode","contains","insertBefore","nodeType","toChildArray","out","some","x","y","setStyle","style","value","setProperty","test","dom","name","oldValue","useCapture","o","cssText","replace","toLowerCase","_attached","addEventListener","removeEventListener","removeAttribute","setAttribute","createEventProxy","eventHandler","_dispatched","event","tmp","isNew","oldProps","oldState","snapshot","clearProcessingException","newProps","isClassComponent","provider","componentContext","renderHook","count","newType","outer","prototype","render","contextType","__E","doRender","sub","state","__h","_sb","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","cloneNode","then","MODE_HYDRATE","indexOf","removeNode","diffElementNodes","diffed","root","cb","map","newHtml","oldHtml","newChildren","inputValue","checked","localName","document","createTextNode","createElementNS","is","__m","data","childNodes","attributes","__html","innerHTML","content","hasRefUnmount","skipRemove","componentWillUnmount","replaceNode","documentElement","createElement","firstChild","hydrate","cloneElement","defaultValue","Context","subs","ctx","Set","_props","forEach","enqueueRender","add","old","delete","Provider","__l","Consumer","contextValue","error","errorInfo","ctor","handled","getDerivedStateFromError","setState","componentDidCatch","update","callback","s","forceUpdate","Promise","bind","resolve","setTimeout","a","b","currentIndex","currentComponent","previousComponent","prevRaf","currentHook","afterPaintEffects","_options","oldBeforeDiff","oldBeforeRender","oldAfterDiff","oldCommit","oldBeforeUnmount","oldRoot","getHookState","index","hooks","__H","useState","initialState","useReducer","invokeOrReturn","reducer","init","hookState","_reducer","currentValue","__N","nextValue","action","__f","updateHookState","p","stateHooks","filter","every","prevScu","shouldUpdate","hookItem","prevCWU","useEffect","args","argsChanged","_pendingArgs","useRef","initialValue","useMemo","createHandle","useLayoutEffect","concat","factory","useCallback","useContext","formatter","useDebugValue","useErrorBoundary","errState","err","useId","mask","flushAfterPaintEffects","invokeCleanup","invokeEffect","requestAnimationFrame","afterNextFrame","hasErrored","HAS_RAF","raf","done","clearTimeout","timeout","cancelAnimationFrame","hook","comp","cleanup","oldArgs","newArgs","arg"],"sourceRoot":""}