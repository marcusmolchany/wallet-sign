"use strict";(self.webpackChunkwallet_sign=self.webpackChunkwallet_sign||[]).push([[4591],{94591:(e,a,t)=>{t.r(a),t.d(a,{ccipRequest:()=>k,offchainLookup:()=>g,offchainLookupAbiItem:()=>b,offchainLookupSignature:()=>m});var s=t(85219),r=t(63476),n=t(78075),o=t(47986);class c extends n.G{constructor(e){var a;let{callbackSelector:t,cause:s,data:r,extraData:n,sender:c,urls:l}=e;super(s.shortMessage||"An error occurred while fetching for an offchain result.",{cause:s,metaMessages:[...s.metaMessages||[],null!==(a=s.metaMessages)&&void 0!==a&&a.length?"":[],"Offchain Gateway Call:",l&&["  Gateway URL(s):",...l.map((e=>"    ".concat((0,o.G)(e))))],"  Sender: ".concat(c),"  Data: ".concat(r),"  Callback selector: ".concat(t),"  Extra data: ".concat(n)].flat(),name:"OffchainLookupError"})}}class l extends n.G{constructor(e){let{result:a,url:t}=e;super("Offchain gateway response is malformed. Response data must be a hex value.",{metaMessages:["Gateway URL: ".concat((0,o.G)(t)),"Response: ".concat((0,r.P)(a))],name:"OffchainLookupResponseMalformedError"})}}class d extends n.G{constructor(e){let{sender:a,to:t}=e;super("Reverted sender address does not match target contract address (`to`).",{metaMessages:["Contract address: ".concat(t),"OffchainLookup sender address: ".concat(a)],name:"OffchainLookupSenderMismatchError"})}}var u=t(79144),i=t(22947),p=t(72883),f=t(89378),h=t(30221),y=t(11071),w=t(23447);const m="0x556f1830",b={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]};async function g(e,a){let{blockNumber:t,blockTag:r,data:n,to:o}=a;const{args:l}=(0,i.p)({data:n,abi:[b]}),[u,y,m,g,v]=l,{ccipRead:x}=e,G=x&&"function"===typeof(null===x||void 0===x?void 0:x.request)?x.request:k;try{if(!(0,f.E)(o,u))throw new d({sender:u,to:o});const a=y.includes(w.M)?await(0,w.w)({data:m,ccipRequest:G}):await G({data:m,sender:u,urls:y}),{data:n}=await(0,s.R)(e,{blockNumber:t,blockTag:r,data:(0,h.zo)([g,(0,p.E)([{type:"bytes"},{type:"bytes"}],[a,v])]),to:o});return n}catch(L){throw new c({callbackSelector:g,cause:L,data:n,extraData:v,sender:u,urls:y})}}async function k(e){let{data:a,sender:t,urls:s}=e,n=new Error("An unknown error occurred.");for(let i=0;i<s.length;i++){const e=s[i],p=e.includes("{data}")?"GET":"POST",f="POST"===p?{data:a,sender:t}:void 0,h="POST"===p?{"Content-Type":"application/json"}:{};try{var o;const s=await fetch(e.replace("{sender}",t.toLowerCase()).replace("{data}",a),{body:JSON.stringify(f),headers:h,method:p});let d;if(d=null!==(o=s.headers.get("Content-Type"))&&void 0!==o&&o.startsWith("application/json")?(await s.json()).data:await s.text(),!s.ok){var c;n=new u.Gg({body:f,details:null!==(c=d)&&void 0!==c&&c.error?(0,r.P)(d.error):s.statusText,headers:s.headers,status:s.status,url:e});continue}if(!(0,y.v)(d)){n=new l({result:d,url:e});continue}return d}catch(d){n=new u.Gg({body:f,details:d.message,url:e})}}throw n}}}]);
//# sourceMappingURL=4591.5505721c.chunk.js.map