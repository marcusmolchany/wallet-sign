{"version":3,"file":"static/js/7598.5443b618.chunk.js","mappings":"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AM,UACNpB,KAAM,WAER,CACEorC,SAAS,EACTy4B,aAAc,UACdziE,KAAM,WACNpB,KAAM,WAER,CACEorC,SAAS,EACTy4B,aAAc,OACdziE,KAAM,WACNpB,KAAM,SAGVoB,KAAM,iBACNpB,KAAM,SAER,CACE8jE,WAAW,EACX/+B,OAAQ,CACN,CACEqG,SAAS,EACTy4B,aAAc,UACdziE,KAAM,WACNpB,KAAM,WAER,CACEorC,SAAS,EACTy4B,aAAc,UACdziE,KAAM,OACNpB,KAAM,WAER,CACEorC,SAAS,EACTy4B,aAAc,UACdziE,KAAM,KACNpB,KAAM,WAER,CACEorC,SAAS,EACTy4B,aAAc,YACdziE,KAAM,MACNpB,KAAM,aAER,CACEorC,SAAS,EACTy4B,aAAc,YACdziE,KAAM,SACNpB,KAAM,cAGVoB,KAAM,gBACNpB,KAAM,SAER,CACE8jE,WAAW,EACX/+B,OAAQ,CACN,CACEqG,SAAS,EACTy4B,aAAc,UACdziE,KAAM,WACNpB,KAAM,WAER,CACEorC,SAAS,EACTy4B,aAAc,UACdziE,KAAM,OACNpB,KAAM,WAER,CACEorC,SAAS,EACTy4B,aAAc,UACdziE,KAAM,KACNpB,KAAM,WAER,CACEorC,SAAS,EACTy4B,aAAc,UACdziE,KAAM,KACNpB,KAAM,WAER,CACEorC,SAAS,EACTy4B,aAAc,UACdziE,KAAM,QACNpB,KAAM,YAGVoB,KAAM,iBACNpB,KAAM,SAER,CACE8jE,WAAW,EACX/+B,OAAQ,CACN,CACEqG,SAAS,EACTy4B,aAAc,SACdziE,KAAM,QACNpB,KAAM,UAER,CACEorC,SAAS,EACTy4B,aAAc,UACdziE,KAAM,KACNpB,KAAM,YAGVoB,KAAM,MACNpB,KAAM,SAER,CACE+kC,OAAQ,CACN,CACE8+B,aAAc,UACdziE,KAAM,UACNpB,KAAM,WAER,CACE6jE,aAAc,UACdziE,KAAM,KACNpB,KAAM,YAGVoB,KAAM,YACN4jC,QAAS,CACP,CACE6+B,aAAc,UACdziE,KAAM,GACNpB,KAAM,YAGVklC,gBAAiB,OACjBllC,KAAM,YAER,CACE+kC,OAAQ,CACN,CACE8+B,aAAc,YACdziE,KAAM,WACNpB,KAAM,aAER,CACE6jE,aAAc,YACdziE,KAAM,MACNpB,KAAM,cAGVoB,KAAM,iBACN4jC,QAAS,CACP,CACE6+B,aAAc,YACdziE,KAAM,GACNpB,KAAM,cAGVklC,gBAAiB,OACjBllC,KAAM,YAER,CACE+kC,OAAQ,CACN,CACE8+B,aAAc,UACdziE,KAAM,UACNpB,KAAM,WAER,CACE6jE,aAAc,UACdziE,KAAM,WACNpB,KAAM,YAGVoB,KAAM,mBACN4jC,QAAS,CACP,CACE6+B,aAAc,OACdziE,KAAM,GACNpB,KAAM,SAGVklC,gBAAiB,OACjBllC,KAAM,YAER,CACE+kC,OAAQ,CACN,CACE8+B,aAAc,UACdziE,KAAM,OACNpB,KAAM,WAER,CACE6jE,aAAc,UACdziE,KAAM,KACNpB,KAAM,WAER,CACE6jE,aAAc,YACdziE,KAAM,MACNpB,KAAM,aAER,CACE6jE,aAAc,YACdziE,KAAM,SACNpB,KAAM,aAER,CACE6jE,aAAc,QACdziE,KAAM,OACNpB,KAAM,UAGVoB,KAAM,wBACN4jC,QAAS,GACTE,gBAAiB,aACjBllC,KAAM,YAER,CACE+kC,OAAQ,CACN,CACE8+B,aAAc,UACdziE,KAAM,OACNpB,KAAM,WAER,CACE6jE,aAAc,UACdziE,KAAM,KACNpB,KAAM,WAER,CACE6jE,aAAc,UACdziE,KAAM,KACNpB,KAAM,WAER,CACE6jE,aAAc,UACdziE,KAAM,QACNpB,KAAM,WAER,CACE6jE,aAAc,QACdziE,KAAM,OACNpB,KAAM,UAGVoB,KAAM,mBACN4jC,QAAS,GACTE,gBAAiB,aACjBllC,KAAM,YAER,CACE+kC,OAAQ,CACN,CACE8+B,aAAc,UACdziE,KAAM,WACNpB,KAAM,WAER,CACE6jE,aAAc,OACdziE,KAAM,WACNpB,KAAM,SAGVoB,KAAM,oBACN4jC,QAAS,GACTE,gBAAiB,aACjBllC,KAAM,YAER,CACE+kC,OAAQ,CACN,CACE8+B,aAAc,SACdziE,KAAM,cACNpB,KAAM,WAGVoB,KAAM,oBACN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KAAM,YAGVglC,QAAS,CACP,CACEhlC,KAAM,YAIZ,CACEA,KAAM,WACNoB,KAAM,cACN8jC,gBAAiB,OACjBH,OAAQ,GACRC,QAAS,CACP,CACEhlC,KAAM,aAIZ,CACEA,KAAM,WACNoB,KAAM,eACN8jC,gBAAiB,UACjBH,OAAQ,CACN,CACE3jC,KAAM,SACNpB,KAAM,WAER,CACEoB,KAAM,YACNpB,KAAM,WAER,CACEoB,KAAM,SACNpB,KAAM,YAGVglC,QAAS,KAKA5oC,EAAAA,WAAa,CACxB,CACE0nE,WAAW,EACX/+B,OAAQ,CACN,CACEqG,SAAS,EACThqC,KAAM,QACNpB,KAAM,WAER,CACEorC,SAAS,EACThqC,KAAM,UACNpB,KAAM,WAER,CACEorC,SAAS,EACThqC,KAAM,QACNpB,KAAM,YAGVoB,KAAM,WACNpB,KAAM,SAER,CACE8jE,WAAW,EACX/+B,OAAQ,CACN,CACEqG,SAAS,EACThqC,KAAM,SACNpB,KAAM,WAER,CACEorC,SAAS,EACThqC,KAAM,WACNpB,KAAM,WAER,CACEorC,SAAS,EACThqC,KAAM,SACNpB,KAAM,WAER,CACEorC,SAAS,EACThqC,KAAM,SACNpB,KAAM,YAGVoB,KAAM,UACNpB,KAAM,SAER,CACE8jE,WAAW,EACX/+B,OAAQ,CACN,CACEqG,SAAS,EACThqC,KAAM,OACNpB,KAAM,WAER,CACEorC,SAAS,EACThqC,KAAM,KACNpB,KAAM,WAER,CACEorC,SAAS,EACThqC,KAAM,QACNpB,KAAM,YAGVoB,KAAM,WACNpB,KAAM,SAER,CACE8jE,WAAW,EACX/+B,OAAQ,CACN,CACEqG,SAAS,EACThqC,KAAM,SACNpB,KAAM,WAER,CACEorC,SAAS,EACThqC,KAAM,WACNpB,KAAM,WAER,CACEorC,SAAS,EACThqC,KAAM,QACNpB,KAAM,WAER,CACEorC,SAAS,EACThqC,KAAM,SACNpB,KAAM,WAER,CACEorC,SAAS,EACThqC,KAAM,SACNpB,KAAM,YAGVoB,KAAM,WACNpB,KAAM,SAER,CACE+kC,OAAQ,CACN,CACE3jC,KAAM,QACNpB,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","sources":["../node_modules/@noble/curves/src/abstract/utils.ts","../node_modules/@noble/hashes/src/_md.ts","../node_modules/@noble/hashes/src/_u64.ts","../node_modules/@noble/hashes/src/crypto.ts","../node_modules/@noble/hashes/src/legacy.ts","../node_modules/@noble/hashes/src/ripemd160.ts","../node_modules/@noble/hashes/src/sha2.ts","../node_modules/@noble/hashes/src/sha256.ts","../node_modules/@noble/hashes/src/sha3.ts","../node_modules/@noble/hashes/src/utils.ts","../node_modules/@safe-global/safe-apps-provider/src/index.ts","../node_modules/@safe-global/safe-apps-provider/src/provider.ts","../node_modules/@safe-global/safe-apps-provider/src/utils.ts","../node_modules/events/events.js","../node_modules/viem/node_modules/@noble/curves/src/_shortw_utils.ts","../node_modules/viem/node_modules/@noble/curves/src/abstract/curve.ts","../node_modules/viem/node_modules/@noble/curves/src/abstract/hash-to-curve.ts","../node_modules/viem/node_modules/@noble/curves/src/abstract/modular.ts","../node_modules/viem/node_modules/@noble/curves/src/abstract/utils.ts","../node_modules/viem/node_modules/@noble/curves/src/abstract/weierstrass.ts","../node_modules/viem/node_modules/@noble/curves/src/secp256k1.ts","../node_modules/viem/node_modules/@noble/hashes/src/_assert.ts","../node_modules/viem/node_modules/@noble/hashes/src/_md.ts","../node_modules/viem/node_modules/@noble/hashes/src/_u64.ts","../node_modules/viem/node_modules/@noble/hashes/src/crypto.ts","../node_modules/viem/node_modules/@noble/hashes/src/hmac.ts","../node_modules/viem/node_modules/@noble/hashes/src/ripemd160.ts","../node_modules/viem/node_modules/@noble/hashes/src/sha2.ts","../node_modules/viem/node_modules/@noble/hashes/src/sha256.ts","../node_modules/viem/node_modules/@noble/hashes/src/sha3.ts","../node_modules/viem/node_modules/@noble/hashes/src/sha512.ts","../node_modules/viem/node_modules/@noble/hashes/src/utils.ts","../node_modules/@safe-global/safe-apps-sdk/src/communication/index.ts","../node_modules/@safe-global/safe-apps-sdk/src/communication/messageFormatter.ts","../node_modules/@safe-global/safe-apps-sdk/src/communication/methods.ts","../node_modules/@safe-global/safe-apps-sdk/src/communication/utils.ts","../node_modules/@safe-global/safe-apps-sdk/src/decorators/requirePermissions.ts","../node_modules/@safe-global/safe-apps-sdk/src/eth/constants.ts","../node_modules/@safe-global/safe-apps-sdk/src/eth/index.ts","../node_modules/@safe-global/safe-apps-sdk/src/index.ts","../node_modules/@safe-global/safe-apps-sdk/src/safe/index.ts","../node_modules/@safe-global/safe-apps-sdk/src/safe/signatures.ts","../node_modules/@safe-global/safe-apps-sdk/src/sdk.ts","../node_modules/@safe-global/safe-apps-sdk/src/txs/index.ts","../node_modules/@safe-global/safe-apps-sdk/src/types/gateway.ts","../node_modules/@safe-global/safe-apps-sdk/src/types/index.ts","../node_modules/@safe-global/safe-apps-sdk/src/types/messaging.ts","../node_modules/@safe-global/safe-apps-sdk/src/types/permissions.ts","../node_modules/@safe-global/safe-apps-sdk/src/types/sdk.ts","../node_modules/@safe-global/safe-apps-sdk/src/version.ts","../node_modules/@safe-global/safe-apps-sdk/src/wallet/index.ts","../node_modules/abitype/src/errors.ts","../node_modules/abitype/src/exports/index.ts","../node_modules/abitype/src/human-readable/errors/abiItem.ts","../node_modules/abitype/src/human-readable/errors/abiParameter.ts","../node_modules/abitype/src/human-readable/errors/signature.ts","../node_modules/abitype/src/human-readable/errors/splitParameters.ts","../node_modules/abitype/src/human-readable/errors/struct.ts","../node_modules/abitype/src/human-readable/formatAbi.ts","../node_modules/abitype/src/human-readable/formatAbiItem.ts","../node_modules/abitype/src/human-readable/formatAbiParameter.ts","../node_modules/abitype/src/human-readable/formatAbiParameters.ts","../node_modules/abitype/src/human-readable/parseAbi.ts","../node_modules/abitype/src/human-readable/parseAbiItem.ts","../node_modules/abitype/src/human-readable/parseAbiParameter.ts","../node_modules/abitype/src/human-readable/parseAbiParameters.ts","../node_modules/abitype/src/human-readable/runtime/cache.ts","../node_modules/abitype/src/human-readable/runtime/signatures.ts","../node_modules/abitype/src/human-readable/runtime/structs.ts","../node_modules/abitype/src/human-readable/runtime/utils.ts","../node_modules/abitype/src/narrow.ts","../node_modules/abitype/src/regex.ts","../node_modules/abitype/src/version.ts","../node_modules/ox/core/AbiConstructor.ts","../node_modules/ox/core/AbiFunction.ts","../node_modules/ox/core/AbiItem.ts","../node_modules/ox/core/AbiParameters.ts","../node_modules/ox/core/Address.ts","../node_modules/ox/core/BlockOverrides.ts","../node_modules/ox/core/Bytes.ts","../node_modules/ox/core/Caches.ts","../node_modules/ox/core/Errors.ts","../node_modules/ox/core/Hash.ts","../node_modules/ox/core/Hex.ts","../node_modules/ox/core/Json.ts","../node_modules/ox/core/PublicKey.ts","../node_modules/ox/core/Solidity.ts","../node_modules/ox/core/Withdrawal.ts","../node_modules/ox/core/internal/abiItem.ts","../node_modules/ox/core/internal/abiParameters.ts","../node_modules/ox/core/internal/bytes.ts","../node_modules/ox/core/internal/cursor.ts","../node_modules/ox/core/internal/errors.ts","../node_modules/ox/core/internal/hex.ts","../node_modules/ox/core/internal/lru.ts","../node_modules/ox/core/version.ts","../node_modules/viem/accounts/utils/parseAccount.ts","../node_modules/viem/accounts/utils/publicKeyToAddress.ts","../node_modules/viem/actions/ens/getEnsAddress.ts","../node_modules/viem/actions/ens/getEnsAvatar.ts","../node_modules/viem/actions/ens/getEnsName.ts","../node_modules/viem/actions/ens/getEnsResolver.ts","../node_modules/viem/actions/ens/getEnsText.ts","../node_modules/viem/actions/getContract.ts","../node_modules/viem/actions/public/call.ts","../node_modules/viem/actions/public/createAccessList.ts","../node_modules/viem/actions/public/createBlockFilter.ts","../node_modules/viem/actions/public/createContractEventFilter.ts","../node_modules/viem/actions/public/createEventFilter.ts","../node_modules/viem/actions/public/createPendingTransactionFilter.ts","../node_modules/viem/actions/public/estimateContractGas.ts","../node_modules/viem/actions/public/estimateFeesPerGas.ts","../node_modules/viem/actions/public/estimateGas.ts","../node_modules/viem/actions/public/estimateMaxPriorityFeePerGas.ts","../node_modules/viem/actions/public/getBalance.ts","../node_modules/viem/actions/public/getBlobBaseFee.ts","../node_modules/viem/actions/public/getBlock.ts","../node_modules/viem/actions/public/getBlockNumber.ts","../node_modules/viem/actions/public/getBlockTransactionCount.ts","../node_modules/viem/actions/public/getChainId.ts","../node_modules/viem/actions/public/getCode.ts","../node_modules/viem/actions/public/getContractEvents.ts","../node_modules/viem/actions/public/getEip712Domain.ts","../node_modules/viem/actions/public/getFeeHistory.ts","../node_modules/viem/actions/public/getFilterChanges.ts","../node_modules/viem/actions/public/getFilterLogs.ts","../node_modules/viem/actions/public/getGasPrice.ts","../node_modules/viem/actions/public/getLogs.ts","../node_modules/viem/actions/public/getProof.ts","../node_modules/viem/actions/public/getStorageAt.ts","../node_modules/viem/actions/public/getTransaction.ts","../node_modules/viem/actions/public/getTransactionConfirmations.ts","../node_modules/viem/actions/public/getTransactionCount.ts","../node_modules/viem/actions/public/getTransactionReceipt.ts","../node_modules/viem/actions/public/multicall.ts","../node_modules/viem/actions/public/readContract.ts","../node_modules/viem/actions/public/simulateBlocks.ts","../node_modules/viem/actions/public/simulateCalls.ts","../node_modules/viem/actions/public/simulateContract.ts","../node_modules/viem/actions/public/uninstallFilter.ts","../node_modules/viem/actions/public/verifyHash.ts","../node_modules/viem/actions/public/verifyMessage.ts","../node_modules/viem/actions/public/verifyTypedData.ts","../node_modules/viem/actions/public/waitForTransactionReceipt.ts","../node_modules/viem/actions/public/watchBlockNumber.ts","../node_modules/viem/actions/public/watchBlocks.ts","../node_modules/viem/actions/public/watchContractEvent.ts","../node_modules/viem/actions/public/watchEvent.ts","../node_modules/viem/actions/public/watchPendingTransactions.ts","../node_modules/viem/actions/siwe/verifySiweMessage.ts","../node_modules/viem/actions/test/dropTransaction.ts","../node_modules/viem/actions/test/dumpState.ts","../node_modules/viem/actions/test/getAutomine.ts","../node_modules/viem/actions/test/getTxpoolContent.ts","../node_modules/viem/actions/test/getTxpoolStatus.ts","../node_modules/viem/actions/test/impersonateAccount.ts","../node_modules/viem/actions/test/increaseTime.ts","../node_modules/viem/actions/test/inspectTxpool.ts","../node_modules/viem/actions/test/loadState.ts","../node_modules/viem/actions/test/mine.ts","../node_modules/viem/actions/test/removeBlockTimestampInterval.ts","../node_modules/viem/actions/test/reset.ts","../node_modules/viem/actions/test/revert.ts","../node_modules/viem/actions/test/sendUnsignedTransaction.ts","../node_modules/viem/actions/test/setAutomine.ts","../node_modules/viem/actions/test/setBalance.ts","../node_modules/viem/actions/test/setBlockGasLimit.ts","../node_modules/viem/actions/test/setBlockTimestampInterval.ts","../node_modules/viem/actions/test/setCode.ts","../node_modules/viem/actions/test/setCoinbase.ts","../node_modules/viem/actions/test/setIntervalMining.ts","../node_modules/viem/actions/test/setLoggingEnabled.ts","../node_modules/viem/actions/test/setMinGasPrice.ts","../node_modules/viem/actions/test/setNextBlockBaseFeePerGas.ts","../node_modules/viem/actions/test/setNextBlockTimestamp.ts","../node_modules/viem/actions/test/setNonce.ts","../node_modules/viem/actions/test/setRpcUrl.ts","../node_modules/viem/actions/test/setStorageAt.ts","../node_modules/viem/actions/test/snapshot.ts","../node_modules/viem/actions/test/stopImpersonatingAccount.ts","../node_modules/viem/actions/wallet/addChain.ts","../node_modules/viem/actions/wallet/deployContract.ts","../node_modules/viem/actions/wallet/getAddresses.ts","../node_modules/viem/actions/wallet/getCallsStatus.ts","../node_modules/viem/actions/wallet/getCapabilities.ts","../node_modules/viem/actions/wallet/getPermissions.ts","../node_modules/viem/actions/wallet/prepareAuthorization.ts","../node_modules/viem/actions/wallet/prepareTransactionRequest.ts","../node_modules/viem/actions/wallet/requestAddresses.ts","../node_modules/viem/actions/wallet/requestPermissions.ts","../node_modules/viem/actions/wallet/sendCalls.ts","../node_modules/viem/actions/wallet/sendRawTransaction.ts","../node_modules/viem/actions/wallet/sendTransaction.ts","../node_modules/viem/actions/wallet/showCallsStatus.ts","../node_modules/viem/actions/wallet/signAuthorization.ts","../node_modules/viem/actions/wallet/signMessage.ts","../node_modules/viem/actions/wallet/signTransaction.ts","../node_modules/viem/actions/wallet/signTypedData.ts","../node_modules/viem/actions/wallet/switchChain.ts","../node_modules/viem/actions/wallet/waitForCallsStatus.ts","../node_modules/viem/actions/wallet/watchAsset.ts","../node_modules/viem/actions/wallet/writeContract.ts","../node_modules/viem/clients/createClient.ts","../node_modules/viem/clients/createPublicClient.ts","../node_modules/viem/clients/createTestClient.ts","../node_modules/viem/clients/createWalletClient.ts","../node_modules/viem/clients/decorators/public.ts","../node_modules/viem/clients/decorators/test.ts","../node_modules/viem/clients/decorators/wallet.ts","../node_modules/viem/clients/transports/createTransport.ts","../node_modules/viem/clients/transports/custom.ts","../node_modules/viem/clients/transports/fallback.ts","../node_modules/viem/clients/transports/http.ts","../node_modules/viem/clients/transports/webSocket.ts","../node_modules/viem/constants/abis.ts","../node_modules/viem/constants/address.ts","../node_modules/viem/constants/blob.ts","../node_modules/viem/constants/bytes.ts","../node_modules/viem/constants/contract.ts","../node_modules/viem/constants/contracts.ts","../node_modules/viem/constants/kzg.ts","../node_modules/viem/constants/number.ts","../node_modules/viem/constants/solidity.ts","../node_modules/viem/constants/strings.ts","../node_modules/viem/constants/unit.ts","../node_modules/viem/errors/abi.ts","../node_modules/viem/errors/account.ts","../node_modules/viem/errors/address.ts","../node_modules/viem/errors/base.ts","../node_modules/viem/errors/blob.ts","../node_modules/viem/errors/block.ts","../node_modules/viem/errors/ccip.ts","../node_modules/viem/errors/chain.ts","../node_modules/viem/errors/contract.ts","../node_modules/viem/errors/cursor.ts","../node_modules/viem/errors/data.ts","../node_modules/viem/errors/eip712.ts","../node_modules/viem/errors/encoding.ts","../node_modules/viem/errors/ens.ts","../node_modules/viem/errors/estimateGas.ts","../node_modules/viem/errors/fee.ts","../node_modules/viem/errors/log.ts","../node_modules/viem/errors/node.ts","../node_modules/viem/errors/request.ts","../node_modules/viem/errors/rpc.ts","../node_modules/viem/errors/stateOverride.ts","../node_modules/viem/errors/transaction.ts","../node_modules/viem/errors/transport.ts","../node_modules/viem/errors/typedData.ts","../node_modules/viem/errors/unit.ts","../node_modules/viem/errors/utils.ts","../node_modules/viem/errors/version.ts","../node_modules/viem/index.ts","../node_modules/viem/types/eip1193.ts","../node_modules/viem/utils/abi/decodeAbiParameters.ts","../node_modules/viem/utils/abi/decodeDeployData.ts","../node_modules/viem/utils/abi/decodeErrorResult.ts","../node_modules/viem/utils/abi/decodeEventLog.ts","../node_modules/viem/utils/abi/decodeFunctionData.ts","../node_modules/viem/utils/abi/decodeFunctionResult.ts","../node_modules/viem/utils/abi/encodeAbiParameters.ts","../node_modules/viem/utils/abi/encodeDeployData.ts","../node_modules/viem/utils/abi/encodeErrorResult.ts","../node_modules/viem/utils/abi/encodeEventTopics.ts","../node_modules/viem/utils/abi/encodeFunctionData.ts","../node_modules/viem/utils/abi/encodeFunctionResult.ts","../node_modules/viem/utils/abi/encodePacked.ts","../node_modules/viem/utils/abi/formatAbiItem.ts","../node_modules/viem/utils/abi/formatAbiItemWithArgs.ts","../node_modules/viem/utils/abi/getAbiItem.ts","../node_modules/viem/utils/abi/parseEventLogs.ts","../node_modules/viem/utils/abi/prepareEncodeFunctionData.ts","../node_modules/viem/utils/address/getAddress.ts","../node_modules/viem/utils/address/getContractAddress.ts","../node_modules/viem/utils/address/isAddress.ts","../node_modules/viem/utils/address/isAddressEqual.ts","../node_modules/viem/utils/authorization/hashAuthorization.ts","../node_modules/viem/utils/authorization/recoverAuthorizationAddress.ts","../node_modules/viem/utils/authorization/serializeAuthorizationList.ts","../node_modules/viem/utils/authorization/verifyAuthorization.ts","../node_modules/viem/utils/blob/blobsToCommitments.ts","../node_modules/viem/utils/blob/blobsToProofs.ts","../node_modules/viem/utils/blob/commitmentToVersionedHash.ts","../node_modules/viem/utils/blob/commitmentsToVersionedHashes.ts","../node_modules/viem/utils/blob/fromBlobs.ts","../node_modules/viem/utils/blob/sidecarsToVersionedHashes.ts","../node_modules/viem/utils/blob/toBlobSidecars.ts","../node_modules/viem/utils/blob/toBlobs.ts","../node_modules/viem/utils/buildRequest.ts","../node_modules/viem/utils/ccip.ts","../node_modules/viem/utils/chain/assertCurrentChain.ts","../node_modules/viem/utils/chain/defineChain.ts","../node_modules/viem/utils/chain/extractChain.ts","../node_modules/viem/utils/chain/getChainContractAddress.ts","../node_modules/viem/utils/cursor.ts","../node_modules/viem/utils/data/concat.ts","../node_modules/viem/utils/data/isBytes.ts","../node_modules/viem/utils/data/isHex.ts","../node_modules/viem/utils/data/pad.ts","../node_modules/viem/utils/data/size.ts","../node_modules/viem/utils/data/slice.ts","../node_modules/viem/utils/data/trim.ts","../node_modules/viem/utils/encoding/fromBytes.ts","../node_modules/viem/utils/encoding/fromHex.ts","../node_modules/viem/utils/encoding/fromRlp.ts","../node_modules/viem/utils/encoding/toBytes.ts","../node_modules/viem/utils/encoding/toHex.ts","../node_modules/viem/utils/encoding/toRlp.ts","../node_modules/viem/utils/ens/avatar/parseAvatarRecord.ts","../node_modules/viem/utils/ens/avatar/utils.ts","../node_modules/viem/utils/ens/encodeLabelhash.ts","../node_modules/viem/utils/ens/encodedLabelToLabelhash.ts","../node_modules/viem/utils/ens/errors.ts","../node_modules/viem/utils/ens/labelhash.ts","../node_modules/viem/utils/ens/localBatchGatewayRequest.ts","../node_modules/viem/utils/ens/namehash.ts","../node_modules/viem/utils/ens/packetToBytes.ts","../node_modules/viem/utils/errors/getCallError.ts","../node_modules/viem/utils/errors/getContractError.ts","../node_modules/viem/utils/errors/getEstimateGasError.ts","../node_modules/viem/utils/errors/getNodeError.ts","../node_modules/viem/utils/errors/getTransactionError.ts","../node_modules/viem/utils/filters/createFilterRequestScope.ts","../node_modules/viem/utils/formatters/block.ts","../node_modules/viem/utils/formatters/extract.ts","../node_modules/viem/utils/formatters/feeHistory.ts","../node_modules/viem/utils/formatters/formatter.ts","../node_modules/viem/utils/formatters/log.ts","../node_modules/viem/utils/formatters/proof.ts","../node_modules/viem/utils/formatters/transaction.ts","../node_modules/viem/utils/formatters/transactionReceipt.ts","../node_modules/viem/utils/formatters/transactionRequest.ts","../node_modules/viem/utils/getAction.ts","../node_modules/viem/utils/hash/hashSignature.ts","../node_modules/viem/utils/hash/isHash.ts","../node_modules/viem/utils/hash/keccak256.ts","../node_modules/viem/utils/hash/normalizeSignature.ts","../node_modules/viem/utils/hash/ripemd160.ts","../node_modules/viem/utils/hash/sha256.ts","../node_modules/viem/utils/hash/toEventHash.ts","../node_modules/viem/utils/hash/toEventSelector.ts","../node_modules/viem/utils/hash/toEventSignature.ts","../node_modules/viem/utils/hash/toFunctionHash.ts","../node_modules/viem/utils/hash/toFunctionSelector.ts","../node_modules/viem/utils/hash/toFunctionSignature.ts","../node_modules/viem/utils/hash/toSignature.ts","../node_modules/viem/utils/hash/toSignatureHash.ts","../node_modules/viem/utils/index.ts","../node_modules/viem/utils/kzg/defineKzg.ts","../node_modules/viem/utils/kzg/setupKzg.ts","../node_modules/viem/utils/lru.ts","../node_modules/viem/utils/nonceManager.ts","../node_modules/viem/utils/observe.ts","../node_modules/viem/utils/poll.ts","../node_modules/viem/utils/promise/createBatchScheduler.ts","../node_modules/viem/utils/promise/withCache.ts","../node_modules/viem/utils/promise/withDedupe.ts","../node_modules/viem/utils/promise/withResolvers.ts","../node_modules/viem/utils/promise/withRetry.ts","../node_modules/viem/utils/promise/withTimeout.ts","../node_modules/viem/utils/regex.ts","../node_modules/viem/utils/rpc/compat.ts","../node_modules/viem/utils/rpc/http.ts","../node_modules/viem/utils/rpc/id.ts","../node_modules/viem/utils/rpc/socket.ts","../node_modules/viem/utils/rpc/webSocket.ts","../node_modules/viem/utils/signature/compactSignatureToSignature.ts","../node_modules/viem/utils/signature/hashMessage.ts","../node_modules/viem/utils/signature/hashTypedData.ts","../node_modules/viem/utils/signature/isErc6492Signature.ts","../node_modules/viem/utils/signature/parseCompactSignature.ts","../node_modules/viem/utils/signature/parseErc6492Signature.ts","../node_modules/viem/utils/signature/parseSignature.ts","../node_modules/viem/utils/signature/recoverAddress.ts","../node_modules/viem/utils/signature/recoverMessageAddress.ts","../node_modules/viem/utils/signature/recoverPublicKey.ts","../node_modules/viem/utils/signature/recoverTransactionAddress.ts","../node_modules/viem/utils/signature/recoverTypedDataAddress.ts","../node_modules/viem/utils/signature/serializeCompactSignature.ts","../node_modules/viem/utils/signature/serializeErc6492Signature.ts","../node_modules/viem/utils/signature/serializeSignature.ts","../node_modules/viem/utils/signature/signatureToCompactSignature.ts","../node_modules/viem/utils/signature/toPrefixedMessage.ts","../node_modules/viem/utils/signature/verifyHash.ts","../node_modules/viem/utils/signature/verifyMessage.ts","../node_modules/viem/utils/signature/verifyTypedData.ts","../node_modules/viem/utils/siwe/parseSiweMessage.ts","../node_modules/viem/utils/siwe/validateSiweMessage.ts","../node_modules/viem/utils/stateOverride.ts","../node_modules/viem/utils/stringify.ts","../node_modules/viem/utils/transaction/assertRequest.ts","../node_modules/viem/utils/transaction/assertTransaction.ts","../node_modules/viem/utils/transaction/getSerializedTransactionType.ts","../node_modules/viem/utils/transaction/getTransactionType.ts","../node_modules/viem/utils/transaction/parseTransaction.ts","../node_modules/viem/utils/transaction/serializeAccessList.ts","../node_modules/viem/utils/transaction/serializeTransaction.ts","../node_modules/viem/utils/typedData.ts","../node_modules/viem/utils/uid.ts","../node_modules/viem/utils/unit/formatEther.ts","../node_modules/viem/utils/unit/formatGwei.ts","../node_modules/viem/utils/unit/formatUnits.ts","../node_modules/viem/utils/unit/parseEther.ts","../node_modules/viem/utils/unit/parseGwei.ts","../node_modules/viem/utils/unit/parseUnits.ts","../node_modules/viem/utils/wait.ts","../node_modules/isows/native.ts","../node_modules/isows/utils.ts"],"sourcesContent":["/**\n * Hex, bytes and number utilities.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nexport type Hex = Uint8Array | string; // hex strings are accepted for simplicity\nexport type PrivKey = Hex | bigint; // bigints are accepted to ease learning curve\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nexport function isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\nexport function abytes(item: unknown): void {\n  if (!isBytes(item)) throw new Error('Uint8Array expected');\n}\n\nexport function abool(title: string, value: boolean): void {\n  if (typeof value !== 'boolean') throw new Error(title + ' boolean expected, got ' + value);\n}\n\n// Used in weierstrass, der\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? '0' + hex : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  return hex === '' ? _0n : BigInt('0x' + hex); // Big Endian\n}\n\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin: boolean =\n  // @ts-ignore\n  typeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function';\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // @ts-ignore\n  if (hasHexBuiltin) return bytes.toHex();\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 } as const;\nfunction asciiToBase16(ch: number): number | undefined {\n  if (ch >= asciis._0 && ch <= asciis._9) return ch - asciis._0; // '2' => 50-48\n  if (ch >= asciis.A && ch <= asciis.F) return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n  if (ch >= asciis.a && ch <= asciis.f) return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n  return;\n}\n\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // @ts-ignore\n  if (hasHexBuiltin) return Uint8Array.fromHex(hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n  }\n  return array;\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  abytes(bytes);\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n: number | bigint, len: number): Uint8Array {\n  return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n: number | bigint): Uint8Array {\n  return hexToBytes(numberToHexUnpadded(n));\n}\n\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(title + ' must be hex string or Uint8Array, cause: ' + e);\n    }\n  } else if (isBytes(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(title + ' must be hex string or Uint8Array');\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(title + ' of length ' + expectedLength + ' expected, got ' + len);\n  return res;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a: Uint8Array, b: Uint8Array): boolean {\n  if (a.length !== b.length) return false;\n  let diff = 0;\n  for (let i = 0; i < a.length; i++) diff |= a[i] ^ b[i];\n  return diff === 0;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error('string expected');\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n// Is positive bigint\nconst isPosBig = (n: bigint) => typeof n === 'bigint' && _0n <= n;\n\nexport function inRange(n: bigint, min: bigint, max: bigint): boolean {\n  return isPosBig(n) && isPosBig(min) && isPosBig(max) && min <= n && n < max;\n}\n\n/**\n * Asserts min <= n < max. NOTE: It's < max and not <= max.\n * @example\n * aInRange('x', x, 1n, 256n); // would assume x is in (1n..255n)\n */\nexport function aInRange(title: string, n: bigint, min: bigint, max: bigint): void {\n  // Why min <= n < max and not a (min < n < max) OR b (min <= n <= max)?\n  // consider P=256n, min=0n, max=P\n  // - a for min=0 would require -1:          `inRange('x', x, -1n, P)`\n  // - b would commonly require subtraction:  `inRange('x', x, 0n, P - 1n)`\n  // - our way is the cleanest:               `inRange('x', x, 0n, P)\n  if (!inRange(n, min, max))\n    throw new Error('expected valid ' + title + ': ' + min + ' <= n < ' + max + ', got ' + n);\n}\n\n// Bit operations\n\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n * TODO: merge with nLength in modular\n */\nexport function bitLen(n: bigint): number {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n: bigint, pos: number): bigint {\n  return (n >> BigInt(pos)) & _1n;\n}\n\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n: bigint, pos: number, value: boolean): bigint {\n  return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n: number): bigint => (_1n << BigInt(n)) - _1n;\n\n// DRBG\n\nconst u8n = (len: number) => new Uint8Array(len); // creates Uint8Array\nconst u8fr = (arr: ArrayLike<number>) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n(0)) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any): boolean => typeof val === 'bigint',\n  function: (val: any): boolean => typeof val === 'function',\n  boolean: (val: any): boolean => typeof val === 'boolean',\n  string: (val: any): boolean => typeof val === 'string',\n  stringOrUint8Array: (val: any): boolean => typeof val === 'string' || isBytes(val),\n  isSafeInteger: (val: any): boolean => Number.isSafeInteger(val),\n  array: (val: any): boolean => Array.isArray(val),\n  field: (val: any, object: any): any => (object as any).Fp.isValid(val),\n  hash: (val: any): boolean => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n): T {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function') throw new Error('invalid validator function');\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        'param ' + String(fieldName) + ' is invalid. Expected ' + type + ', got ' + val\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n\n/**\n * throws not implemented error\n */\nexport const notImplemented = (): never => {\n  throw new Error('not implemented');\n};\n\n/**\n * Memoizes (caches) computation result.\n * Uses WeakMap: the value is going auto-cleaned by GC after last reference is removed.\n */\nexport function memoized<T extends object, R, O extends any[]>(\n  fn: (arg: T, ...args: O) => R\n): (arg: T, ...args: O) => R {\n  const map = new WeakMap<T, R>();\n  return (arg: T, ...args: O): R => {\n    const val = map.get(arg);\n    if (val !== undefined) return val;\n    const computed = fn(arg, ...args);\n    map.set(arg, computed);\n    return computed;\n  };\n}\n","/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\nimport { type Input, Hash, abytes, aexists, aoutput, clean, createView, toBytes } from './utils.ts';\n\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\nexport function setBigUint64(\n  view: DataView,\n  byteOffset: number,\n  value: bigint,\n  isLE: boolean\n): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n/** Choice: a ? b : c */\nexport function Chi(a: number, b: number, c: number): number {\n  return (a & b) ^ (~a & c);\n}\n\n/** Majority function, true if any two inputs is true. */\nexport function Maj(a: number, b: number, c: number): number {\n  return (a & b) ^ (a & c) ^ (b & c);\n}\n\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport abstract class HashMD<T extends HashMD<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n\n  readonly blockLen: number;\n  readonly outputLen: number;\n  readonly padOffset: number;\n  readonly isLE: boolean;\n\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(blockLen: number, outputLen: number, padOffset: number, isLE: boolean) {\n    super();\n    this.blockLen = blockLen;\n    this.outputLen = outputLen;\n    this.padOffset = padOffset;\n    this.isLE = isLE;\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    aexists(this);\n    data = toBytes(data);\n    abytes(data);\n    const { view, buffer, blockLen } = this;\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array): void {\n    aexists(this);\n    aoutput(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    clean(this.buffer.subarray(pos));\n    // we have less than padOffset left in buffer, so we cannot put length in\n    // current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest(): Uint8Array {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.destroyed = destroyed;\n    to.finished = finished;\n    to.length = length;\n    to.pos = pos;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * Initial SHA-2 state: fractional parts of square roots of first 16 primes 2..53.\n * Check out `test/misc/sha2-gen-iv.js` for recomputation guide.\n */\n\n/** Initial SHA256 state. Bits 0..32 of frac part of sqrt of primes 2..19 */\nexport const SHA256_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19,\n]);\n\n/** Initial SHA224 state. Bits 32..64 of frac part of sqrt of primes 23..53 */\nexport const SHA224_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\n  0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4,\n]);\n\n/** Initial SHA384 state. Bits 0..64 of frac part of sqrt of primes 23..53 */\nexport const SHA384_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\n  0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939,\n  0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4,\n]);\n\n/** Initial SHA512 state. Bits 0..64 of frac part of sqrt of primes 2..19 */\nexport const SHA512_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\n  0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1,\n  0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179,\n]);\n","/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\nfunction fromBig(\n  n: bigint,\n  le = false\n): {\n  h: number;\n  l: number;\n} {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false): Uint32Array[] {\n  const len = lst.length;\n  let Ah = new Uint32Array(len);\n  let Al = new Uint32Array(len);\n  for (let i = 0; i < len; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number): bigint => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number): number => h >>> s;\nconst shrSL = (h: number, l: number, s: number): number => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number): number => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number): number => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number): number => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number): number => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number): number => l;\nconst rotr32L = (h: number, _l: number): number => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number): number => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number): number => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number): number => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number): number => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(\n  Ah: number,\n  Al: number,\n  Bh: number,\n  Bl: number\n): {\n  h: number;\n  l: number;\n} {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number): number => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number): number =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number): number =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number): number =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number): number =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number): number =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  add, add3H, add3L, add4H, add4L, add5H, add5L, fromBig, rotlBH, rotlBL, rotlSH, rotlSL, rotr32H, rotr32L, rotrBH, rotrBL, rotrSH, rotrSL, shrSH, shrSL, split, toBig\n};\n// prettier-ignore\nconst u64: { fromBig: typeof fromBig; split: typeof split; toBig: (h: number, l: number) => bigint; shrSH: (h: number, _l: number, s: number) => number; shrSL: (h: number, l: number, s: number) => number; rotrSH: (h: number, l: number, s: number) => number; rotrSL: (h: number, l: number, s: number) => number; rotrBH: (h: number, l: number, s: number) => number; rotrBL: (h: number, l: number, s: number) => number; rotr32H: (_h: number, l: number) => number; rotr32L: (h: number, _l: number) => number; rotlSH: (h: number, l: number, s: number) => number; rotlSL: (h: number, l: number, s: number) => number; rotlBH: (h: number, l: number, s: number) => number; rotlBL: (h: number, l: number, s: number) => number; add: typeof add; add3L: (Al: number, Bl: number, Cl: number) => number; add3H: (low: number, Ah: number, Bh: number, Ch: number) => number; add4L: (Al: number, Bl: number, Cl: number, Dl: number) => number; add4H: (low: number, Ah: number, Bh: number, Ch: number, Dh: number) => number; add5H: (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) => number; add5L: (Al: number, Bl: number, Cl: number, Dl: number, El: number) => number; } = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","/**\n * Internal webcrypto alias.\n * We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n * See utils.ts for details.\n * @module\n */\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto: any =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n","/**\n\nSHA1 (RFC 3174), MD5 (RFC 1321) and RIPEMD160 (RFC 2286) legacy, weak hash functions.\nDon't use them in a new protocol. What \"weak\" means:\n\n- Collisions can be made with 2^18 effort in MD5, 2^60 in SHA1, 2^80 in RIPEMD160.\n- No practical pre-image attacks (only theoretical, 2^123.4)\n- HMAC seems kinda ok: https://datatracker.ietf.org/doc/html/rfc6151\n * @module\n */\nimport { Chi, HashMD, Maj } from './_md.ts';\nimport { type CHash, clean, createHasher, rotl } from './utils.ts';\n\n/** Initial SHA1 state */\nconst SHA1_IV = /* @__PURE__ */ Uint32Array.from([\n  0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0,\n]);\n\n// Reusable temporary buffer\nconst SHA1_W = /* @__PURE__ */ new Uint32Array(80);\n\n/** SHA1 legacy hash class. */\nexport class SHA1 extends HashMD<SHA1> {\n  private A = SHA1_IV[0] | 0;\n  private B = SHA1_IV[1] | 0;\n  private C = SHA1_IV[2] | 0;\n  private D = SHA1_IV[3] | 0;\n  private E = SHA1_IV[4] | 0;\n\n  constructor() {\n    super(64, 20, 8, false);\n  }\n  protected get(): [number, number, number, number, number] {\n    const { A, B, C, D, E } = this;\n    return [A, B, C, D, E];\n  }\n  protected set(A: number, B: number, C: number, D: number, E: number): void {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    for (let i = 0; i < 16; i++, offset += 4) SHA1_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 80; i++)\n      SHA1_W[i] = rotl(SHA1_W[i - 3] ^ SHA1_W[i - 8] ^ SHA1_W[i - 14] ^ SHA1_W[i - 16], 1);\n    // Compression function main loop, 80 rounds\n    let { A, B, C, D, E } = this;\n    for (let i = 0; i < 80; i++) {\n      let F, K;\n      if (i < 20) {\n        F = Chi(B, C, D);\n        K = 0x5a827999;\n      } else if (i < 40) {\n        F = B ^ C ^ D;\n        K = 0x6ed9eba1;\n      } else if (i < 60) {\n        F = Maj(B, C, D);\n        K = 0x8f1bbcdc;\n      } else {\n        F = B ^ C ^ D;\n        K = 0xca62c1d6;\n      }\n      const T = (rotl(A, 5) + F + E + K + SHA1_W[i]) | 0;\n      E = D;\n      D = C;\n      C = rotl(B, 30);\n      B = A;\n      A = T;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    this.set(A, B, C, D, E);\n  }\n  protected roundClean(): void {\n    clean(SHA1_W);\n  }\n  destroy(): void {\n    this.set(0, 0, 0, 0, 0);\n    clean(this.buffer);\n  }\n}\n\n/** SHA1 (RFC 3174) legacy hash function. It was cryptographically broken. */\nexport const sha1: CHash = /* @__PURE__ */ createHasher(() => new SHA1());\n\n/** Per-round constants */\nconst p32 = /* @__PURE__ */ Math.pow(2, 32);\nconst K = /* @__PURE__ */ Array.from({ length: 64 }, (_, i) =>\n  Math.floor(p32 * Math.abs(Math.sin(i + 1)))\n);\n\n/** md5 initial state: same as sha1, but 4 u32 instead of 5. */\nconst MD5_IV = /* @__PURE__ */ SHA1_IV.slice(0, 4);\n\n// Reusable temporary buffer\nconst MD5_W = /* @__PURE__ */ new Uint32Array(16);\n/** MD5 legacy hash class. */\nexport class MD5 extends HashMD<MD5> {\n  private A = MD5_IV[0] | 0;\n  private B = MD5_IV[1] | 0;\n  private C = MD5_IV[2] | 0;\n  private D = MD5_IV[3] | 0;\n\n  constructor() {\n    super(64, 16, 8, true);\n  }\n  protected get(): [number, number, number, number] {\n    const { A, B, C, D } = this;\n    return [A, B, C, D];\n  }\n  protected set(A: number, B: number, C: number, D: number): void {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    for (let i = 0; i < 16; i++, offset += 4) MD5_W[i] = view.getUint32(offset, true);\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D } = this;\n    for (let i = 0; i < 64; i++) {\n      let F, g, s;\n      if (i < 16) {\n        F = Chi(B, C, D);\n        g = i;\n        s = [7, 12, 17, 22];\n      } else if (i < 32) {\n        F = Chi(D, B, C);\n        g = (5 * i + 1) % 16;\n        s = [5, 9, 14, 20];\n      } else if (i < 48) {\n        F = B ^ C ^ D;\n        g = (3 * i + 5) % 16;\n        s = [4, 11, 16, 23];\n      } else {\n        F = C ^ (B | ~D);\n        g = (7 * i) % 16;\n        s = [6, 10, 15, 21];\n      }\n      F = F + A + K[i] + MD5_W[g];\n      A = D;\n      D = C;\n      C = B;\n      B = B + rotl(F, s[i % 4]);\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    this.set(A, B, C, D);\n  }\n  protected roundClean(): void {\n    clean(MD5_W);\n  }\n  destroy(): void {\n    this.set(0, 0, 0, 0);\n    clean(this.buffer);\n  }\n}\n\n/**\n * MD5 (RFC 1321) legacy hash function. It was cryptographically broken.\n * MD5 architecture is similar to SHA1, with some differences:\n * - Reduced output length: 16 bytes (128 bit) instead of 20\n * - 64 rounds, instead of 80\n * - Little-endian: could be faster, but will require more code\n * - Non-linear index selection: huge speed-up for unroll\n * - Per round constants: more memory accesses, additional speed-up for unroll\n */\nexport const md5: CHash = /* @__PURE__ */ createHasher(() => new MD5());\n\n// RIPEMD-160\n\nconst Rho160 = /* @__PURE__ */ Uint8Array.from([\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n]);\nconst Id160 = /* @__PURE__ */ (() => Uint8Array.from(new Array(16).fill(0).map((_, i) => i)))();\nconst Pi160 = /* @__PURE__ */ (() => Id160.map((i) => (9 * i + 5) % 16))();\nconst idxLR = /* @__PURE__ */ (() => {\n  const L = [Id160];\n  const R = [Pi160];\n  const res = [L, R];\n  for (let i = 0; i < 4; i++) for (let j of res) j.push(j[i].map((k) => Rho160[k]));\n  return res;\n})();\nconst idxL = /* @__PURE__ */ (() => idxLR[0])();\nconst idxR = /* @__PURE__ */ (() => idxLR[1])();\n// const [idxL, idxR] = idxLR;\n\nconst shifts160 = /* @__PURE__ */ [\n  [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n  [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n  [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n  [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n  [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => Uint8Array.from(i));\nconst shiftsL160 = /* @__PURE__ */ idxL.map((idx, i) => idx.map((j) => shifts160[i][j]));\nconst shiftsR160 = /* @__PURE__ */ idxR.map((idx, i) => idx.map((j) => shifts160[i][j]));\nconst Kl160 = /* @__PURE__ */ Uint32Array.from([\n  0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e,\n]);\nconst Kr160 = /* @__PURE__ */ Uint32Array.from([\n  0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000,\n]);\n// It's called f() in spec.\nfunction ripemd_f(group: number, x: number, y: number, z: number): number {\n  if (group === 0) return x ^ y ^ z;\n  if (group === 1) return (x & y) | (~x & z);\n  if (group === 2) return (x | ~y) ^ z;\n  if (group === 3) return (x & z) | (y & ~z);\n  return x ^ (y | ~z);\n}\n// Reusable temporary buffer\nconst BUF_160 = /* @__PURE__ */ new Uint32Array(16);\nexport class RIPEMD160 extends HashMD<RIPEMD160> {\n  private h0 = 0x67452301 | 0;\n  private h1 = 0xefcdab89 | 0;\n  private h2 = 0x98badcfe | 0;\n  private h3 = 0x10325476 | 0;\n  private h4 = 0xc3d2e1f0 | 0;\n\n  constructor() {\n    super(64, 20, 8, true);\n  }\n  protected get(): [number, number, number, number, number] {\n    const { h0, h1, h2, h3, h4 } = this;\n    return [h0, h1, h2, h3, h4];\n  }\n  protected set(h0: number, h1: number, h2: number, h3: number, h4: number): void {\n    this.h0 = h0 | 0;\n    this.h1 = h1 | 0;\n    this.h2 = h2 | 0;\n    this.h3 = h3 | 0;\n    this.h4 = h4 | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    for (let i = 0; i < 16; i++, offset += 4) BUF_160[i] = view.getUint32(offset, true);\n    // prettier-ignore\n    let al = this.h0 | 0, ar = al,\n        bl = this.h1 | 0, br = bl,\n        cl = this.h2 | 0, cr = cl,\n        dl = this.h3 | 0, dr = dl,\n        el = this.h4 | 0, er = el;\n\n    // Instead of iterating 0 to 80, we split it into 5 groups\n    // And use the groups in constants, functions, etc. Much simpler\n    for (let group = 0; group < 5; group++) {\n      const rGroup = 4 - group;\n      const hbl = Kl160[group], hbr = Kr160[group]; // prettier-ignore\n      const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n      const sl = shiftsL160[group], sr = shiftsR160[group]; // prettier-ignore\n      for (let i = 0; i < 16; i++) {\n        const tl = (rotl(al + ripemd_f(group, bl, cl, dl) + BUF_160[rl[i]] + hbl, sl[i]) + el) | 0;\n        al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n      }\n      // 2 loops are 10% faster\n      for (let i = 0; i < 16; i++) {\n        const tr = (rotl(ar + ripemd_f(rGroup, br, cr, dr) + BUF_160[rr[i]] + hbr, sr[i]) + er) | 0;\n        ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n      }\n    }\n    // Add the compressed chunk to the current hash value\n    this.set(\n      (this.h1 + cl + dr) | 0,\n      (this.h2 + dl + er) | 0,\n      (this.h3 + el + ar) | 0,\n      (this.h4 + al + br) | 0,\n      (this.h0 + bl + cr) | 0\n    );\n  }\n  protected roundClean(): void {\n    clean(BUF_160);\n  }\n  destroy(): void {\n    this.destroyed = true;\n    clean(this.buffer);\n    this.set(0, 0, 0, 0, 0);\n  }\n}\n\n/**\n * RIPEMD-160 - a legacy hash function from 1990s.\n * * https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n * * https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\n */\nexport const ripemd160: CHash = /* @__PURE__ */ createHasher(() => new RIPEMD160());\n","/**\n * RIPEMD-160 legacy hash function.\n * https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n * https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\n * @module\n * @deprecated\n */\nimport { RIPEMD160 as RIPEMD160n, ripemd160 as ripemd160n } from './legacy.ts';\n/** @deprecated Use import from `noble/hashes/legacy` module */\nexport const RIPEMD160: typeof RIPEMD160n = RIPEMD160n;\n/** @deprecated Use import from `noble/hashes/legacy` module */\nexport const ripemd160: typeof ripemd160n = ripemd160n;\n","/**\n * SHA2 hash function. A.k.a. sha256, sha384, sha512, sha512_224, sha512_256.\n * SHA256 is the fastest hash implementable in JS, even faster than Blake3.\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\n * [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\nimport { Chi, HashMD, Maj, SHA224_IV, SHA256_IV, SHA384_IV, SHA512_IV } from './_md.ts';\nimport * as u64 from './_u64.ts';\nimport { type CHash, clean, createHasher, rotr } from './utils.ts';\n\n/**\n * Round constants:\n * First 32 bits of fractional parts of the cube roots of the first 64 primes 2..311)\n */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ Uint32Array.from([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n/** Reusable temporary buffer. \"W\" comes straight from spec. */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  protected A: number = SHA256_IV[0] | 0;\n  protected B: number = SHA256_IV[1] | 0;\n  protected C: number = SHA256_IV[2] | 0;\n  protected D: number = SHA256_IV[3] | 0;\n  protected E: number = SHA256_IV[4] | 0;\n  protected F: number = SHA256_IV[5] | 0;\n  protected G: number = SHA256_IV[6] | 0;\n  protected H: number = SHA256_IV[7] | 0;\n\n  constructor(outputLen: number = 32) {\n    super(64, outputLen, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ): void {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean(): void {\n    clean(SHA256_W);\n  }\n  destroy(): void {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    clean(this.buffer);\n  }\n}\n\nexport class SHA224 extends SHA256 {\n  protected A: number = SHA224_IV[0] | 0;\n  protected B: number = SHA224_IV[1] | 0;\n  protected C: number = SHA224_IV[2] | 0;\n  protected D: number = SHA224_IV[3] | 0;\n  protected E: number = SHA224_IV[4] | 0;\n  protected F: number = SHA224_IV[5] | 0;\n  protected G: number = SHA224_IV[6] | 0;\n  protected H: number = SHA224_IV[7] | 0;\n  constructor() {\n    super(28);\n  }\n}\n\n// SHA2-512 is slower than sha256 in js because u64 operations are slow.\n\n// Round contants\n// First 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409\n// prettier-ignore\nconst K512 = /* @__PURE__ */ (() => u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\nconst SHA512_Kh = /* @__PURE__ */ (() => K512[0])();\nconst SHA512_Kl = /* @__PURE__ */ (() => K512[1])();\n\n// Reusable temporary buffers\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\n\nexport class SHA512 extends HashMD<SHA512> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  // h -- high 32 bits, l -- low 32 bits\n  protected Ah: number = SHA512_IV[0] | 0;\n  protected Al: number = SHA512_IV[1] | 0;\n  protected Bh: number = SHA512_IV[2] | 0;\n  protected Bl: number = SHA512_IV[3] | 0;\n  protected Ch: number = SHA512_IV[4] | 0;\n  protected Cl: number = SHA512_IV[5] | 0;\n  protected Dh: number = SHA512_IV[6] | 0;\n  protected Dl: number = SHA512_IV[7] | 0;\n  protected Eh: number = SHA512_IV[8] | 0;\n  protected El: number = SHA512_IV[9] | 0;\n  protected Fh: number = SHA512_IV[10] | 0;\n  protected Fl: number = SHA512_IV[11] | 0;\n  protected Gh: number = SHA512_IV[12] | 0;\n  protected Gl: number = SHA512_IV[13] | 0;\n  protected Hh: number = SHA512_IV[14] | 0;\n  protected Hl: number = SHA512_IV[15] | 0;\n\n  constructor(outputLen: number = 64) {\n    super(128, outputLen, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ): void {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean(): void {\n    clean(SHA512_W_H, SHA512_W_L);\n  }\n  destroy(): void {\n    clean(this.buffer);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nexport class SHA384 extends SHA512 {\n  protected Ah: number = SHA384_IV[0] | 0;\n  protected Al: number = SHA384_IV[1] | 0;\n  protected Bh: number = SHA384_IV[2] | 0;\n  protected Bl: number = SHA384_IV[3] | 0;\n  protected Ch: number = SHA384_IV[4] | 0;\n  protected Cl: number = SHA384_IV[5] | 0;\n  protected Dh: number = SHA384_IV[6] | 0;\n  protected Dl: number = SHA384_IV[7] | 0;\n  protected Eh: number = SHA384_IV[8] | 0;\n  protected El: number = SHA384_IV[9] | 0;\n  protected Fh: number = SHA384_IV[10] | 0;\n  protected Fl: number = SHA384_IV[11] | 0;\n  protected Gh: number = SHA384_IV[12] | 0;\n  protected Gl: number = SHA384_IV[13] | 0;\n  protected Hh: number = SHA384_IV[14] | 0;\n  protected Hl: number = SHA384_IV[15] | 0;\n\n  constructor() {\n    super(48);\n  }\n}\n\n/**\n * Truncated SHA512/256 and SHA512/224.\n * SHA512_IV is XORed with 0xa5a5a5a5a5a5a5a5, then used as \"intermediary\" IV of SHA512/t.\n * Then t hashes string to produce result IV.\n * See `test/misc/sha2-gen-iv.js`.\n */\n\n/** SHA512/224 IV */\nconst T224_IV = /* @__PURE__ */ Uint32Array.from([\n  0x8c3d37c8, 0x19544da2, 0x73e19966, 0x89dcd4d6, 0x1dfab7ae, 0x32ff9c82, 0x679dd514, 0x582f9fcf,\n  0x0f6d2b69, 0x7bd44da8, 0x77e36f73, 0x04c48942, 0x3f9d85a8, 0x6a1d36c8, 0x1112e6ad, 0x91d692a1,\n]);\n\n/** SHA512/256 IV */\nconst T256_IV = /* @__PURE__ */ Uint32Array.from([\n  0x22312194, 0xfc2bf72c, 0x9f555fa3, 0xc84c64c2, 0x2393b86b, 0x6f53b151, 0x96387719, 0x5940eabd,\n  0x96283ee2, 0xa88effe3, 0xbe5e1e25, 0x53863992, 0x2b0199fc, 0x2c85b8aa, 0x0eb72ddc, 0x81c52ca2,\n]);\n\nexport class SHA512_224 extends SHA512 {\n  protected Ah: number = T224_IV[0] | 0;\n  protected Al: number = T224_IV[1] | 0;\n  protected Bh: number = T224_IV[2] | 0;\n  protected Bl: number = T224_IV[3] | 0;\n  protected Ch: number = T224_IV[4] | 0;\n  protected Cl: number = T224_IV[5] | 0;\n  protected Dh: number = T224_IV[6] | 0;\n  protected Dl: number = T224_IV[7] | 0;\n  protected Eh: number = T224_IV[8] | 0;\n  protected El: number = T224_IV[9] | 0;\n  protected Fh: number = T224_IV[10] | 0;\n  protected Fl: number = T224_IV[11] | 0;\n  protected Gh: number = T224_IV[12] | 0;\n  protected Gl: number = T224_IV[13] | 0;\n  protected Hh: number = T224_IV[14] | 0;\n  protected Hl: number = T224_IV[15] | 0;\n\n  constructor() {\n    super(28);\n  }\n}\n\nexport class SHA512_256 extends SHA512 {\n  protected Ah: number = T256_IV[0] | 0;\n  protected Al: number = T256_IV[1] | 0;\n  protected Bh: number = T256_IV[2] | 0;\n  protected Bl: number = T256_IV[3] | 0;\n  protected Ch: number = T256_IV[4] | 0;\n  protected Cl: number = T256_IV[5] | 0;\n  protected Dh: number = T256_IV[6] | 0;\n  protected Dl: number = T256_IV[7] | 0;\n  protected Eh: number = T256_IV[8] | 0;\n  protected El: number = T256_IV[9] | 0;\n  protected Fh: number = T256_IV[10] | 0;\n  protected Fl: number = T256_IV[11] | 0;\n  protected Gh: number = T256_IV[12] | 0;\n  protected Gl: number = T256_IV[13] | 0;\n  protected Hh: number = T256_IV[14] | 0;\n  protected Hl: number = T256_IV[15] | 0;\n\n  constructor() {\n    super(32);\n  }\n}\n\n/**\n * SHA2-256 hash function from RFC 4634.\n *\n * It is the fastest JS hash, even faster than Blake3.\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n */\nexport const sha256: CHash = /* @__PURE__ */ createHasher(() => new SHA256());\n/** SHA2-224 hash function from RFC 4634 */\nexport const sha224: CHash = /* @__PURE__ */ createHasher(() => new SHA224());\n\n/** SHA2-512 hash function from RFC 4634. */\nexport const sha512: CHash = /* @__PURE__ */ createHasher(() => new SHA512());\n/** SHA2-384 hash function from RFC 4634. */\nexport const sha384: CHash = /* @__PURE__ */ createHasher(() => new SHA384());\n\n/**\n * SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_256: CHash = /* @__PURE__ */ createHasher(() => new SHA512_256());\n/**\n * SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_224: CHash = /* @__PURE__ */ createHasher(() => new SHA512_224());\n","/**\n * SHA2-256 a.k.a. sha256. In JS, it is the fastest hash, even faster than Blake3.\n *\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n *\n * Check out [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n * @deprecated\n */\nimport {\n  SHA224 as SHA224n,\n  sha224 as sha224n,\n  SHA256 as SHA256n,\n  sha256 as sha256n,\n} from './sha2.ts';\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA256: typeof SHA256n = SHA256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha256: typeof sha256n = sha256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA224: typeof SHA224n = SHA224n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha224: typeof sha224n = sha224n;\n","/**\n * SHA3 (keccak) hash function, based on a new \"Sponge function\" design.\n * Different from older hashes, the internal state is bigger than output size.\n *\n * Check out [FIPS-202](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf),\n * [Website](https://keccak.team/keccak.html),\n * [the differences between SHA-3 and Keccak](https://crypto.stackexchange.com/questions/15727/what-are-the-key-differences-between-the-draft-sha-3-standard-and-the-keccak-sub).\n *\n * Check out `sha3-addons` module for cSHAKE, k12, and others.\n * @module\n */\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.ts';\n// prettier-ignore\nimport {\n  abytes, aexists, anumber, aoutput,\n  clean, createHasher, createXOFer, Hash,\n  swap32IfBE,\n  toBytes, u32,\n  type CHash, type CHashXO, type HashXOF, type Input\n} from './utils.ts';\n\n// No __PURE__ annotations in sha3 header:\n// EVERYTHING is in fact used on every export.\n// Various per round constants calculations\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nconst SHA3_PI: number[] = [];\nconst SHA3_ROTL: number[] = [];\nconst _SHA3_IOTA: bigint[] = [];\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst IOTAS = split(_SHA3_IOTA, true);\nconst SHA3_IOTA_H = IOTAS[0];\nconst SHA3_IOTA_L = IOTAS[1];\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h: number, l: number, s: number) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n\n/** `keccakf1600` internal function, additionally allows to adjust round count. */\nexport function keccakP(s: Uint32Array, rounds: number = 24): void {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (ρ) and Pi (π)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (χ)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (ι)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  clean(B);\n}\n\n/** Keccak sponge function. */\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n\n  public blockLen: number;\n  public suffix: number;\n  public outputLen: number;\n  protected enableXOF = false;\n  protected rounds: number;\n\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    blockLen: number,\n    suffix: number,\n    outputLen: number,\n    enableXOF = false,\n    rounds: number = 24\n  ) {\n    super();\n    this.blockLen = blockLen;\n    this.suffix = suffix;\n    this.outputLen = outputLen;\n    this.enableXOF = enableXOF;\n    this.rounds = rounds;\n    // Can be passed from user as dkLen\n    anumber(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    // 0 < blockLen < 200\n    if (!(0 < blockLen && blockLen < 200))\n      throw new Error('only keccak-f1600 function is supported');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  clone(): Keccak {\n    return this._cloneInto();\n  }\n  protected keccak(): void {\n    swap32IfBE(this.state32);\n    keccakP(this.state32, this.rounds);\n    swap32IfBE(this.state32);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input): this {\n    aexists(this);\n    data = toBytes(data);\n    abytes(data);\n    const { blockLen, state } = this;\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish(): void {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    aexists(this, false);\n    abytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    anumber(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array): Uint8Array {\n    aoutput(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest(): Uint8Array {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy(): void {\n    this.destroyed = true;\n    clean(this.state);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  createHasher(() => new Keccak(blockLen, suffix, outputLen));\n\n/** SHA3-224 hash function. */\nexport const sha3_224: CHash = /* @__PURE__ */ (() => gen(0x06, 144, 224 / 8))();\n/** SHA3-256 hash function. Different from keccak-256. */\nexport const sha3_256: CHash = /* @__PURE__ */ (() => gen(0x06, 136, 256 / 8))();\n/** SHA3-384 hash function. */\nexport const sha3_384: CHash = /* @__PURE__ */ (() => gen(0x06, 104, 384 / 8))();\n/** SHA3-512 hash function. */\nexport const sha3_512: CHash = /* @__PURE__ */ (() => gen(0x06, 72, 512 / 8))();\n\n/** keccak-224 hash function. */\nexport const keccak_224: CHash = /* @__PURE__ */ (() => gen(0x01, 144, 224 / 8))();\n/** keccak-256 hash function. Different from SHA3-256. */\nexport const keccak_256: CHash = /* @__PURE__ */ (() => gen(0x01, 136, 256 / 8))();\n/** keccak-384 hash function. */\nexport const keccak_384: CHash = /* @__PURE__ */ (() => gen(0x01, 104, 384 / 8))();\n/** keccak-512 hash function. */\nexport const keccak_512: CHash = /* @__PURE__ */ (() => gen(0x01, 72, 512 / 8))();\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  createXOFer<HashXOF<Keccak>, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\n/** SHAKE128 XOF with 128-bit security. */\nexport const shake128: CHashXO = /* @__PURE__ */ (() => genShake(0x1f, 168, 128 / 8))();\n/** SHAKE256 XOF with 256-bit security. */\nexport const shake256: CHashXO = /* @__PURE__ */ (() => genShake(0x1f, 136, 256 / 8))();\n","/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nexport function isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\n/** Asserts something is positive integer. */\nexport function anumber(n: number): void {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error('positive integer expected, got ' + n);\n}\n\n/** Asserts something is Uint8Array. */\nexport function abytes(b: Uint8Array | undefined, ...lengths: number[]): void {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n\n/** Asserts something is hash */\nexport function ahash(h: IHash): void {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.createHasher');\n  anumber(h.outputLen);\n  anumber(h.blockLen);\n}\n\n/** Asserts a hash instance has not been destroyed / finished */\nexport function aexists(instance: any, checkFinished = true): void {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\n\n/** Asserts output is properly-sized byte array */\nexport function aoutput(out: any, instance: any): void {\n  abytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error('digestInto() expects output buffer of length at least ' + min);\n  }\n}\n\n/** Generic type encompassing 8/16/32-byte arrays - but not 64-byte. */\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n/** Cast u8 / u16 / u32 to u8. */\nexport function u8(arr: TypedArray): Uint8Array {\n  return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** Cast u8 / u16 / u32 to u32. */\nexport function u32(arr: TypedArray): Uint32Array {\n  return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nexport function clean(...arrays: TypedArray[]): void {\n  for (let i = 0; i < arrays.length; i++) {\n    arrays[i].fill(0);\n  }\n}\n\n/** Create DataView of an array for easy byte-level manipulation. */\nexport function createView(arr: TypedArray): DataView {\n  return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word: number, shift: number): number {\n  return (word << (32 - shift)) | (word >>> shift);\n}\n\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word: number, shift: number): number {\n  return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE: boolean = /* @__PURE__ */ (() =>\n  new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n\n/** The byte swap operation for uint32 */\nexport function byteSwap(word: number): number {\n  return (\n    ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff)\n  );\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const swap8IfBE: (n: number) => number = isLE\n  ? (n: number) => n\n  : (n: number) => byteSwap(n);\n\n/** @deprecated */\nexport const byteSwapIfBE: typeof swap8IfBE = swap8IfBE;\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr: Uint32Array): Uint32Array {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n  return arr;\n}\n\nexport const swap32IfBE: (u: Uint32Array) => Uint32Array = isLE\n  ? (u: Uint32Array) => u\n  : byteSwap32;\n\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin: boolean = /* @__PURE__ */ (() =>\n  // @ts-ignore\n  typeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // @ts-ignore\n  if (hasHexBuiltin) return bytes.toHex();\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 } as const;\nfunction asciiToBase16(ch: number): number | undefined {\n  if (ch >= asciis._0 && ch <= asciis._9) return ch - asciis._0; // '2' => 50-48\n  if (ch >= asciis.A && ch <= asciis.F) return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n  if (ch >= asciis.a && ch <= asciis.f) return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n  return;\n}\n\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // @ts-ignore\n  if (hasHexBuiltin) return Uint8Array.fromHex(hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n  }\n  return array;\n}\n\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async (): Promise<void> => {};\n\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(\n  iters: number,\n  tick: number,\n  cb: (i: number) => void\n): Promise<void> {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols, but ts doesn't see them: https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error('string expected');\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes: Uint8Array): string {\n  return new TextDecoder().decode(bytes);\n}\n\n/** Accepted input of hash functions. Strings are converted to byte arrays. */\nexport type Input = string | Uint8Array;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/** KDFs can accept string or Uint8Array for user convenience. */\nexport type KDFInput = string | Uint8Array;\n/**\n * Helper for KDFs: consumes uint8array or string.\n * When string is passed, does utf8 decoding, using TextDecoder.\n */\nexport function kdfInputToBytes(data: KDFInput): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/** Copies several Uint8Arrays into one. */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n    throw new Error('options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\n/** Hash interface. */\nexport type IHash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\n\n/** For runtime check if class implements interface */\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  abstract clone(): T;\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n/** Hash function */\nexport type CHash = ReturnType<typeof createHasher>;\n/** Hash function with output */\nexport type CHashO = ReturnType<typeof createOptHasher>;\n/** XOF with output */\nexport type CHashXO = ReturnType<typeof createXOFer>;\n\n/** Wraps hash function, creating an interface on top of it */\nexport function createHasher<T extends Hash<T>>(\n  hashCons: () => Hash<T>\n): {\n  (msg: Input): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(): Hash<T>;\n} {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function createOptHasher<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n): {\n  (msg: Input, opts?: T): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(opts?: T): Hash<H>;\n} {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts?: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function createXOFer<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n): {\n  (msg: Input, opts?: T): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(opts?: T): HashXOF<H>;\n} {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts?: T) => hashCons(opts);\n  return hashC;\n}\nexport const wrapConstructor: typeof createHasher = createHasher;\nexport const wrapConstructorWithOpts: typeof createOptHasher = createOptHasher;\nexport const wrapXOFConstructorWithOpts: typeof createXOFer = createXOFer;\n\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  // Legacy Node.js compatibility\n  if (crypto && typeof crypto.randomBytes === 'function') {\n    return Uint8Array.from(crypto.randomBytes(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","export { SafeAppProvider } from './provider';\n","import SafeAppsSDK, { SafeInfo, TransactionStatus, Web3TransactionObject } from '@safe-global/safe-apps-sdk';\nimport { EventEmitter } from 'events';\nimport { EIP1193Provider, GetCallsParams, GetCallsResult, SendCallsParams, SendCallsResult } from './types';\nimport { getLowerCase, numberToHex } from './utils';\n\n// The API is based on Ethereum JavaScript API Provider Standard. Link: https://eips.ethereum.org/EIPS/eip-1193\nexport class SafeAppProvider extends EventEmitter implements EIP1193Provider {\n  private readonly safe: SafeInfo;\n  private readonly sdk: SafeAppsSDK;\n  private submittedTxs = new Map<string, Web3TransactionObject>();\n\n  constructor(safe: SafeInfo, sdk: SafeAppsSDK) {\n    super();\n    this.safe = safe;\n    this.sdk = sdk;\n  }\n\n  async connect(): Promise<void> {\n    this.emit('connect', { chainId: this.chainId });\n    return;\n  }\n\n  async disconnect(): Promise<void> {\n    return;\n  }\n\n  public get chainId(): number {\n    return this.safe.chainId;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async request(request: { method: string; params?: any[] }): Promise<any> {\n    const { method, params = [] } = request;\n\n    switch (method) {\n      case 'eth_accounts':\n        return [this.safe.safeAddress];\n\n      case 'net_version':\n      case 'eth_chainId':\n        return numberToHex(this.chainId);\n\n      case 'personal_sign': {\n        const [message, address] = params;\n\n        if (this.safe.safeAddress.toLowerCase() !== address.toLowerCase()) {\n          throw new Error('The address or message hash is invalid');\n        }\n\n        const response = await this.sdk.txs.signMessage(message);\n        const signature = 'signature' in response ? response.signature : undefined;\n\n        return signature || '0x';\n      }\n\n      case 'eth_sign': {\n        const [address, messageHash] = params;\n\n        if (this.safe.safeAddress.toLowerCase() !== address.toLowerCase() || !messageHash.startsWith('0x')) {\n          throw new Error('The address or message hash is invalid');\n        }\n\n        const response = await this.sdk.txs.signMessage(messageHash);\n        const signature = 'signature' in response ? response.signature : undefined;\n\n        return signature || '0x';\n      }\n\n      case 'eth_signTypedData':\n      case 'eth_signTypedData_v4': {\n        const [address, typedData] = params;\n        const parsedTypedData = typeof typedData === 'string' ? JSON.parse(typedData) : typedData;\n\n        if (this.safe.safeAddress.toLowerCase() !== address.toLowerCase()) {\n          throw new Error('The address is invalid');\n        }\n\n        const response = await this.sdk.txs.signTypedMessage(parsedTypedData);\n        const signature = 'signature' in response ? response.signature : undefined;\n        return signature || '0x';\n      }\n\n      case 'eth_sendTransaction':\n        // `value` or `data` can be explicitly set as `undefined` for example in Viem. The spread will overwrite the fallback value.\n        const tx = {\n          ...params[0],\n          value: params[0].value || '0',\n          data: params[0].data || '0x',\n        };\n\n        // Some ethereum libraries might pass the gas as a hex-encoded string\n        // We need to convert it to a number because the SDK expects a number and our backend only supports\n        // Decimal numbers\n        if (typeof tx.gas === 'string' && tx.gas.startsWith('0x')) {\n          tx.gas = parseInt(tx.gas, 16);\n        }\n\n        const resp = await this.sdk.txs.send({\n          txs: [tx],\n          params: { safeTxGas: tx.gas },\n        });\n\n        // Store fake transaction\n        this.submittedTxs.set(resp.safeTxHash, {\n          from: this.safe.safeAddress,\n          hash: resp.safeTxHash,\n          gas: 0,\n          gasPrice: '0x00',\n          nonce: 0,\n          input: tx.data,\n          value: tx.value,\n          to: tx.to,\n          blockHash: null,\n          blockNumber: null,\n          transactionIndex: null,\n        });\n        return resp.safeTxHash;\n\n      case 'eth_blockNumber':\n        const block = await this.sdk.eth.getBlockByNumber(['latest']);\n\n        return block.number;\n\n      case 'eth_getBalance':\n        return this.sdk.eth.getBalance([getLowerCase(params[0]), params[1]]);\n\n      case 'eth_getCode':\n        return this.sdk.eth.getCode([getLowerCase(params[0]), params[1]]);\n\n      case 'eth_getTransactionCount':\n        return this.sdk.eth.getTransactionCount([getLowerCase(params[0]), params[1]]);\n\n      case 'eth_getStorageAt':\n        return this.sdk.eth.getStorageAt([getLowerCase(params[0]), params[1], params[2]]);\n\n      case 'eth_getBlockByNumber':\n        return this.sdk.eth.getBlockByNumber([params[0], params[1]]);\n\n      case 'eth_getBlockByHash':\n        return this.sdk.eth.getBlockByHash([params[0], params[1]]);\n\n      case 'eth_getTransactionByHash':\n        let txHash = params[0];\n        try {\n          const resp = await this.sdk.txs.getBySafeTxHash(txHash);\n          txHash = resp.txHash || txHash;\n        } catch (e) {}\n        // Use fake transaction if we don't have a real tx hash\n        if (this.submittedTxs.has(txHash)) {\n          return this.submittedTxs.get(txHash);\n        }\n        return this.sdk.eth.getTransactionByHash([txHash]).then((tx) => {\n          // We set the tx hash to the one requested, as some provider assert this\n          if (tx) {\n            tx.hash = params[0];\n          }\n          return tx;\n        });\n\n      case 'eth_getTransactionReceipt': {\n        let txHash = params[0];\n        try {\n          const resp = await this.sdk.txs.getBySafeTxHash(txHash);\n          txHash = resp.txHash || txHash;\n        } catch (e) {}\n        return this.sdk.eth.getTransactionReceipt([txHash]).then((tx) => {\n          // We set the tx hash to the one requested, as some provider assert this\n          if (tx) {\n            tx.transactionHash = params[0];\n          }\n          return tx;\n        });\n      }\n\n      case 'eth_estimateGas': {\n        return this.sdk.eth.getEstimateGas(params[0]);\n      }\n\n      case 'eth_call': {\n        return this.sdk.eth.call([params[0], params[1]]);\n      }\n\n      case 'eth_getLogs':\n        return this.sdk.eth.getPastLogs([params[0]]);\n\n      case 'eth_gasPrice':\n        return this.sdk.eth.getGasPrice();\n\n      case 'wallet_getPermissions':\n        return this.sdk.wallet.getPermissions();\n\n      case 'wallet_requestPermissions':\n        return this.sdk.wallet.requestPermissions(params[0]);\n\n      case 'safe_setSettings':\n        return this.sdk.eth.setSafeSettings([params[0]]);\n\n      case 'wallet_sendCalls': {\n        const { from, calls, chainId }: SendCallsParams = params[0];\n\n        if (chainId !== numberToHex(this.chainId)) {\n          throw new Error(`Safe is not on chain ${chainId}`);\n        }\n\n        if (from !== this.safe.safeAddress) {\n          throw Error('Invalid from address');\n        }\n\n        const txs = calls.map((call, i) => {\n          if (!call.to) {\n            throw new Error(`Invalid call #${i}: missing \"to\" field`);\n          }\n          return {\n            to: call.to,\n            data: call.data ?? '0x',\n            value: call.value ?? numberToHex(0),\n          };\n        });\n\n        const { safeTxHash } = await this.sdk.txs.send({ txs });\n\n        const result: SendCallsResult = {\n          id: safeTxHash,\n        };\n\n        return result;\n      }\n\n      case 'wallet_getCallsStatus': {\n        const safeTxHash: GetCallsParams = params[0];\n\n        const CallStatus: {\n          [key in TransactionStatus]: GetCallsResult['status'];\n        } = {\n          [TransactionStatus.AWAITING_CONFIRMATIONS]: 100,\n          [TransactionStatus.AWAITING_EXECUTION]: 100,\n          [TransactionStatus.SUCCESS]: 200,\n          [TransactionStatus.CANCELLED]: 400,\n          [TransactionStatus.FAILED]: 500,\n        };\n\n        const tx = await this.sdk.txs.getBySafeTxHash(safeTxHash);\n\n        const result: GetCallsResult = {\n          version: '1.0',\n          id: safeTxHash,\n          chainId: numberToHex(this.chainId),\n          status: CallStatus[tx.txStatus],\n        };\n\n        // Transaction is queued\n        if (!tx.txHash) {\n          return result;\n        }\n\n        // If transaction is executing, receipt is null\n        const receipt = await this.sdk.eth.getTransactionReceipt([tx.txHash]);\n        if (!receipt) {\n          return result;\n        }\n\n        const calls =\n          tx.txData?.dataDecoded?.method !== 'multiSend'\n            ? 1\n            : // Number of batched transactions\n              tx.txData.dataDecoded.parameters?.[0].valueDecoded?.length ?? 1;\n\n        // Typed as number; is hex\n        const blockNumber = Number(receipt.blockNumber);\n        const gasUsed = Number(receipt.gasUsed);\n\n        result.receipts = Array(calls).fill({\n          logs: receipt.logs,\n          status: numberToHex(tx.txStatus === TransactionStatus.SUCCESS ? 1 : 0),\n          blockHash: receipt.blockHash,\n          blockNumber: numberToHex(blockNumber),\n          gasUsed: numberToHex(gasUsed),\n          transactionHash: tx.txHash,\n        });\n\n        return result;\n      }\n\n      case 'wallet_showCallsStatus': {\n        // Cannot open transaction details page via SDK\n        throw new Error(`\"${request.method}\" not supported`);\n      }\n\n      case 'wallet_getCapabilities': {\n        return {\n          [numberToHex(this.chainId)]: {\n            atomicBatch: {\n              supported: true,\n            },\n          },\n        };\n      }\n\n      default:\n        throw Error(`\"${request.method}\" not implemented`);\n    }\n  }\n\n  // this method is needed for ethers v4\n  // https://github.com/ethers-io/ethers.js/blob/427e16826eb15d52d25c4f01027f8db22b74b76c/src.ts/providers/web3-provider.ts#L41-L55\n  send(request: any, callback: (error: any, response?: any) => void): void {\n    if (!request) callback('Undefined request');\n    this.request(request)\n      .then((result) => callback(null, { jsonrpc: '2.0', id: request.id, result }))\n      .catch((error) => callback(error, null));\n  }\n}\n","export function getLowerCase(value: string): string {\n  if (value) {\n    return value.toLowerCase();\n  }\n  return value;\n}\n\nexport function numberToHex(value: number): `0x${string}` {\n  return `0x${value.toString(16)}`;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/**\n * Utilities for short weierstrass curves, combined with noble-hashes.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport type { CHash } from './abstract/utils.ts';\nimport { type CurveFn, type CurveType, weierstrass } from './abstract/weierstrass.ts';\n\n/** connects noble-curves to noble-hashes */\nexport function getHash(hash: CHash): {\n  hash: CHash;\n  hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => Uint8Array;\n  randomBytes: typeof randomBytes;\n} {\n  return {\n    hash,\n    hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => hmac(hash, key, concatBytes(...msgs)),\n    randomBytes,\n  };\n}\n/** Same API as @noble/hashes, with ability to create curve with custom hash */\nexport type CurveDef = Readonly<Omit<CurveType, 'hash' | 'hmac' | 'randomBytes'>>;\nexport type CurveFnWithCreate = CurveFn & { create: (hash: CHash) => CurveFn };\n\nexport function createCurve(curveDef: CurveDef, defHash: CHash): CurveFnWithCreate {\n  const create = (hash: CHash): CurveFn => weierstrass({ ...curveDef, ...getHash(hash) });\n  return { ...create(defHash), create };\n}\n","/**\n * Methods for elliptic curve multiplication by scalars.\n * Contains wNAF, pippenger\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { type IField, nLength, validateField } from './modular.ts';\nimport { bitLen, bitMask, validateObject } from './utils.ts';\n\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\nfunction constTimeNegate<T extends Group<T>>(condition: boolean, item: T): T {\n  const neg = item.negate();\n  return condition ? neg : item;\n}\n\nfunction validateW(W: number, bits: number) {\n  if (!Number.isSafeInteger(W) || W <= 0 || W > bits)\n    throw new Error('invalid window size, expected [1..' + bits + '], got W=' + W);\n}\n\n/** Internal wNAF opts for specific W and scalarBits */\nexport type WOpts = {\n  windows: number;\n  windowSize: number;\n  mask: bigint;\n  maxNumber: number;\n  shiftBy: bigint;\n};\n\nfunction calcWOpts(W: number, scalarBits: number): WOpts {\n  validateW(W, scalarBits);\n  const windows = Math.ceil(scalarBits / W) + 1; // W=8 33. Not 32, because we skip zero\n  const windowSize = 2 ** (W - 1); // W=8 128. Not 256, because we skip zero\n  const maxNumber = 2 ** W; // W=8 256\n  const mask = bitMask(W); // W=8 255 == mask 0b11111111\n  const shiftBy = BigInt(W); // W=8 8\n  return { windows, windowSize, mask, maxNumber, shiftBy };\n}\n\nfunction calcOffsets(n: bigint, window: number, wOpts: WOpts) {\n  const { windowSize, mask, maxNumber, shiftBy } = wOpts;\n  let wbits = Number(n & mask); // extract W bits.\n  let nextN = n >> shiftBy; // shift number by W bits.\n\n  // What actually happens here:\n  // const highestBit = Number(mask ^ (mask >> 1n));\n  // let wbits2 = wbits - 1; // skip zero\n  // if (wbits2 & highestBit) { wbits2 ^= Number(mask); // (~);\n\n  // split if bits > max: +224 => 256-32\n  if (wbits > windowSize) {\n    // we skip zero, which means instead of `>= size-1`, we do `> size`\n    wbits -= maxNumber; // -32, can be maxNumber - wbits, but then we need to set isNeg here.\n    nextN += _1n; // +256 (carry)\n  }\n  const offsetStart = window * windowSize;\n  const offset = offsetStart + Math.abs(wbits) - 1; // -1 because we skip zero\n  const isZero = wbits === 0; // is current window slice a 0?\n  const isNeg = wbits < 0; // is current window slice negative?\n  const isNegF = window % 2 !== 0; // fake random statement for noise\n  const offsetF = offsetStart; // fake offset for noise\n  return { nextN, offset, isZero, isNeg, isNegF, offsetF };\n}\n\nfunction validateMSMPoints(points: any[], c: any) {\n  if (!Array.isArray(points)) throw new Error('array expected');\n  points.forEach((p, i) => {\n    if (!(p instanceof c)) throw new Error('invalid point at index ' + i);\n  });\n}\nfunction validateMSMScalars(scalars: any[], field: any) {\n  if (!Array.isArray(scalars)) throw new Error('array of scalars expected');\n  scalars.forEach((s, i) => {\n    if (!field.isValid(s)) throw new Error('invalid scalar at index ' + i);\n  });\n}\n\n// Since points in different groups cannot be equal (different object constructor),\n// we can have single place to store precomputes.\n// Allows to make points frozen / immutable.\nconst pointPrecomputes = new WeakMap<any, any[]>();\nconst pointWindowSizes = new WeakMap<any, number>();\n\nfunction getW(P: any): number {\n  return pointWindowSizes.get(P) || 1;\n}\n\nexport type IWNAF<T extends Group<T>> = {\n  constTimeNegate: <T extends Group<T>>(condition: boolean, item: T) => T;\n  hasPrecomputes(elm: T): boolean;\n  unsafeLadder(elm: T, n: bigint, p?: T): T;\n  precomputeWindow(elm: T, W: number): Group<T>[];\n  wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T };\n  wNAFUnsafe(W: number, precomputes: T[], n: bigint, acc?: T): T;\n  getPrecomputes(W: number, P: T, transform: Mapper<T>): T[];\n  wNAFCached(P: T, n: bigint, transform: Mapper<T>): { p: T; f: T };\n  wNAFCachedUnsafe(P: T, n: bigint, transform: Mapper<T>, prev?: T): T;\n  setWindowSize(P: T, W: number): void;\n};\n\n/**\n * Elliptic curve multiplication of Point by scalar. Fragile.\n * Scalars should always be less than curve order: this should be checked inside of a curve itself.\n * Creates precomputation tables for fast multiplication:\n * - private scalar is split by fixed size windows of W bits\n * - every window point is collected from window's table & added to accumulator\n * - since windows are different, same point inside tables won't be accessed more than once per calc\n * - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n * - +1 window is neccessary for wNAF\n * - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n *\n * @todo Research returning 2d JS array of windows, instead of a single window.\n * This would allow windows to be in different memory locations\n */\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number): IWNAF<T> {\n  return {\n    constTimeNegate,\n\n    hasPrecomputes(elm: T) {\n      return getW(elm) !== 1;\n    },\n\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint, p = c.ZERO) {\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n     * - 𝑊 is the window size\n     * - 𝑛 is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @param elm Point instance\n     * @param W window size\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = calcWOpts(W, bits);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // i=1, bc we skip 0\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // Smaller version:\n      // https://github.com/paulmillr/noble-secp256k1/blob/47cb1669b6e506ad66b35fe7d76132ae97465da2/index.ts#L502-L541\n      // TODO: check the scalar is less than group order?\n      // wNAF behavior is undefined otherwise. But have to carefully remove\n      // other checks before wNAF. ORDER == bits here.\n      // Accumulators\n      let p = c.ZERO;\n      let f = c.BASE;\n      // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n      // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n      // there is negate now: it is possible that negated element from low value\n      // would be the same as high element, which will create carry into next window.\n      // It's not obvious how this can fail, but still worth investigating later.\n      const wo = calcWOpts(W, bits);\n      for (let window = 0; window < wo.windows; window++) {\n        // (n === _0n) is handled and not early-exited. isEven and offsetF are used for noise\n        const { nextN, offset, isZero, isNeg, isNegF, offsetF } = calcOffsets(n, window, wo);\n        n = nextN;\n        if (isZero) {\n          // bits are 0: add garbage to fake point\n          // Important part for const-time getPublicKey: add random \"noise\" point to f.\n          f = f.add(constTimeNegate(isNegF, precomputes[offsetF]));\n        } else {\n          // bits are 1: add to result point\n          p = p.add(constTimeNegate(isNeg, precomputes[offset]));\n        }\n      }\n      // Return both real and fake points: JIT won't eliminate f.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    /**\n     * Implements ec unsafe (non const-time) multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @param acc accumulator point to add result of multiplication\n     * @returns point\n     */\n    wNAFUnsafe(W: number, precomputes: T[], n: bigint, acc: T = c.ZERO): T {\n      const wo = calcWOpts(W, bits);\n      for (let window = 0; window < wo.windows; window++) {\n        if (n === _0n) break; // Early-exit, skip 0 value\n        const { nextN, offset, isZero, isNeg } = calcOffsets(n, window, wo);\n        n = nextN;\n        if (isZero) {\n          // Window bits are 0: skip processing.\n          // Move to next window.\n          continue;\n        } else {\n          const item = precomputes[offset];\n          acc = acc.add(isNeg ? item.negate() : item); // Re-using acc allows to save adds in MSM\n        }\n      }\n      return acc;\n    },\n\n    getPrecomputes(W: number, P: T, transform: Mapper<T>): T[] {\n      // Calculate precomputes on a first run, reuse them after\n      let comp = pointPrecomputes.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) pointPrecomputes.set(P, transform(comp));\n      }\n      return comp;\n    },\n\n    wNAFCached(P: T, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      const W = getW(P);\n      return this.wNAF(W, this.getPrecomputes(W, P, transform), n);\n    },\n\n    wNAFCachedUnsafe(P: T, n: bigint, transform: Mapper<T>, prev?: T): T {\n      const W = getW(P);\n      if (W === 1) return this.unsafeLadder(P, n, prev); // For W=1 ladder is ~x2 faster\n      return this.wNAFUnsafe(W, this.getPrecomputes(W, P, transform), n, prev);\n    },\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n\n    setWindowSize(P: T, W: number) {\n      validateW(W, bits);\n      pointWindowSizes.set(P, W);\n      pointPrecomputes.delete(P);\n    },\n  };\n}\n\n/**\n * Pippenger algorithm for multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * 30x faster vs naive addition on L=4096, 10x faster than precomputes.\n * For N=254bit, L=1, it does: 1024 ADD + 254 DBL. For L=5: 1536 ADD + 254 DBL.\n * Algorithmically constant-time (for same L), even when 1 point + scalar, or when scalar = 0.\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @param scalars array of L scalars (aka private keys / bigints)\n */\nexport function pippenger<T extends Group<T>>(\n  c: GroupConstructor<T>,\n  fieldN: IField<bigint>,\n  points: T[],\n  scalars: bigint[]\n): T {\n  // If we split scalars by some window (let's say 8 bits), every chunk will only\n  // take 256 buckets even if there are 4096 scalars, also re-uses double.\n  // TODO:\n  // - https://eprint.iacr.org/2024/750.pdf\n  // - https://tches.iacr.org/index.php/TCHES/article/view/10287\n  // 0 is accepted in scalars\n  validateMSMPoints(points, c);\n  validateMSMScalars(scalars, fieldN);\n  if (points.length !== scalars.length)\n    throw new Error('arrays of points and scalars must have equal length');\n  const zero = c.ZERO;\n  const wbits = bitLen(BigInt(points.length));\n  const windowSize = wbits > 12 ? wbits - 3 : wbits > 4 ? wbits - 2 : wbits ? 2 : 1; // in bits\n  const MASK = bitMask(windowSize);\n  const buckets = new Array(Number(MASK) + 1).fill(zero); // +1 for zero array\n  const lastBits = Math.floor((fieldN.BITS - 1) / windowSize) * windowSize;\n  let sum = zero;\n  for (let i = lastBits; i >= 0; i -= windowSize) {\n    buckets.fill(zero);\n    for (let j = 0; j < scalars.length; j++) {\n      const scalar = scalars[j];\n      const wbits = Number((scalar >> BigInt(i)) & MASK);\n      buckets[wbits] = buckets[wbits].add(points[j]);\n    }\n    let resI = zero; // not using this will do small speed-up, but will lose ct\n    // Skip first bucket, because it is zero\n    for (let j = buckets.length - 1, sumI = zero; j > 0; j--) {\n      sumI = sumI.add(buckets[j]);\n      resI = resI.add(sumI);\n    }\n    sum = sum.add(resI);\n    if (i !== 0) for (let j = 0; j < windowSize; j++) sum = sum.double();\n  }\n  return sum as T;\n}\n/**\n * Precomputed multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @returns function which multiplies points with scaars\n */\nexport function precomputeMSMUnsafe<T extends Group<T>>(\n  c: GroupConstructor<T>,\n  fieldN: IField<bigint>,\n  points: T[],\n  windowSize: number\n): (scalars: bigint[]) => T {\n  /**\n   * Performance Analysis of Window-based Precomputation\n   *\n   * Base Case (256-bit scalar, 8-bit window):\n   * - Standard precomputation requires:\n   *   - 31 additions per scalar × 256 scalars = 7,936 ops\n   *   - Plus 255 summary additions = 8,191 total ops\n   *   Note: Summary additions can be optimized via accumulator\n   *\n   * Chunked Precomputation Analysis:\n   * - Using 32 chunks requires:\n   *   - 255 additions per chunk\n   *   - 256 doublings\n   *   - Total: (255 × 32) + 256 = 8,416 ops\n   *\n   * Memory Usage Comparison:\n   * Window Size | Standard Points | Chunked Points\n   * ------------|-----------------|---------------\n   *     4-bit   |     520         |      15\n   *     8-bit   |    4,224        |     255\n   *    10-bit   |   13,824        |   1,023\n   *    16-bit   |  557,056        |  65,535\n   *\n   * Key Advantages:\n   * 1. Enables larger window sizes due to reduced memory overhead\n   * 2. More efficient for smaller scalar counts:\n   *    - 16 chunks: (16 × 255) + 256 = 4,336 ops\n   *    - ~2x faster than standard 8,191 ops\n   *\n   * Limitations:\n   * - Not suitable for plain precomputes (requires 256 constant doublings)\n   * - Performance degrades with larger scalar counts:\n   *   - Optimal for ~256 scalars\n   *   - Less efficient for 4096+ scalars (Pippenger preferred)\n   */\n  validateW(windowSize, fieldN.BITS);\n  validateMSMPoints(points, c);\n  const zero = c.ZERO;\n  const tableSize = 2 ** windowSize - 1; // table size (without zero)\n  const chunks = Math.ceil(fieldN.BITS / windowSize); // chunks of item\n  const MASK = bitMask(windowSize);\n  const tables = points.map((p: T) => {\n    const res = [];\n    for (let i = 0, acc = p; i < tableSize; i++) {\n      res.push(acc);\n      acc = acc.add(p);\n    }\n    return res;\n  });\n  return (scalars: bigint[]): T => {\n    validateMSMScalars(scalars, fieldN);\n    if (scalars.length > points.length)\n      throw new Error('array of scalars must be smaller than array of points');\n    let res = zero;\n    for (let i = 0; i < chunks; i++) {\n      // No need to double if accumulator is still zero.\n      if (res !== zero) for (let j = 0; j < windowSize; j++) res = res.double();\n      const shiftBy = BigInt(chunks * windowSize - (i + 1) * windowSize);\n      for (let j = 0; j < scalars.length; j++) {\n        const n = scalars[j];\n        const curr = Number((n >> shiftBy) & MASK);\n        if (!curr) continue; // skip zero scalars chunks\n        res = res.add(tables[j][curr - 1]);\n      }\n    }\n    return res;\n  };\n}\n\n/**\n * Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n * Though generator can be different (Fp2 / Fp6 for BLS).\n */\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(\n  curve: BasicCurve<FP> & T\n): Readonly<\n  {\n    readonly nBitLength: number;\n    readonly nByteLength: number;\n  } & BasicCurve<FP> &\n    T & {\n      p: bigint;\n    }\n> {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n","/**\n * hash-to-curve from RFC 9380.\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F.\n * https://www.rfc-editor.org/rfc/rfc9380\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport type { AffinePoint, Group, GroupConstructor } from './curve.ts';\nimport { type IField, mod } from './modular.ts';\nimport type { CHash } from './utils.ts';\nimport { abytes, bytesToNumberBE, concatBytes, utf8ToBytes, validateObject } from './utils.ts';\n\nexport type UnicodeOrBytes = string | Uint8Array;\n\n/**\n * * `DST` is a domain separation tag, defined in section 2.2.5\n * * `p` characteristic of F, where F is a finite field of characteristic p and order q = p^m\n * * `m` is extension degree (1 for prime fields)\n * * `k` is the target security target in bits (e.g. 128), from section 5.1\n * * `expand` is `xmd` (SHA2, SHA3, BLAKE) or `xof` (SHAKE, BLAKE-XOF)\n * * `hash` conforming to `utils.CHash` interface, with `outputLen` / `blockLen` props\n */\nexport type Opts = {\n  DST: UnicodeOrBytes;\n  p: bigint;\n  m: number;\n  k: number;\n  expand: 'xmd' | 'xof';\n  hash: CHash;\n};\n\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value: number, length: number): Uint8Array {\n  anum(value);\n  anum(length);\n  if (value < 0 || value >= 1 << (8 * length)) throw new Error('invalid I2OSP input: ' + value);\n  const res = Array.from({ length }).fill(0) as number[];\n  for (let i = length - 1; i >= 0; i--) {\n    res[i] = value & 0xff;\n    value >>>= 8;\n  }\n  return new Uint8Array(res);\n}\n\nfunction strxor(a: Uint8Array, b: Uint8Array): Uint8Array {\n  const arr = new Uint8Array(a.length);\n  for (let i = 0; i < a.length; i++) {\n    arr[i] = a[i] ^ b[i];\n  }\n  return arr;\n}\n\nfunction anum(item: unknown): void {\n  if (!Number.isSafeInteger(item)) throw new Error('number expected');\n}\n\n/**\n * Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits.\n * [RFC 9380 5.3.1](https://www.rfc-editor.org/rfc/rfc9380#section-5.3.1).\n */\nexport function expand_message_xmd(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  H: CHash\n): Uint8Array {\n  abytes(msg);\n  abytes(DST);\n  anum(lenInBytes);\n  // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n  if (DST.length > 255) DST = H(concatBytes(utf8ToBytes('H2C-OVERSIZE-DST-'), DST));\n  const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n  const ell = Math.ceil(lenInBytes / b_in_bytes);\n  if (lenInBytes > 65535 || ell > 255) throw new Error('expand_message_xmd: invalid lenInBytes');\n  const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n  const Z_pad = i2osp(0, r_in_bytes);\n  const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n  const b = new Array<Uint8Array>(ell);\n  const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n  b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n  for (let i = 1; i <= ell; i++) {\n    const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n    b[i] = H(concatBytes(...args));\n  }\n  const pseudo_random_bytes = concatBytes(...b);\n  return pseudo_random_bytes.slice(0, lenInBytes);\n}\n\n/**\n * Produces a uniformly random byte string using an extendable-output function (XOF) H.\n * 1. The collision resistance of H MUST be at least k bits.\n * 2. H MUST be an XOF that has been proved indifferentiable from\n *    a random oracle under a reasonable cryptographic assumption.\n * [RFC 9380 5.3.2](https://www.rfc-editor.org/rfc/rfc9380#section-5.3.2).\n */\nexport function expand_message_xof(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  k: number,\n  H: CHash\n): Uint8Array {\n  abytes(msg);\n  abytes(DST);\n  anum(lenInBytes);\n  // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n  // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n  if (DST.length > 255) {\n    const dkLen = Math.ceil((2 * k) / 8);\n    DST = H.create({ dkLen }).update(utf8ToBytes('H2C-OVERSIZE-DST-')).update(DST).digest();\n  }\n  if (lenInBytes > 65535 || DST.length > 255)\n    throw new Error('expand_message_xof: invalid lenInBytes');\n  return (\n    H.create({ dkLen: lenInBytes })\n      .update(msg)\n      .update(i2osp(lenInBytes, 2))\n      // 2. DST_prime = DST || I2OSP(len(DST), 1)\n      .update(DST)\n      .update(i2osp(DST.length, 1))\n      .digest()\n  );\n}\n\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F.\n * [RFC 9380 5.2](https://www.rfc-editor.org/rfc/rfc9380#section-5.2).\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nexport function hash_to_field(msg: Uint8Array, count: number, options: Opts): bigint[][] {\n  validateObject(options, {\n    DST: 'stringOrUint8Array',\n    p: 'bigint',\n    m: 'isSafeInteger',\n    k: 'isSafeInteger',\n    hash: 'hash',\n  });\n  const { p, k, m, hash, expand, DST: _DST } = options;\n  abytes(msg);\n  anum(count);\n  const DST = typeof _DST === 'string' ? utf8ToBytes(_DST) : _DST;\n  const log2p = p.toString(2).length;\n  const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n  const len_in_bytes = count * m * L;\n  let prb; // pseudo_random_bytes\n  if (expand === 'xmd') {\n    prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n  } else if (expand === 'xof') {\n    prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n  } else if (expand === '_internal_pass') {\n    // for internal tests only\n    prb = msg;\n  } else {\n    throw new Error('expand must be \"xmd\" or \"xof\"');\n  }\n  const u = new Array(count);\n  for (let i = 0; i < count; i++) {\n    const e = new Array(m);\n    for (let j = 0; j < m; j++) {\n      const elm_offset = L * (j + i * m);\n      const tv = prb.subarray(elm_offset, elm_offset + L);\n      e[j] = mod(os2ip(tv), p);\n    }\n    u[i] = e;\n  }\n  return u;\n}\n\nexport type XY<T> = (\n  x: T,\n  y: T\n) => {\n  x: T;\n  y: T;\n};\nexport function isogenyMap<T, F extends IField<T>>(field: F, map: [T[], T[], T[], T[]]): XY<T> {\n  // Make same order as in spec\n  const COEFF = map.map((i) => Array.from(i).reverse());\n  return (x: T, y: T) => {\n    const [xNum, xDen, yNum, yDen] = COEFF.map((val) =>\n      val.reduce((acc, i) => field.add(field.mul(acc, x), i))\n    );\n    if (field.is0(xDen) || field.is0(yDen)) throw new Error('bad point: ZERO');\n    x = field.div(xNum, xDen); // xNum / xDen\n    y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n    return { x: x, y: y };\n  };\n}\n\n/** Point interface, which curves must implement to work correctly with the module. */\nexport interface H2CPoint<T> extends Group<H2CPoint<T>> {\n  add(rhs: H2CPoint<T>): H2CPoint<T>;\n  toAffine(iz?: bigint): AffinePoint<T>;\n  clearCofactor(): H2CPoint<T>;\n  assertValidity(): void;\n}\n\nexport interface H2CPointConstructor<T> extends GroupConstructor<H2CPoint<T>> {\n  fromAffine(ap: AffinePoint<T>): H2CPoint<T>;\n}\n\nexport type MapToCurve<T> = (scalar: bigint[]) => AffinePoint<T>;\n\n// Separated from initialization opts, so users won't accidentally change per-curve parameters\n// (changing DST is ok!)\nexport type htfBasicOpts = { DST: UnicodeOrBytes };\nexport type HTFMethod<T> = (msg: Uint8Array, options?: htfBasicOpts) => H2CPoint<T>;\nexport type MapMethod<T> = (scalars: bigint[]) => H2CPoint<T>;\n\n/** Creates hash-to-curve methods from EC Point and mapToCurve function. */\nexport function createHasher<T>(\n  Point: H2CPointConstructor<T>,\n  mapToCurve: MapToCurve<T>,\n  def: Opts & { encodeDST?: UnicodeOrBytes }\n): {\n  hashToCurve: HTFMethod<T>;\n  encodeToCurve: HTFMethod<T>;\n  mapToCurve: MapMethod<T>;\n} {\n  if (typeof mapToCurve !== 'function') throw new Error('mapToCurve() must be defined');\n  return {\n    // Encodes byte string to elliptic curve.\n    // hash_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n    hashToCurve(msg: Uint8Array, options?: htfBasicOpts): H2CPoint<T> {\n      const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options } as Opts);\n      const u0 = Point.fromAffine(mapToCurve(u[0]));\n      const u1 = Point.fromAffine(mapToCurve(u[1]));\n      const P = u0.add(u1).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n\n    // Encodes byte string to elliptic curve.\n    // encode_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n    encodeToCurve(msg: Uint8Array, options?: htfBasicOpts): H2CPoint<T> {\n      const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options } as Opts);\n      const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n    // Same as encodeToCurve, but without hash\n    mapToCurve(scalars: bigint[]): H2CPoint<T> {\n      if (!Array.isArray(scalars)) throw new Error('mapToCurve: expected array of bigints');\n      for (const i of scalars)\n        if (typeof i !== 'bigint') throw new Error('mapToCurve: expected array of bigints');\n      const P = Point.fromAffine(mapToCurve(scalars)).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n  };\n}\n","/**\n * Utils for modular division and finite fields.\n * A finite field over 11 is integer number operations `mod 11`.\n * There is no division: it is replaced by modular multiplicative inverse.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport {\n  bitMask,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  numberToBytesBE,\n  numberToBytesLE,\n  validateObject,\n} from './utils.ts';\n\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = /* @__PURE__ */ BigInt(2), _3n = /* @__PURE__ */ BigInt(3);\n// prettier-ignore\nconst _4n = /* @__PURE__ */ BigInt(4), _5n = /* @__PURE__ */ BigInt(5), _8n = /* @__PURE__ */ BigInt(8);\n// prettier-ignore\nconst _9n =/* @__PURE__ */ BigInt(9), _16n = /* @__PURE__ */ BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @todo use field version && remove\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  if (power < _0n) throw new Error('invalid exponent, negatives unsupported');\n  if (modulo <= _0n) throw new Error('invalid modulus');\n  if (modulo === _1n) return _0n;\n  let res = _1n;\n  while (power > _0n) {\n    if (power & _1n) res = (res * num) % modulo;\n    num = (num * num) % modulo;\n    power >>= _1n;\n  }\n  return res;\n}\n\n/** Does `x^(2^power)` mod p. `pow2(30, 4)` == `30^(2^4)` */\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n/**\n * Inverses number over modulo.\n * Implemented using [Euclidean GCD](https://brilliant.org/wiki/extended-euclidean-algorithm/).\n */\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n) throw new Error('invert: expected non-zero number');\n  if (modulo <= _0n) throw new Error('invert: expected positive modulus, got ' + modulo);\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P: bigint): <T>(Fp: IField<T>, n: T) => T {\n  // Legendre constant: used to calculate Legendre symbol (a | p),\n  // which denotes the value of a^((p-1)/2) (mod p).\n  // (a | p) ≡ 1    if a is a square (mod p)\n  // (a | p) ≡ -1   if a is not a square (mod p)\n  // (a | p) ≡ 0    if a ≡ 0 (mod p)\n  const legendreC = (P - _1n) / _2n;\n\n  let Q: bigint, S: number, Z: bigint;\n  // Step 1: By factoring out powers of 2 from p - 1,\n  // find q and s such that p - 1 = q*(2^s) with q odd\n  for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++);\n\n  // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n  for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++) {\n    // Crash instead of infinity loop, we cannot reasonable count until P.\n    if (Z > 1000) throw new Error('Cannot find square root: likely non-prime P');\n  }\n\n  // Fast-path\n  if (S === 1) {\n    const p1div4 = (P + _1n) / _4n;\n    return function tonelliFast<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Slow-path\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n    if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE)) throw new Error('Cannot find square root');\n    let r = S;\n    // TODO: will fail at Fp2/etc\n    let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n    let x = Fp.pow(n, Q1div2); // first guess at the square root\n    let b = Fp.pow(n, Q); // first guess at the fudge factor\n\n    while (!Fp.eql(b, Fp.ONE)) {\n      if (Fp.eql(b, Fp.ZERO)) return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n      // Find m such b^(2^m)==1\n      let m = 1;\n      for (let t2 = Fp.sqr(b); m < r; m++) {\n        if (Fp.eql(t2, Fp.ONE)) break;\n        t2 = Fp.sqr(t2); // t2 *= t2\n      }\n      // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n      const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n      g = Fp.sqr(ge); // g = ge * ge\n      x = Fp.mul(x, ge); // x *= ge\n      b = Fp.mul(b, g); // b *= g\n      r = m;\n    }\n    return x;\n  };\n}\n\n/**\n * Square root for a finite field. It will try to check if optimizations are applicable and fall back to 4:\n *\n * 1. P ≡ 3 (mod 4)\n * 2. P ≡ 5 (mod 8)\n * 3. P ≡ 9 (mod 16)\n * 4. Tonelli-Shanks algorithm\n *\n * Different algorithms can give different roots, it is up to user to decide which one they want.\n * For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n */\nexport function FpSqrt(P: bigint): <T>(Fp: IField<T>, n: T) => T {\n  // P ≡ 3 (mod 4)\n  // √n = n^((P+1)/4)\n  if (P % _4n === _3n) {\n    // Not all roots possible!\n    // const ORDER =\n    //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n    // const NUM = 72057594037927816n;\n    const p1div4 = (P + _1n) / _4n;\n    return function sqrt3mod4<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      // Throw if root**2 != n\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n  if (P % _8n === _5n) {\n    const c1 = (P - _5n) / _8n;\n    return function sqrt5mod8<T>(Fp: IField<T>, n: T) {\n      const n2 = Fp.mul(n, _2n);\n      const v = Fp.pow(n2, c1);\n      const nv = Fp.mul(n, v);\n      const i = Fp.mul(Fp.mul(nv, _2n), v);\n      const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // P ≡ 9 (mod 16)\n  if (P % _16n === _9n) {\n    // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n    // Means we cannot use sqrt for constants at all!\n    //\n    // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    // sqrt = (x) => {\n    //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n    //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n    //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n    //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n    //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n    //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n    //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n    //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n    // }\n  }\n  // Other cases: Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint): boolean =>\n  (mod(num, modulo) & _1n) === _1n;\n\n/** Field is not always over prime: for example, Fp2 has ORDER(q)=p^m. */\nexport interface IField<T> {\n  ORDER: bigint;\n  isLE: boolean;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in\n  // [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#section-4.1).\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  pow(lhs: T, power: bigint): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>): IField<T> {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\n\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow<T>(f: IField<T>, num: T, power: bigint): T {\n  // Should have same speed as pow for bigints\n  // TODO: benchmark!\n  if (power < _0n) throw new Error('invalid exponent, negatives unsupported');\n  if (power === _0n) return f.ONE;\n  if (power === _1n) return num;\n  let p = f.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = f.mul(p, d);\n    d = f.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch<T>(f: IField<T>, nums: T[]): T[] {\n  const tmp = new Array(nums.length);\n  // Walk from first to last, multiply them by each other MOD p\n  const lastMultiplied = nums.reduce((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = acc;\n    return f.mul(acc, num);\n  }, f.ONE);\n  // Invert last element\n  const inverted = f.inv(lastMultiplied);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = f.mul(acc, tmp[i]);\n    return f.mul(acc, num);\n  }, inverted);\n  return tmp;\n}\n\nexport function FpDiv<T>(f: IField<T>, lhs: T, rhs: T | bigint): T {\n  return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n\n/**\n * Legendre symbol.\n * * (a | p) ≡ 1    if a is a square (mod p), quadratic residue\n * * (a | p) ≡ -1   if a is not a square (mod p), quadratic non residue\n * * (a | p) ≡ 0    if a ≡ 0 (mod p)\n */\nexport function FpLegendre(order: bigint): <T>(f: IField<T>, x: T) => T {\n  const legendreConst = (order - _1n) / _2n; // Integer arithmetic\n  return <T>(f: IField<T>, x: T): T => f.pow(x, legendreConst);\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(f: IField<T>): (x: T) => boolean {\n  const legendre = FpLegendre(f.ORDER);\n  return (x: T): boolean => {\n    const p = legendre(f, x);\n    return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n  };\n}\n\n// CURVE.n lengths\nexport function nLength(\n  n: bigint,\n  nBitLength?: number\n): {\n  nBitLength: number;\n  nByteLength: number;\n} {\n  // Bit size, byte size of CURVE.n\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a finite field over prime.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * Fragile: always run a benchmark on a change.\n * Security note: operations don't check 'isValid' for all elements for performance reasons,\n * it is caller responsibility to check this.\n * This is low-level code, please make sure you know what you're doing.\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error('invalid field: expected ORDER > 0, got ' + ORDER);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('invalid field: expected ORDER of <= 2048 bytes');\n  let sqrtP: ReturnType<typeof FpSqrt>; // cached sqrtP\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    isLE,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error('invalid field element: expected bigint, got ' + typeof num);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt:\n      redef.sqrt ||\n      ((n) => {\n        if (!sqrtP) sqrtP = FpSqrt(ORDER);\n        return sqrtP(f, n);\n      }),\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (a, b, c) => (c ? b : a),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error('Field.fromBytes: expected ' + BYTES + ' bytes, got ' + bytes.length);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T): T {\n  if (!Fp.isOdd) throw new Error(\"Field doesn't have isOdd\");\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T): T {\n  if (!Fp.isOdd) throw new Error(\"Field doesn't have isOdd\");\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use `mapKeyToField` instead\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(\n      'hashToPrivateScalar: expected ' + minLen + '-1024 bytes of input, got ' + hashLen\n    );\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder: bigint): number {\n  if (typeof fieldOrder !== 'bigint') throw new Error('field order must be bigint');\n  const bitLength = fieldOrder.toString(2).length;\n  return Math.ceil(bitLength / 8);\n}\n\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder: bigint): number {\n  const length = getFieldBytesLength(fieldOrder);\n  return length + Math.ceil(length / 2);\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key: Uint8Array, fieldOrder: bigint, isLE = false): Uint8Array {\n  const len = key.length;\n  const fieldLen = getFieldBytesLength(fieldOrder);\n  const minLen = getMinHashLength(fieldOrder);\n  // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n  if (len < 16 || len < minLen || len > 1024)\n    throw new Error('expected ' + minLen + '-1024 bytes of input, got ' + len);\n  const num = isLE ? bytesToNumberLE(key) : bytesToNumberBE(key);\n  // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n  const reduced = mod(num, fieldOrder - _1n) + _1n;\n  return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n","/**\n * Hex, bytes and number utilities.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nexport type Hex = Uint8Array | string; // hex strings are accepted for simplicity\nexport type PrivKey = Hex | bigint; // bigints are accepted to ease learning curve\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nexport function isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\nexport function abytes(item: unknown): void {\n  if (!isBytes(item)) throw new Error('Uint8Array expected');\n}\n\nexport function abool(title: string, value: boolean): void {\n  if (typeof value !== 'boolean') throw new Error(title + ' boolean expected, got ' + value);\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? '0' + hex : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  return hex === '' ? _0n : BigInt('0x' + hex); // Big Endian\n}\n\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin: boolean =\n  // @ts-ignore\n  typeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function';\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // @ts-ignore\n  if (hasHexBuiltin) return bytes.toHex();\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 } as const;\nfunction asciiToBase16(ch: number): number | undefined {\n  if (ch >= asciis._0 && ch <= asciis._9) return ch - asciis._0; // '2' => 50-48\n  if (ch >= asciis.A && ch <= asciis.F) return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n  if (ch >= asciis.a && ch <= asciis.f) return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n  return;\n}\n\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // @ts-ignore\n  if (hasHexBuiltin) return Uint8Array.fromHex(hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n  }\n  return array;\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  abytes(bytes);\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n: number | bigint, len: number): Uint8Array {\n  return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n: number | bigint): Uint8Array {\n  return hexToBytes(numberToHexUnpadded(n));\n}\n\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(title + ' must be hex string or Uint8Array, cause: ' + e);\n    }\n  } else if (isBytes(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(title + ' must be hex string or Uint8Array');\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(title + ' of length ' + expectedLength + ' expected, got ' + len);\n  return res;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a: Uint8Array, b: Uint8Array): boolean {\n  if (a.length !== b.length) return false;\n  let diff = 0;\n  for (let i = 0; i < a.length; i++) diff |= a[i] ^ b[i];\n  return diff === 0;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error('string expected');\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n// Is positive bigint\nconst isPosBig = (n: bigint) => typeof n === 'bigint' && _0n <= n;\n\nexport function inRange(n: bigint, min: bigint, max: bigint): boolean {\n  return isPosBig(n) && isPosBig(min) && isPosBig(max) && min <= n && n < max;\n}\n\n/**\n * Asserts min <= n < max. NOTE: It's < max and not <= max.\n * @example\n * aInRange('x', x, 1n, 256n); // would assume x is in (1n..255n)\n */\nexport function aInRange(title: string, n: bigint, min: bigint, max: bigint): void {\n  // Why min <= n < max and not a (min < n < max) OR b (min <= n <= max)?\n  // consider P=256n, min=0n, max=P\n  // - a for min=0 would require -1:          `inRange('x', x, -1n, P)`\n  // - b would commonly require subtraction:  `inRange('x', x, 0n, P - 1n)`\n  // - our way is the cleanest:               `inRange('x', x, 0n, P)\n  if (!inRange(n, min, max))\n    throw new Error('expected valid ' + title + ': ' + min + ' <= n < ' + max + ', got ' + n);\n}\n\n// Bit operations\n\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n: bigint): number {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n: bigint, pos: number): bigint {\n  return (n >> BigInt(pos)) & _1n;\n}\n\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n: bigint, pos: number, value: boolean): bigint {\n  return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n: number): bigint => (_1n << BigInt(n)) - _1n;\n\n// DRBG\n\nconst u8n = (len: number) => new Uint8Array(len); // creates Uint8Array\nconst u8fr = (arr: ArrayLike<number>) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n(0)) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any): boolean => typeof val === 'bigint',\n  function: (val: any): boolean => typeof val === 'function',\n  boolean: (val: any): boolean => typeof val === 'boolean',\n  string: (val: any): boolean => typeof val === 'string',\n  stringOrUint8Array: (val: any): boolean => typeof val === 'string' || isBytes(val),\n  isSafeInteger: (val: any): boolean => Number.isSafeInteger(val),\n  array: (val: any): boolean => Array.isArray(val),\n  field: (val: any, object: any): any => (object as any).Fp.isValid(val),\n  hash: (val: any): boolean => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n): T {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function') throw new Error('invalid validator function');\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        'param ' + String(fieldName) + ' is invalid. Expected ' + type + ', got ' + val\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n\n/**\n * throws not implemented error\n */\nexport const notImplemented = (): never => {\n  throw new Error('not implemented');\n};\n\n/**\n * Memoizes (caches) computation result.\n * Uses WeakMap: the value is going auto-cleaned by GC after last reference is removed.\n */\nexport function memoized<T extends object, R, O extends any[]>(\n  fn: (arg: T, ...args: O) => R\n): (arg: T, ...args: O) => R {\n  const map = new WeakMap<T, R>();\n  return (arg: T, ...args: O): R => {\n    const val = map.get(arg);\n    if (val !== undefined) return val;\n    const computed = fn(arg, ...args);\n    map.set(arg, computed);\n    return computed;\n  };\n}\n","/**\n * Short Weierstrass curve methods. The formula is: y² = x³ + ax + b.\n *\n * ### Parameters\n *\n * To initialize a weierstrass curve, one needs to pass following params:\n *\n * * a: formula param\n * * b: formula param\n * * Fp: finite Field over which we'll do calculations. Can be complex (Fp2, Fp12)\n * * n: Curve prime subgroup order, total count of valid points in the field\n * * Gx: Base point (x, y) aka generator point x coordinate\n * * Gy: ...y coordinate\n * * h: cofactor, usually 1. h*n = curve group order (n is only subgroup order)\n * * lowS: whether to enable (default) or disable \"low-s\" non-malleable signatures\n *\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance\n * of nominative types in TypeScript and interfaces only check for shape, so it's hard to create\n * unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * @todo https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// prettier-ignore\nimport {\n  type AffinePoint, type BasicCurve, type Group, type GroupConstructor,\n  pippenger, validateBasic, wNAF,\n} from './curve.ts';\n// prettier-ignore\nimport {\n  Field, type IField, getMinHashLength, invert, mapHashToField, mod, validateField,\n} from './modular.ts';\n// prettier-ignore\nimport {\n  type CHash, type Hex, type PrivKey,\n  aInRange, abool,\n  bitMask,\n  bytesToHex, bytesToNumberBE, concatBytes, createHmacDrbg, ensureBytes, hexToBytes,\n  inRange, isBytes, memoized, numberToBytesBE, numberToHexUnpadded, validateObject\n} from './utils.ts';\n\nexport type { AffinePoint };\ntype HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\ntype EndomorphismOpts = {\n  beta: bigint;\n  splitScalar: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts; // Endomorphism options for Koblitz curves\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: ProjConstructor<T>, point: ProjPointType<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: ProjConstructor<T>, point: ProjPointType<T>) => ProjPointType<T>;\n};\n\nexport type Entropy = Hex | boolean;\nexport type SignOpts = { lowS?: boolean; extraEntropy?: Entropy; prehash?: boolean };\nexport type VerOpts = { lowS?: boolean; prehash?: boolean; format?: 'compact' | 'der' | undefined };\n\nfunction validateSigVerOpts(opts: SignOpts | VerOpts) {\n  if (opts.lowS !== undefined) abool('lowS', opts.lowS);\n  if (opts.prehash !== undefined) abool('prehash', opts.prehash);\n}\n\n// Instance for 3d XYZ points\nexport interface ProjPointType<T> extends Group<ProjPointType<T>> {\n  readonly px: T;\n  readonly py: T;\n  readonly pz: T;\n  get x(): T;\n  get y(): T;\n  multiply(scalar: bigint): ProjPointType<T>;\n  toAffine(iz?: T): AffinePoint<T>;\n  isTorsionFree(): boolean;\n  clearCofactor(): ProjPointType<T>;\n  assertValidity(): void;\n  hasEvenY(): boolean;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n\n  multiplyUnsafe(scalar: bigint): ProjPointType<T>;\n  multiplyAndAddUnsafe(Q: ProjPointType<T>, a: bigint, b: bigint): ProjPointType<T> | undefined;\n  _setWindowSize(windowSize: number): void;\n}\n// Static methods for 3d XYZ points\nexport interface ProjConstructor<T> extends GroupConstructor<ProjPointType<T>> {\n  new (x: T, y: T, z: T): ProjPointType<T>;\n  fromAffine(p: AffinePoint<T>): ProjPointType<T>;\n  fromHex(hex: Hex): ProjPointType<T>;\n  fromPrivateKey(privateKey: PrivKey): ProjPointType<T>;\n  normalizeZ(points: ProjPointType<T>[]): ProjPointType<T>[];\n  msm(points: ProjPointType<T>[], scalars: bigint[]): ProjPointType<T>;\n}\n\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  // Bytes\n  fromBytes?: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes?: (c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => Uint8Array;\n};\n\nexport type CurvePointsTypeWithLength<T> = Readonly<\n  CurvePointsType<T> & { nByteLength: number; nBitLength: number }\n>;\n\nfunction validatePointOpts<T>(curve: CurvePointsType<T>): CurvePointsTypeWithLength<T> {\n  const opts = validateBasic(curve);\n  validateObject(\n    opts,\n    {\n      a: 'field',\n      b: 'field',\n    },\n    {\n      allowedPrivateKeyLengths: 'array',\n      wrapPrivateKey: 'boolean',\n      isTorsionFree: 'function',\n      clearCofactor: 'function',\n      allowInfinityPoint: 'boolean',\n      fromBytes: 'function',\n      toBytes: 'function',\n    }\n  );\n  const { endo, Fp, a } = opts;\n  if (endo) {\n    if (!Fp.eql(a, Fp.ZERO)) {\n      throw new Error('invalid endomorphism, can only be defined for Koblitz curves that have a=0');\n    }\n    if (\n      typeof endo !== 'object' ||\n      typeof endo.beta !== 'bigint' ||\n      typeof endo.splitScalar !== 'function'\n    ) {\n      throw new Error('invalid endomorphism, expected beta: bigint and splitScalar: function');\n    }\n  }\n  return Object.freeze({ ...opts } as const);\n}\n\nexport type CurvePointsRes<T> = {\n  CURVE: ReturnType<typeof validatePointOpts<T>>;\n  ProjectivePoint: ProjConstructor<T>;\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  weierstrassEquation: (x: T) => T;\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\nexport class DERErr extends Error {\n  constructor(m = '') {\n    super(m);\n  }\n}\nexport type IDER = {\n  // asn.1 DER encoding utils\n  Err: typeof DERErr;\n  // Basic building block is TLV (Tag-Length-Value)\n  _tlv: {\n    encode: (tag: number, data: string) => string;\n    // v - value, l - left bytes (unparsed)\n    decode(tag: number, data: Uint8Array): { v: Uint8Array; l: Uint8Array };\n  };\n  // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n  // since we always use positive integers here. It must always be empty:\n  // - add zero byte if exists\n  // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n  _int: {\n    encode(num: bigint): string;\n    decode(data: Uint8Array): bigint;\n  };\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint };\n  hexFromSig(sig: { r: bigint; s: bigint }): string;\n};\n/**\n * ASN.1 DER encoding utilities. ASN is very complex & fragile. Format:\n *\n *     [0x30 (SEQUENCE), bytelength, 0x02 (INTEGER), intLength, R, 0x02 (INTEGER), intLength, S]\n *\n * Docs: https://letsencrypt.org/docs/a-warm-welcome-to-asn1-and-der/, https://luca.ntop.org/Teaching/Appunti/asn1.html\n */\nexport const DER: IDER = {\n  // asn.1 DER encoding utils\n  Err: DERErr,\n  // Basic building block is TLV (Tag-Length-Value)\n  _tlv: {\n    encode: (tag: number, data: string): string => {\n      const { Err: E } = DER;\n      if (tag < 0 || tag > 256) throw new E('tlv.encode: wrong tag');\n      if (data.length & 1) throw new E('tlv.encode: unpadded data');\n      const dataLen = data.length / 2;\n      const len = numberToHexUnpadded(dataLen);\n      if ((len.length / 2) & 0b1000_0000) throw new E('tlv.encode: long form length too big');\n      // length of length with long form flag\n      const lenLen = dataLen > 127 ? numberToHexUnpadded((len.length / 2) | 0b1000_0000) : '';\n      const t = numberToHexUnpadded(tag);\n      return t + lenLen + len + data;\n    },\n    // v - value, l - left bytes (unparsed)\n    decode(tag: number, data: Uint8Array): { v: Uint8Array; l: Uint8Array } {\n      const { Err: E } = DER;\n      let pos = 0;\n      if (tag < 0 || tag > 256) throw new E('tlv.encode: wrong tag');\n      if (data.length < 2 || data[pos++] !== tag) throw new E('tlv.decode: wrong tlv');\n      const first = data[pos++];\n      const isLong = !!(first & 0b1000_0000); // First bit of first length byte is flag for short/long form\n      let length = 0;\n      if (!isLong) length = first;\n      else {\n        // Long form: [longFlag(1bit), lengthLength(7bit), length (BE)]\n        const lenLen = first & 0b0111_1111;\n        if (!lenLen) throw new E('tlv.decode(long): indefinite length not supported');\n        if (lenLen > 4) throw new E('tlv.decode(long): byte length is too big'); // this will overflow u32 in js\n        const lengthBytes = data.subarray(pos, pos + lenLen);\n        if (lengthBytes.length !== lenLen) throw new E('tlv.decode: length bytes not complete');\n        if (lengthBytes[0] === 0) throw new E('tlv.decode(long): zero leftmost byte');\n        for (const b of lengthBytes) length = (length << 8) | b;\n        pos += lenLen;\n        if (length < 128) throw new E('tlv.decode(long): not minimal encoding');\n      }\n      const v = data.subarray(pos, pos + length);\n      if (v.length !== length) throw new E('tlv.decode: wrong value length');\n      return { v, l: data.subarray(pos + length) };\n    },\n  },\n  // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n  // since we always use positive integers here. It must always be empty:\n  // - add zero byte if exists\n  // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n  _int: {\n    encode(num: bigint): string {\n      const { Err: E } = DER;\n      if (num < _0n) throw new E('integer: negative integers are not allowed');\n      let hex = numberToHexUnpadded(num);\n      // Pad with zero byte if negative flag is present\n      if (Number.parseInt(hex[0], 16) & 0b1000) hex = '00' + hex;\n      if (hex.length & 1) throw new E('unexpected DER parsing assertion: unpadded hex');\n      return hex;\n    },\n    decode(data: Uint8Array): bigint {\n      const { Err: E } = DER;\n      if (data[0] & 0b1000_0000) throw new E('invalid signature integer: negative');\n      if (data[0] === 0x00 && !(data[1] & 0b1000_0000))\n        throw new E('invalid signature integer: unnecessary leading zero');\n      return bytesToNumberBE(data);\n    },\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E, _int: int, _tlv: tlv } = DER;\n    const data = ensureBytes('signature', hex);\n    const { v: seqBytes, l: seqLeftBytes } = tlv.decode(0x30, data);\n    if (seqLeftBytes.length) throw new E('invalid signature: left bytes after parsing');\n    const { v: rBytes, l: rLeftBytes } = tlv.decode(0x02, seqBytes);\n    const { v: sBytes, l: sLeftBytes } = tlv.decode(0x02, rLeftBytes);\n    if (sLeftBytes.length) throw new E('invalid signature: left bytes after parsing');\n    return { r: int.decode(rBytes), s: int.decode(sBytes) };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    const { _tlv: tlv, _int: int } = DER;\n    const rs = tlv.encode(0x02, int.encode(sig.r));\n    const ss = tlv.encode(0x02, int.encode(sig.s));\n    const seq = rs + ss;\n    return tlv.encode(0x30, seq);\n  },\n};\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\nexport function weierstrassPoints<T>(opts: CurvePointsType<T>): CurvePointsRes<T> {\n  const CURVE = validatePointOpts(opts);\n  const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n  const Fn = Field(CURVE.n, CURVE.nBitLength);\n\n  const toBytes =\n    CURVE.toBytes ||\n    ((_c: ProjConstructor<T>, point: ProjPointType<T>, _isCompressed: boolean) => {\n      const a = point.toAffine();\n      return concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n    });\n  const fromBytes =\n    CURVE.fromBytes ||\n    ((bytes: Uint8Array) => {\n      // const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n      const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n      const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n      return { x, y };\n    });\n\n  /**\n   * y² = x³ + ax + b: Short weierstrass curve formula. Takes x, returns y².\n   * @returns y²\n   */\n  function weierstrassEquation(x: T): T {\n    const { a, b } = CURVE;\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x2 * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n  }\n  // Validate whether the passed curve params are valid.\n  // We check if curve equation works for generator point.\n  // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n  // ProjectivePoint class has not been initialized yet.\n  if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n    throw new Error('bad generator point: equation left != right');\n\n  // Valid group elements reside in range 1..n-1\n  function isWithinCurveOrder(num: bigint): boolean {\n    return inRange(num, _1n, CURVE.n);\n  }\n  // Validates if priv key is valid and converts it to bigint.\n  // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n  function normPrivateKeyToScalar(key: PrivKey): bigint {\n    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n: N } = CURVE;\n    if (lengths && typeof key !== 'bigint') {\n      if (isBytes(key)) key = bytesToHex(key);\n      // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n      if (typeof key !== 'string' || !lengths.includes(key.length))\n        throw new Error('invalid private key');\n      key = key.padStart(nByteLength * 2, '0');\n    }\n    let num: bigint;\n    try {\n      num =\n        typeof key === 'bigint'\n          ? key\n          : bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n    } catch (error) {\n      throw new Error(\n        'invalid private key, expected hex or ' + nByteLength + ' bytes, got ' + typeof key\n      );\n    }\n    if (wrapPrivateKey) num = mod(num, N); // disabled by default, enabled for BLS\n    aInRange('private key', num, _1n, N); // num in range [1..N-1]\n    return num;\n  }\n\n  function aprjpoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n\n  // Memoized toAffine / validity check. They are heavy. Points are immutable.\n\n  // Converts Projective point to affine (x, y) coordinates.\n  // Can accept precomputed Z^-1 - for example, from invertBatch.\n  // (x, y, z) ∋ (x=x/z, y=y/z)\n  const toAffineMemo = memoized((p: Point, iz?: T): AffinePoint<T> => {\n    const { px: x, py: y, pz: z } = p;\n    // Fast-path for normalized points\n    if (Fp.eql(z, Fp.ONE)) return { x, y };\n    const is0 = p.is0();\n    // If invZ was 0, we return zero point. However we still want to execute\n    // all operations, so we replace invZ with a random number, 1.\n    if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(z);\n    const ax = Fp.mul(x, iz);\n    const ay = Fp.mul(y, iz);\n    const zz = Fp.mul(z, iz);\n    if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n    if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n    return { x: ax, y: ay };\n  });\n  // NOTE: on exception this will crash 'cached' and no value will be set.\n  // Otherwise true will be return\n  const assertValidMemo = memoized((p: Point) => {\n    if (p.is0()) {\n      // (0, 1, 0) aka ZERO is invalid in most contexts.\n      // In BLS, ZERO can be serialized, so we allow it.\n      // (0, 0, 0) is invalid representation of ZERO.\n      if (CURVE.allowInfinityPoint && !Fp.is0(p.py)) return;\n      throw new Error('bad point: ZERO');\n    }\n    // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n    const { x, y } = p.toAffine();\n    // Check if x, y are valid field elements\n    if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not FE');\n    const left = Fp.sqr(y); // y²\n    const right = weierstrassEquation(x); // x³ + ax + b\n    if (!Fp.eql(left, right)) throw new Error('bad point: equation left != right');\n    if (!p.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    return true;\n  });\n\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n   * Default Point works in 2d / affine coordinates: (x, y)\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements ProjPointType<T> {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    readonly px: T;\n    readonly py: T;\n    readonly pz: T;\n\n    constructor(px: T, py: T, pz: T) {\n      if (px == null || !Fp.isValid(px)) throw new Error('x required');\n      if (py == null || !Fp.isValid(py)) throw new Error('y required');\n      if (pz == null || !Fp.isValid(pz)) throw new Error('z required');\n      this.px = px;\n      this.py = py;\n      this.pz = pz;\n      Object.freeze(this);\n    }\n\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      const is0 = (i: T) => Fp.eql(i, Fp.ZERO);\n      // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n      if (is0(x) && is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.pz));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(hex: Hex): Point {\n      const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n      P.assertValidity();\n      return P;\n    }\n\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n    }\n\n    // Multiscalar Multiplication\n    static msm(points: Point[], scalars: bigint[]): Point {\n      return pippenger(Point, Fn, points, scalars);\n    }\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      wnaf.setWindowSize(this, windowSize);\n    }\n\n    // A point on curve is valid if it conforms to equation.\n    assertValidity(): void {\n      assertValidMemo(this);\n    }\n\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (Fp.isOdd) return !Fp.isOdd(y);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n\n    /**\n     * Compare one point to another.\n     */\n    equals(other: Point): boolean {\n      aprjpoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate(): Point {\n      return new Point(this.px, Fp.neg(this.py), this.pz);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      aprjpoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    is0() {\n      return this.equals(Point.ZERO);\n    }\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, n, Point.normalizeZ);\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(sc: bigint): Point {\n      const { endo, n: N } = CURVE;\n      aInRange('scalar', sc, _0n, N);\n      const I = Point.ZERO;\n      if (sc === _0n) return I;\n      if (this.is0() || sc === _1n) return this;\n\n      // Case a: no endomorphism. Case b: has precomputes.\n      if (!endo || wnaf.hasPrecomputes(this))\n        return wnaf.wNAFCachedUnsafe(this, sc, Point.normalizeZ);\n\n      // Case c: endomorphism\n      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(sc);\n      let k1p = I;\n      let k2p = I;\n      let d: Point = this;\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n      return k1p.add(k2p);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      const { endo, n: N } = CURVE;\n      aInRange('scalar', scalar, _1n, N);\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(scalar);\n        let { p: k1p, f: f1p } = this.wNAF(k1);\n        let { p: k2p, f: f2p } = this.wNAF(k2);\n        k1p = wnaf.constTimeNegate(k1neg, k1p);\n        k2p = wnaf.constTimeNegate(k2neg, k2p);\n        k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        const { p, f } = this.wNAF(scalar);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return Point.normalizeZ([point, fake])[0];\n    }\n\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n      const mul = (\n        P: Point,\n        a: bigint // Select faster multiply() method\n      ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n      const sum = mul(this, a).add(mul(Q, b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) ∋ (x=x/z, y=y/z)\n    toAffine(iz?: T): AffinePoint<T> {\n      return toAffineMemo(this, iz);\n    }\n    isTorsionFree(): boolean {\n      const { h: cofactor, isTorsionFree } = CURVE;\n      if (cofactor === _1n) return true; // No subgroups, always torsion-free\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n    }\n    clearCofactor(): Point {\n      const { h: cofactor, clearCofactor } = CURVE;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(CURVE.h);\n    }\n\n    toRawBytes(isCompressed = true): Uint8Array {\n      abool('isCompressed', isCompressed);\n      this.assertValidity();\n      return toBytes(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      abool('isCompressed', isCompressed);\n      return bytesToHex(this.toRawBytes(isCompressed));\n    }\n  }\n  const _bits = CURVE.nBitLength;\n  const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n  // Validate if generator point is on curve\n  return {\n    CURVE,\n    ProjectivePoint: Point as ProjConstructor<T>,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  };\n}\n\n// Instance\nexport interface SignatureType {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  assertValidity(): void;\n  addRecoveryBit(recovery: number): RecoveredSignatureType;\n  hasHighS(): boolean;\n  normalizeS(): SignatureType;\n  recoverPublicKey(msgHash: Hex): ProjPointType<bigint>;\n  toCompactRawBytes(): Uint8Array;\n  toCompactHex(): string;\n  // DER-encoded\n  toDERRawBytes(isCompressed?: boolean): Uint8Array;\n  toDERHex(isCompressed?: boolean): string;\n}\nexport type RecoveredSignatureType = SignatureType & {\n  readonly recovery: number;\n};\n// Static methods\nexport type SignatureConstructor = {\n  new (r: bigint, s: bigint): SignatureType;\n  fromCompact(hex: Hex): SignatureType;\n  fromDER(hex: Hex): SignatureType;\n};\ntype SignatureLike = { r: bigint; s: bigint };\n\nexport type PubKey = Hex | ProjPointType<bigint>;\n\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\n\nfunction validateOpts(\n  curve: CurveType\n): Readonly<CurveType & { nByteLength: number; nBitLength: number }> {\n  const opts = validateBasic(curve);\n  validateObject(\n    opts,\n    {\n      hash: 'hash',\n      hmac: 'function',\n      randomBytes: 'function',\n    },\n    {\n      bits2int: 'function',\n      bits2int_modN: 'function',\n      lowS: 'boolean',\n    }\n  );\n  return Object.freeze({ lowS: true, ...opts } as const);\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (privateA: PrivKey, publicB: Hex, isCompressed?: boolean) => Uint8Array;\n  sign: (msgHash: Hex, privKey: PrivKey, opts?: SignOpts) => RecoveredSignatureType;\n  verify: (signature: Hex | SignatureLike, msgHash: Hex, publicKey: Hex, opts?: VerOpts) => boolean;\n  ProjectivePoint: ProjConstructor<bigint>;\n  Signature: SignatureConstructor;\n  utils: {\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    isValidPrivateKey(privateKey: PrivKey): boolean;\n    randomPrivateKey: () => Uint8Array;\n    precompute: (windowSize?: number, point?: ProjPointType<bigint>) => ProjPointType<bigint>;\n  };\n};\n\n/**\n * Creates short weierstrass curve and ECDSA signature methods for it.\n * @example\n * import { Field } from '@noble/curves/abstract/modular';\n * // Before that, define BigInt-s: a, b, p, n, Gx, Gy\n * const curve = weierstrass({ a, b, Fp: Field(p), n, Gx, Gy, h: 1n })\n */\nexport function weierstrass(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const { Fp, n: CURVE_ORDER } = CURVE;\n  const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n  const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n\n  function modN(a: bigint) {\n    return mod(a, CURVE_ORDER);\n  }\n  function invN(a: bigint) {\n    return invert(a, CURVE_ORDER);\n  }\n\n  const {\n    ProjectivePoint: Point,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  } = weierstrassPoints({\n    ...CURVE,\n    toBytes(_c, point, isCompressed: boolean): Uint8Array {\n      const a = point.toAffine();\n      const x = Fp.toBytes(a.x);\n      const cat = concatBytes;\n      abool('isCompressed', isCompressed);\n      if (isCompressed) {\n        return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n      } else {\n        return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n      }\n    },\n    fromBytes(bytes: Uint8Array) {\n      const len = bytes.length;\n      const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // this.assertValidity() is done inside of fromHex\n      if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n        const x = bytesToNumberBE(tail);\n        if (!inRange(x, _1n, Fp.ORDER)) throw new Error('Point is not on curve');\n        const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n        let y: bigint;\n        try {\n          y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n        } catch (sqrtError) {\n          const suffix = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n          throw new Error('Point is not on curve' + suffix);\n        }\n        const isYOdd = (y & _1n) === _1n;\n        // ECDSA\n        const isHeadOdd = (head & 1) === 1;\n        if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n        return { x, y };\n      } else if (len === uncompressedLen && head === 0x04) {\n        const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n        const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n        return { x, y };\n      } else {\n        const cl = compressedLen;\n        const ul = uncompressedLen;\n        throw new Error(\n          'invalid Point, expected length of ' + cl + ', or uncompressed ' + ul + ', got ' + len\n        );\n      }\n    },\n  });\n  const numToNByteHex = (num: bigint): string =>\n    bytesToHex(numberToBytesBE(num, CURVE.nByteLength));\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n\n  function normalizeS(s: bigint) {\n    return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n  }\n  // slice bytes num\n  const slcNum = (b: Uint8Array, from: number, to: number) => bytesToNumberBE(b.slice(from, to));\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n   */\n  class Signature implements SignatureType {\n    readonly r: bigint;\n    readonly s: bigint;\n    readonly recovery?: number;\n    constructor(r: bigint, s: bigint, recovery?: number) {\n      aInRange('r', r, _1n, CURVE_ORDER); // r in [1..N]\n      aInRange('s', s, _1n, CURVE_ORDER); // s in [1..N]\n      this.r = r;\n      this.s = s;\n      if (recovery != null) this.recovery = recovery;\n      Object.freeze(this);\n    }\n\n    // pair (bytes of r, bytes of s)\n    static fromCompact(hex: Hex) {\n      const l = CURVE.nByteLength;\n      hex = ensureBytes('compactSignature', hex, l * 2);\n      return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n    }\n\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(hex: Hex) {\n      const { r, s } = DER.toSig(ensureBytes('DER', hex));\n      return new Signature(r, s);\n    }\n\n    /**\n     * @todo remove\n     * @deprecated\n     */\n    assertValidity(): void {}\n\n    addRecoveryBit(recovery: number): RecoveredSignature {\n      return new Signature(this.r, this.s, recovery) as RecoveredSignature;\n    }\n\n    recoverPublicKey(msgHash: Hex): typeof Point.BASE {\n      const { r, s, recovery: rec } = this;\n      const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n      const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n      if (radj >= Fp.ORDER) throw new Error('recovery id 2 or 3 invalid');\n      const prefix = (rec & 1) === 0 ? '02' : '03';\n      const R = Point.fromHex(prefix + numToNByteHex(radj));\n      const ir = invN(radj); // r^-1\n      const u1 = modN(-h * ir); // -hr^-1\n      const u2 = modN(s * ir); // sr^-1\n      const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n      if (!Q) throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n    }\n\n    // DER-encoded\n    toDERRawBytes() {\n      return hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n      return DER.hexFromSig({ r: this.r, s: this.s });\n    }\n\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n      return numToNByteHex(this.r) + numToNByteHex(this.s);\n    }\n  }\n  type RecoveredSignature = Signature & { recovery: number };\n\n  const utils = {\n    isValidPrivateKey(privateKey: PrivKey) {\n      try {\n        normPrivateKeyToScalar(privateKey);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    normPrivateKeyToScalar: normPrivateKeyToScalar,\n\n    /**\n     * Produces cryptographically secure private key from random of size\n     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n     */\n    randomPrivateKey: (): Uint8Array => {\n      const length = getMinHashLength(CURVE.n);\n      return mapHashToField(CURVE.randomBytes(length), CURVE.n);\n    },\n\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n      return point;\n    },\n  };\n\n  /**\n   * Computes public key for a private key. Checks for validity of the private key.\n   * @param privateKey private key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(privateKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean {\n    const arr = isBytes(item);\n    const str = typeof item === 'string';\n    const len = (arr || str) && (item as Hex).length;\n    if (arr) return len === compressedLen || len === uncompressedLen;\n    if (str) return len === 2 * compressedLen || len === 2 * uncompressedLen;\n    if (item instanceof Point) return true;\n    return false;\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from private key and public key.\n   * Checks: 1) private key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param privateA private key\n   * @param publicB different public key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(privateA: PrivKey, publicB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(privateA)) throw new Error('first arg must be private key');\n    if (!isProbPub(publicB)) throw new Error('second arg must be public key');\n    const b = Point.fromHex(publicB); // check for being on-curve\n    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n  }\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    CURVE.bits2int ||\n    function (bytes: Uint8Array): bigint {\n      // Our custom check \"just in case\"\n      if (bytes.length > 8192) throw new Error('input is too large');\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    CURVE.bits2int_modN ||\n    function (bytes: Uint8Array): bigint {\n      return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // NOTE: pads output with zero as per spec\n  const ORDER_MASK = bitMask(CURVE.nBitLength);\n  /**\n   * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n   */\n  function int2octets(num: bigint): Uint8Array {\n    aInRange('num < 2^' + CURVE.nBitLength, num, _0n, ORDER_MASK);\n    // works with order, can have different size than numToField!\n    return numberToBytesBE(num, CURVE.nByteLength);\n  }\n\n  // Steps A, D of RFC6979 3.2\n  // Creates RFC6979 seed; converts msg/privKey to numbers.\n  // Used only in sign, not in verify.\n  // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order,\n  // this will be invalid at least for P521. Also it can be bigger for P224 + SHA256\n  function prepSig(msgHash: Hex, privateKey: PrivKey, opts = defaultSigOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { hash, randomBytes } = CURVE;\n    let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n    if (lowS == null) lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n    msgHash = ensureBytes('msgHash', msgHash);\n    validateSigVerOpts(opts);\n    if (prehash) msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(msgHash);\n    const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (ent != null && ent !== false) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n      seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n    }\n    const seed = concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    function k2sig(kBytes: Uint8Array): RecoveredSignature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!isWithinCurveOrder(k)) return; // Important: all mod() calls here must be done over N\n      const ik = invN(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n      const r = modN(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n      // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n      // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n      const s = modN(ik * modN(m + r * d)); // Not using blinding here\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = normalizeS(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery) as RecoveredSignature; // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n  const defaultSigOpts: SignOpts = { lowS: CURVE.lowS, prehash: false };\n  const defaultVerOpts: VerOpts = { lowS: CURVE.lowS, prehash: false };\n\n  /**\n   * Signs message hash with a private key.\n   * ```\n   * sign(m, d, k) where\n   *   (x, y) = G × k\n   *   r = x mod n\n   *   s = (m + dr)/k mod n\n   * ```\n   * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n   * @param privKey private key\n   * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n   * @returns signature with recovery param\n   */\n  function sign(msgHash: Hex, privKey: PrivKey, opts = defaultSigOpts): RecoveredSignature {\n    const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n    const C = CURVE;\n    const drbg = createHmacDrbg<RecoveredSignature>(C.hash.outputLen, C.nByteLength, C.hmac);\n    return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n  }\n\n  // Enable precomputes. Slows down first publicKey computation by 20ms.\n  Point.BASE._setWindowSize(8);\n  // utils.precompute(8, ProjectivePoint.BASE)\n\n  /**\n   * Verifies a signature against message hash and public key.\n   * Rejects lowS signatures by default: to override,\n   * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   U1 = hs^-1 mod n\n   *   U2 = rs^-1 mod n\n   *   R = U1⋅G - U2⋅P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    msgHash: Hex,\n    publicKey: Hex,\n    opts = defaultVerOpts\n  ): boolean {\n    const sg = signature;\n    msgHash = ensureBytes('msgHash', msgHash);\n    publicKey = ensureBytes('publicKey', publicKey);\n    const { lowS, prehash, format } = opts;\n\n    // Verify opts, deduce signature format\n    validateSigVerOpts(opts);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    if (format !== undefined && format !== 'compact' && format !== 'der')\n      throw new Error('format must be compact or der');\n    const isHex = typeof sg === 'string' || isBytes(sg);\n    const isObj =\n      !isHex &&\n      !format &&\n      typeof sg === 'object' &&\n      sg !== null &&\n      typeof sg.r === 'bigint' &&\n      typeof sg.s === 'bigint';\n    if (!isHex && !isObj)\n      throw new Error('invalid signature, expected Uint8Array, hex string or Signature instance');\n\n    let _sig: Signature | undefined = undefined;\n    let P: ProjPointType<bigint>;\n    try {\n      if (isObj) _sig = new Signature(sg.r, sg.s);\n      if (isHex) {\n        // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n        // Since DER can also be 2*nByteLength bytes, we check for it first.\n        try {\n          if (format !== 'compact') _sig = Signature.fromDER(sg);\n        } catch (derError) {\n          if (!(derError instanceof DER.Err)) throw derError;\n        }\n        if (!_sig && format !== 'der') _sig = Signature.fromCompact(sg);\n      }\n      P = Point.fromHex(publicKey);\n    } catch (error) {\n      return false;\n    }\n    if (!_sig) return false;\n    if (lowS && _sig.hasHighS()) return false;\n    if (prehash) msgHash = CURVE.hash(msgHash);\n    const { r, s } = _sig;\n    const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n    const is = invN(s); // s^-1\n    const u1 = modN(h * is); // u1 = hs^-1 mod n\n    const u2 = modN(r * is); // u2 = rs^-1 mod n\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n    if (!R) return false;\n    const v = modN(R.x);\n    return v === r;\n  }\n  return {\n    CURVE,\n    getPublicKey,\n    getSharedSecret,\n    sign,\n    verify,\n    ProjectivePoint: Point,\n    Signature,\n    utils,\n  };\n}\n\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio<T>(\n  Fp: IField<T>,\n  Z: T\n): (u: T, v: T) => { isValid: boolean; value: T } {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n  // 2n ** c1 == 2n << (c1-1)\n  const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n  const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n  const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = i - _2n; // 18.    tv5 = i - 2\n      tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU<T>(\n  Fp: IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n): (u: T) => { x: T; y: T } {\n  validateField(Fp);\n  if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n  if (!Fp.isOdd) throw new Error('Fp.isOdd is not implemented!');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    x = Fp.div(x, tv4); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n","/**\n * NIST secp256k1. See [pdf](https://www.secg.org/sec2-v2.pdf).\n *\n * Seems to be rigid (not backdoored)\n * [as per discussion](https://bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975).\n *\n * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n * [See explanation](https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066).\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha2';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { createCurve, type CurveFnWithCreate } from './_shortw_utils.ts';\nimport { createHasher, type HTFMethod, isogenyMap } from './abstract/hash-to-curve.ts';\nimport { Field, mod, pow2 } from './abstract/modular.ts';\nimport type { Hex, PrivKey } from './abstract/utils.ts';\nimport {\n  aInRange,\n  bytesToNumberBE,\n  concatBytes,\n  ensureBytes,\n  inRange,\n  numberToBytesBE,\n} from './abstract/utils.ts';\nimport { mapToCurveSimpleSWU, type ProjPointType as PointType } from './abstract/weierstrass.ts';\n\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a: bigint, b: bigint) => (a + b / _2n) / b;\n\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y: bigint): bigint {\n  const P = secp256k1P;\n  // prettier-ignore\n  const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n  // prettier-ignore\n  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n  const b2 = (y * y * y) % P; // x^3, 11\n  const b3 = (b2 * b2 * y) % P; // x^7\n  const b6 = (pow2(b3, _3n, P) * b3) % P;\n  const b9 = (pow2(b6, _3n, P) * b3) % P;\n  const b11 = (pow2(b9, _2n, P) * b2) % P;\n  const b22 = (pow2(b11, _11n, P) * b11) % P;\n  const b44 = (pow2(b22, _22n, P) * b22) % P;\n  const b88 = (pow2(b44, _44n, P) * b44) % P;\n  const b176 = (pow2(b88, _88n, P) * b88) % P;\n  const b220 = (pow2(b176, _44n, P) * b44) % P;\n  const b223 = (pow2(b220, _3n, P) * b3) % P;\n  const t1 = (pow2(b223, _23n, P) * b22) % P;\n  const t2 = (pow2(t1, _6n, P) * b2) % P;\n  const root = pow2(t2, _2n, P);\n  if (!Fpk1.eql(Fpk1.sqr(root), y)) throw new Error('Cannot find square root');\n  return root;\n}\n\nconst Fpk1 = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n\n/**\n * secp256k1 curve, ECDSA and ECDH methods.\n *\n * Field: `2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n`\n *\n * @example\n * ```js\n * import { secp256k1 } from '@noble/curves/secp256k1';\n * const priv = secp256k1.utils.randomPrivateKey();\n * const pub = secp256k1.getPublicKey(priv);\n * const msg = new Uint8Array(32).fill(1); // message hash (not message) in ecdsa\n * const sig = secp256k1.sign(msg, priv); // `{prehash: true}` option is available\n * const isValid = secp256k1.verify(sig, msg, pub) === true;\n * ```\n */\nexport const secp256k1: CurveFnWithCreate = createCurve(\n  {\n    a: BigInt(0),\n    b: BigInt(7),\n    Fp: Fpk1,\n    n: secp256k1N,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    endo: {\n      // Endomorphism, see above\n      beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n      splitScalar: (k: bigint) => {\n        const n = secp256k1N;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg) k1 = n - k1;\n        if (k2neg) k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n          throw new Error('splitScalar: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n      },\n    },\n  },\n  sha256\n);\n\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES: { [tag: string]: Uint8Array } = {};\nfunction taggedHash(tag: string, ...messages: Uint8Array[]): Uint8Array {\n  let tagP = TAGGED_HASH_PREFIXES[tag];\n  if (tagP === undefined) {\n    const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n    tagP = concatBytes(tagH, tagH);\n    TAGGED_HASH_PREFIXES[tag] = tagP;\n  }\n  return sha256(concatBytes(tagP, ...messages));\n}\n\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point: PointType<bigint>) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n: bigint) => numberToBytesBE(n, 32);\nconst modP = (x: bigint) => mod(x, secp256k1P);\nconst modN = (x: bigint) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q: PointType<bigint>, a: bigint, b: bigint) =>\n  Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv: PrivKey) {\n  let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n  let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n  const scalar = p.hasEvenY() ? d_ : modN(-d_);\n  return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x: bigint): PointType<bigint> {\n  aInRange('x', x, _1n, secp256k1P); // Fail if x ≥ p.\n  const xx = modP(x * x);\n  const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n  let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n  if (y % _2n !== _0n) y = modP(-y); // Return the unique point P such that x(P) = x and\n  const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n  p.assertValidity();\n  return p;\n}\nconst num = bytesToNumberBE;\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args: Uint8Array[]): bigint {\n  return modN(num(taggedHash('BIP0340/challenge', ...args)));\n}\n\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey: Hex): Uint8Array {\n  return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(\n  message: Hex,\n  privateKey: PrivKey,\n  auxRand: Hex = randomBytes(32)\n): Uint8Array {\n  const m = ensureBytes('message', message);\n  const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n  const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n  const t = numTo32b(d ^ num(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n  const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n  const k_ = modN(num(rand)); // Let k' = int(rand) mod n\n  if (k_ === _0n) throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n  const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n  const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n  const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n  sig.set(rx, 0);\n  sig.set(numTo32b(modN(k + e * d)), 32);\n  // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n  if (!schnorrVerify(sig, m, px)) throw new Error('sign: Invalid signature produced');\n  return sig;\n}\n\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature: Hex, message: Hex, publicKey: Hex): boolean {\n  const sig = ensureBytes('signature', signature, 64);\n  const m = ensureBytes('message', message);\n  const pub = ensureBytes('publicKey', publicKey, 32);\n  try {\n    const P = lift_x(num(pub)); // P = lift_x(int(pk)); fail if that fails\n    const r = num(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n    if (!inRange(r, _1n, secp256k1P)) return false;\n    const s = num(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n    if (!inRange(s, _1n, secp256k1N)) return false;\n    const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n    const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n    if (!R || !R.hasEvenY() || R.toAffine().x !== r) return false; // -eP == (n-e)P\n    return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n  } catch (error) {\n    return false;\n  }\n}\n\nexport type SecpSchnorr = {\n  getPublicKey: typeof schnorrGetPublicKey;\n  sign: typeof schnorrSign;\n  verify: typeof schnorrVerify;\n  utils: {\n    randomPrivateKey: () => Uint8Array;\n    lift_x: typeof lift_x;\n    pointToBytes: (point: PointType<bigint>) => Uint8Array;\n    numberToBytesBE: typeof numberToBytesBE;\n    bytesToNumberBE: typeof bytesToNumberBE;\n    taggedHash: typeof taggedHash;\n    mod: typeof mod;\n  };\n};\n/**\n * Schnorr signatures over secp256k1.\n * https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\n * @example\n * ```js\n * import { schnorr } from '@noble/curves/secp256k1';\n * const priv = schnorr.utils.randomPrivateKey();\n * const pub = schnorr.getPublicKey(priv);\n * const msg = new TextEncoder().encode('hello');\n * const sig = schnorr.sign(msg, priv);\n * const isValid = schnorr.verify(sig, msg, pub);\n * ```\n */\nexport const schnorr: SecpSchnorr = /* @__PURE__ */ (() => ({\n  getPublicKey: schnorrGetPublicKey,\n  sign: schnorrSign,\n  verify: schnorrVerify,\n  utils: {\n    randomPrivateKey: secp256k1.utils.randomPrivateKey,\n    lift_x,\n    pointToBytes,\n    numberToBytesBE,\n    bytesToNumberBE,\n    taggedHash,\n    mod,\n  },\n}))();\n\nconst isoMap = /* @__PURE__ */ (() =>\n  isogenyMap(\n    Fpk1,\n    [\n      // xNum\n      [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n      ],\n      // xDen\n      [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n      // yNum\n      [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n      ],\n      // yDen\n      [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n    ].map((i) => i.map((j) => BigInt(j))) as [bigint[], bigint[], bigint[], bigint[]]\n  ))();\nconst mapSWU = /* @__PURE__ */ (() =>\n  mapToCurveSimpleSWU(Fpk1, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fpk1.create(BigInt('-11')),\n  }))();\nconst htf = /* @__PURE__ */ (() =>\n  createHasher(\n    secp256k1.ProjectivePoint,\n    (scalars: bigint[]) => {\n      const { x, y } = mapSWU(Fpk1.create(scalars[0]));\n      return isoMap(x, y);\n    },\n    {\n      DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n      encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n      p: Fpk1.ORDER,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha256,\n    }\n  ))();\n\n/** secp256k1 hash-to-curve from RFC 9380. */\nexport const hashToCurve: HTFMethod<bigint> = /* @__PURE__ */ (() => htf.hashToCurve)();\n\n/** secp256k1 encode-to-curve from RFC 9380. */\nexport const encodeToCurve: HTFMethod<bigint> = /* @__PURE__ */ (() => htf.encodeToCurve)();\n","/**\n * Internal assertion helpers.\n * @module\n */\n\n/** Asserts something is positive integer. */\nfunction anumber(n: number): void {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error('positive integer expected, got ' + n);\n}\n\n/** Is number an Uint8Array? Copied from utils for perf. */\nfunction isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\n/** Asserts something is Uint8Array. */\nfunction abytes(b: Uint8Array | undefined, ...lengths: number[]): void {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n\n/** Hash interface. */\nexport type Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\n\n/** Asserts something is hash */\nfunction ahash(h: Hash): void {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  anumber(h.outputLen);\n  anumber(h.blockLen);\n}\n\n/** Asserts a hash instance has not been destroyed / finished */\nfunction aexists(instance: any, checkFinished = true): void {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\n\n/** Asserts output is properly-sized byte array */\nfunction aoutput(out: any, instance: any): void {\n  abytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error('digestInto() expects output buffer of length at least ' + min);\n  }\n}\n\nexport { anumber, abytes, ahash, aexists, aoutput };\n","/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\nimport { aexists, aoutput } from './_assert.ts';\nimport { type Input, Hash, createView, toBytes } from './utils.ts';\n\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\nexport function setBigUint64(\n  view: DataView,\n  byteOffset: number,\n  value: bigint,\n  isLE: boolean\n): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n/** Choice: a ? b : c */\nexport function Chi(a: number, b: number, c: number): number {\n  return (a & b) ^ (~a & c);\n}\n\n/** Majority function, true if any two inputs is true. */\nexport function Maj(a: number, b: number, c: number): number {\n  return (a & b) ^ (a & c) ^ (b & c);\n}\n\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport abstract class HashMD<T extends HashMD<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n\n  readonly blockLen: number;\n  readonly outputLen: number;\n  readonly padOffset: number;\n  readonly isLE: boolean;\n\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(blockLen: number, outputLen: number, padOffset: number, isLE: boolean) {\n    super();\n    this.blockLen = blockLen;\n    this.outputLen = outputLen;\n    this.padOffset = padOffset;\n    this.isLE = isLE;\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    aexists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array): void {\n    aexists(this);\n    aoutput(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in\n    // current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest(): Uint8Array {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\nfunction fromBig(\n  n: bigint,\n  le = false\n): {\n  h: number;\n  l: number;\n} {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false): Uint32Array[] {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number): bigint => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number): number => h >>> s;\nconst shrSL = (h: number, l: number, s: number): number => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number): number => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number): number => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number): number => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number): number => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number): number => l;\nconst rotr32L = (h: number, _l: number): number => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number): number => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number): number => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number): number => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number): number => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(\n  Ah: number,\n  Al: number,\n  Bh: number,\n  Bl: number\n): {\n  h: number;\n  l: number;\n} {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number): number => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number): number =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number): number =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number): number =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number): number =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number): number =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64: { fromBig: typeof fromBig; split: typeof split; toBig: (h: number, l: number) => bigint; shrSH: (h: number, _l: number, s: number) => number; shrSL: (h: number, l: number, s: number) => number; rotrSH: (h: number, l: number, s: number) => number; rotrSL: (h: number, l: number, s: number) => number; rotrBH: (h: number, l: number, s: number) => number; rotrBL: (h: number, l: number, s: number) => number; rotr32H: (_h: number, l: number) => number; rotr32L: (h: number, _l: number) => number; rotlSH: (h: number, l: number, s: number) => number; rotlSL: (h: number, l: number, s: number) => number; rotlBH: (h: number, l: number, s: number) => number; rotlBL: (h: number, l: number, s: number) => number; add: typeof add; add3L: (Al: number, Bl: number, Cl: number) => number; add3H: (low: number, Ah: number, Bh: number, Ch: number) => number; add4L: (Al: number, Bl: number, Cl: number, Dl: number) => number; add4H: (low: number, Ah: number, Bh: number, Ch: number, Dh: number) => number; add5H: (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) => number; add5L: (Al: number, Bl: number, Cl: number, Dl: number, El: number) => number; } = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","/**\n * Internal webcrypto alias.\n * We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n * See utils.ts for details.\n * @module\n */\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto: any =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n","/**\n * HMAC: RFC2104 message authentication code.\n * @module\n */\nimport { abytes, aexists, ahash } from './_assert.ts';\nimport { Hash, toBytes, type CHash, type Input } from './utils.ts';\n\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    ahash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input): this {\n    aexists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array): void {\n    aexists(this);\n    abytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest(): Uint8Array {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy(): void {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n * @example\n * import { hmac } from '@noble/hashes/hmac';\n * import { sha256 } from '@noble/hashes/sha2';\n * const mac1 = hmac(sha256, 'key', 'message');\n */\nexport const hmac: {\n  (hash: CHash, key: Input, message: Input): Uint8Array;\n  create(hash: CHash, key: Input): HMAC<any>;\n} = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n","/**\n * RIPEMD-160 legacy hash function.\n * https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n * https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\n * @module\n */\nimport { HashMD } from './_md.ts';\nimport { rotl, wrapConstructor, type CHash } from './utils.ts';\n\nconst Rho = /* @__PURE__ */ new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = /* @__PURE__ */ new Uint8Array(new Array(16).fill(0).map((_, i) => i));\nconst Pi = /* @__PURE__ */ Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++) for (let j of [idxL, idxR]) j.push(j[i].map((k) => Rho[k]));\n\nconst shifts = /* @__PURE__ */ [\n  [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n  [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n  [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n  [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n  [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\nconst shiftsL = /* @__PURE__ */ idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = /* @__PURE__ */ idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst Kl = /* @__PURE__ */ new Uint32Array([\n  0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e,\n]);\nconst Kr = /* @__PURE__ */ new Uint32Array([\n  0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000,\n]);\n// It's called f() in spec.\nfunction f(group: number, x: number, y: number, z: number): number {\n  if (group === 0) return x ^ y ^ z;\n  else if (group === 1) return (x & y) | (~x & z);\n  else if (group === 2) return (x | ~y) ^ z;\n  else if (group === 3) return (x & z) | (y & ~z);\n  else return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst R_BUF = /* @__PURE__ */ new Uint32Array(16);\nexport class RIPEMD160 extends HashMD<RIPEMD160> {\n  private h0 = 0x67452301 | 0;\n  private h1 = 0xefcdab89 | 0;\n  private h2 = 0x98badcfe | 0;\n  private h3 = 0x10325476 | 0;\n  private h4 = 0xc3d2e1f0 | 0;\n\n  constructor() {\n    super(64, 20, 8, true);\n  }\n  protected get(): [number, number, number, number, number] {\n    const { h0, h1, h2, h3, h4 } = this;\n    return [h0, h1, h2, h3, h4];\n  }\n  protected set(h0: number, h1: number, h2: number, h3: number, h4: number): void {\n    this.h0 = h0 | 0;\n    this.h1 = h1 | 0;\n    this.h2 = h2 | 0;\n    this.h3 = h3 | 0;\n    this.h4 = h4 | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    for (let i = 0; i < 16; i++, offset += 4) R_BUF[i] = view.getUint32(offset, true);\n    // prettier-ignore\n    let al = this.h0 | 0, ar = al,\n        bl = this.h1 | 0, br = bl,\n        cl = this.h2 | 0, cr = cl,\n        dl = this.h3 | 0, dr = dl,\n        el = this.h4 | 0, er = el;\n\n    // Instead of iterating 0 to 80, we split it into 5 groups\n    // And use the groups in constants, functions, etc. Much simpler\n    for (let group = 0; group < 5; group++) {\n      const rGroup = 4 - group;\n      const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n      const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n      const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n      for (let i = 0; i < 16; i++) {\n        const tl = (rotl(al + f(group, bl, cl, dl) + R_BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n        al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n      }\n      // 2 loops are 10% faster\n      for (let i = 0; i < 16; i++) {\n        const tr = (rotl(ar + f(rGroup, br, cr, dr) + R_BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n        ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n      }\n    }\n    // Add the compressed chunk to the current hash value\n    this.set(\n      (this.h1 + cl + dr) | 0,\n      (this.h2 + dl + er) | 0,\n      (this.h3 + el + ar) | 0,\n      (this.h4 + al + br) | 0,\n      (this.h0 + bl + cr) | 0\n    );\n  }\n  protected roundClean(): void {\n    R_BUF.fill(0);\n  }\n  destroy(): void {\n    this.destroyed = true;\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0);\n  }\n}\n\n/** RIPEMD-160 - a legacy hash function from 1990s. */\nexport const ripemd160: CHash = /* @__PURE__ */ wrapConstructor(() => new RIPEMD160());\n","/**\n * SHA2 hash function. A.k.a. sha256, sha512, sha512_256, etc.\n * @module\n */\n// Usually you either use sha256, or sha512. We re-export them as sha2 for naming consistency.\nexport { sha224, sha256 } from './sha256.ts';\nexport { sha384, sha512, sha512_224, sha512_256 } from './sha512.ts';\n","/**\n * SHA2-256 a.k.a. sha256. In JS, it is the fastest hash, even faster than Blake3.\n *\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n *\n * Check out [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\nimport { Chi, HashMD, Maj } from './_md.ts';\nimport { type CHash, rotr, wrapConstructor } from './utils.ts';\n\n/** Round constants: first 32 bits of fractional parts of the cube roots of the first 64 primes 2..311). */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n/** Initial state: first 32 bits of fractional parts of the square roots of the first 8 primes 2..19. */\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n/**\n * Temporary buffer, not used to store anything between runs.\n * Named this way because it matches specification.\n */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  protected A: number = SHA256_IV[0] | 0;\n  protected B: number = SHA256_IV[1] | 0;\n  protected C: number = SHA256_IV[2] | 0;\n  protected D: number = SHA256_IV[3] | 0;\n  protected E: number = SHA256_IV[4] | 0;\n  protected F: number = SHA256_IV[5] | 0;\n  protected G: number = SHA256_IV[6] | 0;\n  protected H: number = SHA256_IV[7] | 0;\n\n  constructor(outputLen: number = 32) {\n    super(64, outputLen, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ): void {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean(): void {\n    SHA256_W.fill(0);\n  }\n  destroy(): void {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n\n/**\n * Constants taken from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf.\n */\nclass SHA224 extends SHA256 {\n  protected A = 0xc1059ed8 | 0;\n  protected B = 0x367cd507 | 0;\n  protected C = 0x3070dd17 | 0;\n  protected D = 0xf70e5939 | 0;\n  protected E = 0xffc00b31 | 0;\n  protected F = 0x68581511 | 0;\n  protected G = 0x64f98fa7 | 0;\n  protected H = 0xbefa4fa4 | 0;\n  constructor() {\n    super(28);\n  }\n}\n\n/** SHA2-256 hash function */\nexport const sha256: CHash = /* @__PURE__ */ wrapConstructor(() => new SHA256());\n/** SHA2-224 hash function */\nexport const sha224: CHash = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n","/**\n * SHA3 (keccak) hash function, based on a new \"Sponge function\" design.\n * Different from older hashes, the internal state is bigger than output size.\n *\n * Check out [FIPS-202](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf),\n * [Website](https://keccak.team/keccak.html),\n * [the differences between SHA-3 and Keccak](https://crypto.stackexchange.com/questions/15727/what-are-the-key-differences-between-the-draft-sha-3-standard-and-the-keccak-sub).\n *\n * Check out `sha3-addons` module for cSHAKE, k12, and others.\n * @module\n */\nimport { abytes, aexists, anumber, aoutput } from './_assert.ts';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.ts';\nimport {\n  byteSwap32,\n  Hash,\n  isLE,\n  toBytes,\n  u32,\n  wrapConstructor,\n  wrapXOFConstructorWithOpts,\n  type CHash,\n  type CHashXO,\n  type HashXOF,\n  type Input,\n} from './utils.ts';\n\n// Various per round constants calculations\nconst SHA3_PI: number[] = [];\nconst SHA3_ROTL: number[] = [];\nconst _SHA3_IOTA: bigint[] = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h: number, l: number, s: number) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n\n/** `keccakf1600` internal function, additionally allows to adjust round count. */\nexport function keccakP(s: Uint32Array, rounds: number = 24): void {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (ρ) and Pi (π)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (χ)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (ι)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  B.fill(0);\n}\n\n/** Keccak sponge function. */\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n\n  public blockLen: number;\n  public suffix: number;\n  public outputLen: number;\n  protected enableXOF = false;\n  protected rounds: number;\n\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    blockLen: number,\n    suffix: number,\n    outputLen: number,\n    enableXOF = false,\n    rounds: number = 24\n  ) {\n    super();\n    this.blockLen = blockLen;\n    this.suffix = suffix;\n    this.outputLen = outputLen;\n    this.enableXOF = enableXOF;\n    this.rounds = rounds;\n    // Can be passed from user as dkLen\n    anumber(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    // 0 < blockLen < 200\n    if (0 >= this.blockLen || this.blockLen >= 200)\n      throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  protected keccak(): void {\n    if (!isLE) byteSwap32(this.state32);\n    keccakP(this.state32, this.rounds);\n    if (!isLE) byteSwap32(this.state32);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input): this {\n    aexists(this);\n    const { blockLen, state } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish(): void {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    aexists(this, false);\n    abytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    anumber(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array): Uint8Array {\n    aoutput(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest(): Uint8Array {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy(): void {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n\n/** SHA3-224 hash function. */\nexport const sha3_224: CHash = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/** SHA3-256 hash function. Different from keccak-256. */\nexport const sha3_256: CHash = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\n/** SHA3-384 hash function. */\nexport const sha3_384: CHash = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\n/** SHA3-512 hash function. */\nexport const sha3_512: CHash = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\n\n/** keccak-224 hash function. */\nexport const keccak_224: CHash = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/** keccak-256 hash function. Different from SHA3-256. */\nexport const keccak_256: CHash = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\n/** keccak-384 hash function. */\nexport const keccak_384: CHash = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\n/** keccak-512 hash function. */\nexport const keccak_512: CHash = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapXOFConstructorWithOpts<HashXOF<Keccak>, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\n/** SHAKE128 XOF with 128-bit security. */\nexport const shake128: CHashXO = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\n/** SHAKE256 XOF with 256-bit security. */\nexport const shake256: CHashXO = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n","/**\n * SHA2-512 a.k.a. sha512 and sha384. It is slower than sha256 in js because u64 operations are slow.\n *\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\n * [the paper on truncated SHA512/256](https://eprint.iacr.org/2010/548.pdf).\n * @module\n */\nimport { HashMD } from './_md.ts';\nimport u64 from './_u64.ts';\nimport { type CHash, wrapConstructor } from './utils.ts';\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD<SHA512> {\n  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n  // Also looks cleaner and easier to verify with spec.\n  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n  // h -- high 32 bits, l -- low 32 bits\n  protected Ah: number = 0x6a09e667 | 0;\n  protected Al: number = 0xf3bcc908 | 0;\n  protected Bh: number = 0xbb67ae85 | 0;\n  protected Bl: number = 0x84caa73b | 0;\n  protected Ch: number = 0x3c6ef372 | 0;\n  protected Cl: number = 0xfe94f82b | 0;\n  protected Dh: number = 0xa54ff53a | 0;\n  protected Dl: number = 0x5f1d36f1 | 0;\n  protected Eh: number = 0x510e527f | 0;\n  protected El: number = 0xade682d1 | 0;\n  protected Fh: number = 0x9b05688c | 0;\n  protected Fl: number = 0x2b3e6c1f | 0;\n  protected Gh: number = 0x1f83d9ab | 0;\n  protected Gl: number = 0xfb41bd6b | 0;\n  protected Hh: number = 0x5be0cd19 | 0;\n  protected Hl: number = 0x137e2179 | 0;\n\n  constructor(outputLen: number = 64) {\n    super(128, outputLen, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ): void {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean(): void {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n  destroy(): void {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nexport class SHA512_224 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  protected Ah: number = 0x8c3d37c8 | 0;\n  protected Al: number = 0x19544da2 | 0;\n  protected Bh: number = 0x73e19966 | 0;\n  protected Bl: number = 0x89dcd4d6 | 0;\n  protected Ch: number = 0x1dfab7ae | 0;\n  protected Cl: number = 0x32ff9c82 | 0;\n  protected Dh: number = 0x679dd514 | 0;\n  protected Dl: number = 0x582f9fcf | 0;\n  protected Eh: number = 0x0f6d2b69 | 0;\n  protected El: number = 0x7bd44da8 | 0;\n  protected Fh: number = 0x77e36f73 | 0;\n  protected Fl: number = 0x04c48942 | 0;\n  protected Gh: number = 0x3f9d85a8 | 0;\n  protected Gl: number = 0x6a1d36c8 | 0;\n  protected Hh: number = 0x1112e6ad | 0;\n  protected Hl: number = 0x91d692a1 | 0;\n\n  constructor() {\n    super(28);\n  }\n}\n\nexport class SHA512_256 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  protected Ah: number = 0x22312194 | 0;\n  protected Al: number = 0xfc2bf72c | 0;\n  protected Bh: number = 0x9f555fa3 | 0;\n  protected Bl: number = 0xc84c64c2 | 0;\n  protected Ch: number = 0x2393b86b | 0;\n  protected Cl: number = 0x6f53b151 | 0;\n  protected Dh: number = 0x96387719 | 0;\n  protected Dl: number = 0x5940eabd | 0;\n  protected Eh: number = 0x96283ee2 | 0;\n  protected El: number = 0xa88effe3 | 0;\n  protected Fh: number = 0xbe5e1e25 | 0;\n  protected Fl: number = 0x53863992 | 0;\n  protected Gh: number = 0x2b0199fc | 0;\n  protected Gl: number = 0x2c85b8aa | 0;\n  protected Hh: number = 0x0eb72ddc | 0;\n  protected Hl: number = 0x81c52ca2 | 0;\n\n  constructor() {\n    super(32);\n  }\n}\n\nexport class SHA384 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  protected Ah: number = 0xcbbb9d5d | 0;\n  protected Al: number = 0xc1059ed8 | 0;\n  protected Bh: number = 0x629a292a | 0;\n  protected Bl: number = 0x367cd507 | 0;\n  protected Ch: number = 0x9159015a | 0;\n  protected Cl: number = 0x3070dd17 | 0;\n  protected Dh: number = 0x152fecd8 | 0;\n  protected Dl: number = 0xf70e5939 | 0;\n  protected Eh: number = 0x67332667 | 0;\n  protected El: number = 0xffc00b31 | 0;\n  protected Fh: number = 0x8eb44a87 | 0;\n  protected Fl: number = 0x68581511 | 0;\n  protected Gh: number = 0xdb0c2e0d | 0;\n  protected Gl: number = 0x64f98fa7 | 0;\n  protected Hh: number = 0x47b5481d | 0;\n  protected Hl: number = 0xbefa4fa4 | 0;\n\n  constructor() {\n    super(48);\n  }\n}\n\n/** SHA2-512 hash function. */\nexport const sha512: CHash = /* @__PURE__ */ wrapConstructor(() => new SHA512());\n/** SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks. */\nexport const sha512_224: CHash = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\n/** SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks. */\nexport const sha512_256: CHash = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\n/** SHA2-384 hash function. */\nexport const sha384: CHash = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n","/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { abytes } from './_assert.ts';\n// export { isBytes } from './_assert.ts';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport function u8(arr: TypedArray): Uint8Array {\n  return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\nexport function u32(arr: TypedArray): Uint32Array {\n  return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n\n// Cast array to view\nexport function createView(arr: TypedArray): DataView {\n  return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word: number, shift: number): number {\n  return (word << (32 - shift)) | (word >>> shift);\n}\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word: number, shift: number): number {\n  return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE: boolean = /* @__PURE__ */ (() =>\n  new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n// The byte swap operation for uint32\nexport function byteSwap(word: number): number {\n  return (\n    ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff)\n  );\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const byteSwapIfBE: (n: number) => number = isLE\n  ? (n: number) => n\n  : (n: number) => byteSwap(n);\n\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr: Uint32Array): void {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n}\n\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin: boolean =\n  // @ts-ignore\n  typeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function';\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // @ts-ignore\n  if (hasHexBuiltin) return bytes.toHex();\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 } as const;\nfunction asciiToBase16(ch: number): number | undefined {\n  if (ch >= asciis._0 && ch <= asciis._9) return ch - asciis._0; // '2' => 50-48\n  if (ch >= asciis.A && ch <= asciis.F) return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n  if (ch >= asciis.a && ch <= asciis.f) return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n  return;\n}\n\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // @ts-ignore\n  if (hasHexBuiltin) return Uint8Array.fromHex(hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n  }\n  return array;\n}\n\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async (): Promise<void> => {};\n\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(\n  iters: number,\n  tick: number,\n  cb: (i: number) => void\n): Promise<void> {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * Convert JS string to byte array.\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error('utf8ToBytes expected string, got ' + typeof str);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n/** Accepted input of hash functions. Strings are converted to byte arrays. */\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n/** For runtime check if class implements interface */\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\n/** Hash function */\nexport type CHash = ReturnType<typeof wrapConstructor>;\n/** Hash function with output */\nexport type CHashO = ReturnType<typeof wrapConstructorWithOpts>;\n/** XOF with output */\nexport type CHashXO = ReturnType<typeof wrapXOFConstructorWithOpts>;\n\n/** Wraps hash function, creating an interface on top of it */\nexport function wrapConstructor<T extends Hash<T>>(\n  hashCons: () => Hash<T>\n): {\n  (msg: Input): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(): Hash<T>;\n} {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n): {\n  (msg: Input, opts?: T): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(opts: T): Hash<H>;\n} {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n): {\n  (msg: Input, opts?: T): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(opts: T): HashXOF<H>;\n} {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  // Legacy Node.js compatibility\n  if (crypto && typeof crypto.randomBytes === 'function') {\n    return Uint8Array.from(crypto.randomBytes(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","import { MessageFormatter } from './messageFormatter.js';\nimport { Methods } from './methods.js';\nimport { InterfaceMessageEvent, Communicator, Response, SuccessResponse } from '../types/index.js';\n\n// eslint-disable-next-line\ntype Callback = (response: any) => void;\n\nclass PostMessageCommunicator implements Communicator {\n  private readonly allowedOrigins: RegExp[] | null = null;\n  private callbacks = new Map<string, Callback>();\n  private debugMode = false;\n  private isServer = typeof window === 'undefined';\n\n  constructor(allowedOrigins: RegExp[] | null = null, debugMode = false) {\n    this.allowedOrigins = allowedOrigins;\n    this.debugMode = debugMode;\n\n    if (!this.isServer) {\n      window.addEventListener('message', this.onParentMessage);\n    }\n  }\n\n  private isValidMessage = ({ origin, data, source }: InterfaceMessageEvent): boolean => {\n    const emptyOrMalformed = !data;\n    const sentFromParentEl = !this.isServer && source === window.parent;\n    const majorVersionNumber = typeof data.version !== 'undefined' && parseInt(data.version.split('.')[0]);\n    const allowedSDKVersion = typeof majorVersionNumber === 'number' && majorVersionNumber >= 1;\n    let validOrigin = true;\n    if (Array.isArray(this.allowedOrigins)) {\n      validOrigin = this.allowedOrigins.find((regExp) => regExp.test(origin)) !== undefined;\n    }\n\n    return !emptyOrMalformed && sentFromParentEl && allowedSDKVersion && validOrigin;\n  };\n\n  private logIncomingMessage = (msg: InterfaceMessageEvent): void => {\n    console.info(`Safe Apps SDK v1: A message was received from origin ${msg.origin}. `, msg.data);\n  };\n\n  private onParentMessage = (msg: InterfaceMessageEvent): void => {\n    if (this.isValidMessage(msg)) {\n      this.debugMode && this.logIncomingMessage(msg);\n      this.handleIncomingMessage(msg.data);\n    }\n  };\n\n  private handleIncomingMessage = (payload: InterfaceMessageEvent['data']): void => {\n    const { id } = payload;\n\n    const cb = this.callbacks.get(id);\n    if (cb) {\n      cb(payload);\n\n      this.callbacks.delete(id);\n    }\n  };\n\n  public send = <M extends Methods, P, R>(method: M, params: P): Promise<SuccessResponse<R>> => {\n    const request = MessageFormatter.makeRequest(method, params);\n\n    if (this.isServer) {\n      throw new Error(\"Window doesn't exist\");\n    }\n\n    window.parent.postMessage(request, '*');\n    return new Promise((resolve, reject) => {\n      this.callbacks.set(request.id, (response: Response<R>) => {\n        if (!response.success) {\n          reject(new Error(response.error));\n          return;\n        }\n\n        resolve(response);\n      });\n    });\n  };\n}\n\nexport default PostMessageCommunicator;\nexport * from './methods.js';\n","import { ErrorResponse, SDKRequestData, RequestId, SuccessResponse, MethodToResponse } from '../types/index.js';\nimport { getSDKVersion } from '../version.js';\nimport { Methods } from './methods.js';\nimport { generateRequestId } from './utils.js';\n\nclass MessageFormatter {\n  static makeRequest = <M extends Methods = Methods, P = unknown>(method: M, params: P): SDKRequestData<M, P> => {\n    const id = generateRequestId();\n\n    return {\n      id,\n      method,\n      params,\n      env: {\n        sdkVersion: getSDKVersion(),\n      },\n    };\n  };\n\n  static makeResponse = (id: RequestId, data: MethodToResponse[Methods], version: string): SuccessResponse => ({\n    id,\n    success: true,\n    version,\n    data,\n  });\n\n  static makeErrorResponse = (id: RequestId, error: string, version: string): ErrorResponse => ({\n    id,\n    success: false,\n    error,\n    version,\n  });\n}\n\nexport { MessageFormatter };\n","export enum Methods {\n  sendTransactions = 'sendTransactions',\n  rpcCall = 'rpcCall',\n  getChainInfo = 'getChainInfo',\n  getSafeInfo = 'getSafeInfo',\n  getTxBySafeTxHash = 'getTxBySafeTxHash',\n  getSafeBalances = 'getSafeBalances',\n  signMessage = 'signMessage',\n  signTypedMessage = 'signTypedMessage',\n  getEnvironmentInfo = 'getEnvironmentInfo',\n  getOffChainSignature = 'getOffChainSignature',\n  requestAddressBook = 'requestAddressBook',\n  wallet_getPermissions = 'wallet_getPermissions',\n  wallet_requestPermissions = 'wallet_requestPermissions',\n}\n\nexport enum RestrictedMethods {\n  requestAddressBook = 'requestAddressBook',\n}\n","// i.e. 0-255 -> '00'-'ff'\nconst dec2hex = (dec: number): string => dec.toString(16).padStart(2, '0');\n\nconst generateId = (len: number): string => {\n  const arr = new Uint8Array((len || 40) / 2);\n  window.crypto.getRandomValues(arr);\n  return Array.from(arr, dec2hex).join('');\n};\n\nconst generateRequestId = (): string => {\n  if (typeof window !== 'undefined') {\n    return generateId(10);\n  }\n\n  return new Date().getTime().toString(36);\n};\n\nexport { generateRequestId };\n","import { Methods } from '../communication/index.js';\nimport { Safe } from '../safe/index.js';\nimport { Wallet } from '../wallet/index.js';\n\nimport { Permission, PermissionsError, PERMISSIONS_REQUEST_REJECTED } from '../types/permissions.js';\n\nconst hasPermission = (required: Methods, permissions: Permission[]): boolean =>\n  permissions.some((permission) => permission.parentCapability === required);\n\nconst requirePermission = () => (_: unknown, propertyKey: string, descriptor: PropertyDescriptor) => {\n  const originalMethod = descriptor.value;\n\n  descriptor.value = async function () {\n    // @ts-expect-error accessing private property from decorator. 'this' context is the class instance\n    const wallet = new Wallet((this as Safe).communicator);\n\n    let currentPermissions = await wallet.getPermissions();\n\n    if (!hasPermission(propertyKey as Methods, currentPermissions)) {\n      currentPermissions = await wallet.requestPermissions([{ [propertyKey as Methods]: {} }]);\n    }\n\n    if (!hasPermission(propertyKey as Methods, currentPermissions)) {\n      throw new PermissionsError('Permissions rejected', PERMISSIONS_REQUEST_REJECTED);\n    }\n\n    return originalMethod.apply(this);\n  };\n\n  return descriptor;\n};\n\nexport default requirePermission;\n","export const RPC_CALLS = {\n  eth_call: 'eth_call',\n  eth_gasPrice: 'eth_gasPrice',\n  eth_getLogs: 'eth_getLogs',\n  eth_getBalance: 'eth_getBalance',\n  eth_getCode: 'eth_getCode',\n  eth_getBlockByHash: 'eth_getBlockByHash',\n  eth_getBlockByNumber: 'eth_getBlockByNumber',\n  eth_getStorageAt: 'eth_getStorageAt',\n  eth_getTransactionByHash: 'eth_getTransactionByHash',\n  eth_getTransactionReceipt: 'eth_getTransactionReceipt',\n  eth_getTransactionCount: 'eth_getTransactionCount',\n  eth_estimateGas: 'eth_estimateGas',\n  safe_setSettings: 'safe_setSettings',\n} as const;\n","import { RPC_CALLS } from '../eth/constants.js';\nimport {\n  BlockNumberArg,\n  RpcCallNames,\n  Communicator,\n  Log,\n  BlockTransactionString,\n  BlockTransactionObject,\n  Web3TransactionObject,\n  RPCPayload,\n  TransactionConfig,\n  Web3TransactionReceiptObject,\n  PastLogsOptions,\n  SafeSettings,\n} from '../types/index.js';\nimport { Methods } from '../communication/methods.js';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Formatter = (arg: any) => any;\n\nconst inputFormatters: Record<string, Formatter> = {\n  defaultBlockParam: (arg = 'latest') => arg,\n  returnFullTxObjectParam: (arg = false): boolean => arg,\n  blockNumberToHex: (arg: BlockNumberArg): string =>\n    Number.isInteger(arg) ? `0x${arg.toString(16)}` : (arg as string),\n};\n\ntype BuildRequestArgs = {\n  call: RpcCallNames;\n  formatters?: (Formatter | null)[];\n};\n\nclass Eth {\n  public call;\n  public getBalance;\n  public getCode;\n  public getStorageAt;\n  public getPastLogs;\n  public getBlockByHash;\n  public getBlockByNumber;\n  public getTransactionByHash;\n  public getTransactionReceipt;\n  public getTransactionCount;\n  public getGasPrice;\n  public getEstimateGas;\n  public setSafeSettings;\n\n  private readonly communicator: Communicator;\n\n  constructor(communicator: Communicator) {\n    this.communicator = communicator;\n    this.call = this.buildRequest<[TransactionConfig, string?], string>({\n      call: RPC_CALLS.eth_call,\n      formatters: [null, inputFormatters.defaultBlockParam],\n    });\n    this.getBalance = this.buildRequest<[string, string?], string>({\n      call: RPC_CALLS.eth_getBalance,\n      formatters: [null, inputFormatters.defaultBlockParam],\n    });\n    this.getCode = this.buildRequest<[string, string?], string>({\n      call: RPC_CALLS.eth_getCode,\n      formatters: [null, inputFormatters.defaultBlockParam],\n    });\n    this.getStorageAt = this.buildRequest<[string, number, string?], string>({\n      call: RPC_CALLS.eth_getStorageAt,\n      formatters: [null, inputFormatters.blockNumberToHex, inputFormatters.defaultBlockParam],\n    });\n    this.getPastLogs = this.buildRequest<[PastLogsOptions], Log[]>({\n      call: RPC_CALLS.eth_getLogs,\n    });\n    this.getBlockByHash = this.buildRequest<[string, boolean?], BlockTransactionString | BlockTransactionObject>({\n      call: RPC_CALLS.eth_getBlockByHash,\n      formatters: [null, inputFormatters.returnFullTxObjectParam],\n    });\n    this.getBlockByNumber = this.buildRequest<\n      [BlockNumberArg, boolean?],\n      BlockTransactionString | BlockTransactionObject\n    >({\n      call: RPC_CALLS.eth_getBlockByNumber,\n      formatters: [inputFormatters.blockNumberToHex, inputFormatters.returnFullTxObjectParam],\n    });\n    this.getTransactionByHash = this.buildRequest<[string], Web3TransactionObject>({\n      call: RPC_CALLS.eth_getTransactionByHash,\n    });\n    this.getTransactionReceipt = this.buildRequest<[string], Web3TransactionReceiptObject>({\n      call: RPC_CALLS.eth_getTransactionReceipt,\n    });\n    this.getTransactionCount = this.buildRequest<[string, string?], string>({\n      call: RPC_CALLS.eth_getTransactionCount,\n      formatters: [null, inputFormatters.defaultBlockParam],\n    });\n    this.getGasPrice = this.buildRequest<never[], string>({\n      call: RPC_CALLS.eth_gasPrice,\n    });\n    this.getEstimateGas = (transaction: TransactionConfig): Promise<number> =>\n      this.buildRequest<[TransactionConfig], number>({\n        call: RPC_CALLS.eth_estimateGas,\n      })([transaction]);\n    this.setSafeSettings = this.buildRequest<[SafeSettings], SafeSettings>({\n      call: RPC_CALLS.safe_setSettings,\n    });\n  }\n\n  private buildRequest<P = never[], R = unknown>(args: BuildRequestArgs) {\n    const { call, formatters } = args;\n\n    return async (params?: P): Promise<R> => {\n      if (formatters && Array.isArray(params)) {\n        formatters.forEach((formatter: ((...args: unknown[]) => unknown) | null, i) => {\n          if (formatter) {\n            params[i] = formatter(params[i]);\n          }\n        });\n      }\n\n      const payload: RPCPayload<P> = {\n        call,\n        params: params || [],\n      };\n\n      const response = await this.communicator.send<Methods.rpcCall, RPCPayload<P>, R>(Methods.rpcCall, payload);\n\n      return response.data;\n    };\n  }\n}\n\nexport { Eth };\n","import SDK from './sdk.js';\n\nexport default SDK;\nexport * from './sdk.js';\nexport * from './types/index.js';\nexport * from './communication/methods.js';\nexport * from './communication/messageFormatter.js';\nexport { getSDKVersion } from './version.js';\nexport * from './eth/constants.js';\n","import { encodeFunctionData, Address, hashMessage, hashTypedData } from 'viem';\nimport { MAGIC_VALUE_BYTES, MAGIC_VALUE } from './signatures.js';\nimport { Methods } from '../communication/methods.js';\nimport { RPC_CALLS } from '../eth/constants.js';\nimport {\n  Communicator,\n  ChainInfo,\n  SafeBalances,\n  GetBalanceParams,\n  RPCPayload,\n  TransactionConfig,\n  EnvironmentInfo,\n  AddressBookItem,\n  isObjectEIP712TypedData,\n  EIP712TypedData,\n  SafeInfoExtended,\n} from '../types/index.js';\nimport requirePermission from '../decorators/requirePermissions.js';\n\nclass Safe {\n  private readonly communicator: Communicator;\n\n  constructor(communicator: Communicator) {\n    this.communicator = communicator;\n  }\n\n  async getChainInfo(): Promise<ChainInfo> {\n    const response = await this.communicator.send<Methods.getChainInfo, undefined, ChainInfo>(\n      Methods.getChainInfo,\n      undefined,\n    );\n\n    return response.data;\n  }\n\n  async getInfo(): Promise<SafeInfoExtended> {\n    const response = await this.communicator.send<Methods.getSafeInfo, undefined, SafeInfoExtended>(\n      Methods.getSafeInfo,\n      undefined,\n    );\n\n    return response.data;\n  }\n\n  // There is a possibility that this method will change because we may add pagination to the endpoint\n  async experimental_getBalances({ currency = 'usd' }: GetBalanceParams = {}): Promise<SafeBalances> {\n    const response = await this.communicator.send<Methods.getSafeBalances, { currency: string }, SafeBalances>(\n      Methods.getSafeBalances,\n      {\n        currency,\n      },\n    );\n\n    return response.data;\n  }\n\n  private async check1271Signature(messageHash: string, signature = '0x'): Promise<boolean> {\n    const safeInfo = await this.getInfo();\n\n    const encodedIsValidSignatureCall = encodeFunctionData({\n      abi: [\n        {\n          constant: false,\n          inputs: [\n            {\n              name: '_dataHash',\n              type: 'bytes32',\n            },\n            {\n              name: '_signature',\n              type: 'bytes',\n            },\n          ],\n          name: 'isValidSignature',\n          outputs: [\n            {\n              name: '',\n              type: 'bytes4',\n            },\n          ],\n          payable: false,\n          stateMutability: 'nonpayable',\n          type: 'function',\n        },\n      ] as const,\n      functionName: 'isValidSignature',\n      args: [messageHash as Address, signature as Address],\n    });\n\n    const payload = {\n      call: RPC_CALLS.eth_call,\n      params: [\n        {\n          to: safeInfo.safeAddress,\n          data: encodedIsValidSignatureCall,\n        },\n        'latest',\n      ],\n    };\n    try {\n      const response = await this.communicator.send<Methods.rpcCall, RPCPayload<[TransactionConfig, string]>, string>(\n        Methods.rpcCall,\n        payload,\n      );\n\n      return response.data.slice(0, 10).toLowerCase() === MAGIC_VALUE;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  private async check1271SignatureBytes(messageHash: string, signature = '0x'): Promise<boolean> {\n    const safeInfo = await this.getInfo();\n\n    const encodedIsValidSignatureCall = encodeFunctionData({\n      abi: [\n        {\n          constant: false,\n          inputs: [\n            {\n              name: '_data',\n              type: 'bytes',\n            },\n            {\n              name: '_signature',\n              type: 'bytes',\n            },\n          ],\n          name: 'isValidSignature',\n          outputs: [\n            {\n              name: '',\n              type: 'bytes4',\n            },\n          ],\n          payable: false,\n          stateMutability: 'nonpayable',\n          type: 'function',\n        },\n      ] as const,\n      functionName: 'isValidSignature',\n      args: [messageHash as Address, signature as Address],\n    });\n\n    const payload = {\n      call: RPC_CALLS.eth_call,\n      params: [\n        {\n          to: safeInfo.safeAddress,\n          data: encodedIsValidSignatureCall,\n        },\n        'latest',\n      ],\n    };\n\n    try {\n      const response = await this.communicator.send<Methods.rpcCall, RPCPayload<[TransactionConfig, string]>, string>(\n        Methods.rpcCall,\n        payload,\n      );\n\n      return response.data.slice(0, 10).toLowerCase() === MAGIC_VALUE_BYTES;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  calculateMessageHash(message: string): string {\n    return hashMessage(message);\n  }\n\n  calculateTypedMessageHash(typedMessage: EIP712TypedData): string {\n    const chainId =\n      typeof typedMessage.domain.chainId === 'object'\n        ? typedMessage.domain.chainId.toNumber()\n        : Number(typedMessage.domain.chainId);\n\n    let primaryType = typedMessage.primaryType;\n    if (!primaryType) {\n      const fields = Object.values(typedMessage.types);\n      // We try to infer primaryType (simplified ether's version)\n      const primaryTypes = Object.keys(typedMessage.types).filter((typeName) =>\n        fields.every((dataTypes) => dataTypes.every(({ type }) => type.replace('[', '').replace(']', '') !== typeName)),\n      );\n      if (primaryTypes.length === 0 || primaryTypes.length > 1) throw new Error('Please specify primaryType');\n      primaryType = primaryTypes[0];\n    }\n\n    return hashTypedData({\n      message: typedMessage.message,\n      domain: {\n        ...typedMessage.domain,\n        chainId,\n        verifyingContract: typedMessage.domain.verifyingContract as Address,\n        salt: typedMessage.domain.salt as Address,\n      },\n      types: typedMessage.types,\n      primaryType,\n    });\n  }\n\n  async getOffChainSignature(messageHash: string): Promise<string> {\n    const response = await this.communicator.send<Methods.getOffChainSignature, string, string>(\n      Methods.getOffChainSignature,\n      messageHash,\n    );\n\n    return response.data;\n  }\n\n  async isMessageSigned(message: string | EIP712TypedData, signature = '0x'): Promise<boolean> {\n    let check: (() => Promise<boolean>) | undefined;\n    if (typeof message === 'string') {\n      check = async (): Promise<boolean> => {\n        const messageHash = this.calculateMessageHash(message);\n        const messageHashSigned = await this.isMessageHashSigned(messageHash, signature);\n        return messageHashSigned;\n      };\n    }\n\n    if (isObjectEIP712TypedData(message)) {\n      check = async (): Promise<boolean> => {\n        const messageHash = this.calculateTypedMessageHash(message);\n        const messageHashSigned = await this.isMessageHashSigned(messageHash, signature);\n        return messageHashSigned;\n      };\n    }\n    if (check) {\n      const isValid = await check();\n\n      return isValid;\n    }\n\n    throw new Error('Invalid message type');\n  }\n\n  async isMessageHashSigned(messageHash: string, signature = '0x'): Promise<boolean> {\n    const checks = [this.check1271Signature.bind(this), this.check1271SignatureBytes.bind(this)];\n\n    for (const check of checks) {\n      const isValid = await check(messageHash, signature);\n      if (isValid) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async getEnvironmentInfo(): Promise<EnvironmentInfo> {\n    const response = await this.communicator.send<Methods.getEnvironmentInfo, undefined, EnvironmentInfo>(\n      Methods.getEnvironmentInfo,\n      undefined,\n    );\n\n    return response.data;\n  }\n\n  @requirePermission()\n  async requestAddressBook(): Promise<AddressBookItem[]> {\n    const response = await this.communicator.send<Methods.requestAddressBook, undefined, AddressBookItem[]>(\n      Methods.requestAddressBook,\n      undefined,\n    );\n\n    return response.data;\n  }\n}\n\nexport { Safe };\n","const MAGIC_VALUE = '0x1626ba7e';\nconst MAGIC_VALUE_BYTES = '0x20c13b0b';\n\nexport { MAGIC_VALUE, MAGIC_VALUE_BYTES };\n","import { Communicator } from './types/index.js';\nimport InterfaceCommunicator from './communication/index.js';\nimport { TXs } from './txs/index.js';\nimport { Eth } from './eth/index.js';\nimport { Safe } from './safe/index.js';\nimport { Wallet } from './wallet/index.js';\n\nexport type Opts = {\n  allowedDomains?: RegExp[];\n  debug?: boolean;\n};\n\nclass SafeAppsSDK {\n  private readonly communicator: Communicator;\n  public readonly eth: Eth;\n  public readonly txs: TXs;\n  public readonly safe: Safe;\n  public readonly wallet: Wallet;\n\n  constructor(opts: Opts = {}) {\n    const { allowedDomains = null, debug = false } = opts;\n\n    this.communicator = new InterfaceCommunicator(allowedDomains, debug);\n    this.eth = new Eth(this.communicator);\n    this.txs = new TXs(this.communicator);\n    this.safe = new Safe(this.communicator);\n    this.wallet = new Wallet(this.communicator);\n  }\n}\n\nexport default SafeAppsSDK;\n","import { Methods } from '../communication/methods.js';\nimport {\n  GatewayTransactionDetails,\n  SignMessageParams,\n  SendTransactionsParams,\n  GetTxBySafeTxHashParams,\n  Communicator,\n  SendTransactionsResponse,\n  SignTypedMessageParams,\n  EIP712TypedData,\n  isObjectEIP712TypedData,\n  SignMessageResponse,\n} from '../types/index.js';\n\nclass TXs {\n  private readonly communicator: Communicator;\n\n  constructor(communicator: Communicator) {\n    this.communicator = communicator;\n  }\n\n  async getBySafeTxHash(safeTxHash: string): Promise<GatewayTransactionDetails> {\n    if (!safeTxHash) {\n      throw new Error('Invalid safeTxHash');\n    }\n\n    const response = await this.communicator.send<\n      Methods.getTxBySafeTxHash,\n      GetTxBySafeTxHashParams,\n      GatewayTransactionDetails\n    >(Methods.getTxBySafeTxHash, { safeTxHash });\n\n    return response.data;\n  }\n\n  async signMessage(message: string): Promise<SignMessageResponse> {\n    const messagePayload = {\n      message,\n    };\n\n    const response = await this.communicator.send<Methods.signMessage, SignMessageParams, SignMessageResponse>(\n      Methods.signMessage,\n      messagePayload,\n    );\n\n    return response.data;\n  }\n\n  async signTypedMessage(typedData: EIP712TypedData): Promise<SignMessageResponse> {\n    if (!isObjectEIP712TypedData(typedData)) {\n      throw new Error('Invalid typed data');\n    }\n\n    const response = await this.communicator.send<\n      Methods.signTypedMessage,\n      SignTypedMessageParams,\n      SignMessageResponse\n    >(Methods.signTypedMessage, { typedData });\n\n    return response.data;\n  }\n\n  async send({ txs, params }: SendTransactionsParams): Promise<SendTransactionsResponse> {\n    if (!txs || !txs.length) {\n      throw new Error('No transactions were passed');\n    }\n\n    const messagePayload = {\n      txs,\n      params,\n    };\n\n    const response = await this.communicator.send<\n      Methods.sendTransactions,\n      SendTransactionsParams,\n      SendTransactionsResponse\n    >(Methods.sendTransactions, messagePayload);\n\n    return response.data;\n  }\n}\n\nexport { TXs };\n","import { SafeBalanceResponse, TransactionDetails, TokenInfo } from '@safe-global/safe-gateway-typescript-sdk';\n\nexport {\n  AddOwner,\n  ChangeImplementation,\n  ChangeThreshold,\n  Creation,\n  Custom,\n  DataDecoded,\n  DetailedExecutionInfo,\n  DisableModule,\n  EnableModule,\n  Erc20Transfer,\n  Erc721Transfer,\n  InternalTransaction,\n  ModuleExecutionDetails,\n  MultiSend,\n  MultisigConfirmation,\n  MultisigExecutionDetails,\n  NativeCoinTransfer,\n  Operation,\n  Parameter,\n  RemoveOwner,\n  SafeAppInfo,\n  SetFallbackHandler,\n  SettingsChange,\n  SettingsInfo,\n  SwapOwner,\n  TokenInfo,\n  TokenType,\n  TransactionData,\n  TransactionInfo,\n  TransactionStatus,\n  Transfer,\n  TransferDirection,\n  TransferInfo,\n} from '@safe-global/safe-gateway-typescript-sdk';\n\nexport type GatewayTransactionDetails = TransactionDetails;\n\nexport type TokenBalance = {\n  tokenInfo: TokenInfo;\n  balance: string;\n  fiatBalance: string;\n  fiatConversion: string;\n};\n\nexport type SafeBalances = SafeBalanceResponse;\n","export * from './sdk.js';\nexport * from './rpc.js';\nexport * from './gateway.js';\nexport * from './messaging.js';\n","import { Methods } from '../communication/methods.js';\nimport {\n  SafeInfo,\n  ChainInfo,\n  SendTransactionsResponse,\n  EnvironmentInfo,\n  AddressBookItem,\n  SignMessageResponse,\n} from './sdk.js';\nimport { GatewayTransactionDetails, SafeBalances } from './gateway.js';\nimport { Permission } from './permissions.js';\n\nexport type RequestId = string;\n\nexport type InterfaceMessageEvent = MessageEvent<Response>;\n\nexport interface MethodToResponse {\n  [Methods.sendTransactions]: SendTransactionsResponse;\n  [Methods.rpcCall]: unknown;\n  [Methods.getSafeInfo]: SafeInfo;\n  [Methods.getChainInfo]: ChainInfo;\n  [Methods.getTxBySafeTxHash]: GatewayTransactionDetails;\n  [Methods.getSafeBalances]: SafeBalances[];\n  [Methods.signMessage]: SignMessageResponse;\n  [Methods.signTypedMessage]: SignMessageResponse;\n  [Methods.getEnvironmentInfo]: EnvironmentInfo;\n  [Methods.getOffChainSignature]: string;\n  [Methods.requestAddressBook]: AddressBookItem[];\n  [Methods.wallet_getPermissions]: Permission[];\n  [Methods.wallet_requestPermissions]: Permission[];\n}\n\nexport type SDKRequestData<M extends Methods = Methods, P = unknown> = {\n  id: RequestId;\n  params: P;\n  env: {\n    sdkVersion: string;\n  };\n  method: M;\n};\n\nexport type SDKMessageEvent = MessageEvent<SDKRequestData>;\n\nexport type ErrorResponse = {\n  id: RequestId;\n  success: false;\n  error: string;\n  version?: string;\n};\n\nexport type SuccessResponse<T = MethodToResponse[Methods]> = {\n  id: RequestId;\n  data: T;\n  version?: string;\n  success: true;\n};\n\nexport type Response<T = MethodToResponse[Methods]> = ErrorResponse | SuccessResponse<T>;\n\nexport interface Communicator {\n  send<M extends Methods, P = unknown, R = unknown>(method: M, params: P): Promise<SuccessResponse<R>>;\n}\n","export type Permission = {\n  parentCapability: string;\n  invoker: string;\n  date?: number;\n  caveats?: PermissionCaveat[];\n};\n\nexport type PermissionRequest = {\n  [method: string]: Record<string, unknown>;\n};\n\nexport type PermissionCaveat = {\n  type: string;\n  value?: unknown;\n  name?: string;\n};\n\nexport const PERMISSIONS_REQUEST_REJECTED = 4001;\n\nexport class PermissionsError extends Error {\n  public code: number;\n  public data?: unknown;\n\n  constructor(message: string, code: number, data?: unknown) {\n    super(message);\n\n    this.code = code;\n    this.data = data;\n\n    // Should adjust prototype manually because how TS handles the type extension compilation\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, PermissionsError.prototype);\n  }\n}\n","import { ChainInfo as _ChainInfo } from '@safe-global/safe-gateway-typescript-sdk';\n\nexport type ChainInfo = Pick<\n  _ChainInfo,\n  'chainName' | 'chainId' | 'shortName' | 'nativeCurrency' | 'blockExplorerUriTemplate'\n>;\n\nexport { NativeCurrency } from '@safe-global/safe-gateway-typescript-sdk';\n\nexport type BaseTransaction = {\n  to: string;\n  value: string;\n  data: string;\n};\n\nexport type GetTxBySafeTxHashParams = {\n  safeTxHash: string;\n};\n\nexport interface SendTransactionRequestParams {\n  safeTxGas?: number;\n}\n\nexport interface SendTransactionsParams {\n  txs: BaseTransaction[];\n  params?: SendTransactionRequestParams;\n}\n\nexport type GetBalanceParams = { currency?: string };\n\nexport type SignMessageParams = {\n  message: string;\n};\n\nexport interface TypedDataDomain {\n  name?: string;\n  version?: string;\n  chainId?: string | number | bigint | { toNumber: () => number };\n  verifyingContract?: string;\n  salt?: string;\n}\n\nexport interface TypedDataTypes {\n  name: string;\n  type: string;\n}\n\nexport type TypedMessageTypes = { [key: string]: TypedDataTypes[] };\n\nexport type EIP712TypedData = {\n  domain: TypedDataDomain;\n  types: TypedMessageTypes;\n  message: Record<string, any>;\n  primaryType?: string;\n};\n\nexport type SignTypedMessageParams = {\n  typedData: EIP712TypedData;\n};\n\nexport type SendTransactionsResponse = {\n  safeTxHash: string;\n};\n\nexport type OffChainSignMessageResponse = {\n  messageHash: string;\n};\n\nexport type SignMessageResponse = SendTransactionsResponse | OffChainSignMessageResponse;\n\nexport type SafeInfo = {\n  safeAddress: string;\n  chainId: number;\n  threshold: number;\n  owners: string[];\n  isReadOnly: boolean;\n};\n\nexport type SafeInfoExtended = SafeInfo & {\n  nonce: number;\n  implementation: string;\n  modules: string[] | null;\n  fallbackHandler: string | null;\n  guard: string | null;\n  version: string | null;\n};\n\nexport type EnvironmentInfo = {\n  origin: string;\n};\n\nexport type PostMessageOptions = {\n  transfer?: any[];\n};\n\nexport type AddressBookItem = {\n  address: string;\n  chainId: string;\n  name: string;\n};\n\nexport const isObjectEIP712TypedData = (obj?: unknown): obj is EIP712TypedData => {\n  return typeof obj === 'object' && obj != null && 'domain' in obj && 'types' in obj && 'message' in obj;\n};\n","export const getSDKVersion = () => '9.1.0';\n","import { Methods, RestrictedMethods } from '../communication/methods.js';\nimport { Communicator } from '../types/index.js';\nimport { PermissionRequest, Permission, PermissionsError, PERMISSIONS_REQUEST_REJECTED } from '../types/permissions.js';\n\nclass Wallet {\n  private readonly communicator: Communicator;\n\n  constructor(communicator: Communicator) {\n    this.communicator = communicator;\n  }\n\n  async getPermissions(): Promise<Permission[]> {\n    const response = await this.communicator.send<Methods.wallet_getPermissions, undefined, Permission[]>(\n      Methods.wallet_getPermissions,\n      undefined,\n    );\n\n    return response.data;\n  }\n\n  async requestPermissions(permissions: PermissionRequest[]): Promise<Permission[]> {\n    if (!this.isPermissionRequestValid(permissions)) {\n      throw new PermissionsError('Permissions request is invalid', PERMISSIONS_REQUEST_REJECTED);\n    }\n\n    try {\n      const response = await this.communicator.send<\n        Methods.wallet_requestPermissions,\n        PermissionRequest[],\n        Permission[]\n      >(Methods.wallet_requestPermissions, permissions);\n\n      return response.data;\n    } catch {\n      throw new PermissionsError('Permissions rejected', PERMISSIONS_REQUEST_REJECTED);\n    }\n  }\n\n  isPermissionRequestValid(permissions: PermissionRequest[]): boolean {\n    return permissions.every((pr: PermissionRequest) => {\n      if (typeof pr === 'object') {\n        return Object.keys(pr).every((method) => {\n          if (Object.values(RestrictedMethods).includes(method as RestrictedMethods)) {\n            return true;\n          }\n\n          return false;\n        });\n      }\n\n      return false;\n    });\n  }\n}\n\nexport { Wallet };\n","import type { OneOf, Pretty } from './types.js'\nimport { version } from './version.js'\n\ntype BaseErrorArgs = Pretty<\n  {\n    docsPath?: string | undefined\n    metaMessages?: string[] | undefined\n  } & OneOf<{ details?: string | undefined } | { cause?: BaseError | Error }>\n>\n\nexport class BaseError extends Error {\n  details: string\n  docsPath?: string | undefined\n  metaMessages?: string[] | undefined\n  shortMessage: string\n\n  override name = 'AbiTypeError'\n\n  constructor(shortMessage: string, args: BaseErrorArgs = {}) {\n    const details =\n      args.cause instanceof BaseError\n        ? args.cause.details\n        : args.cause?.message\n          ? args.cause.message\n          : args.details!\n    const docsPath =\n      args.cause instanceof BaseError\n        ? args.cause.docsPath || args.docsPath\n        : args.docsPath\n    const message = [\n      shortMessage || 'An error occurred.',\n      '',\n      ...(args.metaMessages ? [...args.metaMessages, ''] : []),\n      ...(docsPath ? [`Docs: https://abitype.dev${docsPath}`] : []),\n      ...(details ? [`Details: ${details}`] : []),\n      `Version: abitype@${version}`,\n    ].join('\\n')\n\n    super(message)\n\n    if (args.cause) this.cause = args.cause\n    this.details = details\n    this.docsPath = docsPath\n    this.metaMessages = args.metaMessages\n    this.shortMessage = shortMessage\n  }\n}\n","export type {\n  Abi,\n  AbiConstructor,\n  AbiError,\n  AbiEvent,\n  AbiEventParameter,\n  AbiFallback,\n  AbiFunction,\n  AbiInternalType,\n  AbiItemType,\n  AbiParameter,\n  AbiParameterKind,\n  AbiReceive,\n  AbiStateMutability,\n  AbiType,\n  Address,\n  SolidityAddress,\n  SolidityArray,\n  SolidityArrayWithoutTuple,\n  SolidityArrayWithTuple,\n  SolidityBool,\n  SolidityBytes,\n  SolidityFixedArrayRange,\n  SolidityFixedArraySizeLookup,\n  SolidityFunction,\n  SolidityInt,\n  SolidityString,\n  SolidityTuple,\n  TypedData,\n  TypedDataDomain,\n  TypedDataParameter,\n  TypedDataType,\n} from '../abi.js'\n\n// biome-ignore lint/performance/noBarrelFile: <explanation>\nexport { BaseError } from '../errors.js'\n\nexport type { Narrow } from '../narrow.js'\nexport { narrow } from '../narrow.js'\n\nexport type {\n  Register,\n  DefaultRegister,\n  ResolvedRegister,\n} from '../register.js'\n\nexport type {\n  AbiParameterToPrimitiveType,\n  AbiParametersToPrimitiveTypes,\n  AbiTypeToPrimitiveType,\n  ExtractAbiError,\n  ExtractAbiErrorNames,\n  ExtractAbiErrors,\n  ExtractAbiEvent,\n  ExtractAbiEventNames,\n  ExtractAbiEvents,\n  ExtractAbiFunction,\n  ExtractAbiFunctionNames,\n  ExtractAbiFunctions,\n  IsAbi,\n  IsTypedData,\n  TypedDataToPrimitiveTypes,\n} from '../utils.js'\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n// Human-Readable\n\nexport {\n  formatAbi,\n  type FormatAbi,\n} from '../human-readable/formatAbi.js'\n\nexport {\n  formatAbiItem,\n  type FormatAbiItem,\n} from '../human-readable/formatAbiItem.js'\n\nexport {\n  formatAbiParameter,\n  type FormatAbiParameter,\n} from '../human-readable/formatAbiParameter.js'\n\nexport {\n  formatAbiParameters,\n  type FormatAbiParameters,\n} from '../human-readable/formatAbiParameters.js'\n\nexport { parseAbi, type ParseAbi } from '../human-readable/parseAbi.js'\n\nexport {\n  parseAbiItem,\n  type ParseAbiItem,\n} from '../human-readable/parseAbiItem.js'\n\nexport {\n  parseAbiParameter,\n  type ParseAbiParameter,\n} from '../human-readable/parseAbiParameter.js'\n\nexport {\n  parseAbiParameters,\n  type ParseAbiParameters,\n} from '../human-readable/parseAbiParameters.js'\n\nexport {\n  UnknownTypeError,\n  InvalidAbiItemError,\n  UnknownSolidityTypeError,\n} from '../human-readable/errors/abiItem.js'\n\nexport {\n  InvalidAbiTypeParameterError,\n  InvalidFunctionModifierError,\n  InvalidModifierError,\n  SolidityProtectedKeywordError,\n  InvalidParameterError,\n  InvalidAbiParametersError,\n  InvalidAbiParameterError,\n} from '../human-readable/errors/abiParameter.js'\n\nexport {\n  InvalidStructSignatureError,\n  InvalidSignatureError,\n  UnknownSignatureError,\n} from '../human-readable/errors/signature.js'\n\nexport { InvalidParenthesisError } from '../human-readable/errors/splitParameters.js'\n\nexport { CircularReferenceError } from '../human-readable/errors/struct.js'\n","import { BaseError } from '../../errors.js'\n\nexport class InvalidAbiItemError extends BaseError {\n  override name = 'InvalidAbiItemError'\n\n  constructor({ signature }: { signature: string | object }) {\n    super('Failed to parse ABI item.', {\n      details: `parseAbiItem(${JSON.stringify(signature, null, 2)})`,\n      docsPath: '/api/human#parseabiitem-1',\n    })\n  }\n}\n\nexport class UnknownTypeError extends BaseError {\n  override name = 'UnknownTypeError'\n\n  constructor({ type }: { type: string }) {\n    super('Unknown type.', {\n      metaMessages: [\n        `Type \"${type}\" is not a valid ABI type. Perhaps you forgot to include a struct signature?`,\n      ],\n    })\n  }\n}\n\nexport class UnknownSolidityTypeError extends BaseError {\n  override name = 'UnknownSolidityTypeError'\n\n  constructor({ type }: { type: string }) {\n    super('Unknown type.', {\n      metaMessages: [`Type \"${type}\" is not a valid ABI type.`],\n    })\n  }\n}\n","import type { AbiItemType, AbiParameter } from '../../abi.js'\nimport { BaseError } from '../../errors.js'\nimport type { Modifier } from '../types/signatures.js'\n\nexport class InvalidAbiParameterError extends BaseError {\n  override name = 'InvalidAbiParameterError'\n\n  constructor({ param }: { param: string | object }) {\n    super('Failed to parse ABI parameter.', {\n      details: `parseAbiParameter(${JSON.stringify(param, null, 2)})`,\n      docsPath: '/api/human#parseabiparameter-1',\n    })\n  }\n}\n\nexport class InvalidAbiParametersError extends BaseError {\n  override name = 'InvalidAbiParametersError'\n\n  constructor({ params }: { params: string | object }) {\n    super('Failed to parse ABI parameters.', {\n      details: `parseAbiParameters(${JSON.stringify(params, null, 2)})`,\n      docsPath: '/api/human#parseabiparameters-1',\n    })\n  }\n}\n\nexport class InvalidParameterError extends BaseError {\n  override name = 'InvalidParameterError'\n\n  constructor({ param }: { param: string }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n    })\n  }\n}\n\nexport class SolidityProtectedKeywordError extends BaseError {\n  override name = 'SolidityProtectedKeywordError'\n\n  constructor({ param, name }: { param: string; name: string }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [\n        `\"${name}\" is a protected Solidity keyword. More info: https://docs.soliditylang.org/en/latest/cheatsheet.html`,\n      ],\n    })\n  }\n}\n\nexport class InvalidModifierError extends BaseError {\n  override name = 'InvalidModifierError'\n\n  constructor({\n    param,\n    type,\n    modifier,\n  }: {\n    param: string\n    type?: AbiItemType | 'struct' | undefined\n    modifier: Modifier\n  }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [\n        `Modifier \"${modifier}\" not allowed${\n          type ? ` in \"${type}\" type` : ''\n        }.`,\n      ],\n    })\n  }\n}\n\nexport class InvalidFunctionModifierError extends BaseError {\n  override name = 'InvalidFunctionModifierError'\n\n  constructor({\n    param,\n    type,\n    modifier,\n  }: {\n    param: string\n    type?: AbiItemType | 'struct' | undefined\n    modifier: Modifier\n  }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [\n        `Modifier \"${modifier}\" not allowed${\n          type ? ` in \"${type}\" type` : ''\n        }.`,\n        `Data location can only be specified for array, struct, or mapping types, but \"${modifier}\" was given.`,\n      ],\n    })\n  }\n}\n\nexport class InvalidAbiTypeParameterError extends BaseError {\n  override name = 'InvalidAbiTypeParameterError'\n\n  constructor({\n    abiParameter,\n  }: {\n    abiParameter: AbiParameter & { indexed?: boolean | undefined }\n  }) {\n    super('Invalid ABI parameter.', {\n      details: JSON.stringify(abiParameter, null, 2),\n      metaMessages: ['ABI parameter type is invalid.'],\n    })\n  }\n}\n","import type { AbiItemType } from '../../abi.js'\nimport { BaseError } from '../../errors.js'\n\nexport class InvalidSignatureError extends BaseError {\n  override name = 'InvalidSignatureError'\n\n  constructor({\n    signature,\n    type,\n  }: {\n    signature: string\n    type: AbiItemType | 'struct'\n  }) {\n    super(`Invalid ${type} signature.`, {\n      details: signature,\n    })\n  }\n}\n\nexport class UnknownSignatureError extends BaseError {\n  override name = 'UnknownSignatureError'\n\n  constructor({ signature }: { signature: string }) {\n    super('Unknown signature.', {\n      details: signature,\n    })\n  }\n}\n\nexport class InvalidStructSignatureError extends BaseError {\n  override name = 'InvalidStructSignatureError'\n\n  constructor({ signature }: { signature: string }) {\n    super('Invalid struct signature.', {\n      details: signature,\n      metaMessages: ['No properties exist.'],\n    })\n  }\n}\n","import { BaseError } from '../../errors.js'\n\nexport class InvalidParenthesisError extends BaseError {\n  override name = 'InvalidParenthesisError'\n\n  constructor({ current, depth }: { current: string; depth: number }) {\n    super('Unbalanced parentheses.', {\n      metaMessages: [\n        `\"${current.trim()}\" has too many ${\n          depth > 0 ? 'opening' : 'closing'\n        } parentheses.`,\n      ],\n      details: `Depth \"${depth}\"`,\n    })\n  }\n}\n","import { BaseError } from '../../errors.js'\n\nexport class CircularReferenceError extends BaseError {\n  override name = 'CircularReferenceError'\n\n  constructor({ type }: { type: string }) {\n    super('Circular reference detected.', {\n      metaMessages: [`Struct \"${type}\" is a circular reference.`],\n    })\n  }\n}\n","import type { Abi } from '../abi.js'\nimport { type FormatAbiItem, formatAbiItem } from './formatAbiItem.js'\n\n/**\n * Parses JSON ABI into human-readable ABI\n *\n * @param abi - ABI\n * @returns Human-readable ABI\n */\nexport type FormatAbi<abi extends Abi | readonly unknown[]> = Abi extends abi\n  ? readonly string[]\n  : abi extends readonly []\n    ? never\n    : abi extends Abi\n      ? {\n          [key in keyof abi]: FormatAbiItem<abi[key]>\n        }\n      : readonly string[]\n\n/**\n * Parses JSON ABI into human-readable ABI\n *\n * @param abi - ABI\n * @returns Human-readable ABI\n */\nexport function formatAbi<const abi extends Abi | readonly unknown[]>(\n  abi: abi,\n): FormatAbi<abi> {\n  const signatures = []\n  const length = abi.length\n  for (let i = 0; i < length; i++) {\n    const abiItem = abi[i]!\n    const signature = formatAbiItem(abiItem as Abi[number])\n    signatures.push(signature)\n  }\n  return signatures as unknown as FormatAbi<abi>\n}\n","import type {\n  Abi,\n  AbiConstructor,\n  AbiError,\n  AbiEvent,\n  AbiEventParameter,\n  AbiFallback,\n  AbiFunction,\n  AbiParameter,\n  AbiReceive,\n  AbiStateMutability,\n} from '../abi.js'\nimport {\n  type FormatAbiParameters as FormatAbiParameters_,\n  formatAbiParameters,\n} from './formatAbiParameters.js'\nimport type { AssertName } from './types/signatures.js'\n\n/**\n * Formats ABI item (e.g. error, event, function) into human-readable ABI item\n *\n * @param abiItem - ABI item\n * @returns Human-readable ABI item\n */\nexport type FormatAbiItem<abiItem extends Abi[number]> =\n  Abi[number] extends abiItem\n    ? string\n    :\n        | (abiItem extends AbiFunction\n            ? AbiFunction extends abiItem\n              ? string\n              : `function ${AssertName<abiItem['name']>}(${FormatAbiParameters<\n                  abiItem['inputs']\n                >})${abiItem['stateMutability'] extends Exclude<\n                  AbiStateMutability,\n                  'nonpayable'\n                >\n                  ? ` ${abiItem['stateMutability']}`\n                  : ''}${abiItem['outputs']['length'] extends 0\n                  ? ''\n                  : ` returns (${FormatAbiParameters<abiItem['outputs']>})`}`\n            : never)\n        | (abiItem extends AbiEvent\n            ? AbiEvent extends abiItem\n              ? string\n              : `event ${AssertName<abiItem['name']>}(${FormatAbiParameters<\n                  abiItem['inputs']\n                >})`\n            : never)\n        | (abiItem extends AbiError\n            ? AbiError extends abiItem\n              ? string\n              : `error ${AssertName<abiItem['name']>}(${FormatAbiParameters<\n                  abiItem['inputs']\n                >})`\n            : never)\n        | (abiItem extends AbiConstructor\n            ? AbiConstructor extends abiItem\n              ? string\n              : `constructor(${FormatAbiParameters<\n                  abiItem['inputs']\n                >})${abiItem['stateMutability'] extends 'payable'\n                  ? ' payable'\n                  : ''}`\n            : never)\n        | (abiItem extends AbiFallback\n            ? AbiFallback extends abiItem\n              ? string\n              : `fallback() external${abiItem['stateMutability'] extends 'payable'\n                  ? ' payable'\n                  : ''}`\n            : never)\n        | (abiItem extends AbiReceive\n            ? AbiReceive extends abiItem\n              ? string\n              : 'receive() external payable'\n            : never)\n\ntype FormatAbiParameters<\n  abiParameters extends readonly (AbiParameter | AbiEventParameter)[],\n> = abiParameters['length'] extends 0\n  ? ''\n  : FormatAbiParameters_<\n      abiParameters extends readonly [\n        AbiParameter | AbiEventParameter,\n        ...(readonly (AbiParameter | AbiEventParameter)[]),\n      ]\n        ? abiParameters\n        : never\n    >\n\n/**\n * Formats ABI item (e.g. error, event, function) into human-readable ABI item\n *\n * @param abiItem - ABI item\n * @returns Human-readable ABI item\n */\nexport function formatAbiItem<const abiItem extends Abi[number]>(\n  abiItem: abiItem,\n): FormatAbiItem<abiItem> {\n  type Result = FormatAbiItem<abiItem>\n  type Params = readonly [\n    AbiParameter | AbiEventParameter,\n    ...(readonly (AbiParameter | AbiEventParameter)[]),\n  ]\n\n  if (abiItem.type === 'function')\n    return `function ${abiItem.name}(${formatAbiParameters(\n      abiItem.inputs as Params,\n    )})${\n      abiItem.stateMutability && abiItem.stateMutability !== 'nonpayable'\n        ? ` ${abiItem.stateMutability}`\n        : ''\n    }${\n      abiItem.outputs?.length\n        ? ` returns (${formatAbiParameters(abiItem.outputs as Params)})`\n        : ''\n    }`\n  if (abiItem.type === 'event')\n    return `event ${abiItem.name}(${formatAbiParameters(\n      abiItem.inputs as Params,\n    )})`\n  if (abiItem.type === 'error')\n    return `error ${abiItem.name}(${formatAbiParameters(\n      abiItem.inputs as Params,\n    )})`\n  if (abiItem.type === 'constructor')\n    return `constructor(${formatAbiParameters(abiItem.inputs as Params)})${\n      abiItem.stateMutability === 'payable' ? ' payable' : ''\n    }`\n  if (abiItem.type === 'fallback')\n    return `fallback() external${\n      abiItem.stateMutability === 'payable' ? ' payable' : ''\n    }` as Result\n  return 'receive() external payable' as Result\n}\n","import type { AbiEventParameter, AbiParameter } from '../abi.js'\nimport { execTyped } from '../regex.js'\nimport type { IsNarrowable, Join } from '../types.js'\nimport type { AssertName } from './types/signatures.js'\n\n/**\n * Formats {@link AbiParameter} to human-readable ABI parameter.\n *\n * @param abiParameter - ABI parameter\n * @returns Human-readable ABI parameter\n *\n * @example\n * type Result = FormatAbiParameter<{ type: 'address'; name: 'from'; }>\n * //   ^? type Result = 'address from'\n */\nexport type FormatAbiParameter<\n  abiParameter extends AbiParameter | AbiEventParameter,\n> = abiParameter extends {\n  name?: infer name extends string\n  type: `tuple${infer array}`\n  components: infer components extends readonly AbiParameter[]\n  indexed?: infer indexed extends boolean\n}\n  ? FormatAbiParameter<\n      {\n        type: `(${Join<\n          {\n            [key in keyof components]: FormatAbiParameter<\n              {\n                type: components[key]['type']\n              } & (IsNarrowable<components[key]['name'], string> extends true\n                ? { name: components[key]['name'] }\n                : unknown) &\n                (components[key] extends { components: readonly AbiParameter[] }\n                  ? { components: components[key]['components'] }\n                  : unknown)\n            >\n          },\n          ', '\n        >})${array}`\n      } & (IsNarrowable<name, string> extends true ? { name: name } : unknown) &\n        (IsNarrowable<indexed, boolean> extends true\n          ? { indexed: indexed }\n          : unknown)\n    >\n  : `${abiParameter['type']}${abiParameter extends { indexed: true }\n      ? ' indexed'\n      : ''}${abiParameter['name'] extends infer name extends string\n      ? name extends ''\n        ? ''\n        : ` ${AssertName<name>}`\n      : ''}`\n\n// https://regexr.com/7f7rv\nconst tupleRegex = /^tuple(?<array>(\\[(\\d*)\\])*)$/\n\n/**\n * Formats {@link AbiParameter} to human-readable ABI parameter.\n *\n * @param abiParameter - ABI parameter\n * @returns Human-readable ABI parameter\n *\n * @example\n * const result = formatAbiParameter({ type: 'address', name: 'from' })\n * //    ^? const result: 'address from'\n */\nexport function formatAbiParameter<\n  const abiParameter extends AbiParameter | AbiEventParameter,\n>(abiParameter: abiParameter): FormatAbiParameter<abiParameter> {\n  type Result = FormatAbiParameter<abiParameter>\n\n  let type = abiParameter.type\n  if (tupleRegex.test(abiParameter.type) && 'components' in abiParameter) {\n    type = '('\n    const length = abiParameter.components.length as number\n    for (let i = 0; i < length; i++) {\n      const component = abiParameter.components[i]!\n      type += formatAbiParameter(component)\n      if (i < length - 1) type += ', '\n    }\n    const result = execTyped<{ array?: string }>(tupleRegex, abiParameter.type)\n    type += `)${result?.array ?? ''}`\n    return formatAbiParameter({\n      ...abiParameter,\n      type,\n    }) as Result\n  }\n  // Add `indexed` to type if in `abiParameter`\n  if ('indexed' in abiParameter && abiParameter.indexed)\n    type = `${type} indexed`\n  // Return human-readable ABI parameter\n  if (abiParameter.name) return `${type} ${abiParameter.name}` as Result\n  return type as Result\n}\n","import type { AbiEventParameter, AbiParameter } from '../abi.js'\nimport type { Join } from '../types.js'\nimport {\n  type FormatAbiParameter,\n  formatAbiParameter,\n} from './formatAbiParameter.js'\n\n/**\n * Formats {@link AbiParameter}s to human-readable ABI parameter.\n *\n * @param abiParameters - ABI parameters\n * @returns Human-readable ABI parameters\n *\n * @example\n * type Result = FormatAbiParameters<[\n *   // ^? type Result = 'address from, uint256 tokenId'\n *   { type: 'address'; name: 'from'; },\n *   { type: 'uint256'; name: 'tokenId'; },\n * ]>\n */\nexport type FormatAbiParameters<\n  abiParameters extends readonly [\n    AbiParameter | AbiEventParameter,\n    ...(readonly (AbiParameter | AbiEventParameter)[]),\n  ],\n> = Join<\n  {\n    [key in keyof abiParameters]: FormatAbiParameter<abiParameters[key]>\n  },\n  ', '\n>\n\n/**\n * Formats {@link AbiParameter}s to human-readable ABI parameters.\n *\n * @param abiParameters - ABI parameters\n * @returns Human-readable ABI parameters\n *\n * @example\n * const result = formatAbiParameters([\n *   //  ^? const result: 'address from, uint256 tokenId'\n *   { type: 'address', name: 'from' },\n *   { type: 'uint256', name: 'tokenId' },\n * ])\n */\nexport function formatAbiParameters<\n  const abiParameters extends readonly [\n    AbiParameter | AbiEventParameter,\n    ...(readonly (AbiParameter | AbiEventParameter)[]),\n  ],\n>(abiParameters: abiParameters): FormatAbiParameters<abiParameters> {\n  let params = ''\n  const length = abiParameters.length\n  for (let i = 0; i < length; i++) {\n    const abiParameter = abiParameters[i]!\n    params += formatAbiParameter(abiParameter)\n    if (i !== length - 1) params += ', '\n  }\n  return params as FormatAbiParameters<abiParameters>\n}\n","import type { Abi } from '../abi.js'\nimport type { Error, Filter } from '../types.js'\nimport { isStructSignature } from './runtime/signatures.js'\nimport { parseStructs } from './runtime/structs.js'\nimport { parseSignature } from './runtime/utils.js'\nimport type { Signatures } from './types/signatures.js'\nimport type { ParseStructs } from './types/structs.js'\nimport type { ParseSignature } from './types/utils.js'\n\n/**\n * Parses human-readable ABI into JSON {@link Abi}\n *\n * @param signatures - Human-readable ABI\n * @returns Parsed {@link Abi}\n *\n * @example\n * type Result = ParseAbi<\n *   // ^? type Result = readonly [{ name: \"balanceOf\"; type: \"function\"; stateMutability:...\n *   [\n *     'function balanceOf(address owner) view returns (uint256)',\n *     'event Transfer(address indexed from, address indexed to, uint256 amount)',\n *   ]\n * >\n */\nexport type ParseAbi<signatures extends readonly string[]> =\n  string[] extends signatures\n    ? Abi // If `T` was not able to be inferred (e.g. just `string[]`), return `Abi`\n    : signatures extends readonly string[]\n      ? signatures extends Signatures<signatures> // Validate signatures\n        ? ParseStructs<signatures> extends infer sructs\n          ? {\n              [key in keyof signatures]: signatures[key] extends string\n                ? ParseSignature<signatures[key], sructs>\n                : never\n            } extends infer mapped extends readonly unknown[]\n            ? Filter<mapped, never> extends infer result\n              ? result extends readonly []\n                ? never\n                : result\n              : never\n            : never\n          : never\n        : never\n      : never\n\n/**\n * Parses human-readable ABI into JSON {@link Abi}\n *\n * @param signatures - Human-Readable ABI\n * @returns Parsed {@link Abi}\n *\n * @example\n * const abi = parseAbi([\n *   //  ^? const abi: readonly [{ name: \"balanceOf\"; type: \"function\"; stateMutability:...\n *   'function balanceOf(address owner) view returns (uint256)',\n *   'event Transfer(address indexed from, address indexed to, uint256 amount)',\n * ])\n */\nexport function parseAbi<const signatures extends readonly string[]>(\n  signatures: signatures['length'] extends 0\n    ? Error<'At least one signature required'>\n    : Signatures<signatures> extends signatures\n      ? signatures\n      : Signatures<signatures>,\n): ParseAbi<signatures> {\n  const structs = parseStructs(signatures as readonly string[])\n  const abi = []\n  const length = signatures.length as number\n  for (let i = 0; i < length; i++) {\n    const signature = (signatures as readonly string[])[i]!\n    if (isStructSignature(signature)) continue\n    abi.push(parseSignature(signature, structs))\n  }\n  return abi as unknown as ParseAbi<signatures>\n}\n","import type { Abi } from '../abi.js'\nimport type { Narrow } from '../narrow.js'\nimport type { Error, Filter } from '../types.js'\nimport { InvalidAbiItemError } from './errors/abiItem.js'\nimport { isStructSignature } from './runtime/signatures.js'\nimport { parseStructs } from './runtime/structs.js'\nimport { parseSignature } from './runtime/utils.js'\nimport type { Signature, Signatures } from './types/signatures.js'\nimport type { ParseStructs } from './types/structs.js'\nimport type { ParseSignature } from './types/utils.js'\n\n/**\n * Parses human-readable ABI item (e.g. error, event, function) into {@link Abi} item\n *\n * @param signature - Human-readable ABI item\n * @returns Parsed {@link Abi} item\n *\n * @example\n * type Result = ParseAbiItem<'function balanceOf(address owner) view returns (uint256)'>\n * //   ^? type Result = { name: \"balanceOf\"; type: \"function\"; stateMutability: \"view\";...\n *\n * @example\n * type Result = ParseAbiItem<\n *   // ^? type Result = { name: \"foo\"; type: \"function\"; stateMutability: \"view\"; inputs:...\n *   ['function foo(Baz bar) view returns (string)', 'struct Baz { string name; }']\n * >\n */\nexport type ParseAbiItem<\n  signature extends string | readonly string[] | readonly unknown[],\n> =\n  | (signature extends string\n      ? string extends signature\n        ? Abi[number]\n        : signature extends Signature<signature> // Validate signature\n          ? ParseSignature<signature>\n          : never\n      : never)\n  | (signature extends readonly string[]\n      ? string[] extends signature\n        ? Abi[number] // Return generic Abi item since type was no inferrable\n        : signature extends Signatures<signature> // Validate signature\n          ? ParseStructs<signature> extends infer structs\n            ? {\n                [key in keyof signature]: ParseSignature<\n                  signature[key] extends string ? signature[key] : never,\n                  structs\n                >\n              } extends infer mapped extends readonly unknown[]\n              ? // Filter out `never` since those are structs\n                Filter<mapped, never>[0] extends infer result\n                ? result extends undefined // convert `undefined` to `never` (e.g. `ParseAbiItem<['struct Foo { string name; }']>`)\n                  ? never\n                  : result\n                : never\n              : never\n            : never\n          : never\n      : never)\n\n/**\n * Parses human-readable ABI item (e.g. error, event, function) into {@link Abi} item\n *\n * @param signature - Human-readable ABI item\n * @returns Parsed {@link Abi} item\n *\n * @example\n * const abiItem = parseAbiItem('function balanceOf(address owner) view returns (uint256)')\n * //    ^? const abiItem: { name: \"balanceOf\"; type: \"function\"; stateMutability: \"view\";...\n *\n * @example\n * const abiItem = parseAbiItem([\n *   //  ^? const abiItem: { name: \"foo\"; type: \"function\"; stateMutability: \"view\"; inputs:...\n *   'function foo(Baz bar) view returns (string)',\n *   'struct Baz { string name; }',\n * ])\n */\nexport function parseAbiItem<\n  signature extends string | readonly string[] | readonly unknown[],\n>(\n  signature: Narrow<signature> &\n    (\n      | (signature extends string\n          ? string extends signature\n            ? unknown\n            : Signature<signature>\n          : never)\n      | (signature extends readonly string[]\n          ? signature extends readonly [] // empty array\n            ? Error<'At least one signature required.'>\n            : string[] extends signature\n              ? unknown\n              : Signatures<signature>\n          : never)\n    ),\n): ParseAbiItem<signature> {\n  let abiItem: ParseAbiItem<signature> | undefined\n  if (typeof signature === 'string')\n    abiItem = parseSignature(signature) as ParseAbiItem<signature>\n  else {\n    const structs = parseStructs(signature as readonly string[])\n    const length = signature.length as number\n    for (let i = 0; i < length; i++) {\n      const signature_ = (signature as readonly string[])[i]!\n      if (isStructSignature(signature_)) continue\n      abiItem = parseSignature(signature_, structs) as ParseAbiItem<signature>\n      break\n    }\n  }\n\n  if (!abiItem) throw new InvalidAbiItemError({ signature })\n  return abiItem as ParseAbiItem<signature>\n}\n","import type { AbiParameter } from '../abi.js'\nimport type { Narrow } from '../narrow.js'\nimport type { Error, Filter } from '../types.js'\nimport { InvalidAbiParameterError } from './errors/abiParameter.js'\nimport { isStructSignature, modifiers } from './runtime/signatures.js'\nimport { parseStructs } from './runtime/structs.js'\nimport { parseAbiParameter as parseAbiParameter_ } from './runtime/utils.js'\nimport type { IsStructSignature, Modifier } from './types/signatures.js'\nimport type { ParseStructs } from './types/structs.js'\nimport type { ParseAbiParameter as ParseAbiParameter_ } from './types/utils.js'\n\n/**\n * Parses human-readable ABI parameter into {@link AbiParameter}\n *\n * @param param - Human-readable ABI parameter\n * @returns Parsed {@link AbiParameter}\n *\n * @example\n * type Result = ParseAbiParameter<'address from'>\n * //   ^? type Result = { type: \"address\"; name: \"from\"; }\n *\n * @example\n * type Result = ParseAbiParameter<\n *   // ^? type Result = { type: \"tuple\"; components: [{ type: \"string\"; name:...\n *   ['Baz bar', 'struct Baz { string name; }']\n * >\n */\nexport type ParseAbiParameter<\n  param extends string | readonly string[] | readonly unknown[],\n> =\n  | (param extends string\n      ? param extends ''\n        ? never\n        : string extends param\n          ? AbiParameter\n          : ParseAbiParameter_<param, { modifier: Modifier }>\n      : never)\n  | (param extends readonly string[]\n      ? string[] extends param\n        ? AbiParameter // Return generic AbiParameter item since type was no inferrable\n        : ParseStructs<param> extends infer structs\n          ? {\n              [key in keyof param]: param[key] extends string\n                ? IsStructSignature<param[key]> extends true\n                  ? never\n                  : ParseAbiParameter_<\n                      param[key],\n                      { modifier: Modifier; structs: structs }\n                    >\n                : never\n            } extends infer mapped extends readonly unknown[]\n            ? Filter<mapped, never>[0] extends infer result\n              ? result extends undefined\n                ? never\n                : result\n              : never\n            : never\n          : never\n      : never)\n\n/**\n * Parses human-readable ABI parameter into {@link AbiParameter}\n *\n * @param param - Human-readable ABI parameter\n * @returns Parsed {@link AbiParameter}\n *\n * @example\n * const abiParameter = parseAbiParameter('address from')\n * //    ^? const abiParameter: { type: \"address\"; name: \"from\"; }\n *\n * @example\n * const abiParameter = parseAbiParameter([\n *   //  ^? const abiParameter: { type: \"tuple\"; components: [{ type: \"string\"; name:...\n *   'Baz bar',\n *   'struct Baz { string name; }',\n * ])\n */\nexport function parseAbiParameter<\n  param extends string | readonly string[] | readonly unknown[],\n>(\n  param: Narrow<param> &\n    (\n      | (param extends string\n          ? param extends ''\n            ? Error<'Empty string is not allowed.'>\n            : unknown\n          : never)\n      | (param extends readonly string[]\n          ? param extends readonly [] // empty array\n            ? Error<'At least one parameter required.'>\n            : string[] extends param\n              ? unknown\n              : unknown // TODO: Validate param string\n          : never)\n    ),\n): ParseAbiParameter<param> {\n  let abiParameter: AbiParameter | undefined\n  if (typeof param === 'string')\n    abiParameter = parseAbiParameter_(param, {\n      modifiers,\n    }) as ParseAbiParameter<param>\n  else {\n    const structs = parseStructs(param as readonly string[])\n    const length = param.length as number\n    for (let i = 0; i < length; i++) {\n      const signature = (param as readonly string[])[i]!\n      if (isStructSignature(signature)) continue\n      abiParameter = parseAbiParameter_(signature, { modifiers, structs })\n      break\n    }\n  }\n\n  if (!abiParameter) throw new InvalidAbiParameterError({ param })\n\n  return abiParameter as ParseAbiParameter<param>\n}\n","import type { AbiParameter } from '../abi.js'\nimport type { Narrow } from '../narrow.js'\nimport type { Error, Filter } from '../types.js'\nimport { InvalidAbiParametersError } from './errors/abiParameter.js'\nimport { isStructSignature, modifiers } from './runtime/signatures.js'\nimport { parseStructs } from './runtime/structs.js'\nimport { splitParameters } from './runtime/utils.js'\nimport { parseAbiParameter as parseAbiParameter_ } from './runtime/utils.js'\nimport type { IsStructSignature, Modifier } from './types/signatures.js'\nimport type { ParseStructs } from './types/structs.js'\nimport type { SplitParameters } from './types/utils.js'\nimport type { ParseAbiParameters as ParseAbiParameters_ } from './types/utils.js'\n\n/**\n * Parses human-readable ABI parameters into {@link AbiParameter}s\n *\n * @param params - Human-readable ABI parameters\n * @returns Parsed {@link AbiParameter}s\n *\n * @example\n * type Result = ParseAbiParameters('address from, address to, uint256 amount')\n * //   ^? type Result: [{ type: \"address\"; name: \"from\"; }, { type: \"address\";...\n *\n * @example\n * type Result = ParseAbiParameters<\n *   // ^? type Result: [{ type: \"tuple\"; components: [{ type: \"string\"; name:...\n *   ['Baz bar', 'struct Baz { string name; }']\n * >\n */\nexport type ParseAbiParameters<\n  params extends string | readonly string[] | readonly unknown[],\n> =\n  | (params extends string\n      ? params extends ''\n        ? never\n        : string extends params\n          ? readonly AbiParameter[]\n          : ParseAbiParameters_<SplitParameters<params>, { modifier: Modifier }>\n      : never)\n  | (params extends readonly string[]\n      ? string[] extends params\n        ? AbiParameter // Return generic AbiParameter item since type was no inferrable\n        : ParseStructs<params> extends infer structs\n          ? {\n              [key in keyof params]: params[key] extends string\n                ? IsStructSignature<params[key]> extends true\n                  ? never\n                  : ParseAbiParameters_<\n                      SplitParameters<params[key]>,\n                      { modifier: Modifier; structs: structs }\n                    >\n                : never\n            } extends infer mapped extends readonly unknown[]\n            ? Filter<mapped, never> extends readonly [...infer content]\n              ? content['length'] extends 0\n                ? never\n                : DeepFlatten<content>\n              : never\n            : never\n          : never\n      : never)\n\n/**\n * Flatten all members of {@link T}\n *\n * @param T - List of items to flatten\n * @param Acc - The accumulator used while recursing\n * @returns The flattened array\n *\n * @example\n * type Result = DeepFlatten<[['a', 'b'], [['c']]]>\n * //   ^? type Result = ['a', 'b', 'c']\n */\ntype DeepFlatten<\n  T extends readonly unknown[],\n  Acc extends readonly unknown[] = readonly [],\n> = T extends readonly [infer head, ...infer tail]\n  ? tail extends undefined\n    ? never\n    : head extends readonly unknown[]\n      ? DeepFlatten<tail, readonly [...Acc, ...DeepFlatten<head>]>\n      : DeepFlatten<tail, readonly [...Acc, head]>\n  : Acc\n\n/**\n * Parses human-readable ABI parameters into {@link AbiParameter}s\n *\n * @param params - Human-readable ABI parameters\n * @returns Parsed {@link AbiParameter}s\n *\n * @example\n * const abiParameters = parseAbiParameters('address from, address to, uint256 amount')\n * //    ^? const abiParameters: [{ type: \"address\"; name: \"from\"; }, { type: \"address\";...\n *\n * @example\n * const abiParameters = parseAbiParameters([\n *   //  ^? const abiParameters: [{ type: \"tuple\"; components: [{ type: \"string\"; name:...\n *   'Baz bar',\n *   'struct Baz { string name; }',\n * ])\n */\nexport function parseAbiParameters<\n  params extends string | readonly string[] | readonly unknown[],\n>(\n  params: Narrow<params> &\n    (\n      | (params extends string\n          ? params extends ''\n            ? Error<'Empty string is not allowed.'>\n            : unknown\n          : never)\n      | (params extends readonly string[]\n          ? params extends readonly [] // empty array\n            ? Error<'At least one parameter required.'>\n            : string[] extends params\n              ? unknown\n              : unknown // TODO: Validate param string\n          : never)\n    ),\n): ParseAbiParameters<params> {\n  const abiParameters: AbiParameter[] = []\n  if (typeof params === 'string') {\n    const parameters = splitParameters(params)\n    const length = parameters.length\n    for (let i = 0; i < length; i++) {\n      abiParameters.push(parseAbiParameter_(parameters[i]!, { modifiers }))\n    }\n  } else {\n    const structs = parseStructs(params as readonly string[])\n    const length = params.length as number\n    for (let i = 0; i < length; i++) {\n      const signature = (params as readonly string[])[i]!\n      if (isStructSignature(signature)) continue\n      const parameters = splitParameters(signature)\n      const length = parameters.length\n      for (let k = 0; k < length; k++) {\n        abiParameters.push(\n          parseAbiParameter_(parameters[k]!, { modifiers, structs }),\n        )\n      }\n    }\n  }\n\n  if (abiParameters.length === 0)\n    throw new InvalidAbiParametersError({ params })\n\n  return abiParameters as ParseAbiParameters<params>\n}\n","import type { AbiItemType, AbiParameter } from '../../abi.js'\nimport type { StructLookup } from '../types/structs.js'\n\n/**\n * Gets {@link parameterCache} cache key namespaced by {@link type}. This prevents parameters from being accessible to types that don't allow them (e.g. `string indexed foo` not allowed outside of `type: 'event'`).\n * @param param ABI parameter string\n * @param type ABI parameter type\n * @returns Cache key for {@link parameterCache}\n */\nexport function getParameterCacheKey(\n  param: string,\n  type?: AbiItemType | 'struct',\n  structs?: StructLookup,\n) {\n  let structKey = ''\n  if (structs)\n    for (const struct of Object.entries(structs)) {\n      if (!struct) continue\n      let propertyKey = ''\n      for (const property of struct[1]) {\n        propertyKey += `[${property.type}${property.name ? `:${property.name}` : ''}]`\n      }\n      structKey += `(${struct[0]}{${propertyKey}})`\n    }\n  if (type) return `${type}:${param}${structKey}`\n  return param\n}\n\n/**\n * Basic cache seeded with common ABI parameter strings.\n *\n * **Note: When seeding more parameters, make sure you benchmark performance. The current number is the ideal balance between performance and having an already existing cache.**\n */\nexport const parameterCache = new Map<\n  string,\n  AbiParameter & { indexed?: boolean }\n>([\n  // Unnamed\n  ['address', { type: 'address' }],\n  ['bool', { type: 'bool' }],\n  ['bytes', { type: 'bytes' }],\n  ['bytes32', { type: 'bytes32' }],\n  ['int', { type: 'int256' }],\n  ['int256', { type: 'int256' }],\n  ['string', { type: 'string' }],\n  ['uint', { type: 'uint256' }],\n  ['uint8', { type: 'uint8' }],\n  ['uint16', { type: 'uint16' }],\n  ['uint24', { type: 'uint24' }],\n  ['uint32', { type: 'uint32' }],\n  ['uint64', { type: 'uint64' }],\n  ['uint96', { type: 'uint96' }],\n  ['uint112', { type: 'uint112' }],\n  ['uint160', { type: 'uint160' }],\n  ['uint192', { type: 'uint192' }],\n  ['uint256', { type: 'uint256' }],\n\n  // Named\n  ['address owner', { type: 'address', name: 'owner' }],\n  ['address to', { type: 'address', name: 'to' }],\n  ['bool approved', { type: 'bool', name: 'approved' }],\n  ['bytes _data', { type: 'bytes', name: '_data' }],\n  ['bytes data', { type: 'bytes', name: 'data' }],\n  ['bytes signature', { type: 'bytes', name: 'signature' }],\n  ['bytes32 hash', { type: 'bytes32', name: 'hash' }],\n  ['bytes32 r', { type: 'bytes32', name: 'r' }],\n  ['bytes32 root', { type: 'bytes32', name: 'root' }],\n  ['bytes32 s', { type: 'bytes32', name: 's' }],\n  ['string name', { type: 'string', name: 'name' }],\n  ['string symbol', { type: 'string', name: 'symbol' }],\n  ['string tokenURI', { type: 'string', name: 'tokenURI' }],\n  ['uint tokenId', { type: 'uint256', name: 'tokenId' }],\n  ['uint8 v', { type: 'uint8', name: 'v' }],\n  ['uint256 balance', { type: 'uint256', name: 'balance' }],\n  ['uint256 tokenId', { type: 'uint256', name: 'tokenId' }],\n  ['uint256 value', { type: 'uint256', name: 'value' }],\n\n  // Indexed\n  [\n    'event:address indexed from',\n    { type: 'address', name: 'from', indexed: true },\n  ],\n  ['event:address indexed to', { type: 'address', name: 'to', indexed: true }],\n  [\n    'event:uint indexed tokenId',\n    { type: 'uint256', name: 'tokenId', indexed: true },\n  ],\n  [\n    'event:uint256 indexed tokenId',\n    { type: 'uint256', name: 'tokenId', indexed: true },\n  ],\n])\n","import type { AbiStateMutability } from '../../abi.js'\nimport { execTyped } from '../../regex.js'\nimport type {\n  EventModifier,\n  FunctionModifier,\n  Modifier,\n} from '../types/signatures.js'\n\n// https://regexr.com/7gmok\nconst errorSignatureRegex =\n  /^error (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\\((?<parameters>.*?)\\)$/\nexport function isErrorSignature(signature: string) {\n  return errorSignatureRegex.test(signature)\n}\nexport function execErrorSignature(signature: string) {\n  return execTyped<{ name: string; parameters: string }>(\n    errorSignatureRegex,\n    signature,\n  )\n}\n\n// https://regexr.com/7gmoq\nconst eventSignatureRegex =\n  /^event (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\\((?<parameters>.*?)\\)$/\nexport function isEventSignature(signature: string) {\n  return eventSignatureRegex.test(signature)\n}\nexport function execEventSignature(signature: string) {\n  return execTyped<{ name: string; parameters: string }>(\n    eventSignatureRegex,\n    signature,\n  )\n}\n\n// https://regexr.com/7gmot\nconst functionSignatureRegex =\n  /^function (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\\((?<parameters>.*?)\\)(?: (?<scope>external|public{1}))?(?: (?<stateMutability>pure|view|nonpayable|payable{1}))?(?: returns\\s?\\((?<returns>.*?)\\))?$/\nexport function isFunctionSignature(signature: string) {\n  return functionSignatureRegex.test(signature)\n}\nexport function execFunctionSignature(signature: string) {\n  return execTyped<{\n    name: string\n    parameters: string\n    stateMutability?: AbiStateMutability\n    returns?: string\n  }>(functionSignatureRegex, signature)\n}\n\n// https://regexr.com/7gmp3\nconst structSignatureRegex =\n  /^struct (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*) \\{(?<properties>.*?)\\}$/\nexport function isStructSignature(signature: string) {\n  return structSignatureRegex.test(signature)\n}\nexport function execStructSignature(signature: string) {\n  return execTyped<{ name: string; properties: string }>(\n    structSignatureRegex,\n    signature,\n  )\n}\n\n// https://regexr.com/78u01\nconst constructorSignatureRegex =\n  /^constructor\\((?<parameters>.*?)\\)(?:\\s(?<stateMutability>payable{1}))?$/\nexport function isConstructorSignature(signature: string) {\n  return constructorSignatureRegex.test(signature)\n}\nexport function execConstructorSignature(signature: string) {\n  return execTyped<{\n    parameters: string\n    stateMutability?: Extract<AbiStateMutability, 'payable'>\n  }>(constructorSignatureRegex, signature)\n}\n\n// https://regexr.com/7srtn\nconst fallbackSignatureRegex =\n  /^fallback\\(\\) external(?:\\s(?<stateMutability>payable{1}))?$/\nexport function isFallbackSignature(signature: string) {\n  return fallbackSignatureRegex.test(signature)\n}\nexport function execFallbackSignature(signature: string) {\n  return execTyped<{\n    parameters: string\n    stateMutability?: Extract<AbiStateMutability, 'payable'>\n  }>(fallbackSignatureRegex, signature)\n}\n\n// https://regexr.com/78u1k\nconst receiveSignatureRegex = /^receive\\(\\) external payable$/\nexport function isReceiveSignature(signature: string) {\n  return receiveSignatureRegex.test(signature)\n}\n\nexport const modifiers = new Set<Modifier>([\n  'memory',\n  'indexed',\n  'storage',\n  'calldata',\n])\nexport const eventModifiers = new Set<EventModifier>(['indexed'])\nexport const functionModifiers = new Set<FunctionModifier>([\n  'calldata',\n  'memory',\n  'storage',\n])\n","import type { AbiParameter } from '../../abi.js'\nimport { execTyped, isTupleRegex } from '../../regex.js'\nimport { UnknownTypeError } from '../errors/abiItem.js'\nimport { InvalidAbiTypeParameterError } from '../errors/abiParameter.js'\nimport {\n  InvalidSignatureError,\n  InvalidStructSignatureError,\n} from '../errors/signature.js'\nimport { CircularReferenceError } from '../errors/struct.js'\nimport type { StructLookup } from '../types/structs.js'\nimport { execStructSignature, isStructSignature } from './signatures.js'\nimport { isSolidityType, parseAbiParameter } from './utils.js'\n\nexport function parseStructs(signatures: readonly string[]) {\n  // Create \"shallow\" version of each struct (and filter out non-structs or invalid structs)\n  const shallowStructs: StructLookup = {}\n  const signaturesLength = signatures.length\n  for (let i = 0; i < signaturesLength; i++) {\n    const signature = signatures[i]!\n    if (!isStructSignature(signature)) continue\n\n    const match = execStructSignature(signature)\n    if (!match) throw new InvalidSignatureError({ signature, type: 'struct' })\n\n    const properties = match.properties.split(';')\n\n    const components: AbiParameter[] = []\n    const propertiesLength = properties.length\n    for (let k = 0; k < propertiesLength; k++) {\n      const property = properties[k]!\n      const trimmed = property.trim()\n      if (!trimmed) continue\n      const abiParameter = parseAbiParameter(trimmed, {\n        type: 'struct',\n      })\n      components.push(abiParameter)\n    }\n\n    if (!components.length) throw new InvalidStructSignatureError({ signature })\n    shallowStructs[match.name] = components\n  }\n\n  // Resolve nested structs inside each parameter\n  const resolvedStructs: StructLookup = {}\n  const entries = Object.entries(shallowStructs)\n  const entriesLength = entries.length\n  for (let i = 0; i < entriesLength; i++) {\n    const [name, parameters] = entries[i]!\n    resolvedStructs[name] = resolveStructs(parameters, shallowStructs)\n  }\n\n  return resolvedStructs\n}\n\nconst typeWithoutTupleRegex =\n  /^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*)(?<array>(?:\\[\\d*?\\])+?)?$/\n\nfunction resolveStructs(\n  abiParameters: readonly (AbiParameter & { indexed?: true })[],\n  structs: StructLookup,\n  ancestors = new Set<string>(),\n) {\n  const components: AbiParameter[] = []\n  const length = abiParameters.length\n  for (let i = 0; i < length; i++) {\n    const abiParameter = abiParameters[i]!\n    const isTuple = isTupleRegex.test(abiParameter.type)\n    if (isTuple) components.push(abiParameter)\n    else {\n      const match = execTyped<{ array?: string; type: string }>(\n        typeWithoutTupleRegex,\n        abiParameter.type,\n      )\n      if (!match?.type) throw new InvalidAbiTypeParameterError({ abiParameter })\n\n      const { array, type } = match\n      if (type in structs) {\n        if (ancestors.has(type)) throw new CircularReferenceError({ type })\n\n        components.push({\n          ...abiParameter,\n          type: `tuple${array ?? ''}`,\n          components: resolveStructs(\n            structs[type] ?? [],\n            structs,\n            new Set([...ancestors, type]),\n          ),\n        })\n      } else {\n        if (isSolidityType(type)) components.push(abiParameter)\n        else throw new UnknownTypeError({ type })\n      }\n    }\n  }\n\n  return components\n}\n","import type {\n  AbiItemType,\n  AbiType,\n  SolidityArray,\n  SolidityBytes,\n  SolidityString,\n  SolidityTuple,\n} from '../../abi.js'\nimport {\n  bytesRegex,\n  execTyped,\n  integerRegex,\n  isTupleRegex,\n} from '../../regex.js'\nimport { UnknownSolidityTypeError } from '../errors/abiItem.js'\nimport {\n  InvalidFunctionModifierError,\n  InvalidModifierError,\n  InvalidParameterError,\n  SolidityProtectedKeywordError,\n} from '../errors/abiParameter.js'\nimport {\n  InvalidSignatureError,\n  UnknownSignatureError,\n} from '../errors/signature.js'\nimport { InvalidParenthesisError } from '../errors/splitParameters.js'\nimport type { FunctionModifier, Modifier } from '../types/signatures.js'\nimport type { StructLookup } from '../types/structs.js'\nimport { getParameterCacheKey, parameterCache } from './cache.js'\nimport {\n  eventModifiers,\n  execConstructorSignature,\n  execErrorSignature,\n  execEventSignature,\n  execFallbackSignature,\n  execFunctionSignature,\n  functionModifiers,\n  isConstructorSignature,\n  isErrorSignature,\n  isEventSignature,\n  isFallbackSignature,\n  isFunctionSignature,\n  isReceiveSignature,\n} from './signatures.js'\n\nexport function parseSignature(signature: string, structs: StructLookup = {}) {\n  if (isFunctionSignature(signature))\n    return parseFunctionSignature(signature, structs)\n\n  if (isEventSignature(signature))\n    return parseEventSignature(signature, structs)\n\n  if (isErrorSignature(signature))\n    return parseErrorSignature(signature, structs)\n\n  if (isConstructorSignature(signature))\n    return parseConstructorSignature(signature, structs)\n\n  if (isFallbackSignature(signature)) return parseFallbackSignature(signature)\n\n  if (isReceiveSignature(signature))\n    return {\n      type: 'receive',\n      stateMutability: 'payable',\n    }\n\n  throw new UnknownSignatureError({ signature })\n}\n\nexport function parseFunctionSignature(\n  signature: string,\n  structs: StructLookup = {},\n) {\n  const match = execFunctionSignature(signature)\n  if (!match) throw new InvalidSignatureError({ signature, type: 'function' })\n\n  const inputParams = splitParameters(match.parameters)\n  const inputs = []\n  const inputLength = inputParams.length\n  for (let i = 0; i < inputLength; i++) {\n    inputs.push(\n      parseAbiParameter(inputParams[i]!, {\n        modifiers: functionModifiers,\n        structs,\n        type: 'function',\n      }),\n    )\n  }\n\n  const outputs = []\n  if (match.returns) {\n    const outputParams = splitParameters(match.returns)\n    const outputLength = outputParams.length\n    for (let i = 0; i < outputLength; i++) {\n      outputs.push(\n        parseAbiParameter(outputParams[i]!, {\n          modifiers: functionModifiers,\n          structs,\n          type: 'function',\n        }),\n      )\n    }\n  }\n\n  return {\n    name: match.name,\n    type: 'function',\n    stateMutability: match.stateMutability ?? 'nonpayable',\n    inputs,\n    outputs,\n  }\n}\n\nexport function parseEventSignature(\n  signature: string,\n  structs: StructLookup = {},\n) {\n  const match = execEventSignature(signature)\n  if (!match) throw new InvalidSignatureError({ signature, type: 'event' })\n\n  const params = splitParameters(match.parameters)\n  const abiParameters = []\n  const length = params.length\n  for (let i = 0; i < length; i++)\n    abiParameters.push(\n      parseAbiParameter(params[i]!, {\n        modifiers: eventModifiers,\n        structs,\n        type: 'event',\n      }),\n    )\n  return { name: match.name, type: 'event', inputs: abiParameters }\n}\n\nexport function parseErrorSignature(\n  signature: string,\n  structs: StructLookup = {},\n) {\n  const match = execErrorSignature(signature)\n  if (!match) throw new InvalidSignatureError({ signature, type: 'error' })\n\n  const params = splitParameters(match.parameters)\n  const abiParameters = []\n  const length = params.length\n  for (let i = 0; i < length; i++)\n    abiParameters.push(\n      parseAbiParameter(params[i]!, { structs, type: 'error' }),\n    )\n  return { name: match.name, type: 'error', inputs: abiParameters }\n}\n\nexport function parseConstructorSignature(\n  signature: string,\n  structs: StructLookup = {},\n) {\n  const match = execConstructorSignature(signature)\n  if (!match)\n    throw new InvalidSignatureError({ signature, type: 'constructor' })\n\n  const params = splitParameters(match.parameters)\n  const abiParameters = []\n  const length = params.length\n  for (let i = 0; i < length; i++)\n    abiParameters.push(\n      parseAbiParameter(params[i]!, { structs, type: 'constructor' }),\n    )\n  return {\n    type: 'constructor',\n    stateMutability: match.stateMutability ?? 'nonpayable',\n    inputs: abiParameters,\n  }\n}\n\nexport function parseFallbackSignature(signature: string) {\n  const match = execFallbackSignature(signature)\n  if (!match) throw new InvalidSignatureError({ signature, type: 'fallback' })\n\n  return {\n    type: 'fallback',\n    stateMutability: match.stateMutability ?? 'nonpayable',\n  }\n}\n\nconst abiParameterWithoutTupleRegex =\n  /^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*)(?<array>(?:\\[\\d*?\\])+?)?(?:\\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$/\nconst abiParameterWithTupleRegex =\n  /^\\((?<type>.+?)\\)(?<array>(?:\\[\\d*?\\])+?)?(?:\\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$/\nconst dynamicIntegerRegex = /^u?int$/\n\ntype ParseOptions = {\n  modifiers?: Set<Modifier>\n  structs?: StructLookup\n  type?: AbiItemType | 'struct'\n}\n\nexport function parseAbiParameter(param: string, options?: ParseOptions) {\n  // optional namespace cache by `type`\n  const parameterCacheKey = getParameterCacheKey(\n    param,\n    options?.type,\n    options?.structs,\n  )\n  if (parameterCache.has(parameterCacheKey))\n    return parameterCache.get(parameterCacheKey)!\n\n  const isTuple = isTupleRegex.test(param)\n  const match = execTyped<{\n    array?: string\n    modifier?: Modifier\n    name?: string\n    type: string\n  }>(\n    isTuple ? abiParameterWithTupleRegex : abiParameterWithoutTupleRegex,\n    param,\n  )\n  if (!match) throw new InvalidParameterError({ param })\n\n  if (match.name && isSolidityKeyword(match.name))\n    throw new SolidityProtectedKeywordError({ param, name: match.name })\n\n  const name = match.name ? { name: match.name } : {}\n  const indexed = match.modifier === 'indexed' ? { indexed: true } : {}\n  const structs = options?.structs ?? {}\n  let type: string\n  let components = {}\n  if (isTuple) {\n    type = 'tuple'\n    const params = splitParameters(match.type)\n    const components_ = []\n    const length = params.length\n    for (let i = 0; i < length; i++) {\n      // remove `modifiers` from `options` to prevent from being added to tuple components\n      components_.push(parseAbiParameter(params[i]!, { structs }))\n    }\n    components = { components: components_ }\n  } else if (match.type in structs) {\n    type = 'tuple'\n    components = { components: structs[match.type] }\n  } else if (dynamicIntegerRegex.test(match.type)) {\n    type = `${match.type}256`\n  } else {\n    type = match.type\n    if (!(options?.type === 'struct') && !isSolidityType(type))\n      throw new UnknownSolidityTypeError({ type })\n  }\n\n  if (match.modifier) {\n    // Check if modifier exists, but is not allowed (e.g. `indexed` in `functionModifiers`)\n    if (!options?.modifiers?.has?.(match.modifier))\n      throw new InvalidModifierError({\n        param,\n        type: options?.type,\n        modifier: match.modifier,\n      })\n\n    // Check if resolved `type` is valid if there is a function modifier\n    if (\n      functionModifiers.has(match.modifier as FunctionModifier) &&\n      !isValidDataLocation(type, !!match.array)\n    )\n      throw new InvalidFunctionModifierError({\n        param,\n        type: options?.type,\n        modifier: match.modifier,\n      })\n  }\n\n  const abiParameter = {\n    type: `${type}${match.array ?? ''}`,\n    ...name,\n    ...indexed,\n    ...components,\n  }\n  parameterCache.set(parameterCacheKey, abiParameter)\n  return abiParameter\n}\n\n// s/o latika for this\nexport function splitParameters(\n  params: string,\n  result: string[] = [],\n  current = '',\n  depth = 0,\n): readonly string[] {\n  const length = params.trim().length\n  // biome-ignore lint/correctness/noUnreachable: recursive\n  for (let i = 0; i < length; i++) {\n    const char = params[i]\n    const tail = params.slice(i + 1)\n    switch (char) {\n      case ',':\n        return depth === 0\n          ? splitParameters(tail, [...result, current.trim()])\n          : splitParameters(tail, result, `${current}${char}`, depth)\n      case '(':\n        return splitParameters(tail, result, `${current}${char}`, depth + 1)\n      case ')':\n        return splitParameters(tail, result, `${current}${char}`, depth - 1)\n      default:\n        return splitParameters(tail, result, `${current}${char}`, depth)\n    }\n  }\n\n  if (current === '') return result\n  if (depth !== 0) throw new InvalidParenthesisError({ current, depth })\n\n  result.push(current.trim())\n  return result\n}\n\nexport function isSolidityType(\n  type: string,\n): type is Exclude<AbiType, SolidityTuple | SolidityArray> {\n  return (\n    type === 'address' ||\n    type === 'bool' ||\n    type === 'function' ||\n    type === 'string' ||\n    bytesRegex.test(type) ||\n    integerRegex.test(type)\n  )\n}\n\nconst protectedKeywordsRegex =\n  /^(?:after|alias|anonymous|apply|auto|byte|calldata|case|catch|constant|copyof|default|defined|error|event|external|false|final|function|immutable|implements|in|indexed|inline|internal|let|mapping|match|memory|mutable|null|of|override|partial|private|promise|public|pure|reference|relocatable|return|returns|sizeof|static|storage|struct|super|supports|switch|this|true|try|typedef|typeof|var|view|virtual)$/\n\n/** @internal */\nexport function isSolidityKeyword(name: string) {\n  return (\n    name === 'address' ||\n    name === 'bool' ||\n    name === 'function' ||\n    name === 'string' ||\n    name === 'tuple' ||\n    bytesRegex.test(name) ||\n    integerRegex.test(name) ||\n    protectedKeywordsRegex.test(name)\n  )\n}\n\n/** @internal */\nexport function isValidDataLocation(\n  type: string,\n  isArray: boolean,\n): type is Exclude<\n  AbiType,\n  SolidityString | Extract<SolidityBytes, 'bytes'> | SolidityArray\n> {\n  return isArray || type === 'bytes' || type === 'string' || type === 'tuple'\n}\n","/**\n * Infers embedded primitive type of any type\n *\n * @param T - Type to infer\n * @returns Embedded type of {@link type}\n *\n * @example\n * type Result = Narrow<['foo', 'bar', 1]>\n */\n// s/o https://twitter.com/hd_nvim/status/1578567206190780417\nexport type Narrow<type> =\n  | (unknown extends type ? unknown : never)\n  | (type extends Function ? type : never)\n  | (type extends bigint | boolean | number | string ? type : never)\n  | (type extends [] ? [] : never)\n  | { [K in keyof type]: Narrow<type[K]> }\n\n/**\n * Infers embedded primitive type of any type\n * Same as `as const` but without setting the object as readonly and without needing the user to use it.\n *\n * @param value - Value to infer\n * @returns Value with embedded type inferred\n *\n * @example\n * const result = narrow(['foo', 'bar', 1])\n */\nexport function narrow<type>(value: Narrow<type>) {\n  return value\n}\n","// TODO: This looks cool. Need to check the performance of `new RegExp` versus defined inline though.\n// https://twitter.com/GabrielVergnaud/status/1622906834343366657\nexport function execTyped<type>(regex: RegExp, string: string) {\n  const match = regex.exec(string)\n  return match?.groups as type | undefined\n}\n\n// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n// https://regexr.com/6va55\nexport const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/\n\n// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n// https://regexr.com/6v8hp\nexport const integerRegex =\n  /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/\n\nexport const isTupleRegex = /^\\(.+?\\).*?$/\n","export const version = '1.0.8'\n","import * as abitype from 'abitype'\nimport type * as Abi from './Abi.js'\nimport * as AbiItem from './AbiItem.js'\nimport * as AbiParameters from './AbiParameters.js'\nimport type * as Errors from './Errors.js'\nimport * as Hex from './Hex.js'\nimport type * as internal from './internal/abiConstructor.js'\nimport type { IsNarrowable } from './internal/types.js'\n\n/** Root type for an {@link ox#AbiItem.AbiItem} with a `constructor` type. */\nexport type AbiConstructor = abitype.AbiConstructor\n\n/** @internal */\nexport function decode<const abiConstructor extends AbiConstructor>(\n  abiConstructor: abiConstructor,\n  options: decode.Options,\n): decode.ReturnType<abiConstructor>\n/**\n * ABI-decodes the provided constructor input (`inputs`).\n *\n * @example\n * ```ts twoslash\n * import { AbiConstructor } from 'ox'\n *\n * const constructor = AbiConstructor.from('constructor(address, uint256)')\n *\n * const bytecode = '0x...'\n *\n * const data = AbiConstructor.encode(constructor, {\n *   bytecode,\n *   args: ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 123n],\n * })\n *\n * const decoded = AbiConstructor.decode(constructor, { // [!code focus]\n *   bytecode, // [!code focus]\n *   data, // [!code focus]\n * }) // [!code focus]\n * ```\n *\n * @param abiConstructor - The ABI Constructor to decode.\n * @param options - Decoding options.\n * @returns The decoded constructor inputs.\n */\nexport function decode(\n  abiConstructor: AbiConstructor,\n  options: decode.Options,\n): readonly unknown[] | undefined\n/** @internal */\nexport function decode(\n  abiConstructor: AbiConstructor,\n  options: decode.Options,\n): decode.ReturnType {\n  const { bytecode } = options\n  if (abiConstructor.inputs.length === 0) return undefined\n  const data = options.data.replace(bytecode, '0x') as Hex.Hex\n  return AbiParameters.decode(abiConstructor.inputs, data)\n}\n\nexport declare namespace decode {\n  interface Options {\n    /** The bytecode of the contract. */\n    bytecode: Hex.Hex\n    /** The encoded constructor. */\n    data: Hex.Hex\n  }\n\n  type ReturnType<abiConstructor extends AbiConstructor = AbiConstructor> =\n    | (abiConstructor['inputs']['length'] extends 0\n        ? undefined\n        : abitype.AbiParametersToPrimitiveTypes<abiConstructor['inputs']>)\n    | (IsNarrowable<abiConstructor, AbiConstructor> extends true\n        ? never\n        : undefined)\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * ABI-encodes the provided constructor input (`inputs`).\n *\n * @example\n * ```ts twoslash\n * import { AbiConstructor } from 'ox'\n *\n * const constructor = AbiConstructor.from('constructor(address, uint256)')\n *\n * const data = AbiConstructor.encode(constructor, {\n *   bytecode: '0x...',\n *   args: ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 123n],\n * })\n * ```\n *\n * @example\n * ### End-to-end\n *\n * Below is an end-to-end example of using `AbiConstructor.encode` to encode the constructor of a contract and deploy it.\n *\n * ```ts twoslash\n * import 'ox/window'\n * import { AbiConstructor, Hex } from 'ox'\n *\n * // 1. Instantiate the ABI Constructor.\n * const constructor = AbiConstructor.from(\n *   'constructor(address owner, uint256 amount)',\n * )\n *\n * // 2. Encode the ABI Constructor.\n * const data = AbiConstructor.encode(constructor, {\n *   bytecode: '0x...',\n *   args: ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 123n],\n * })\n *\n * // 3. Deploy the contract.\n * const hash = await window.ethereum!.request({\n *   method: 'eth_sendTransaction',\n *   params: [{ data }],\n * })\n * ```\n *\n * :::note\n *\n * For simplicity, the above example uses `window.ethereum.request`, but you can use any\n * type of JSON-RPC interface.\n *\n * :::\n *\n * @param abiConstructor - The ABI Constructor to encode.\n * @param options - Encoding options.\n * @returns The encoded constructor.\n */\nexport function encode<const abiConstructor extends AbiConstructor>(\n  abiConstructor: abiConstructor,\n  options: encode.Options<abiConstructor>,\n): encode.ReturnType {\n  const { bytecode, args } = options\n  return Hex.concat(\n    bytecode,\n    abiConstructor.inputs?.length && args?.length\n      ? AbiParameters.encode(abiConstructor.inputs, args as readonly unknown[])\n      : '0x',\n  )\n}\n\nexport declare namespace encode {\n  type Options<\n    abiConstructor extends AbiConstructor = AbiConstructor,\n    ///\n    args extends abitype.AbiParametersToPrimitiveTypes<\n      abiConstructor['inputs']\n    > = abitype.AbiParametersToPrimitiveTypes<abiConstructor['inputs']>,\n  > = {\n    /** The bytecode of the contract. */\n    bytecode: Hex.Hex\n    /** The constructor arguments to encode. */\n    args?: args | undefined\n  } & (readonly [] extends args\n    ? {}\n    : {\n        /** The constructor arguments to encode. */\n        args: args\n      })\n\n  type ReturnType = Hex.Hex\n\n  type ErrorType =\n    | Hex.concat.ErrorType\n    | AbiParameters.encode.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function format<const abiConstructor extends AbiConstructor>(\n  abiConstructor: abiConstructor,\n): format.ReturnType<abiConstructor>\n/**\n * Formats an {@link ox#AbiConstructor.AbiConstructor} into a **Human Readable ABI Function**.\n *\n * @example\n * ```ts twoslash\n * import { AbiConstructor } from 'ox'\n *\n * const formatted = AbiConstructor.format({\n *   inputs: [\n *     { name: 'owner', type: 'address' },\n *   ],\n *   payable: false,\n *   stateMutability: 'nonpayable',\n *   type: 'constructor',\n * })\n *\n * formatted\n * //    ^?\n *\n *\n * ```\n *\n * @param abiConstructor - The ABI Constructor to format.\n * @returns The formatted ABI Constructor.\n */\nexport function format(abiConstructor: AbiConstructor): string\n/** @internal */\nexport function format(abiConstructor: AbiConstructor): format.ReturnType {\n  return abitype.formatAbiItem(abiConstructor)\n}\n\nexport declare namespace format {\n  type ReturnType<abiConstructor extends AbiConstructor = AbiConstructor> =\n    abitype.FormatAbiItem<abiConstructor>\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function from<\n  const abiConstructor extends AbiConstructor | string | readonly string[],\n>(\n  abiConstructor: (abiConstructor | string | readonly string[]) &\n    (\n      | (abiConstructor extends string\n          ? internal.Signature<abiConstructor>\n          : never)\n      | (abiConstructor extends readonly string[]\n          ? internal.Signatures<abiConstructor>\n          : never)\n      | AbiConstructor\n    ),\n): from.ReturnType<abiConstructor>\n/**\n * Parses an arbitrary **JSON ABI Constructor** or **Human Readable ABI Constructor** into a typed {@link ox#AbiConstructor.AbiConstructor}.\n *\n * @example\n * ### JSON ABIs\n *\n * ```ts twoslash\n * import { AbiConstructor } from 'ox'\n *\n * const constructor = AbiConstructor.from({\n *   inputs: [\n *     { name: 'owner', type: 'address' },\n *   ],\n *   payable: false,\n *   stateMutability: 'nonpayable',\n *   type: 'constructor',\n * })\n *\n * constructor\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * ### Human Readable ABIs\n *\n * A Human Readable ABI can be parsed into a typed ABI object:\n *\n * ```ts twoslash\n * import { AbiConstructor } from 'ox'\n *\n * const constructor = AbiConstructor.from(\n *   'constructor(address owner)' // [!code hl]\n * )\n *\n * constructor\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * It is possible to specify `struct`s along with your definitions:\n *\n * ```ts twoslash\n * import { AbiConstructor } from 'ox'\n *\n * const constructor = AbiConstructor.from([\n *   'struct Foo { address owner; uint256 amount; }', // [!code hl]\n *   'constructor(Foo foo)',\n * ])\n *\n * constructor\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n *\n *\n * @param abiConstructor - The ABI Constructor to parse.\n * @returns Typed ABI Constructor.\n */\nexport function from(\n  abiConstructor: AbiConstructor | string | readonly string[],\n): AbiConstructor\n/** @internal */\nexport function from(\n  abiConstructor: AbiConstructor | string | readonly string[],\n): from.ReturnType {\n  return AbiItem.from(abiConstructor as AbiConstructor)\n}\n\nexport declare namespace from {\n  type ReturnType<\n    abiConstructor extends\n      | AbiConstructor\n      | string\n      | readonly string[] = AbiConstructor,\n  > = AbiItem.from.ReturnType<abiConstructor>\n\n  type ErrorType = AbiItem.from.ErrorType | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function fromAbi<const abi extends Abi.Abi | readonly unknown[]>(\n  abi: abi | Abi.Abi | readonly unknown[],\n): fromAbi.ReturnType<abi>\n/**\n * Extracts an {@link ox#AbiConstructor.AbiConstructor} from an {@link ox#Abi.Abi} given a name and optional arguments.\n *\n * @example\n * ### Extracting by Name\n *\n * ABI Events can be extracted by their name using the `name` option:\n *\n * ```ts twoslash\n * import { Abi, AbiConstructor } from 'ox'\n *\n * const abi = Abi.from([\n *   'constructor(address owner)',\n *   'function foo()',\n *   'event Transfer(address owner, address to, uint256 tokenId)',\n *   'function bar(string a) returns (uint256 x)',\n * ])\n *\n * const item = AbiConstructor.fromAbi(abi) // [!code focus]\n * //    ^?\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @returns The ABI constructor.\n */\nexport function fromAbi(abi: Abi.Abi | readonly unknown[]): AbiConstructor\n/** @internal */\nexport function fromAbi(abi: Abi.Abi | readonly unknown[]): fromAbi.ReturnType {\n  const item = (abi as Abi.Abi).find((item) => item.type === 'constructor')\n  if (!item) throw new AbiItem.NotFoundError({ name: 'constructor' })\n  return item\n}\n\nexport declare namespace fromAbi {\n  type ReturnType<abi extends Abi.Abi | readonly unknown[] = Abi.Abi> = Extract<\n    abi[number],\n    { type: 'constructor' }\n  >\n\n  type ErrorType = AbiItem.NotFoundError | Errors.GlobalErrorType\n}\n","import * as abitype from 'abitype'\nimport type * as Abi from './Abi.js'\nimport * as AbiItem from './AbiItem.js'\nimport * as AbiParameters from './AbiParameters.js'\nimport type * as Errors from './Errors.js'\nimport * as Hex from './Hex.js'\nimport type * as internal from './internal/abiFunction.js'\nimport type * as AbiItem_internal from './internal/abiItem.js'\nimport type * as AbiParameters_internal from './internal/abiParameters.js'\nimport type { IsNarrowable } from './internal/types.js'\n\n/** Root type for an {@link ox#AbiItem.AbiItem} with a `function` type. */\nexport type AbiFunction = abitype.AbiFunction & {\n  hash?: Hex.Hex | undefined\n  overloads?: readonly AbiFunction[] | undefined\n}\n\n/**\n * Extracts an {@link ox#AbiFunction.AbiFunction} item from an {@link ox#Abi.Abi}, given a name.\n *\n * @example\n * ```ts twoslash\n * import { Abi, AbiFunction } from 'ox'\n *\n * const abi = Abi.from([\n *   'function foo(string)',\n *   'function bar(uint256)',\n * ])\n *\n * type Foo = AbiFunction.FromAbi<typeof abi, 'foo'>\n * //   ^?\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n */\nexport type FromAbi<\n  abi extends Abi.Abi,\n  name extends ExtractNames<abi>,\n> = abitype.ExtractAbiFunction<abi, name>\n\n/**\n * Extracts the names of all {@link ox#AbiFunction.AbiFunction} items in an {@link ox#Abi.Abi}.\n *\n * @example\n * ```ts twoslash\n * import { Abi, AbiFunction } from 'ox'\n *\n * const abi = Abi.from([\n *   'function foo(string)',\n *   'function bar(uint256)',\n * ])\n *\n * type names = AbiFunction.Name<typeof abi>\n * //   ^?\n *\n *\n * ```\n */\nexport type Name<abi extends Abi.Abi | readonly unknown[] = Abi.Abi> =\n  abi extends Abi.Abi ? ExtractNames<abi> : string\n\nexport type ExtractNames<\n  abi extends Abi.Abi,\n  abiStateMutability extends\n    abitype.AbiStateMutability = abitype.AbiStateMutability,\n> = abitype.ExtractAbiFunctionNames<abi, abiStateMutability>\n\n/**\n * ABI-decodes function arguments according to the ABI Item's input types (`inputs`).\n *\n * @example\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const approve = AbiFunction.from('function approve(address, uint256)')\n *\n * const data = AbiFunction.encodeData(\n *   approve,\n *   ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 69420n]\n * )\n * // '0x095ea7b3000000000000000000000000d8da6bf26964af9d7eed9e03e53415d37aa960450000000000000000000000000000000000000000000000000000000000010f2c'\n *\n * const input = AbiFunction.decodeData(approve, data) // [!code focus]\n * // @log: ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 69420n]\n * ```\n *\n * @param abiFunction - The ABI Item to decode.\n * @param data - The data to decode.\n */\nexport function decodeData<const abiItem extends AbiFunction>(\n  abiFunction: abiItem | AbiFunction,\n  data: Hex.Hex,\n): decodeData.ReturnType<abiItem> {\n  const { overloads } = abiFunction\n\n  if (Hex.size(data) < 4) throw new AbiItem.InvalidSelectorSizeError({ data })\n  if (abiFunction.inputs.length === 0) return undefined\n\n  const item = overloads\n    ? fromAbi([abiFunction, ...overloads], data as never)\n    : abiFunction\n\n  if (Hex.size(data) <= 4) return undefined\n  return AbiParameters.decode(item.inputs, Hex.slice(data, 4))\n}\n\nexport declare namespace decodeData {\n  type ReturnType<abiFunction extends AbiFunction = AbiFunction> = IsNarrowable<\n    abiFunction,\n    AbiFunction\n  > extends true\n    ? abiFunction['inputs'] extends readonly []\n      ? undefined\n      :\n          | AbiParameters_internal.ToPrimitiveTypes<abiFunction['inputs']>\n          | (abiFunction['overloads'] extends readonly AbiFunction[]\n              ? AbiParameters_internal.ToPrimitiveTypes<\n                  abiFunction['overloads'][number]['inputs']\n                >\n              : never)\n    : unknown\n\n  type ErrorType =\n    | fromAbi.ErrorType\n    | AbiParameters.decode.ErrorType\n    | Hex.size.ErrorType\n    | Hex.slice.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * ABI-decodes a function's result according to the ABI Item's output types (`outputs`).\n *\n * :::tip\n *\n * This function is typically used to decode contract function return values (e.g. the response of an `eth_call` or the `input` property of a Transaction).\n *\n * See the [End-to-end Example](#end-to-end).\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const data = '0x000000000000000000000000000000000000000000000000000000000000002a'\n *\n * const totalSupply = AbiFunction.from('function totalSupply() returns (uint256)')\n *\n * const output = AbiFunction.decodeResult(totalSupply, data)\n * // @log: 42n\n * ```\n *\n * @example\n * You can extract an ABI Function from a JSON ABI with {@link ox#AbiFunction.(fromAbi:function)}:\n *\n * ```ts twoslash\n * // @noErrors\n * import { Abi, AbiFunction } from 'ox'\n *\n * const data = '0x000000000000000000000000000000000000000000000000000000000000002a'\n *\n * const erc20Abi = Abi.from([...]) // [!code hl]\n * const totalSupply = AbiFunction.fromAbi(erc20Abi, 'totalSupply') // [!code hl]\n *\n * const output = AbiFunction.decodeResult(totalSupply, data)\n * // @log: 42n\n * ```\n *\n * @example\n * ### End-to-end\n *\n * Below is an end-to-end example of using `AbiFunction.decodeResult` to decode the result of a `balanceOf` contract call on the [Wagmi Mint Example contract](https://etherscan.io/address/0xfba3912ca04dd458c843e2ee08967fc04f3579c2).\n *\n * ```ts twoslash\n * import 'ox/window'\n * import { Abi, AbiFunction } from 'ox'\n *\n * // 1. Extract the Function from the Contract's ABI.\n * const abi = Abi.from([\n *   // ...\n *   {\n *     name: 'balanceOf',\n *     type: 'function',\n *     inputs: [{ name: 'account', type: 'address' }],\n *     outputs: [{ name: 'balance', type: 'uint256' }],\n *     stateMutability: 'view',\n *   },\n *   // ...\n * ])\n * const balanceOf = AbiFunction.fromAbi(abi, 'balanceOf')\n *\n * // 2. Encode the Function Input.\n * const data = AbiFunction.encodeData(\n *   balanceOf,\n *   ['0xd2135CfB216b74109775236E36d4b433F1DF507B']\n * )\n *\n * // 3. Perform the Contract Call.\n * const response = await window.ethereum!.request({\n *   method: 'eth_call',\n *   params: [\n *     {\n *       data,\n *       to: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\n *     },\n *   ],\n * })\n *\n * // 4. Decode the Function Output. // [!code focus]\n * const balance = AbiFunction.decodeResult(balanceOf, response) // [!code focus]\n * // @log: 42n\n * ```\n *\n * :::note\n *\n * For simplicity, the above example uses `window.ethereum.request`, but you can use any\n * type of JSON-RPC interface.\n *\n * :::\n *\n * @param abiFunction - ABI Function to decode\n * @param data - ABI-encoded function output\n * @param options - Decoding options\n * @returns Decoded function output\n */\nexport function decodeResult<\n  const abiFunction extends AbiFunction,\n  as extends 'Object' | 'Array' = 'Array',\n>(\n  abiFunction: abiFunction | AbiFunction,\n  data: Hex.Hex,\n  options: decodeResult.Options<as> = {},\n): decodeResult.ReturnType<abiFunction, as> {\n  const values = AbiParameters.decode(abiFunction.outputs, data, options)\n  if (values && Object.keys(values).length === 0) return undefined\n  if (values && Object.keys(values).length === 1) {\n    if (Array.isArray(values)) return values[0]\n    return Object.values(values)[0]\n  }\n  return values\n}\n\nexport declare namespace decodeResult {\n  type Options<as extends 'Object' | 'Array'> = {\n    /**\n     * Whether the decoded values should be returned as an `Object` or `Array`.\n     *\n     * @default \"Array\"\n     */\n    as?: as | 'Array' | 'Object' | undefined\n  }\n\n  type ReturnType<\n    abiFunction extends AbiFunction = AbiFunction,\n    as extends 'Object' | 'Array' = 'Array',\n  > = IsNarrowable<abiFunction, AbiFunction> extends true\n    ? abiFunction['outputs'] extends readonly []\n      ? undefined\n      : abiFunction['outputs'] extends readonly [\n            infer type extends abitype.AbiParameter,\n          ]\n        ? abitype.AbiParameterToPrimitiveType<type>\n        : AbiParameters.decode.ReturnType<\n              abiFunction['outputs'],\n              as\n            > extends infer types\n          ? types extends readonly []\n            ? undefined\n            : types extends readonly [infer type]\n              ? type\n              : types\n          : never\n    : unknown\n\n  type ErrorType = AbiParameters.decode.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * ABI-encodes function arguments (`inputs`), prefixed with the 4 byte function selector.\n *\n * :::tip\n *\n * This function is typically used to encode a contract function and its arguments for contract calls (e.g. `data` parameter of an `eth_call` or `eth_sendTransaction`).\n *\n * See the [End-to-end Example](#end-to-end).\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const approve = AbiFunction.from('function approve(address, uint256)')\n *\n * const data = AbiFunction.encodeData( // [!code focus]\n *   approve, // [!code focus]\n *   ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 69420n] // [!code focus]\n * ) // [!code focus]\n * // @log: '0x095ea7b3000000000000000000000000d8da6bf26964af9d7eed9e03e53415d37aa960450000000000000000000000000000000000000000000000000000000000010f2c'\n * ```\n *\n * @example\n * You can extract an ABI Function from a JSON ABI with {@link ox#AbiFunction.(fromAbi:function)}:\n *\n * ```ts twoslash\n * // @noErrors\n * import { Abi, AbiFunction } from 'ox'\n *\n * const erc20Abi = Abi.from([...]) // [!code hl]\n * const approve = AbiFunction.fromAbi(erc20Abi, 'approve') // [!code hl]\n *\n * const data = AbiFunction.encodeData(\n *   approve,\n *   ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 69420n]\n * )\n * // @log: '0x095ea7b3000000000000000000000000d8da6bf26964af9d7eed9e03e53415d37aa960450000000000000000000000000000000000000000000000000000000000010f2c'\n * ```\n *\n * @example\n * ### End-to-end\n *\n * Below is an end-to-end example of using `AbiFunction.encodeData` to encode the input of a `balanceOf` contract call on the [Wagmi Mint Example contract](https://etherscan.io/address/0xfba3912ca04dd458c843e2ee08967fc04f3579c2).\n *\n * ```ts twoslash\n * import 'ox/window'\n * import { Abi, AbiFunction } from 'ox'\n *\n * // 1. Extract the Function from the Contract's ABI.\n * const abi = Abi.from([\n *   // ...\n *   {\n *     name: 'balanceOf',\n *     type: 'function',\n *     inputs: [{ name: 'account', type: 'address' }],\n *     outputs: [{ name: 'balance', type: 'uint256' }],\n *     stateMutability: 'view',\n *   },\n *   // ...\n * ])\n * const balanceOf = AbiFunction.fromAbi(abi, 'balanceOf')\n *\n * // 2. Encode the Function Input. // [!code focus]\n * const data = AbiFunction.encodeData( // [!code focus]\n *   balanceOf, // [!code focus]\n *   ['0xd2135CfB216b74109775236E36d4b433F1DF507B'] // [!code focus]\n * ) // [!code focus]\n *\n * // 3. Perform the Contract Call.\n * const response = await window.ethereum!.request({\n *   method: 'eth_call',\n *   params: [\n *     {\n *       data,\n *       to: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\n *     },\n *   ],\n * })\n *\n * // 4. Decode the Function Output.\n * const balance = AbiFunction.decodeResult(balanceOf, response)\n * ```\n *\n * :::note\n *\n * For simplicity, the above example uses `window.ethereum.request`, but you can use any\n * type of JSON-RPC interface.\n *\n * :::\n *\n * @param abiFunction - ABI Function to encode\n * @param args - Function arguments\n * @returns ABI-encoded function name and arguments\n */\nexport function encodeData<const abiFunction extends AbiFunction>(\n  abiFunction: abiFunction | AbiFunction,\n  ...args: encodeData.Args<abiFunction>\n): Hex.Hex {\n  const { overloads } = abiFunction\n\n  const item = overloads\n    ? (fromAbi([abiFunction as AbiFunction, ...overloads], abiFunction.name, {\n        args: (args as any)[0],\n      }) as AbiFunction)\n    : abiFunction\n\n  const selector = getSelector(item)\n\n  const data =\n    args.length > 0\n      ? AbiParameters.encode(item.inputs, (args as any)[0])\n      : undefined\n\n  return data ? Hex.concat(selector, data) : selector\n}\n\nexport declare namespace encodeData {\n  type Args<abiFunction extends AbiFunction = AbiFunction> = IsNarrowable<\n    abiFunction,\n    AbiFunction\n  > extends true\n    ?\n        | (abitype.AbiParametersToPrimitiveTypes<\n            abiFunction['inputs']\n          > extends readonly []\n            ? []\n            : [abitype.AbiParametersToPrimitiveTypes<abiFunction['inputs']>])\n        | (abiFunction['overloads'] extends readonly AbiFunction[]\n            ? [\n                abitype.AbiParametersToPrimitiveTypes<\n                  abiFunction['overloads'][number]['inputs']\n                >,\n              ]\n            : [])\n    : readonly unknown[]\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * ABI-encodes a function's result (`outputs`).\n *\n * @example\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const totalSupply = AbiFunction.from('function totalSupply() returns (uint256)')\n * const output = AbiFunction.decodeResult(totalSupply, '0x000000000000000000000000000000000000000000000000000000000000002a')\n * // 42n\n *\n * const data = AbiFunction.encodeResult(totalSupply, 42n) // [!code focus]\n * // @log: '0x000000000000000000000000000000000000000000000000000000000000002a'\n * ```\n *\n * @param abiFunction - The ABI item to encode the function output for.\n * @param output - The function output to encode.\n * @param options - Encoding options.\n * @returns The encoded function output.\n */\nexport function encodeResult<\n  const abiFunction extends AbiFunction,\n  as extends 'Object' | 'Array' = 'Array',\n>(\n  abiFunction: abiFunction | AbiFunction,\n  output: encodeResult.Output<abiFunction, as>,\n  options: encodeResult.Options<as> = {},\n): Hex.Hex {\n  const { as = 'Array' } = options\n\n  const values = (() => {\n    if (abiFunction.outputs.length === 1) return [output]\n    if (Array.isArray(output)) return output\n    if (as === 'Object') return Object.values(output as any)\n    return [output]\n  })()\n\n  return AbiParameters.encode(abiFunction.outputs, values)\n}\n\nexport declare namespace encodeResult {\n  type Output<\n    abiFunction extends AbiFunction = AbiFunction,\n    as extends 'Object' | 'Array' = 'Array',\n  > = abiFunction['outputs'] extends readonly []\n    ? never\n    : abiFunction['outputs']['length'] extends 1\n      ? AbiParameters_internal.ToPrimitiveTypes<abiFunction['outputs']>[0]\n      : as extends 'Object'\n        ? AbiParameters_internal.ToObject<abiFunction['outputs']>\n        : AbiParameters_internal.ToPrimitiveTypes<abiFunction['outputs']>\n\n  type Options<as extends 'Object' | 'Array'> = {\n    as?: as | 'Object' | 'Array' | undefined\n  }\n\n  type ErrorType = AbiParameters.encode.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Formats an {@link ox#AbiFunction.AbiFunction} into a **Human Readable ABI Function**.\n *\n * @example\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const formatted = AbiFunction.format({\n *   type: 'function',\n *   name: 'approve',\n *   stateMutability: 'nonpayable',\n *   inputs: [\n *     {\n *       name: 'spender',\n *       type: 'address',\n *     },\n *     {\n *       name: 'amount',\n *       type: 'uint256',\n *     },\n *   ],\n *   outputs: [{ type: 'bool' }],\n * })\n *\n * formatted\n * //    ^?\n *\n *\n * ```\n *\n * @param abiFunction - The ABI Function to format.\n * @returns The formatted ABI Function.\n */\nexport function format<const abiFunction extends AbiFunction>(\n  abiFunction: abiFunction | AbiFunction,\n): abitype.FormatAbiItem<abiFunction> {\n  return abitype.formatAbiItem(abiFunction) as never\n}\n\nexport declare namespace format {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Parses an arbitrary **JSON ABI Function** or **Human Readable ABI Function** into a typed {@link ox#AbiFunction.AbiFunction}.\n *\n * @example\n * ### JSON ABIs\n *\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const approve = AbiFunction.from({\n *   type: 'function',\n *   name: 'approve',\n *   stateMutability: 'nonpayable',\n *   inputs: [\n *     {\n *       name: 'spender',\n *       type: 'address',\n *     },\n *     {\n *       name: 'amount',\n *       type: 'uint256',\n *     },\n *   ],\n *   outputs: [{ type: 'bool' }],\n * })\n *\n * approve\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * ### Human Readable ABIs\n *\n * A Human Readable ABI can be parsed into a typed ABI object:\n *\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const approve = AbiFunction.from(\n *   'function approve(address spender, uint256 amount) returns (bool)' // [!code hl]\n * )\n *\n * approve\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * It is possible to specify `struct`s along with your definitions:\n *\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const approve = AbiFunction.from([\n *   'struct Foo { address spender; uint256 amount; }', // [!code hl]\n *   'function approve(Foo foo) returns (bool)',\n * ])\n *\n * approve\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n *\n *\n * @param abiFunction - The ABI Function to parse.\n * @returns Typed ABI Function.\n */\nexport function from<\n  const abiFunction extends AbiFunction | string | readonly string[],\n>(\n  abiFunction: (abiFunction | AbiFunction | string | readonly string[]) &\n    (\n      | (abiFunction extends string ? internal.Signature<abiFunction> : never)\n      | (abiFunction extends readonly string[]\n          ? internal.Signatures<abiFunction>\n          : never)\n      | AbiFunction\n    ),\n  options: from.Options = {},\n): from.ReturnType<abiFunction> {\n  return AbiItem.from(abiFunction as AbiFunction, options) as never\n}\n\nexport declare namespace from {\n  type Options = {\n    /**\n     * Whether or not to prepare the extracted function (optimization for encoding performance).\n     * When `true`, the `hash` property is computed and included in the returned value.\n     *\n     * @default true\n     */\n    prepare?: boolean | undefined\n  }\n\n  type ReturnType<\n    abiFunction extends AbiFunction | string | readonly string[],\n  > = AbiItem.from.ReturnType<abiFunction>\n\n  type ErrorType = AbiItem.from.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Extracts an {@link ox#AbiFunction.AbiFunction} from an {@link ox#Abi.Abi} given a name and optional arguments.\n *\n * @example\n * ### Extracting by Name\n *\n * ABI Functions can be extracted by their name using the `name` option:\n *\n * ```ts twoslash\n * import { Abi, AbiFunction } from 'ox'\n *\n * const abi = Abi.from([\n *   'function foo()',\n *   'event Transfer(address owner, address to, uint256 tokenId)',\n *   'function bar(string a) returns (uint256 x)',\n * ])\n *\n * const item = AbiFunction.fromAbi(abi, 'foo') // [!code focus]\n * //    ^?\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * ### Extracting by Selector\n *\n * ABI Functions can be extract by their selector when {@link ox#Hex.Hex} is provided to `name`.\n *\n * ```ts twoslash\n * import { Abi, AbiFunction } from 'ox'\n *\n * const abi = Abi.from([\n *   'function foo()',\n *   'event Transfer(address owner, address to, uint256 tokenId)',\n *   'function bar(string a) returns (uint256 x)',\n * ])\n * const item = AbiFunction.fromAbi(abi, '0x095ea7b3') // [!code focus]\n * //    ^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * :::note\n *\n * Extracting via a hex selector is useful when extracting an ABI Function from an `eth_call` RPC response or\n * from a Transaction `input`.\n *\n * :::\n *\n * @param abi - The ABI to extract from.\n * @param name - The name (or selector) of the ABI item to extract.\n * @param options - Extraction options.\n * @returns The ABI item.\n */\nexport function fromAbi<\n  const abi extends Abi.Abi | readonly unknown[],\n  name extends Name<abi>,\n  const args extends\n    | AbiItem_internal.ExtractArgs<abi, name>\n    | undefined = undefined,\n  //\n  allNames = Name<abi>,\n>(\n  abi: abi | Abi.Abi | readonly unknown[],\n  name: Hex.Hex | (name extends allNames ? name : never),\n  options?: AbiItem.fromAbi.Options<\n    abi,\n    name,\n    args,\n    AbiItem_internal.ExtractArgs<abi, name>\n  >,\n): AbiItem.fromAbi.ReturnType<abi, name, args, AbiFunction> {\n  const item = AbiItem.fromAbi(abi, name, options as any)\n  if (item.type !== 'function')\n    throw new AbiItem.NotFoundError({ name, type: 'function' })\n  return item as never\n}\n\nexport declare namespace fromAbi {\n  type ErrorType = AbiItem.fromAbi.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Computes the [4-byte selector](https://solidity-by-example.org/function-selector/) for an {@link ox#AbiFunction.AbiFunction}.\n *\n * Useful for computing function selectors for calldata.\n *\n * @example\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const selector = AbiFunction.getSelector('function ownerOf(uint256 tokenId)')\n * // @log: '0x6352211e'\n * ```\n *\n * @example\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const selector = AbiFunction.getSelector({\n *   inputs: [{ type: 'uint256' }],\n *   name: 'ownerOf',\n *   outputs: [],\n *   stateMutability: 'view',\n *   type: 'function'\n * })\n * // @log: '0x6352211e'\n * ```\n *\n * @param abiItem - The ABI item to compute the selector for.\n * @returns The first 4 bytes of the {@link ox#Hash.(keccak256:function)} hash of the function signature.\n */\nexport function getSelector(abiItem: string | AbiFunction): Hex.Hex {\n  return AbiItem.getSelector(abiItem)\n}\n\nexport declare namespace getSelector {\n  type ErrorType = AbiItem.getSelector.ErrorType | Errors.GlobalErrorType\n}\n","import * as abitype from 'abitype'\nimport type * as Abi from './Abi.js'\nimport * as Errors from './Errors.js'\nimport * as Hash from './Hash.js'\nimport * as Hex from './Hex.js'\nimport * as internal from './internal/abiItem.js'\nimport type { UnionCompute } from './internal/types.js'\n\n/** Root type for an item on an {@link ox#Abi.Abi}. */\nexport type AbiItem = Abi.Abi[number]\n\n/**\n * Extracts an {@link ox#AbiItem.AbiItem} item from an {@link ox#Abi.Abi}, given a name.\n *\n * @example\n * ```ts twoslash\n * import { Abi, AbiItem } from 'ox'\n *\n * const abi = Abi.from([\n *   'error Foo(string)',\n *   'function foo(string)',\n *   'event Bar(uint256)',\n * ])\n *\n * type Foo = AbiItem.FromAbi<typeof abi, 'Foo'>\n * //   ^?\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n */\nexport type FromAbi<\n  abi extends Abi.Abi,\n  name extends ExtractNames<abi>,\n> = Extract<abi[number], { name: name }>\n\n/**\n * Extracts the names of all {@link ox#AbiItem.AbiItem} items in an {@link ox#Abi.Abi}.\n *\n * @example\n * ```ts twoslash\n * import { Abi, AbiItem } from 'ox'\n *\n * const abi = Abi.from([\n *   'error Foo(string)',\n *   'function foo(string)',\n *   'event Bar(uint256)',\n * ])\n *\n * type names = AbiItem.Name<typeof abi>\n * //   ^?\n *\n * ```\n */\nexport type Name<abi extends Abi.Abi | readonly unknown[] = Abi.Abi> =\n  abi extends Abi.Abi ? ExtractNames<abi> : string\n\nexport type ExtractNames<abi extends Abi.Abi> = Extract<\n  abi[number],\n  { name: string }\n>['name']\n\n/**\n * Formats an {@link ox#AbiItem.AbiItem} into a **Human Readable ABI Item**.\n *\n * @example\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const formatted = AbiItem.format({\n *   type: 'function',\n *   name: 'approve',\n *   stateMutability: 'nonpayable',\n *   inputs: [\n *     {\n *       name: 'spender',\n *       type: 'address',\n *     },\n *     {\n *       name: 'amount',\n *       type: 'uint256',\n *     },\n *   ],\n *   outputs: [{ type: 'bool' }],\n * })\n *\n * formatted\n * //    ^?\n *\n *\n * ```\n *\n * @param abiItem - The ABI Item to format.\n * @returns The formatted ABI Item  .\n */\nexport function format<const abiItem extends AbiItem>(\n  abiItem: abiItem | AbiItem,\n): abitype.FormatAbiItem<abiItem> {\n  return abitype.formatAbiItem(abiItem) as never\n}\n\nexport declare namespace format {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Parses an arbitrary **JSON ABI Item** or **Human Readable ABI Item** into a typed {@link ox#AbiItem.AbiItem}.\n *\n * @example\n * ### JSON ABIs\n *\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const abiItem = AbiItem.from({\n *   type: 'function',\n *   name: 'approve',\n *   stateMutability: 'nonpayable',\n *   inputs: [\n *     {\n *       name: 'spender',\n *       type: 'address',\n *     },\n *     {\n *       name: 'amount',\n *       type: 'uint256',\n *     },\n *   ],\n *   outputs: [{ type: 'bool' }],\n * })\n *\n * abiItem\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * ### Human Readable ABIs\n *\n * A Human Readable ABI can be parsed into a typed ABI object:\n *\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const abiItem = AbiItem.from(\n *   'function approve(address spender, uint256 amount) returns (bool)' // [!code hl]\n * )\n *\n * abiItem\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * It is possible to specify `struct`s along with your definitions:\n *\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const abiItem = AbiItem.from([\n *   'struct Foo { address spender; uint256 amount; }', // [!code hl]\n *   'function approve(Foo foo) returns (bool)',\n * ])\n *\n * abiItem\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n *\n *\n * @param abiItem - The ABI Item to parse.\n * @returns The typed ABI Item.\n */\nexport function from<\n  const abiItem extends AbiItem | string | readonly string[],\n>(\n  abiItem: (abiItem | AbiItem | string | readonly string[]) &\n    (\n      | (abiItem extends string ? internal.Signature<abiItem> : never)\n      | (abiItem extends readonly string[]\n          ? internal.Signatures<abiItem>\n          : never)\n      | AbiItem\n    ),\n  options: from.Options = {},\n): from.ReturnType<abiItem> {\n  const { prepare = true } = options\n  const item = (() => {\n    if (Array.isArray(abiItem)) return abitype.parseAbiItem(abiItem)\n    if (typeof abiItem === 'string')\n      return abitype.parseAbiItem(abiItem as never)\n    return abiItem\n  })() as AbiItem\n  return {\n    ...item,\n    ...(prepare ? { hash: getSignatureHash(item) } : {}),\n  } as never\n}\n\nexport declare namespace from {\n  type Options = {\n    /**\n     * Whether or not to prepare the extracted item (optimization for encoding performance).\n     * When `true`, the `hash` property is computed and included in the returned value.\n     *\n     * @default true\n     */\n    prepare?: boolean | undefined\n  }\n\n  type ReturnType<abiItem extends AbiItem | string | readonly string[]> =\n    abiItem extends string\n      ? abitype.ParseAbiItem<abiItem>\n      : abiItem extends readonly string[]\n        ? abitype.ParseAbiItem<abiItem>\n        : abiItem\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Extracts an {@link ox#AbiItem.AbiItem} from an {@link ox#Abi.Abi} given a name and optional arguments.\n *\n * @example\n * ABI Items can be extracted by their name using the `name` option:\n *\n * ```ts twoslash\n * import { Abi, AbiItem } from 'ox'\n *\n * const abi = Abi.from([\n *   'function foo()',\n *   'event Transfer(address owner, address to, uint256 tokenId)',\n *   'function bar(string a) returns (uint256 x)',\n * ])\n *\n * const item = AbiItem.fromAbi(abi, 'Transfer') // [!code focus]\n * //    ^?\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * ### Extracting by Selector\n *\n * ABI Items can be extract by their selector when {@link ox#Hex.Hex} is provided to `name`.\n *\n * ```ts twoslash\n * import { Abi, AbiItem } from 'ox'\n *\n * const abi = Abi.from([\n *   'function foo()',\n *   'event Transfer(address owner, address to, uint256 tokenId)',\n *   'function bar(string a) returns (uint256 x)',\n * ])\n * const item = AbiItem.fromAbi(abi, '0x095ea7b3') // [!code focus]\n * //    ^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * :::note\n *\n * Extracting via a hex selector is useful when extracting an ABI Item from an `eth_call` RPC response,\n * a Transaction `input`, or from Event Log `topics`.\n *\n * :::\n *\n * @param abi - The ABI to extract from.\n * @param name - The name (or selector) of the ABI item to extract.\n * @param options - Extraction options.\n * @returns The ABI item.\n */\nexport function fromAbi<\n  const abi extends Abi.Abi | readonly unknown[],\n  name extends Name<abi>,\n  const args extends internal.ExtractArgs<abi, name> | undefined = undefined,\n  //\n  allNames = Name<abi>,\n>(\n  abi: abi | Abi.Abi | readonly unknown[],\n  name: Hex.Hex | (name extends allNames ? name : never),\n  options?: fromAbi.Options<abi, name, args>,\n): fromAbi.ReturnType<abi, name, args> {\n  const { args = [], prepare = true } = (options ??\n    {}) as unknown as fromAbi.Options\n\n  const isSelector = Hex.validate(name, { strict: false })\n  const abiItems = (abi as Abi.Abi).filter((abiItem) => {\n    if (isSelector) {\n      if (abiItem.type === 'function' || abiItem.type === 'error')\n        return getSelector(abiItem) === Hex.slice(name, 0, 4)\n      if (abiItem.type === 'event') return getSignatureHash(abiItem) === name\n      return false\n    }\n    return 'name' in abiItem && abiItem.name === name\n  })\n\n  if (abiItems.length === 0) throw new NotFoundError({ name: name as string })\n  if (abiItems.length === 1)\n    return {\n      ...abiItems[0],\n      ...(prepare ? { hash: getSignatureHash(abiItems[0]!) } : {}),\n    } as never\n\n  let matchedAbiItem: AbiItem | undefined = undefined\n  for (const abiItem of abiItems) {\n    if (!('inputs' in abiItem)) continue\n    if (!args || args.length === 0) {\n      if (!abiItem.inputs || abiItem.inputs.length === 0)\n        return {\n          ...abiItem,\n          ...(prepare ? { hash: getSignatureHash(abiItem) } : {}),\n        } as never\n      continue\n    }\n    if (!abiItem.inputs) continue\n    if (abiItem.inputs.length === 0) continue\n    if (abiItem.inputs.length !== args.length) continue\n    const matched = args.every((arg, index) => {\n      const abiParameter = 'inputs' in abiItem && abiItem.inputs![index]\n      if (!abiParameter) return false\n      return internal.isArgOfType(arg, abiParameter)\n    })\n    if (matched) {\n      // Check for ambiguity against already matched parameters (e.g. `address` vs `bytes20`).\n      if (\n        matchedAbiItem &&\n        'inputs' in matchedAbiItem &&\n        matchedAbiItem.inputs\n      ) {\n        const ambiguousTypes = internal.getAmbiguousTypes(\n          abiItem.inputs,\n          matchedAbiItem.inputs,\n          args as readonly unknown[],\n        )\n        if (ambiguousTypes)\n          throw new AmbiguityError(\n            {\n              abiItem,\n              type: ambiguousTypes[0]!,\n            },\n            {\n              abiItem: matchedAbiItem,\n              type: ambiguousTypes[1]!,\n            },\n          )\n      }\n\n      matchedAbiItem = abiItem\n    }\n  }\n\n  const abiItem = (() => {\n    if (matchedAbiItem) return matchedAbiItem\n    const [abiItem, ...overloads] = abiItems\n    return { ...abiItem!, overloads }\n  })()\n\n  if (!abiItem) throw new NotFoundError({ name: name as string })\n  return {\n    ...abiItem,\n    ...(prepare ? { hash: getSignatureHash(abiItem) } : {}),\n  } as never\n}\n\nexport declare namespace fromAbi {\n  type Options<\n    abi extends Abi.Abi | readonly unknown[] = Abi.Abi,\n    name extends Name<abi> = Name<abi>,\n    args extends\n      | internal.ExtractArgs<abi, name>\n      | undefined = internal.ExtractArgs<abi, name>,\n    ///\n    allArgs = internal.ExtractArgs<abi, name>,\n  > = {\n    /**\n     * Whether or not to prepare the extracted item (optimization for encoding performance).\n     * When `true`, the `hash` property is computed and included in the returned value.\n     *\n     * @default true\n     */\n    prepare?: boolean | undefined\n  } & UnionCompute<\n    readonly [] extends allArgs\n      ? {\n          args?:\n            | allArgs // show all options\n            // infer value, widen inferred value of `args` conditionally to match `allArgs`\n            | (abi extends Abi.Abi\n                ? args extends allArgs\n                  ? internal.Widen<args>\n                  : never\n                : never)\n            | undefined\n        }\n      : {\n          args?:\n            | allArgs // show all options\n            | (internal.Widen<args> & (args extends allArgs ? unknown : never)) // infer value, widen inferred value of `args` match `allArgs` (e.g. avoid union `args: readonly [123n] | readonly [bigint]`)\n            | undefined\n        }\n  >\n\n  type ReturnType<\n    abi extends Abi.Abi | readonly unknown[] = Abi.Abi,\n    name extends Name<abi> = Name<abi>,\n    args extends\n      | internal.ExtractArgs<abi, name>\n      | undefined = internal.ExtractArgs<abi, name>,\n    fallback = AbiItem,\n  > = abi extends Abi.Abi\n    ? Abi.Abi extends abi\n      ? fallback\n      : internal.ExtractForArgs<\n          abi,\n          name,\n          args extends internal.ExtractArgs<abi, name>\n            ? args\n            : internal.ExtractArgs<abi, name>\n        >\n    : fallback\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Computes the [4-byte selector](https://solidity-by-example.org/function-selector/) for an {@link ox#AbiItem.AbiItem}.\n *\n * Useful for computing function selectors for calldata.\n *\n * @example\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const selector = AbiItem.getSelector('function ownerOf(uint256 tokenId)')\n * // @log: '0x6352211e'\n * ```\n *\n * @example\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const selector = AbiItem.getSelector({\n *   inputs: [{ type: 'uint256' }],\n *   name: 'ownerOf',\n *   outputs: [],\n *   stateMutability: 'view',\n *   type: 'function'\n * })\n * // @log: '0x6352211e'\n * ```\n *\n * @param abiItem - The ABI item to compute the selector for. Can be a signature or an ABI item for an error, event, function, etc.\n * @returns The first 4 bytes of the {@link ox#Hash.(keccak256:function)} hash of the function signature.\n */\nexport function getSelector(abiItem: string | AbiItem): Hex.Hex {\n  return Hex.slice(getSignatureHash(abiItem), 0, 4)\n}\n\nexport declare namespace getSelector {\n  type ErrorType =\n    | getSignatureHash.ErrorType\n    | Hex.slice.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Computes the stringified signature for a given {@link ox#AbiItem.AbiItem}.\n *\n * @example\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const signature = AbiItem.getSignature('function ownerOf(uint256 tokenId)')\n * // @log: 'ownerOf(uint256)'\n * ```\n *\n * @example\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const signature = AbiItem.getSignature({\n *   name: 'ownerOf',\n *   type: 'function',\n *   inputs: [{ name: 'tokenId', type: 'uint256' }],\n *   outputs: [],\n *   stateMutability: 'view',\n * })\n * // @log: 'ownerOf(uint256)'\n * ```\n *\n * @param abiItem - The ABI Item to compute the signature for.\n * @returns The stringified signature of the ABI Item.\n */\nexport function getSignature(abiItem: string | AbiItem): string {\n  const signature = (() => {\n    if (typeof abiItem === 'string') return abiItem\n    return abitype.formatAbiItem(abiItem)\n  })()\n  return internal.normalizeSignature(signature)\n}\n\nexport declare namespace getSignature {\n  type ErrorType =\n    | internal.normalizeSignature.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Computes the signature hash for an {@link ox#AbiItem.AbiItem}.\n *\n * Useful for computing Event Topic values.\n *\n * @example\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const hash = AbiItem.getSignatureHash('event Transfer(address indexed from, address indexed to, uint256 amount)')\n * // @log: '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef'\n * ```\n *\n * @example\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const hash = AbiItem.getSignatureHash({\n *   name: 'Transfer',\n *   type: 'event',\n *   inputs: [\n *     { name: 'from', type: 'address', indexed: true },\n *     { name: 'to', type: 'address', indexed: true },\n *     { name: 'amount', type: 'uint256', indexed: false },\n *   ],\n * })\n * // @log: '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef'\n * ```\n *\n * @param abiItem - The ABI Item to compute the signature hash for.\n * @returns The {@link ox#Hash.(keccak256:function)} hash of the ABI item's signature.\n */\nexport function getSignatureHash(abiItem: string | AbiItem): Hex.Hex {\n  if (typeof abiItem !== 'string' && 'hash' in abiItem && abiItem.hash)\n    return abiItem.hash as Hex.Hex\n  return Hash.keccak256(Hex.fromString(getSignature(abiItem)))\n}\n\nexport declare namespace getSignatureHash {\n  type ErrorType =\n    | getSignature.ErrorType\n    | Hash.keccak256.ErrorType\n    | Hex.fromString.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Throws when ambiguous types are found on overloaded ABI items.\n *\n * @example\n * ```ts twoslash\n * import { Abi, AbiFunction } from 'ox'\n *\n * const foo = Abi.from(['function foo(address)', 'function foo(bytes20)'])\n * AbiFunction.fromAbi(foo, 'foo', {\n *   args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n * })\n * // @error: AbiItem.AmbiguityError: Found ambiguous types in overloaded ABI Items.\n * // @error: `bytes20` in `foo(bytes20)`, and\n * // @error: `address` in `foo(address)`\n * // @error: These types encode differently and cannot be distinguished at runtime.\n * // @error: Remove one of the ambiguous items in the ABI.\n * ```\n *\n * ### Solution\n *\n * Remove one of the ambiguous types from the ABI.\n *\n * ```ts twoslash\n * import { Abi, AbiFunction } from 'ox'\n *\n * const foo = Abi.from([\n *   'function foo(address)',\n *   'function foo(bytes20)' // [!code --]\n * ])\n * AbiFunction.fromAbi(foo, 'foo', {\n *   args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n * })\n * // @error: AbiItem.AmbiguityError: Found ambiguous types in overloaded ABI Items.\n * // @error: `bytes20` in `foo(bytes20)`, and\n * // @error: `address` in `foo(address)`\n * // @error: These types encode differently and cannot be distinguished at runtime.\n * // @error: Remove one of the ambiguous items in the ABI.\n * ```\n */\nexport class AmbiguityError extends Errors.BaseError {\n  override readonly name = 'AbiItem.AmbiguityError'\n  constructor(\n    x: { abiItem: Abi.Abi[number]; type: string },\n    y: { abiItem: Abi.Abi[number]; type: string },\n  ) {\n    super('Found ambiguous types in overloaded ABI Items.', {\n      metaMessages: [\n        // TODO: abitype to add support for signature-formatted ABI items.\n        `\\`${x.type}\\` in \\`${internal.normalizeSignature(abitype.formatAbiItem(x.abiItem))}\\`, and`,\n        `\\`${y.type}\\` in \\`${internal.normalizeSignature(abitype.formatAbiItem(y.abiItem))}\\``,\n        '',\n        'These types encode differently and cannot be distinguished at runtime.',\n        'Remove one of the ambiguous items in the ABI.',\n      ],\n    })\n  }\n}\n\n/**\n * Throws when an ABI item is not found in the ABI.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Abi, AbiFunction } from 'ox'\n *\n * const foo = Abi.from([\n *   'function foo(address)',\n *   'function bar(uint)'\n * ])\n * AbiFunction.fromAbi(foo, 'baz')\n * // @error: AbiItem.NotFoundError: ABI function with name \"baz\" not found.\n * ```\n *\n * ### Solution\n *\n * Ensure the ABI item exists on the ABI.\n *\n * ```ts twoslash\n * // @noErrors\n * import { Abi, AbiFunction } from 'ox'\n *\n * const foo = Abi.from([\n *   'function foo(address)',\n *   'function bar(uint)',\n *   'function baz(bool)' // [!code ++]\n * ])\n * AbiFunction.fromAbi(foo, 'baz')\n * ```\n */\nexport class NotFoundError extends Errors.BaseError {\n  override readonly name = 'AbiItem.NotFoundError'\n  constructor({\n    name,\n    data,\n    type = 'item',\n  }: {\n    name?: string | undefined\n    data?: Hex.Hex | undefined\n    type?: string | undefined\n  }) {\n    const selector = (() => {\n      if (name) return ` with name \"${name}\"`\n      if (data) return ` with data \"${data}\"`\n      return ''\n    })()\n    super(`ABI ${type}${selector} not found.`)\n  }\n}\n\n/**\n * Throws when the selector size is invalid.\n *\n * @example\n * ```ts twoslash\n * import { Abi, AbiFunction } from 'ox'\n *\n * const foo = Abi.from([\n *   'function foo(address)',\n *   'function bar(uint)'\n * ])\n * AbiFunction.fromAbi(foo, '0xaaa')\n * // @error: AbiItem.InvalidSelectorSizeError: Selector size is invalid. Expected 4 bytes. Received 2 bytes (\"0xaaa\").\n * ```\n *\n * ### Solution\n *\n * Ensure the selector size is 4 bytes.\n *\n * ```ts twoslash\n * // @noErrors\n * import { Abi, AbiFunction } from 'ox'\n *\n * const foo = Abi.from([\n *   'function foo(address)',\n *   'function bar(uint)'\n * ])\n * AbiFunction.fromAbi(foo, '0x7af82b1a')\n * ```\n */\nexport class InvalidSelectorSizeError extends Errors.BaseError {\n  override readonly name = 'AbiItem.InvalidSelectorSizeError'\n  constructor({ data }: { data: Hex.Hex }) {\n    super(\n      `Selector size is invalid. Expected 4 bytes. Received ${Hex.size(data)} bytes (\"${data}\").`,\n    )\n  }\n}\n","import * as abitype from 'abitype'\nimport * as Address from './Address.js'\nimport * as Bytes from './Bytes.js'\nimport * as Errors from './Errors.js'\nimport * as Hex from './Hex.js'\nimport * as Solidity from './Solidity.js'\nimport * as internal from './internal/abiParameters.js'\nimport * as Cursor from './internal/cursor.js'\n\n/** Root type for ABI parameters. */\nexport type AbiParameters = readonly abitype.AbiParameter[]\n\n/** A parameter on an {@link ox#AbiParameters.AbiParameters}. */\nexport type Parameter = abitype.AbiParameter\n\n/** A packed ABI type. */\nexport type PackedAbiType =\n  | abitype.SolidityAddress\n  | abitype.SolidityBool\n  | abitype.SolidityBytes\n  | abitype.SolidityInt\n  | abitype.SolidityString\n  | abitype.SolidityArrayWithoutTuple\n\n/**\n * Decodes ABI-encoded data into its respective primitive values based on ABI Parameters.\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const data = AbiParameters.decode(\n *   AbiParameters.from(['string', 'uint', 'bool']),\n *   '0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001a4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000057761676d69000000000000000000000000000000000000000000000000000000',\n * )\n * // @log: ['wagmi', 420n, true]\n * ```\n *\n * @example\n * ### JSON Parameters\n *\n * You can pass **JSON ABI** Parameters:\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const data = AbiParameters.decode(\n *   [\n *     { name: 'x', type: 'string' },\n *     { name: 'y', type: 'uint' },\n *     { name: 'z', type: 'bool' },\n *   ],\n *   '0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001a4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000057761676d69000000000000000000000000000000000000000000000000000000',\n * )\n * // @log: ['wagmi', 420n, true]\n * ```\n *\n * @param parameters - The set of ABI parameters to decode, in the shape of the `inputs` or `outputs` attribute of an ABI Item. These parameters must include valid [ABI types](https://docs.soliditylang.org/en/latest/types.html).\n * @param data - ABI encoded data.\n * @param options - Decoding options.\n * @returns Array of decoded values.\n */\nexport function decode<\n  const parameters extends AbiParameters,\n  as extends 'Object' | 'Array' = 'Array',\n>(\n  parameters: parameters,\n  data: Bytes.Bytes | Hex.Hex,\n  options?: decode.Options<as>,\n): decode.ReturnType<parameters, as>\n\n// eslint-disable-next-line jsdoc/require-jsdoc\nexport function decode(\n  parameters: AbiParameters,\n  data: Bytes.Bytes | Hex.Hex,\n  options: {\n    as?: 'Array' | 'Object' | undefined\n    checksumAddress?: boolean | undefined\n  } = {},\n): readonly unknown[] | Record<string, unknown> {\n  const { as = 'Array', checksumAddress = false } = options\n\n  const bytes = typeof data === 'string' ? Bytes.fromHex(data) : data\n  const cursor = Cursor.create(bytes)\n\n  if (Bytes.size(bytes) === 0 && parameters.length > 0)\n    throw new ZeroDataError()\n  if (Bytes.size(bytes) && Bytes.size(bytes) < 32)\n    throw new DataSizeTooSmallError({\n      data: typeof data === 'string' ? data : Hex.fromBytes(data),\n      parameters: parameters as readonly Parameter[],\n      size: Bytes.size(bytes),\n    })\n\n  let consumed = 0\n  const values: any = as === 'Array' ? [] : {}\n  for (let i = 0; i < parameters.length; ++i) {\n    const param = parameters[i] as Parameter\n    cursor.setPosition(consumed)\n    const [data, consumed_] = internal.decodeParameter(cursor, param, {\n      checksumAddress,\n      staticPosition: 0,\n    })\n    consumed += consumed_\n    if (as === 'Array') values.push(data)\n    else values[param.name ?? i] = data\n  }\n  return values\n}\n\nexport declare namespace decode {\n  type Options<as extends 'Object' | 'Array'> = {\n    /**\n     * Whether the decoded values should be returned as an `Object` or `Array`.\n     *\n     * @default \"Array\"\n     */\n    as?: as | 'Object' | 'Array' | undefined\n    /**\n     * Whether decoded addresses should be checksummed.\n     *\n     * @default false\n     */\n    checksumAddress?: boolean | undefined\n  }\n\n  type ReturnType<\n    parameters extends AbiParameters = AbiParameters,\n    as extends 'Object' | 'Array' = 'Array',\n  > = parameters extends readonly []\n    ? as extends 'Object'\n      ? {}\n      : []\n    : as extends 'Object'\n      ? internal.ToObject<parameters>\n      : internal.ToPrimitiveTypes<parameters>\n\n  type ErrorType =\n    | Bytes.fromHex.ErrorType\n    | internal.decodeParameter.ErrorType\n    | ZeroDataError\n    | DataSizeTooSmallError\n    | Errors.GlobalErrorType\n}\n\n/**\n * Encodes primitive values into ABI encoded data as per the [Application Binary Interface (ABI) Specification](https://docs.soliditylang.org/en/latest/abi-spec).\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const data = AbiParameters.encode(\n *   AbiParameters.from(['string', 'uint', 'bool']),\n *   ['wagmi', 420n, true],\n * )\n * ```\n *\n * @example\n * ### JSON Parameters\n *\n * Specify **JSON ABI** Parameters as schema:\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const data = AbiParameters.encode(\n *   [\n *     { type: 'string', name: 'name' },\n *     { type: 'uint', name: 'age' },\n *     { type: 'bool', name: 'isOwner' },\n *   ],\n *   ['wagmi', 420n, true],\n * )\n * ```\n *\n * @param parameters - The set of ABI parameters to encode, in the shape of the `inputs` or `outputs` attribute of an ABI Item. These parameters must include valid [ABI types](https://docs.soliditylang.org/en/latest/types.html).\n * @param values - The set of primitive values that correspond to the ABI types defined in `parameters`.\n * @returns ABI encoded data.\n */\nexport function encode<\n  const parameters extends AbiParameters | readonly unknown[],\n>(\n  parameters: parameters,\n  values: parameters extends AbiParameters\n    ? internal.ToPrimitiveTypes<parameters>\n    : never,\n  options?: encode.Options,\n): Hex.Hex {\n  const { checksumAddress = false } = options ?? {}\n\n  if (parameters.length !== values.length)\n    throw new LengthMismatchError({\n      expectedLength: parameters.length as number,\n      givenLength: values.length as any,\n    })\n  // Prepare the parameters to determine dynamic types to encode.\n  const preparedParameters = internal.prepareParameters({\n    checksumAddress,\n    parameters: parameters as readonly Parameter[],\n    values: values as any,\n  })\n  const data = internal.encode(preparedParameters)\n  if (data.length === 0) return '0x'\n  return data\n}\n\nexport declare namespace encode {\n  type ErrorType =\n    | LengthMismatchError\n    | internal.encode.ErrorType\n    | internal.prepareParameters.ErrorType\n    | Errors.GlobalErrorType\n\n  type Options = {\n    /**\n     * Whether addresses should be checked against their checksum.\n     *\n     * @default false\n     */\n    checksumAddress?: boolean | undefined\n  }\n}\n\n/**\n * Encodes an array of primitive values to a [packed ABI encoding](https://docs.soliditylang.org/en/latest/abi-spec.html#non-standard-packed-mode).\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const encoded = AbiParameters.encodePacked(\n *   ['address', 'string'],\n *   ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 'hello world'],\n * )\n * // @log: '0xd8da6bf26964af9d7eed9e03e53415d37aa9604568656c6c6f20776f726c64'\n * ```\n *\n * @param types - Set of ABI types to pack encode.\n * @param values - The set of primitive values that correspond to the ABI types defined in `types`.\n * @returns The encoded packed data.\n */\nexport function encodePacked<\n  const packedAbiTypes extends readonly PackedAbiType[] | readonly unknown[],\n>(types: packedAbiTypes, values: encodePacked.Values<packedAbiTypes>): Hex.Hex {\n  if (types.length !== values.length)\n    throw new LengthMismatchError({\n      expectedLength: types.length as number,\n      givenLength: values.length as number,\n    })\n\n  const data: Hex.Hex[] = []\n  for (let i = 0; i < (types as unknown[]).length; i++) {\n    const type = types[i]\n    const value = values[i]\n    data.push(encodePacked.encode(type, value))\n  }\n  return Hex.concat(...data)\n}\n\nexport namespace encodePacked {\n  export type ErrorType =\n    | Hex.concat.ErrorType\n    | LengthMismatchError\n    | Errors.GlobalErrorType\n\n  export type Values<\n    packedAbiTypes extends readonly PackedAbiType[] | readonly unknown[],\n  > = {\n    [key in keyof packedAbiTypes]: packedAbiTypes[key] extends abitype.AbiType\n      ? abitype.AbiParameterToPrimitiveType<{ type: packedAbiTypes[key] }>\n      : unknown\n  }\n\n  // eslint-disable-next-line jsdoc/require-jsdoc\n  export function encode<const packedAbiType extends PackedAbiType | unknown>(\n    type: packedAbiType,\n    value: Values<[packedAbiType]>[0],\n    isArray = false,\n  ): Hex.Hex {\n    if (type === 'address') {\n      const address = value as Address.Address\n      Address.assert(address)\n      return Hex.padLeft(\n        address.toLowerCase() as Hex.Hex,\n        isArray ? 32 : 0,\n      ) as Address.Address\n    }\n    if (type === 'string') return Hex.fromString(value as string)\n    if (type === 'bytes') return value as Hex.Hex\n    if (type === 'bool')\n      return Hex.padLeft(Hex.fromBoolean(value as boolean), isArray ? 32 : 1)\n\n    const intMatch = (type as string).match(Solidity.integerRegex)\n    if (intMatch) {\n      const [_type, baseType, bits = '256'] = intMatch\n      const size = Number.parseInt(bits) / 8\n      return Hex.fromNumber(value as number, {\n        size: isArray ? 32 : size,\n        signed: baseType === 'int',\n      })\n    }\n\n    const bytesMatch = (type as string).match(Solidity.bytesRegex)\n    if (bytesMatch) {\n      const [_type, size] = bytesMatch\n      if (Number.parseInt(size!) !== ((value as Hex.Hex).length - 2) / 2)\n        throw new BytesSizeMismatchError({\n          expectedSize: Number.parseInt(size!),\n          value: value as Hex.Hex,\n        })\n      return Hex.padRight(value as Hex.Hex, isArray ? 32 : 0) as Hex.Hex\n    }\n\n    const arrayMatch = (type as string).match(Solidity.arrayRegex)\n    if (arrayMatch && Array.isArray(value)) {\n      const [_type, childType] = arrayMatch\n      const data: Hex.Hex[] = []\n      for (let i = 0; i < value.length; i++) {\n        data.push(encode(childType, value[i], true))\n      }\n      if (data.length === 0) return '0x'\n      return Hex.concat(...data)\n    }\n\n    throw new InvalidTypeError(type as string)\n  }\n}\n\n/**\n * Formats {@link ox#AbiParameters.AbiParameters} into **Human Readable ABI Parameters**.\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const formatted = AbiParameters.format([\n *   {\n *     name: 'spender',\n *     type: 'address',\n *   },\n *   {\n *     name: 'amount',\n *     type: 'uint256',\n *   },\n * ])\n *\n * formatted\n * //    ^?\n *\n *\n * ```\n *\n * @param parameters - The ABI Parameters to format.\n * @returns The formatted ABI Parameters  .\n */\nexport function format<\n  const parameters extends readonly [\n    Parameter | abitype.AbiEventParameter,\n    ...(readonly (Parameter | abitype.AbiEventParameter)[]),\n  ],\n>(\n  parameters:\n    | parameters\n    | readonly [\n        Parameter | abitype.AbiEventParameter,\n        ...(readonly (Parameter | abitype.AbiEventParameter)[]),\n      ],\n): abitype.FormatAbiParameters<parameters> {\n  return abitype.formatAbiParameters(parameters)\n}\n\nexport declare namespace format {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Parses arbitrary **JSON ABI Parameters** or **Human Readable ABI Parameters** into typed {@link ox#AbiParameters.AbiParameters}.\n *\n * @example\n * ### JSON Parameters\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const parameters = AbiParameters.from([\n *   {\n *     name: 'spender',\n *     type: 'address',\n *   },\n *   {\n *     name: 'amount',\n *     type: 'uint256',\n *   },\n * ])\n *\n * parameters\n * //^?\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * ### Human Readable Parameters\n *\n * Human Readable ABI Parameters can be parsed into a typed {@link ox#AbiParameters.AbiParameters}:\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const parameters = AbiParameters.from('address spender, uint256 amount')\n *\n * parameters\n * //^?\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * It is possible to specify `struct`s along with your definitions:\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const parameters = AbiParameters.from([\n *   'struct Foo { address spender; uint256 amount; }', // [!code hl]\n *   'Foo foo, address bar',\n * ])\n *\n * parameters\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n *\n *\n * @param parameters - The ABI Parameters to parse.\n * @returns The typed ABI Parameters.\n */\nexport function from<\n  const parameters extends AbiParameters | string | readonly string[],\n>(\n  parameters: parameters | AbiParameters | string | readonly string[],\n): from.ReturnType<parameters> {\n  if (Array.isArray(parameters) && typeof parameters[0] === 'string')\n    return abitype.parseAbiParameters(parameters) as never\n  if (typeof parameters === 'string')\n    return abitype.parseAbiParameters(parameters) as never\n  return parameters as never\n}\n\nexport declare namespace from {\n  type ReturnType<\n    parameters extends AbiParameters | string | readonly string[],\n  > = parameters extends string\n    ? abitype.ParseAbiParameters<parameters>\n    : parameters extends readonly string[]\n      ? abitype.ParseAbiParameters<parameters>\n      : parameters\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Throws when the data size is too small for the given parameters.\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * AbiParameters.decode([{ type: 'uint256' }], '0x010f')\n * //                                             ↑ ❌ 2 bytes\n * // @error: AbiParameters.DataSizeTooSmallError: Data size of 2 bytes is too small for given parameters.\n * // @error: Params: (uint256)\n * // @error: Data:   0x010f (2 bytes)\n * ```\n *\n * ### Solution\n *\n * Pass a valid data size.\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * AbiParameters.decode([{ type: 'uint256' }], '0x00000000000000000000000000000000000000000000000000000000000010f')\n * //                                             ↑ ✅ 32 bytes\n * ```\n */\nexport class DataSizeTooSmallError extends Errors.BaseError {\n  override readonly name = 'AbiParameters.DataSizeTooSmallError'\n  constructor({\n    data,\n    parameters,\n    size,\n  }: { data: Hex.Hex; parameters: readonly Parameter[]; size: number }) {\n    super(`Data size of ${size} bytes is too small for given parameters.`, {\n      metaMessages: [\n        `Params: (${abitype.formatAbiParameters(parameters as readonly [Parameter])})`,\n        `Data:   ${data} (${size} bytes)`,\n      ],\n    })\n  }\n}\n\n/**\n * Throws when zero data is provided, but data is expected.\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * AbiParameters.decode([{ type: 'uint256' }], '0x')\n * //                                           ↑ ❌ zero data\n * // @error: AbiParameters.DataSizeTooSmallError: Data size of 2 bytes is too small for given parameters.\n * // @error: Params: (uint256)\n * // @error: Data:   0x010f (2 bytes)\n * ```\n *\n * ### Solution\n *\n * Pass valid data.\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * AbiParameters.decode([{ type: 'uint256' }], '0x00000000000000000000000000000000000000000000000000000000000010f')\n * //                                             ↑ ✅ 32 bytes\n * ```\n */\nexport class ZeroDataError extends Errors.BaseError {\n  override readonly name = 'AbiParameters.ZeroDataError'\n  constructor() {\n    super('Cannot decode zero data (\"0x\") with ABI parameters.')\n  }\n}\n\n/**\n * The length of the array value does not match the length specified in the corresponding ABI parameter.\n *\n * ### Example\n *\n * ```ts twoslash\n * // @noErrors\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from('uint256[3]'), [[69n, 420n]])\n * //                                               ↑ expected: 3  ↑ ❌ length: 2\n * // @error: AbiParameters.ArrayLengthMismatchError: ABI encoding array length mismatch\n * // @error: for type `uint256[3]`. Expected: `3`. Given: `2`.\n * ```\n *\n * ### Solution\n *\n * Pass an array of the correct length.\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from(['uint256[3]']), [[69n, 420n, 69n]])\n * //                                                         ↑ ✅ length: 3\n * ```\n */\nexport class ArrayLengthMismatchError extends Errors.BaseError {\n  override readonly name = 'AbiParameters.ArrayLengthMismatchError'\n  constructor({\n    expectedLength,\n    givenLength,\n    type,\n  }: { expectedLength: number; givenLength: number; type: string }) {\n    super(\n      `Array length mismatch for type \\`${type}\\`. Expected: \\`${expectedLength}\\`. Given: \\`${givenLength}\\`.`,\n    )\n  }\n}\n\n/**\n * The size of the bytes value does not match the size specified in the corresponding ABI parameter.\n *\n * ### Example\n *\n * ```ts twoslash\n * // @noErrors\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from('bytes8'), [['0xdeadbeefdeadbeefdeadbeef']])\n * //                                            ↑ expected: 8 bytes  ↑ ❌ size: 12 bytes\n * // @error: BytesSizeMismatchError: Size of bytes \"0xdeadbeefdeadbeefdeadbeef\"\n * // @error: (bytes12) does not match expected size (bytes8).\n * ```\n *\n * ### Solution\n *\n * Pass a bytes value of the correct size.\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from(['bytes8']), ['0xdeadbeefdeadbeef'])\n * //                                                       ↑ ✅ size: 8 bytes\n * ```\n */\nexport class BytesSizeMismatchError extends Errors.BaseError {\n  override readonly name = 'AbiParameters.BytesSizeMismatchError'\n  constructor({\n    expectedSize,\n    value,\n  }: { expectedSize: number; value: Hex.Hex }) {\n    super(\n      `Size of bytes \"${value}\" (bytes${Hex.size(\n        value,\n      )}) does not match expected size (bytes${expectedSize}).`,\n    )\n  }\n}\n\n/**\n * The length of the values to encode does not match the length of the ABI parameters.\n *\n * ### Example\n *\n * ```ts twoslash\n * // @noErrors\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from(['string', 'uint256']), ['hello'])\n * // @error: LengthMismatchError: ABI encoding params/values length mismatch.\n * // @error: Expected length (params): 2\n * // @error: Given length (values): 1\n * ```\n *\n * ### Solution\n *\n * Pass the correct number of values to encode.\n *\n * ### Solution\n *\n * Pass a [valid ABI type](https://docs.soliditylang.org/en/develop/abi-spec.html#types).\n */\nexport class LengthMismatchError extends Errors.BaseError {\n  override readonly name = 'AbiParameters.LengthMismatchError'\n  constructor({\n    expectedLength,\n    givenLength,\n  }: { expectedLength: number; givenLength: number }) {\n    super(\n      [\n        'ABI encoding parameters/values length mismatch.',\n        `Expected length (parameters): ${expectedLength}`,\n        `Given length (values): ${givenLength}`,\n      ].join('\\n'),\n    )\n  }\n}\n\n/**\n * The value provided is not a valid array as specified in the corresponding ABI parameter.\n *\n * ### Example\n *\n * ```ts twoslash\n * // @noErrors\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from(['uint256[3]']), [69])\n * ```\n *\n * ### Solution\n *\n * Pass an array value.\n */\nexport class InvalidArrayError extends Errors.BaseError {\n  override readonly name = 'AbiParameters.InvalidArrayError'\n  constructor(value: unknown) {\n    super(`Value \\`${value}\\` is not a valid array.`)\n  }\n}\n\n/**\n * Throws when the ABI parameter type is invalid.\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * AbiParameters.decode([{ type: 'lol' }], '0x00000000000000000000000000000000000000000000000000000000000010f')\n * //                             ↑ ❌ invalid type\n * // @error: AbiParameters.InvalidTypeError: Type `lol` is not a valid ABI Type.\n * ```\n */\nexport class InvalidTypeError extends Errors.BaseError {\n  override readonly name = 'AbiParameters.InvalidTypeError'\n  constructor(type: string) {\n    super(`Type \\`${type}\\` is not a valid ABI Type.`)\n  }\n}\n","import type { Address as abitype_Address } from 'abitype'\nimport * as Bytes from './Bytes.js'\nimport * as Caches from './Caches.js'\nimport * as Errors from './Errors.js'\nimport * as Hash from './Hash.js'\nimport * as PublicKey from './PublicKey.js'\n\nconst addressRegex = /*#__PURE__*/ /^0x[a-fA-F0-9]{40}$/\n\n/** Root type for Address. */\nexport type Address = abitype_Address\n\n/**\n * Asserts that the given value is a valid {@link ox#Address.Address}.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.assert('0xA0Cf798816D4b9b9866b5330EEa46a18382f251e')\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.assert('0xdeadbeef')\n * // @error: InvalidAddressError: Address \"0xdeadbeef\" is invalid.\n * ```\n *\n * @param value - Value to assert if it is a valid address.\n * @param options - Assertion options.\n */\nexport function assert(\n  value: string,\n  options: assert.Options = {},\n): asserts value is Address {\n  const { strict = true } = options\n\n  if (!addressRegex.test(value))\n    throw new InvalidAddressError({\n      address: value,\n      cause: new InvalidInputError(),\n    })\n\n  if (strict) {\n    if (value.toLowerCase() === value) return\n    if (checksum(value as Address) !== value)\n      throw new InvalidAddressError({\n        address: value,\n        cause: new InvalidChecksumError(),\n      })\n  }\n}\n\nexport declare namespace assert {\n  type Options = {\n    /**\n     * Enables strict mode. Whether or not to compare the address against its checksum.\n     *\n     * @default true\n     */\n    strict?: boolean | undefined\n  }\n\n  type ErrorType = InvalidAddressError | Errors.GlobalErrorType\n}\n\n/**\n * Computes the checksum address for the given {@link ox#Address.Address}.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.checksum('0xa0cf798816d4b9b9866b5330eea46a18382f251e')\n * // @log: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'\n * ```\n *\n * @param address - The address to compute the checksum for.\n * @returns The checksummed address.\n */\nexport function checksum(address: string): Address {\n  if (Caches.checksum.has(address)) return Caches.checksum.get(address)!\n\n  assert(address, { strict: false })\n\n  const hexAddress = address.substring(2).toLowerCase()\n  const hash = Hash.keccak256(Bytes.fromString(hexAddress), { as: 'Bytes' })\n\n  const characters = hexAddress.split('')\n  for (let i = 0; i < 40; i += 2) {\n    if (hash[i >> 1]! >> 4 >= 8 && characters[i]) {\n      characters[i] = characters[i]!.toUpperCase()\n    }\n    if ((hash[i >> 1]! & 0x0f) >= 8 && characters[i + 1]) {\n      characters[i + 1] = characters[i + 1]!.toUpperCase()\n    }\n  }\n\n  const result = `0x${characters.join('')}` as const\n  Caches.checksum.set(address, result)\n  return result\n}\n\nexport declare namespace checksum {\n  type ErrorType =\n    | assert.ErrorType\n    | Hash.keccak256.ErrorType\n    | Bytes.fromString.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Converts a stringified address to a typed (checksummed) {@link ox#Address.Address}.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.from('0xa0cf798816d4b9b9866b5330eea46a18382f251e')\n * // @log: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.from('0xa0cf798816d4b9b9866b5330eea46a18382f251e', {\n *   checksum: false\n * })\n * // @log: '0xa0cf798816d4b9b9866b5330eea46a18382f251e'\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.from('hello')\n * // @error: InvalidAddressError: Address \"0xa\" is invalid.\n * ```\n *\n * @param address - An address string to convert to a typed Address.\n * @param options - Conversion options.\n * @returns The typed Address.\n */\nexport function from(address: string, options: from.Options = {}): Address {\n  const { checksum: checksumVal = false } = options\n  assert(address)\n  if (checksumVal) return checksum(address)\n  return address as Address\n}\n\nexport declare namespace from {\n  type Options = {\n    /**\n     * Whether to checksum the address.\n     *\n     * @default false\n     */\n    checksum?: boolean | undefined\n  }\n\n  type ErrorType =\n    | assert.ErrorType\n    | checksum.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Converts an ECDSA public key to an {@link ox#Address.Address}.\n *\n * @example\n * ```ts twoslash\n * import { Address, PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.from(\n *   '0x048318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed753547f11ca8696646f2f3acb08e31016afac23e630c5d11f59f61fef57b0d2aa5',\n * )\n * const address = Address.fromPublicKey(publicKey)\n * // @log: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266'\n * ```\n *\n * @param publicKey - The ECDSA public key to convert to an {@link ox#Address.Address}.\n * @param options - Conversion options.\n * @returns The {@link ox#Address.Address} corresponding to the public key.\n */\nexport function fromPublicKey(\n  publicKey: PublicKey.PublicKey,\n  options: fromPublicKey.Options = {},\n): Address {\n  const address = Hash.keccak256(\n    `0x${PublicKey.toHex(publicKey).slice(4)}`,\n  ).substring(26)\n  return from(`0x${address}`, options)\n}\n\nexport declare namespace fromPublicKey {\n  type Options = {\n    /**\n     * Whether to checksum the address.\n     *\n     * @default false\n     */\n    checksum?: boolean | undefined\n  }\n\n  type ErrorType =\n    | Hash.keccak256.ErrorType\n    | PublicKey.toHex.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Checks if two {@link ox#Address.Address} are equal.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.isEqual(\n *   '0xa0cf798816d4b9b9866b5330eea46a18382f251e',\n *   '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'\n * )\n * // @log: true\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.isEqual(\n *   '0xa0cf798816d4b9b9866b5330eea46a18382f251e',\n *   '0xA0Cf798816D4b9b9866b5330EEa46a18382f251f'\n * )\n * // @log: false\n * ```\n *\n * @param addressA - The first address to compare.\n * @param addressB - The second address to compare.\n * @returns Whether the addresses are equal.\n */\nexport function isEqual(addressA: Address, addressB: Address): boolean {\n  assert(addressA, { strict: false })\n  assert(addressB, { strict: false })\n  return addressA.toLowerCase() === addressB.toLowerCase()\n}\n\nexport declare namespace isEqual {\n  type ErrorType = assert.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Checks if the given address is a valid {@link ox#Address.Address}.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.validate('0xA0Cf798816D4b9b9866b5330EEa46a18382f251e')\n * // @log: true\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.validate('0xdeadbeef')\n * // @log: false\n * ```\n *\n * @param address - Value to check if it is a valid address.\n * @param options - Check options.\n * @returns Whether the address is a valid address.\n */\nexport function validate(\n  address: string,\n  options: validate.Options = {},\n): address is Address {\n  const { strict = true } = options ?? {}\n  try {\n    assert(address, { strict })\n    return true\n  } catch {\n    return false\n  }\n}\n\nexport declare namespace validate {\n  type Options = {\n    /**\n     * Enables strict mode. Whether or not to compare the address against its checksum.\n     *\n     * @default true\n     */\n    strict?: boolean | undefined\n  }\n}\n\n/**\n * Thrown when an address is invalid.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.from('0x123')\n * // @error: Address.InvalidAddressError: Address `0x123` is invalid.\n * ```\n */\nexport class InvalidAddressError<\n  cause extends InvalidInputError | InvalidChecksumError =\n    | InvalidInputError\n    | InvalidChecksumError,\n> extends Errors.BaseError<cause> {\n  override readonly name = 'Address.InvalidAddressError'\n\n  constructor({ address, cause }: { address: string; cause: cause }) {\n    super(`Address \"${address}\" is invalid.`, {\n      cause,\n    })\n  }\n}\n\n/** Thrown when an address is not a 20 byte (40 hexadecimal character) value. */\nexport class InvalidInputError extends Errors.BaseError {\n  override readonly name = 'Address.InvalidInputError'\n\n  constructor() {\n    super('Address is not a 20 byte (40 hexadecimal character) value.')\n  }\n}\n\n/** Thrown when an address does not match its checksum counterpart. */\nexport class InvalidChecksumError extends Errors.BaseError {\n  override readonly name = 'Address.InvalidChecksumError'\n\n  constructor() {\n    super('Address does not match its checksum counterpart.')\n  }\n}\n","import type * as Address from './Address.js'\nimport * as Hex from './Hex.js'\nimport * as Withdrawal from './Withdrawal.js'\n\n/**\n * Block overrides.\n */\nexport type BlockOverrides<bigintType = bigint, numberType = number> = {\n  /** Base fee per gas. */\n  baseFeePerGas?: bigintType | undefined\n  /** Blob base fee. */\n  blobBaseFee?: bigintType | undefined\n  /** Fee recipient (also known as coinbase). */\n  feeRecipient?: Address.Address | undefined\n  /** Gas limit. */\n  gasLimit?: bigintType | undefined\n  /** Block number. */\n  number?: bigintType | undefined\n  /** The previous value of randomness beacon. */\n  prevRandao?: bigintType | undefined\n  /** Block timestamp. */\n  time?: bigintType | undefined\n  /** Withdrawals made by validators. */\n  withdrawals?: Withdrawal.Withdrawal<bigintType, numberType>[] | undefined\n}\n\n/**\n * RPC block overrides.\n */\nexport type Rpc = BlockOverrides<Hex.Hex, Hex.Hex>\n\n/**\n * Converts an {@link ox#BlockOverrides.Rpc} to an {@link ox#BlockOverrides.BlockOverrides}.\n *\n * @example\n * ```ts twoslash\n * import { BlockOverrides } from 'ox'\n *\n * const blockOverrides = BlockOverrides.fromRpc({\n *   baseFeePerGas: '0x1',\n *   blobBaseFee: '0x2',\n *   feeRecipient: '0x0000000000000000000000000000000000000000',\n *   gasLimit: '0x4',\n *   number: '0x5',\n *   prevRandao: '0x6',\n *   time: '0x1234567890',\n *   withdrawals: [\n *     {\n *       address: '0x0000000000000000000000000000000000000000',\n *       amount: '0x1',\n *       index: '0x0',\n *       validatorIndex: '0x1',\n *     },\n *   ],\n * })\n * ```\n *\n * @param rpcBlockOverrides - The RPC block overrides to convert.\n * @returns An instantiated {@link ox#BlockOverrides.BlockOverrides}.\n */\nexport function fromRpc(rpcBlockOverrides: Rpc): BlockOverrides {\n  return {\n    ...(rpcBlockOverrides.baseFeePerGas && {\n      baseFeePerGas: BigInt(rpcBlockOverrides.baseFeePerGas),\n    }),\n    ...(rpcBlockOverrides.blobBaseFee && {\n      blobBaseFee: BigInt(rpcBlockOverrides.blobBaseFee),\n    }),\n    ...(rpcBlockOverrides.feeRecipient && {\n      feeRecipient: rpcBlockOverrides.feeRecipient,\n    }),\n    ...(rpcBlockOverrides.gasLimit && {\n      gasLimit: BigInt(rpcBlockOverrides.gasLimit),\n    }),\n    ...(rpcBlockOverrides.number && {\n      number: BigInt(rpcBlockOverrides.number),\n    }),\n    ...(rpcBlockOverrides.prevRandao && {\n      prevRandao: BigInt(rpcBlockOverrides.prevRandao),\n    }),\n    ...(rpcBlockOverrides.time && {\n      time: BigInt(rpcBlockOverrides.time),\n    }),\n    ...(rpcBlockOverrides.withdrawals && {\n      withdrawals: rpcBlockOverrides.withdrawals.map(Withdrawal.fromRpc),\n    }),\n  }\n}\n\n/**\n * Converts an {@link ox#BlockOverrides.BlockOverrides} to an {@link ox#BlockOverrides.Rpc}.\n *\n * @example\n * ```ts twoslash\n * import { BlockOverrides } from 'ox'\n *\n * const blockOverrides = BlockOverrides.toRpc({\n *   baseFeePerGas: 1n,\n *   blobBaseFee: 2n,\n *   feeRecipient: '0x0000000000000000000000000000000000000000',\n *   gasLimit: 4n,\n *   number: 5n,\n *   prevRandao: 6n,\n *   time: 78187493520n,\n *   withdrawals: [\n *     {\n *       address: '0x0000000000000000000000000000000000000000',\n *       amount: 1n,\n *       index: 0,\n *       validatorIndex: 1,\n *     },\n *   ],\n * })\n * ```\n *\n * @param blockOverrides - The block overrides to convert.\n * @returns An instantiated {@link ox#BlockOverrides.Rpc}.\n */\nexport function toRpc(blockOverrides: BlockOverrides): Rpc {\n  return {\n    ...(typeof blockOverrides.baseFeePerGas === 'bigint' && {\n      baseFeePerGas: Hex.fromNumber(blockOverrides.baseFeePerGas),\n    }),\n    ...(typeof blockOverrides.blobBaseFee === 'bigint' && {\n      blobBaseFee: Hex.fromNumber(blockOverrides.blobBaseFee),\n    }),\n    ...(typeof blockOverrides.feeRecipient === 'string' && {\n      feeRecipient: blockOverrides.feeRecipient,\n    }),\n    ...(typeof blockOverrides.gasLimit === 'bigint' && {\n      gasLimit: Hex.fromNumber(blockOverrides.gasLimit),\n    }),\n    ...(typeof blockOverrides.number === 'bigint' && {\n      number: Hex.fromNumber(blockOverrides.number),\n    }),\n    ...(typeof blockOverrides.prevRandao === 'bigint' && {\n      prevRandao: Hex.fromNumber(blockOverrides.prevRandao),\n    }),\n    ...(typeof blockOverrides.time === 'bigint' && {\n      time: Hex.fromNumber(blockOverrides.time),\n    }),\n    ...(blockOverrides.withdrawals && {\n      withdrawals: blockOverrides.withdrawals.map(Withdrawal.toRpc),\n    }),\n  }\n}\n","import { equalBytes } from '@noble/curves/abstract/utils'\nimport * as Errors from './Errors.js'\nimport * as Hex from './Hex.js'\nimport * as Json from './Json.js'\nimport * as internal from './internal/bytes.js'\nimport * as internal_hex from './internal/hex.js'\n\nconst decoder = /*#__PURE__*/ new TextDecoder()\nconst encoder = /*#__PURE__*/ new TextEncoder()\n\n/** Root type for a Bytes array. */\nexport type Bytes = Uint8Array\n\n/**\n * Asserts if the given value is {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.assert('abc')\n * // @error: Bytes.InvalidBytesTypeError:\n * // @error: Value `\"abc\"` of type `string` is an invalid Bytes value.\n * // @error: Bytes values must be of type `Uint8Array`.\n * ```\n *\n * @param value - Value to assert.\n */\nexport function assert(value: unknown): asserts value is Bytes {\n  if (value instanceof Uint8Array) return\n  if (!value) throw new InvalidBytesTypeError(value)\n  if (typeof value !== 'object') throw new InvalidBytesTypeError(value)\n  if (!('BYTES_PER_ELEMENT' in value)) throw new InvalidBytesTypeError(value)\n  if (value.BYTES_PER_ELEMENT !== 1 || value.constructor.name !== 'Uint8Array')\n    throw new InvalidBytesTypeError(value)\n}\n\nexport declare namespace assert {\n  type ErrorType = InvalidBytesTypeError | Errors.GlobalErrorType\n}\n\n/**\n * Concatenates two or more {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const bytes = Bytes.concat(\n *   Bytes.from([1]),\n *   Bytes.from([69]),\n *   Bytes.from([420, 69]),\n * )\n * // @log: Uint8Array [ 1, 69, 420, 69 ]\n * ```\n *\n * @param values - Values to concatenate.\n * @returns Concatenated {@link ox#Bytes.Bytes}.\n */\nexport function concat(...values: readonly Bytes[]): Bytes {\n  let length = 0\n  for (const arr of values) {\n    length += arr.length\n  }\n  const result = new Uint8Array(length)\n  for (let i = 0, index = 0; i < values.length; i++) {\n    const arr = values[i]\n    result.set(arr!, index)\n    index += arr!.length\n  }\n  return result\n}\n\nexport declare namespace concat {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Instantiates a {@link ox#Bytes.Bytes} value from a `Uint8Array`, a hex string, or an array of unsigned 8-bit integers.\n *\n * :::tip\n *\n * To instantiate from a **Boolean**, **String**, or **Number**, use one of the following:\n *\n * - `Bytes.fromBoolean`\n *\n * - `Bytes.fromString`\n *\n * - `Bytes.fromNumber`\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.from([255, 124, 5, 4])\n * // @log: Uint8Array([255, 124, 5, 4])\n *\n * const data = Bytes.from('0xdeadbeef')\n * // @log: Uint8Array([222, 173, 190, 239])\n * ```\n *\n * @param value - Value to convert.\n * @returns A {@link ox#Bytes.Bytes} instance.\n */\nexport function from(value: Hex.Hex | Bytes | readonly number[]): Bytes {\n  if (value instanceof Uint8Array) return value\n  if (typeof value === 'string') return fromHex(value)\n  return fromArray(value)\n}\n\nexport declare namespace from {\n  type ErrorType =\n    | fromHex.ErrorType\n    | fromArray.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Converts an array of unsigned 8-bit integers into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromArray([255, 124, 5, 4])\n * // @log: Uint8Array([255, 124, 5, 4])\n * ```\n *\n * @param value - Value to convert.\n * @returns A {@link ox#Bytes.Bytes} instance.\n */\nexport function fromArray(value: readonly number[] | Uint8Array): Bytes {\n  return value instanceof Uint8Array ? value : new Uint8Array(value)\n}\n\nexport declare namespace fromArray {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Encodes a boolean value into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromBoolean(true)\n * // @log: Uint8Array([1])\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromBoolean(true, { size: 32 })\n * // @log: Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])\n * ```\n *\n * @param value - Boolean value to encode.\n * @param options - Encoding options.\n * @returns Encoded {@link ox#Bytes.Bytes}.\n */\nexport function fromBoolean(value: boolean, options: fromBoolean.Options = {}) {\n  const { size } = options\n  const bytes = new Uint8Array(1)\n  bytes[0] = Number(value)\n  if (typeof size === 'number') {\n    internal.assertSize(bytes, size)\n    return padLeft(bytes, size)\n  }\n  return bytes\n}\n\nexport declare namespace fromBoolean {\n  type Options = {\n    /** Size of the output bytes. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | internal.assertSize.ErrorType\n    | padLeft.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Encodes a {@link ox#Hex.Hex} value into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromHex('0x48656c6c6f20776f726c6421')\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromHex('0x48656c6c6f20776f726c6421', { size: 32 })\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n * ```\n *\n * @param value - {@link ox#Hex.Hex} value to encode.\n * @param options - Encoding options.\n * @returns Encoded {@link ox#Bytes.Bytes}.\n */\nexport function fromHex(value: Hex.Hex, options: fromHex.Options = {}): Bytes {\n  const { size } = options\n\n  let hex = value\n  if (size) {\n    internal_hex.assertSize(value, size)\n    hex = Hex.padRight(value, size)\n  }\n\n  let hexString = hex.slice(2) as string\n  if (hexString.length % 2) hexString = `0${hexString}`\n\n  const length = hexString.length / 2\n  const bytes = new Uint8Array(length)\n  for (let index = 0, j = 0; index < length; index++) {\n    const nibbleLeft = internal.charCodeToBase16(hexString.charCodeAt(j++))\n    const nibbleRight = internal.charCodeToBase16(hexString.charCodeAt(j++))\n    if (nibbleLeft === undefined || nibbleRight === undefined) {\n      throw new Errors.BaseError(\n        `Invalid byte sequence (\"${hexString[j - 2]}${hexString[j - 1]}\" in \"${hexString}\").`,\n      )\n    }\n    bytes[index] = nibbleLeft * 16 + nibbleRight\n  }\n  return bytes\n}\n\nexport declare namespace fromHex {\n  type Options = {\n    /** Size of the output bytes. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | internal_hex.assertSize.ErrorType\n    | Hex.padRight.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Encodes a number value into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromNumber(420)\n * // @log: Uint8Array([1, 164])\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromNumber(420, { size: 4 })\n * // @log: Uint8Array([0, 0, 1, 164])\n * ```\n *\n * @param value - Number value to encode.\n * @param options - Encoding options.\n * @returns Encoded {@link ox#Bytes.Bytes}.\n */\nexport function fromNumber(\n  value: bigint | number,\n  options?: fromNumber.Options | undefined,\n) {\n  const hex = Hex.fromNumber(value, options)\n  return fromHex(hex)\n}\n\nexport declare namespace fromNumber {\n  export type Options = Hex.fromNumber.Options\n\n  export type ErrorType =\n    | Hex.fromNumber.ErrorType\n    | fromHex.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Encodes a string into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromString('Hello world!')\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100, 33])\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromString('Hello world!', { size: 32 })\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n * ```\n *\n * @param value - String to encode.\n * @param options - Encoding options.\n * @returns Encoded {@link ox#Bytes.Bytes}.\n */\nexport function fromString(\n  value: string,\n  options: fromString.Options = {},\n): Bytes {\n  const { size } = options\n\n  const bytes = encoder.encode(value)\n  if (typeof size === 'number') {\n    internal.assertSize(bytes, size)\n    return padRight(bytes, size)\n  }\n  return bytes\n}\n\nexport declare namespace fromString {\n  type Options = {\n    /** Size of the output bytes. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | internal.assertSize.ErrorType\n    | padRight.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Checks if two {@link ox#Bytes.Bytes} values are equal.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.isEqual(Bytes.from([1]), Bytes.from([1]))\n * // @log: true\n *\n * Bytes.isEqual(Bytes.from([1]), Bytes.from([2]))\n * // @log: false\n * ```\n *\n * @param bytesA - First {@link ox#Bytes.Bytes} value.\n * @param bytesB - Second {@link ox#Bytes.Bytes} value.\n * @returns `true` if the two values are equal, otherwise `false`.\n */\nexport function isEqual(bytesA: Bytes, bytesB: Bytes) {\n  return equalBytes(bytesA, bytesB)\n}\n\nexport declare namespace isEqual {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Pads a {@link ox#Bytes.Bytes} value to the left with zero bytes until it reaches the given `size` (default: 32 bytes).\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.padLeft(Bytes.from([1]), 4)\n * // @log: Uint8Array([0, 0, 0, 1])\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value to pad.\n * @param size - Size to pad the {@link ox#Bytes.Bytes} value to.\n * @returns Padded {@link ox#Bytes.Bytes} value.\n */\nexport function padLeft(\n  value: Bytes,\n  size?: number | undefined,\n): padLeft.ReturnType {\n  return internal.pad(value, { dir: 'left', size })\n}\n\nexport declare namespace padLeft {\n  type ReturnType = internal.pad.ReturnType\n  type ErrorType = internal.pad.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Pads a {@link ox#Bytes.Bytes} value to the right with zero bytes until it reaches the given `size` (default: 32 bytes).\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.padRight(Bytes.from([1]), 4)\n * // @log: Uint8Array([1, 0, 0, 0])\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value to pad.\n * @param size - Size to pad the {@link ox#Bytes.Bytes} value to.\n * @returns Padded {@link ox#Bytes.Bytes} value.\n */\nexport function padRight(\n  value: Bytes,\n  size?: number | undefined,\n): padRight.ReturnType {\n  return internal.pad(value, { dir: 'right', size })\n}\n\nexport declare namespace padRight {\n  type ReturnType = internal.pad.ReturnType\n  type ErrorType = internal.pad.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Generates random {@link ox#Bytes.Bytes} of the specified length.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const bytes = Bytes.random(32)\n * // @log: Uint8Array([... x32])\n * ```\n *\n * @param length - Length of the random {@link ox#Bytes.Bytes} to generate.\n * @returns Random {@link ox#Bytes.Bytes} of the specified length.\n */\nexport function random(length: number): Bytes {\n  return crypto.getRandomValues(new Uint8Array(length))\n}\n\nexport declare namespace random {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Retrieves the size of a {@link ox#Bytes.Bytes} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.size(Bytes.from([1, 2, 3, 4]))\n * // @log: 4\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value.\n * @returns Size of the {@link ox#Bytes.Bytes} value.\n */\nexport function size(value: Bytes): number {\n  return value.length\n}\n\nexport declare namespace size {\n  export type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Returns a section of a {@link ox#Bytes.Bytes} value given a start/end bytes offset.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.slice(\n *   Bytes.from([1, 2, 3, 4, 5, 6, 7, 8, 9]),\n *   1,\n *   4,\n * )\n * // @log: Uint8Array([2, 3, 4])\n * ```\n *\n * @param value - The {@link ox#Bytes.Bytes} value.\n * @param start - Start offset.\n * @param end - End offset.\n * @param options - Slice options.\n * @returns Sliced {@link ox#Bytes.Bytes} value.\n */\nexport function slice(\n  value: Bytes,\n  start?: number | undefined,\n  end?: number | undefined,\n  options: slice.Options = {},\n): Bytes {\n  const { strict } = options\n  internal.assertStartOffset(value, start)\n  const value_ = value.slice(start, end)\n  if (strict) internal.assertEndOffset(value_, start, end)\n  return value_\n}\n\nexport declare namespace slice {\n  type Options = {\n    /** Asserts that the sliced value is the same size as the given start/end offsets. */\n    strict?: boolean | undefined\n  }\n\n  export type ErrorType =\n    | internal.assertStartOffset.ErrorType\n    | internal.assertEndOffset.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a {@link ox#Bytes.Bytes} into a bigint.\n *\n * @example\n * ```ts\n * import { Bytes } from 'ox'\n *\n * Bytes.toBigInt(Bytes.from([1, 164]))\n * // @log: 420n\n * ```\n *\n * @param bytes - The {@link ox#Bytes.Bytes} to decode.\n * @param options - Decoding options.\n * @returns Decoded bigint.\n */\nexport function toBigInt(bytes: Bytes, options: toBigInt.Options = {}): bigint {\n  const { size } = options\n  if (typeof size !== 'undefined') internal.assertSize(bytes, size)\n  const hex = Hex.fromBytes(bytes, options)\n  return Hex.toBigInt(hex, options)\n}\n\nexport declare namespace toBigInt {\n  type Options = {\n    /** Whether or not the number of a signed representation. */\n    signed?: boolean | undefined\n    /** Size of the bytes. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | Hex.fromBytes.ErrorType\n    | Hex.toBigInt.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a {@link ox#Bytes.Bytes} into a boolean.\n *\n * @example\n * ```ts\n * import { Bytes } from 'ox'\n *\n * Bytes.toBoolean(Bytes.from([1]))\n * // @log: true\n * ```\n *\n * @param bytes - The {@link ox#Bytes.Bytes} to decode.\n * @param options - Decoding options.\n * @returns Decoded boolean.\n */\nexport function toBoolean(\n  bytes: Bytes,\n  options: toBoolean.Options = {},\n): boolean {\n  const { size } = options\n  let bytes_ = bytes\n  if (typeof size !== 'undefined') {\n    internal.assertSize(bytes_, size)\n    bytes_ = trimLeft(bytes_)\n  }\n  if (bytes_.length > 1 || bytes_[0]! > 1)\n    throw new InvalidBytesBooleanError(bytes_)\n  return Boolean(bytes_[0])\n}\n\nexport declare namespace toBoolean {\n  type Options = {\n    /** Size of the bytes. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | internal.assertSize.ErrorType\n    | trimLeft.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Encodes a {@link ox#Bytes.Bytes} value into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.toHex(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // '0x48656c6c6f20576f726c6421'\n * ```\n *\n * @param value - The {@link ox#Bytes.Bytes} to decode.\n * @param options - Options.\n * @returns Decoded {@link ox#Hex.Hex} value.\n */\nexport function toHex(value: Bytes, options: toHex.Options = {}): Hex.Hex {\n  return Hex.fromBytes(value, options)\n}\n\nexport declare namespace toHex {\n  type Options = {\n    /** Size of the bytes. */\n    size?: number | undefined\n  }\n\n  type ErrorType = Hex.fromBytes.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a {@link ox#Bytes.Bytes} into a number.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.toNumber(Bytes.from([1, 164]))\n * // @log: 420\n * ```\n */\nexport function toNumber(bytes: Bytes, options: toNumber.Options = {}): number {\n  const { size } = options\n  if (typeof size !== 'undefined') internal.assertSize(bytes, size)\n  const hex = Hex.fromBytes(bytes, options)\n  return Hex.toNumber(hex, options)\n}\n\nexport declare namespace toNumber {\n  type Options = {\n    /** Whether or not the number of a signed representation. */\n    signed?: boolean | undefined\n    /** Size of the bytes. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | Hex.fromBytes.ErrorType\n    | Hex.toNumber.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a {@link ox#Bytes.Bytes} into a string.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.toString(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // @log: 'Hello world'\n * ```\n *\n * @param bytes - The {@link ox#Bytes.Bytes} to decode.\n * @param options - Options.\n * @returns Decoded string.\n */\nexport function toString(bytes: Bytes, options: toString.Options = {}): string {\n  const { size } = options\n\n  let bytes_ = bytes\n  if (typeof size !== 'undefined') {\n    internal.assertSize(bytes_, size)\n    bytes_ = trimRight(bytes_)\n  }\n  return decoder.decode(bytes_)\n}\n\nexport declare namespace toString {\n  export type Options = {\n    /** Size of the bytes. */\n    size?: number | undefined\n  }\n\n  export type ErrorType =\n    | internal.assertSize.ErrorType\n    | trimRight.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Trims leading zeros from a {@link ox#Bytes.Bytes} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.trimLeft(Bytes.from([0, 0, 0, 0, 1, 2, 3]))\n * // @log: Uint8Array([1, 2, 3])\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value.\n * @returns Trimmed {@link ox#Bytes.Bytes} value.\n */\nexport function trimLeft(value: Bytes): Bytes {\n  return internal.trim(value, { dir: 'left' })\n}\n\nexport declare namespace trimLeft {\n  type ErrorType = internal.trim.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Trims trailing zeros from a {@link ox#Bytes.Bytes} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.trimRight(Bytes.from([1, 2, 3, 0, 0, 0, 0]))\n * // @log: Uint8Array([1, 2, 3])\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value.\n * @returns Trimmed {@link ox#Bytes.Bytes} value.\n */\nexport function trimRight(value: Bytes): Bytes {\n  return internal.trim(value, { dir: 'right' })\n}\n\nexport declare namespace trimRight {\n  export type ErrorType = internal.trim.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Checks if the given value is {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.validate('0x')\n * // @log: false\n *\n * Bytes.validate(Bytes.from([1, 2, 3]))\n * // @log: true\n * ```\n *\n * @param value - Value to check.\n * @returns `true` if the value is {@link ox#Bytes.Bytes}, otherwise `false`.\n */\nexport function validate(value: unknown): value is Bytes {\n  try {\n    assert(value)\n    return true\n  } catch {\n    return false\n  }\n}\n\nexport declare namespace validate {\n  export type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Thrown when the bytes value cannot be represented as a boolean.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.toBoolean(Bytes.from([5]))\n * // @error: Bytes.InvalidBytesBooleanError: Bytes value `[5]` is not a valid boolean.\n * // @error: The bytes array must contain a single byte of either a `0` or `1` value.\n * ```\n */\nexport class InvalidBytesBooleanError extends Errors.BaseError {\n  override readonly name = 'Bytes.InvalidBytesBooleanError'\n\n  constructor(bytes: Bytes) {\n    super(`Bytes value \\`${bytes}\\` is not a valid boolean.`, {\n      metaMessages: [\n        'The bytes array must contain a single byte of either a `0` or `1` value.',\n      ],\n    })\n  }\n}\n\n/**\n * Thrown when a value cannot be converted to bytes.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Bytes } from 'ox'\n *\n * Bytes.from('foo')\n * // @error: Bytes.InvalidBytesTypeError: Value `foo` of type `string` is an invalid Bytes value.\n * ```\n */\nexport class InvalidBytesTypeError extends Errors.BaseError {\n  override readonly name = 'Bytes.InvalidBytesTypeError'\n\n  constructor(value: unknown) {\n    super(\n      `Value \\`${typeof value === 'object' ? Json.stringify(value) : value}\\` of type \\`${typeof value}\\` is an invalid Bytes value.`,\n      {\n        metaMessages: ['Bytes values must be of type `Bytes`.'],\n      },\n    )\n  }\n}\n\n/**\n * Thrown when a size exceeds the maximum allowed size.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.fromString('Hello World!', { size: 8 })\n * // @error: Bytes.SizeOverflowError: Size cannot exceed `8` bytes. Given size: `12` bytes.\n * ```\n */\nexport class SizeOverflowError extends Errors.BaseError {\n  override readonly name = 'Bytes.SizeOverflowError'\n\n  constructor({ givenSize, maxSize }: { givenSize: number; maxSize: number }) {\n    super(\n      `Size cannot exceed \\`${maxSize}\\` bytes. Given size: \\`${givenSize}\\` bytes.`,\n    )\n  }\n}\n\n/**\n * Thrown when a slice offset is out-of-bounds.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.slice(Bytes.from([1, 2, 3]), 4)\n * // @error: Bytes.SliceOffsetOutOfBoundsError: Slice starting at offset `4` is out-of-bounds (size: `3`).\n * ```\n */\nexport class SliceOffsetOutOfBoundsError extends Errors.BaseError {\n  override readonly name = 'Bytes.SliceOffsetOutOfBoundsError'\n\n  constructor({\n    offset,\n    position,\n    size,\n  }: { offset: number; position: 'start' | 'end'; size: number }) {\n    super(\n      `Slice ${\n        position === 'start' ? 'starting' : 'ending'\n      } at offset \\`${offset}\\` is out-of-bounds (size: \\`${size}\\`).`,\n    )\n  }\n}\n\n/**\n * Thrown when a the padding size exceeds the maximum allowed size.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.padLeft(Bytes.fromString('Hello World!'), 8)\n * // @error: [Bytes.SizeExceedsPaddingSizeError: Bytes size (`12`) exceeds padding size (`8`).\n * ```\n */\nexport class SizeExceedsPaddingSizeError extends Errors.BaseError {\n  override readonly name = 'Bytes.SizeExceedsPaddingSizeError'\n\n  constructor({\n    size,\n    targetSize,\n    type,\n  }: {\n    size: number\n    targetSize: number\n    type: 'Hex' | 'Bytes'\n  }) {\n    super(\n      `${type.charAt(0).toUpperCase()}${type\n        .slice(1)\n        .toLowerCase()} size (\\`${size}\\`) exceeds padding size (\\`${targetSize}\\`).`,\n    )\n  }\n}\n","import type * as Address from './Address.js'\nimport { LruMap } from './internal/lru.js'\n\nconst caches = {\n  checksum: /*#__PURE__*/ new LruMap<Address.Address>(8192),\n}\n\nexport const checksum = caches.checksum\n\n/**\n * Clears all global caches.\n *\n * @example\n * ```ts\n * import { Caches } from 'ox'\n * Caches.clear()\n * ```\n */\nexport function clear() {\n  for (const cache of Object.values(caches)) cache.clear()\n}\n","import { getVersion } from './internal/errors.js'\n\nexport type GlobalErrorType<name extends string = 'Error'> = Error & {\n  name: name\n}\n\n/**\n * Base error class inherited by all errors thrown by ox.\n *\n * @example\n * ```ts\n * import { Errors } from 'ox'\n * throw new Errors.BaseError('An error occurred')\n * ```\n */\nexport class BaseError<\n  cause extends Error | undefined = undefined,\n> extends Error {\n  details: string\n  docs?: string | undefined\n  docsPath?: string | undefined\n  shortMessage: string\n\n  override cause: cause\n  override name = 'BaseError'\n\n  version = `ox@${getVersion()}`\n\n  constructor(shortMessage: string, options: BaseError.Options<cause> = {}) {\n    const details = (() => {\n      if (options.cause instanceof BaseError) {\n        if (options.cause.details) return options.cause.details\n        if (options.cause.shortMessage) return options.cause.shortMessage\n      }\n      if (options.cause?.message) return options.cause.message\n      return options.details!\n    })()\n    const docsPath = (() => {\n      if (options.cause instanceof BaseError)\n        return options.cause.docsPath || options.docsPath\n      return options.docsPath\n    })()\n\n    const docsBaseUrl = 'https://oxlib.sh'\n    const docs = `${docsBaseUrl}${docsPath ?? ''}`\n\n    const message = [\n      shortMessage || 'An error occurred.',\n      ...(options.metaMessages ? ['', ...options.metaMessages] : []),\n      ...(details || docsPath\n        ? [\n            '',\n            details ? `Details: ${details}` : undefined,\n            docsPath ? `See: ${docs}` : undefined,\n          ]\n        : []),\n    ]\n      .filter((x) => typeof x === 'string')\n      .join('\\n')\n\n    super(message, options.cause ? { cause: options.cause } : undefined)\n\n    this.cause = options.cause as any\n    this.details = details\n    this.docs = docs\n    this.docsPath = docsPath\n    this.shortMessage = shortMessage\n  }\n\n  walk(): Error\n  walk(fn: (err: unknown) => boolean): Error | null\n  walk(fn?: any): any {\n    return walk(this, fn)\n  }\n}\n\nexport declare namespace BaseError {\n  type Options<cause extends Error | undefined = Error | undefined> = {\n    cause?: cause | undefined\n    details?: string | undefined\n    docsPath?: string | undefined\n    metaMessages?: (string | undefined)[] | undefined\n  }\n}\n\n/** @internal */\nfunction walk(\n  err: unknown,\n  fn?: ((err: unknown) => boolean) | undefined,\n): unknown {\n  if (fn?.(err)) return err\n  if (err && typeof err === 'object' && 'cause' in err && err.cause)\n    return walk(err.cause, fn)\n  return fn ? null : err\n}\n","import { ripemd160 as noble_ripemd160 } from '@noble/hashes/ripemd160'\nimport { keccak_256 as noble_keccak256 } from '@noble/hashes/sha3'\nimport { sha256 as noble_sha256 } from '@noble/hashes/sha256'\nimport * as Bytes from './Bytes.js'\nimport type * as Errors from './Errors.js'\nimport * as Hex from './Hex.js'\n\n/**\n * Calculates the [Keccak256](https://en.wikipedia.org/wiki/SHA-3) hash of a {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n *\n * This function is a re-export of `keccak_256` from [`@noble/hashes`](https://github.com/paulmillr/noble-hashes), an audited & minimal JS hashing library.\n *\n * @example\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.keccak256('0xdeadbeef')\n * // @log: '0xd4fd4e189132273036449fc9e11198c739161b4c0116a9a2dccdfa1c492006f1'\n * ```\n *\n * @example\n * ### Calculate Hash of a String\n *\n * ```ts twoslash\n * import { Hash, Hex } from 'ox'\n *\n * Hash.keccak256(Hex.fromString('hello world'))\n * // @log: '0x3ea2f1d0abf3fc66cf29eebb70cbd4e7fe762ef8a09bcc06c8edf641230afec0'\n * ```\n *\n * @example\n * ### Configure Return Type\n *\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.keccak256('0xdeadbeef', { as: 'Bytes' })\n * // @log: Uint8Array [...]\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n * @param options - Options.\n * @returns Keccak256 hash.\n */\nexport function keccak256<\n  value extends Hex.Hex | Bytes.Bytes,\n  as extends 'Hex' | 'Bytes' =\n    | (value extends Hex.Hex ? 'Hex' : never)\n    | (value extends Bytes.Bytes ? 'Bytes' : never),\n>(\n  value: value | Hex.Hex | Bytes.Bytes,\n  options: keccak256.Options<as> = {},\n): keccak256.ReturnType<as> {\n  const { as = typeof value === 'string' ? 'Hex' : 'Bytes' } = options\n  const bytes = noble_keccak256(Bytes.from(value))\n  if (as === 'Bytes') return bytes as never\n  return Hex.fromBytes(bytes) as never\n}\n\nexport declare namespace keccak256 {\n  type Options<as extends 'Hex' | 'Bytes' = 'Hex' | 'Bytes'> = {\n    /** The return type. @default 'Hex' */\n    as?: as | 'Hex' | 'Bytes' | undefined\n  }\n\n  type ReturnType<as extends 'Hex' | 'Bytes' = 'Hex' | 'Bytes'> =\n    | (as extends 'Bytes' ? Bytes.Bytes : never)\n    | (as extends 'Hex' ? Hex.Hex : never)\n\n  type ErrorType =\n    | Bytes.from.ErrorType\n    | Hex.fromBytes.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Calculates the [Ripemd160](https://en.wikipedia.org/wiki/RIPEMD) hash of a {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n *\n * This function is a re-export of `ripemd160` from [`@noble/hashes`](https://github.com/paulmillr/noble-hashes), an audited & minimal JS hashing library.\n *\n * @example\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.ripemd160('0xdeadbeef')\n * // '0x226821c2f5423e11fe9af68bd285c249db2e4b5a'\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n * @param options - Options.\n * @returns Ripemd160 hash.\n */\nexport function ripemd160<\n  value extends Hex.Hex | Bytes.Bytes,\n  as extends 'Hex' | 'Bytes' =\n    | (value extends Hex.Hex ? 'Hex' : never)\n    | (value extends Bytes.Bytes ? 'Bytes' : never),\n>(\n  value: value | Hex.Hex | Bytes.Bytes,\n  options: ripemd160.Options<as> = {},\n): ripemd160.ReturnType<as> {\n  const { as = typeof value === 'string' ? 'Hex' : 'Bytes' } = options\n  const bytes = noble_ripemd160(Bytes.from(value))\n  if (as === 'Bytes') return bytes as never\n  return Hex.fromBytes(bytes) as never\n}\n\nexport declare namespace ripemd160 {\n  type Options<as extends 'Hex' | 'Bytes' = 'Hex' | 'Bytes'> = {\n    /** The return type. @default 'Hex' */\n    as?: as | 'Hex' | 'Bytes' | undefined\n  }\n\n  type ReturnType<as extends 'Hex' | 'Bytes' = 'Hex' | 'Bytes'> =\n    | (as extends 'Bytes' ? Bytes.Bytes : never)\n    | (as extends 'Hex' ? Hex.Hex : never)\n\n  type ErrorType =\n    | Bytes.from.ErrorType\n    | Hex.fromBytes.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Calculates the [Sha256](https://en.wikipedia.org/wiki/SHA-256) hash of a {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n *\n * This function is a re-export of `sha256` from [`@noble/hashes`](https://github.com/paulmillr/noble-hashes), an audited & minimal JS hashing library.\n *\n * @example\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.sha256('0xdeadbeef')\n * // '0x5f78c33274e43fa9de5659265c1d917e25c03722dcb0b8d27db8d5feaa813953'\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n * @param options - Options.\n * @returns Sha256 hash.\n */\nexport function sha256<\n  value extends Hex.Hex | Bytes.Bytes,\n  as extends 'Hex' | 'Bytes' =\n    | (value extends Hex.Hex ? 'Hex' : never)\n    | (value extends Bytes.Bytes ? 'Bytes' : never),\n>(\n  value: value | Hex.Hex | Bytes.Bytes,\n  options: sha256.Options<as> = {},\n): sha256.ReturnType<as> {\n  const { as = typeof value === 'string' ? 'Hex' : 'Bytes' } = options\n  const bytes = noble_sha256(Bytes.from(value))\n  if (as === 'Bytes') return bytes as never\n  return Hex.fromBytes(bytes) as never\n}\n\nexport declare namespace sha256 {\n  type Options<as extends 'Hex' | 'Bytes' = 'Hex'> = {\n    /** The return type. @default 'Hex' */\n    as?: as | 'Hex' | 'Bytes' | undefined\n  }\n\n  type ReturnType<as extends 'Hex' | 'Bytes' = 'Hex'> =\n    | (as extends 'Bytes' ? Bytes.Bytes : never)\n    | (as extends 'Hex' ? Hex.Hex : never)\n\n  type ErrorType =\n    | Bytes.from.ErrorType\n    | Hex.fromBytes.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Checks if a string is a valid hash value.\n *\n * @example\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.validate('0x')\n * // @log: false\n *\n * Hash.validate('0x3ea2f1d0abf3fc66cf29eebb70cbd4e7fe762ef8a09bcc06c8edf641230afec0')\n * // @log: true\n * ```\n *\n * @param value - Value to check.\n * @returns Whether the value is a valid hash.\n */\nexport function validate(value: string): value is Hex.Hex {\n  return Hex.validate(value) && Hex.size(value) === 32\n}\n\nexport declare namespace validate {\n  type ErrorType =\n    | Hex.validate.ErrorType\n    | Hex.size.ErrorType\n    | Errors.GlobalErrorType\n}\n","import { equalBytes } from '@noble/curves/abstract/utils'\nimport * as Bytes from './Bytes.js'\nimport * as Errors from './Errors.js'\nimport * as Json from './Json.js'\nimport * as internal_bytes from './internal/bytes.js'\nimport * as internal from './internal/hex.js'\n\nconst encoder = /*#__PURE__*/ new TextEncoder()\n\nconst hexes = /*#__PURE__*/ Array.from({ length: 256 }, (_v, i) =>\n  i.toString(16).padStart(2, '0'),\n)\n\n/** Root type for a Hex string. */\nexport type Hex = `0x${string}`\n\n/**\n * Asserts if the given value is {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.assert('abc')\n * // @error: InvalidHexValueTypeError:\n * // @error: Value `\"abc\"` of type `string` is an invalid hex type.\n * // @error: Hex types must be represented as `\"0x\\${string}\"`.\n * ```\n *\n * @param value - The value to assert.\n * @param options - Options.\n */\nexport function assert(\n  value: unknown,\n  options: assert.Options = {},\n): asserts value is Hex {\n  const { strict = false } = options\n  if (!value) throw new InvalidHexTypeError(value)\n  if (typeof value !== 'string') throw new InvalidHexTypeError(value)\n  if (strict) {\n    if (!/^0x[0-9a-fA-F]*$/.test(value)) throw new InvalidHexValueError(value)\n  }\n  if (!value.startsWith('0x')) throw new InvalidHexValueError(value)\n}\n\nexport declare namespace assert {\n  type Options = {\n    /** Checks if the {@link ox#Hex.Hex} value contains invalid hexadecimal characters. @default false */\n    strict?: boolean | undefined\n  }\n\n  type ErrorType =\n    | InvalidHexTypeError\n    | InvalidHexValueError\n    | Errors.GlobalErrorType\n}\n\n/**\n * Concatenates two or more {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.concat('0x123', '0x456')\n * // @log: '0x123456'\n * ```\n *\n * @param values - The {@link ox#Hex.Hex} values to concatenate.\n * @returns The concatenated {@link ox#Hex.Hex} value.\n */\nexport function concat(...values: readonly Hex[]): Hex {\n  return `0x${(values as Hex[]).reduce((acc, x) => acc + x.replace('0x', ''), '')}`\n}\n\nexport declare namespace concat {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Instantiates a {@link ox#Hex.Hex} value from a hex string or {@link ox#Bytes.Bytes} value.\n *\n * :::tip\n *\n * To instantiate from a **Boolean**, **String**, or **Number**, use one of the following:\n *\n * - `Hex.fromBoolean`\n *\n * - `Hex.fromString`\n *\n * - `Hex.fromNumber`\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * import { Bytes, Hex } from 'ox'\n *\n * Hex.from('0x48656c6c6f20576f726c6421')\n * // @log: '0x48656c6c6f20576f726c6421'\n *\n * Hex.from(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // @log: '0x48656c6c6f20576f726c6421'\n * ```\n *\n * @param value - The {@link ox#Bytes.Bytes} value to encode.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function from(value: Hex | Bytes.Bytes | readonly number[]): Hex {\n  if (value instanceof Uint8Array) return fromBytes(value)\n  if (Array.isArray(value)) return fromBytes(new Uint8Array(value))\n  return value as never\n}\n\nexport declare namespace from {\n  type Options = {\n    /** The size (in bytes) of the output hex value. */\n    size?: number | undefined\n  }\n\n  type ErrorType = fromBytes.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Encodes a boolean into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.fromBoolean(true)\n * // @log: '0x1'\n *\n * Hex.fromBoolean(false)\n * // @log: '0x0'\n *\n * Hex.fromBoolean(true, { size: 32 })\n * // @log: '0x0000000000000000000000000000000000000000000000000000000000000001'\n * ```\n *\n * @param value - The boolean value to encode.\n * @param options - Options.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function fromBoolean(\n  value: boolean,\n  options: fromBoolean.Options = {},\n): Hex {\n  const hex: Hex = `0x${Number(value)}`\n  if (typeof options.size === 'number') {\n    internal.assertSize(hex, options.size)\n    return padLeft(hex, options.size)\n  }\n  return hex\n}\n\nexport declare namespace fromBoolean {\n  type Options = {\n    /** The size (in bytes) of the output hex value. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | internal.assertSize.ErrorType\n    | padLeft.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Encodes a {@link ox#Bytes.Bytes} value into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes, Hex } from 'ox'\n *\n * Hex.fromBytes(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // @log: '0x48656c6c6f20576f726c6421'\n * ```\n *\n * @param value - The {@link ox#Bytes.Bytes} value to encode.\n * @param options - Options.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function fromBytes(\n  value: Bytes.Bytes,\n  options: fromBytes.Options = {},\n): Hex {\n  let string = ''\n  for (let i = 0; i < value.length; i++) string += hexes[value[i]!]\n  const hex = `0x${string}` as const\n\n  if (typeof options.size === 'number') {\n    internal.assertSize(hex, options.size)\n    return padRight(hex, options.size)\n  }\n  return hex\n}\n\nexport declare namespace fromBytes {\n  type Options = {\n    /** The size (in bytes) of the output hex value. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | internal.assertSize.ErrorType\n    | padRight.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Encodes a number or bigint into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.fromNumber(420)\n * // @log: '0x1a4'\n *\n * Hex.fromNumber(420, { size: 32 })\n * // @log: '0x00000000000000000000000000000000000000000000000000000000000001a4'\n * ```\n *\n * @param value - The number or bigint value to encode.\n * @param options - Options.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function fromNumber(\n  value: number | bigint,\n  options: fromNumber.Options = {},\n): Hex {\n  const { signed, size } = options\n\n  const value_ = BigInt(value)\n\n  let maxValue: bigint | number | undefined\n  if (size) {\n    if (signed) maxValue = (1n << (BigInt(size) * 8n - 1n)) - 1n\n    else maxValue = 2n ** (BigInt(size) * 8n) - 1n\n  } else if (typeof value === 'number') {\n    maxValue = BigInt(Number.MAX_SAFE_INTEGER)\n  }\n\n  const minValue = typeof maxValue === 'bigint' && signed ? -maxValue - 1n : 0\n\n  if ((maxValue && value_ > maxValue) || value_ < minValue) {\n    const suffix = typeof value === 'bigint' ? 'n' : ''\n    throw new IntegerOutOfRangeError({\n      max: maxValue ? `${maxValue}${suffix}` : undefined,\n      min: `${minValue}${suffix}`,\n      signed,\n      size,\n      value: `${value}${suffix}`,\n    })\n  }\n\n  const stringValue = (\n    signed && value_ < 0 ? (1n << BigInt(size * 8)) + BigInt(value_) : value_\n  ).toString(16)\n\n  const hex = `0x${stringValue}` as Hex\n  if (size) return padLeft(hex, size) as Hex\n  return hex\n}\n\nexport declare namespace fromNumber {\n  type Options =\n    | {\n        /** Whether or not the number of a signed representation. */\n        signed?: boolean | undefined\n        /** The size (in bytes) of the output hex value. */\n        size: number\n      }\n    | {\n        signed?: undefined\n        /** The size (in bytes) of the output hex value. */\n        size?: number | undefined\n      }\n\n  type ErrorType =\n    | IntegerOutOfRangeError\n    | padLeft.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Encodes a string into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n * Hex.fromString('Hello World!')\n * // '0x48656c6c6f20576f726c6421'\n *\n * Hex.fromString('Hello World!', { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n * ```\n *\n * @param value - The string value to encode.\n * @param options - Options.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function fromString(\n  value: string,\n  options: fromString.Options = {},\n): Hex {\n  return fromBytes(encoder.encode(value), options)\n}\n\nexport declare namespace fromString {\n  type Options = {\n    /** The size (in bytes) of the output hex value. */\n    size?: number | undefined\n  }\n\n  type ErrorType = fromBytes.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Checks if two {@link ox#Hex.Hex} values are equal.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.isEqual('0xdeadbeef', '0xdeadbeef')\n * // @log: true\n *\n * Hex.isEqual('0xda', '0xba')\n * // @log: false\n * ```\n *\n * @param hexA - The first {@link ox#Hex.Hex} value.\n * @param hexB - The second {@link ox#Hex.Hex} value.\n * @returns `true` if the two {@link ox#Hex.Hex} values are equal, `false` otherwise.\n */\nexport function isEqual(hexA: Hex, hexB: Hex) {\n  return equalBytes(Bytes.fromHex(hexA), Bytes.fromHex(hexB))\n}\n\nexport declare namespace isEqual {\n  type ErrorType = Bytes.fromHex.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Pads a {@link ox#Hex.Hex} value to the left with zero bytes until it reaches the given `size` (default: 32 bytes).\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.padLeft('0x1234', 4)\n * // @log: '0x00001234'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to pad.\n * @param size - The size (in bytes) of the output hex value.\n * @returns The padded {@link ox#Hex.Hex} value.\n */\nexport function padLeft(\n  value: Hex,\n  size?: number | undefined,\n): padLeft.ReturnType {\n  return internal.pad(value, { dir: 'left', size })\n}\n\nexport declare namespace padLeft {\n  type ReturnType = Hex\n  type ErrorType = internal.pad.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Pads a {@link ox#Hex.Hex} value to the right with zero bytes until it reaches the given `size` (default: 32 bytes).\n *\n * @example\n * ```ts\n * import { Hex } from 'ox'\n *\n * Hex.padRight('0x1234', 4)\n * // @log: '0x12340000'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to pad.\n * @param size - The size (in bytes) of the output hex value.\n * @returns The padded {@link ox#Hex.Hex} value.\n */\nexport function padRight(\n  value: Hex,\n  size?: number | undefined,\n): padRight.ReturnType {\n  return internal.pad(value, { dir: 'right', size })\n}\n\nexport declare namespace padRight {\n  type ReturnType = Hex\n  type ErrorType = internal.pad.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Generates a random {@link ox#Hex.Hex} value of the specified length.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * const hex = Hex.random(32)\n * // @log: '0x...'\n * ```\n *\n * @returns Random {@link ox#Hex.Hex} value.\n */\nexport function random(length: number): Hex {\n  return fromBytes(Bytes.random(length))\n}\n\nexport declare namespace random {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Returns a section of a {@link ox#Bytes.Bytes} value given a start/end bytes offset.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.slice('0x0123456789', 1, 4)\n * // @log: '0x234567'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to slice.\n * @param start - The start offset (in bytes).\n * @param end - The end offset (in bytes).\n * @param options - Options.\n * @returns The sliced {@link ox#Hex.Hex} value.\n */\nexport function slice(\n  value: Hex,\n  start?: number | undefined,\n  end?: number | undefined,\n  options: slice.Options = {},\n): Hex {\n  const { strict } = options\n  internal.assertStartOffset(value, start)\n  const value_ = `0x${value\n    .replace('0x', '')\n    .slice((start ?? 0) * 2, (end ?? value.length) * 2)}` as const\n  if (strict) internal.assertEndOffset(value_, start, end)\n  return value_\n}\n\nexport declare namespace slice {\n  type Options = {\n    /** Asserts that the sliced value is the same size as the given start/end offsets. */\n    strict?: boolean | undefined\n  }\n\n  type ErrorType =\n    | internal.assertStartOffset.ErrorType\n    | internal.assertEndOffset.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Retrieves the size of a {@link ox#Hex.Hex} value (in bytes).\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.size('0xdeadbeef')\n * // @log: 4\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to get the size of.\n * @returns The size of the {@link ox#Hex.Hex} value (in bytes).\n */\nexport function size(value: Hex): number {\n  return Math.ceil((value.length - 2) / 2)\n}\n\nexport declare namespace size {\n  export type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Trims leading zeros from a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.trimLeft('0x00000000deadbeef')\n * // @log: '0xdeadbeef'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to trim.\n * @returns The trimmed {@link ox#Hex.Hex} value.\n */\nexport function trimLeft(value: Hex): trimLeft.ReturnType {\n  return internal.trim(value, { dir: 'left' })\n}\n\nexport declare namespace trimLeft {\n  type ReturnType = Hex\n\n  type ErrorType = internal.trim.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Trims trailing zeros from a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.trimRight('0xdeadbeef00000000')\n * // @log: '0xdeadbeef'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to trim.\n * @returns The trimmed {@link ox#Hex.Hex} value.\n */\nexport function trimRight(value: Hex): trimRight.ReturnType {\n  return internal.trim(value, { dir: 'right' })\n}\n\nexport declare namespace trimRight {\n  type ReturnType = Hex\n\n  type ErrorType = internal.trim.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a {@link ox#Hex.Hex} value into a BigInt.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toBigInt('0x1a4')\n * // @log: 420n\n *\n * Hex.toBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // @log: 420n\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded BigInt.\n */\nexport function toBigInt(hex: Hex, options: toBigInt.Options = {}): bigint {\n  const { signed } = options\n\n  if (options.size) internal.assertSize(hex, options.size)\n\n  const value = BigInt(hex)\n  if (!signed) return value\n\n  const size = (hex.length - 2) / 2\n\n  const max_unsigned = (1n << (BigInt(size) * 8n)) - 1n\n  const max_signed = max_unsigned >> 1n\n\n  if (value <= max_signed) return value\n  return value - max_unsigned - 1n\n}\n\nexport declare namespace toBigInt {\n  type Options = {\n    /** Whether or not the number of a signed representation. */\n    signed?: boolean | undefined\n    /** Size (in bytes) of the hex value. */\n    size?: number | undefined\n  }\n\n  type ErrorType = internal.assertSize.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a {@link ox#Hex.Hex} value into a boolean.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toBoolean('0x01')\n * // @log: true\n *\n * Hex.toBoolean('0x0000000000000000000000000000000000000000000000000000000000000001', { size: 32 })\n * // @log: true\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded boolean.\n */\nexport function toBoolean(hex: Hex, options: toBoolean.Options = {}): boolean {\n  if (options.size) internal.assertSize(hex, options.size)\n  const hex_ = trimLeft(hex)\n  if (hex_ === '0x') return false\n  if (hex_ === '0x1') return true\n  throw new InvalidHexBooleanError(hex)\n}\n\nexport declare namespace toBoolean {\n  type Options = {\n    /** Size (in bytes) of the hex value. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | internal.assertSize.ErrorType\n    | trimLeft.ErrorType\n    | InvalidHexBooleanError\n    | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a {@link ox#Hex.Hex} value into a {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * const data = Hex.toBytes('0x48656c6c6f20776f726c6421')\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded {@link ox#Bytes.Bytes}.\n */\nexport function toBytes(hex: Hex, options: toBytes.Options = {}): Bytes.Bytes {\n  return Bytes.fromHex(hex, options)\n}\n\nexport declare namespace toBytes {\n  type Options = {\n    /** Size (in bytes) of the hex value. */\n    size?: number | undefined\n  }\n\n  type ErrorType = Bytes.fromHex.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a {@link ox#Hex.Hex} value into a number.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toNumber('0x1a4')\n * // @log: 420\n *\n * Hex.toNumber('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // @log: 420\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded number.\n */\nexport function toNumber(hex: Hex, options: toNumber.Options = {}): number {\n  const { signed, size } = options\n  if (!signed && !size) return Number(hex)\n  return Number(toBigInt(hex, options))\n}\n\nexport declare namespace toNumber {\n  type Options = toBigInt.Options\n\n  type ErrorType = toBigInt.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a {@link ox#Hex.Hex} value into a string.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toString('0x48656c6c6f20576f726c6421')\n * // @log: 'Hello world!'\n *\n * Hex.toString('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *  size: 32,\n * })\n * // @log: 'Hello world'\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded string.\n */\nexport function toString(hex: Hex, options: toString.Options = {}): string {\n  const { size } = options\n\n  let bytes = Bytes.fromHex(hex)\n  if (size) {\n    internal_bytes.assertSize(bytes, size)\n    bytes = Bytes.trimRight(bytes)\n  }\n  return new TextDecoder().decode(bytes)\n}\n\nexport declare namespace toString {\n  type Options = {\n    /** Size (in bytes) of the hex value. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | internal_bytes.assertSize.ErrorType\n    | Bytes.fromHex.ErrorType\n    | Bytes.trimRight.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Checks if the given value is {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes, Hex } from 'ox'\n *\n * Hex.validate('0xdeadbeef')\n * // @log: true\n *\n * Hex.validate(Bytes.from([1, 2, 3]))\n * // @log: false\n * ```\n *\n * @param value - The value to check.\n * @param options - Options.\n * @returns `true` if the value is a {@link ox#Hex.Hex}, `false` otherwise.\n */\nexport function validate(\n  value: unknown,\n  options: validate.Options = {},\n): value is Hex {\n  const { strict = false } = options\n  try {\n    assert(value, { strict })\n    return true\n  } catch {\n    return false\n  }\n}\n\nexport declare namespace validate {\n  type Options = {\n    /** Checks if the {@link ox#Hex.Hex} value contains invalid hexadecimal characters. @default false */\n    strict?: boolean | undefined\n  }\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Thrown when the provided integer is out of range, and cannot be represented as a hex value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.fromNumber(420182738912731283712937129)\n * // @error: Hex.IntegerOutOfRangeError: Number \\`4.2018273891273126e+26\\` is not in safe unsigned integer range (`0` to `9007199254740991`)\n * ```\n */\nexport class IntegerOutOfRangeError extends Errors.BaseError {\n  override readonly name = 'Hex.IntegerOutOfRangeError'\n\n  constructor({\n    max,\n    min,\n    signed,\n    size,\n    value,\n  }: {\n    max?: string | undefined\n    min: string\n    signed?: boolean | undefined\n    size?: number | undefined\n    value: string\n  }) {\n    super(\n      `Number \\`${value}\\` is not in safe${\n        size ? ` ${size * 8}-bit` : ''\n      }${signed ? ' signed' : ' unsigned'} integer range ${max ? `(\\`${min}\\` to \\`${max}\\`)` : `(above \\`${min}\\`)`}`,\n    )\n  }\n}\n\n/**\n * Thrown when the provided hex value cannot be represented as a boolean.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toBoolean('0xa')\n * // @error: Hex.InvalidHexBooleanError: Hex value `\"0xa\"` is not a valid boolean.\n * // @error: The hex value must be `\"0x0\"` (false) or `\"0x1\"` (true).\n * ```\n */\nexport class InvalidHexBooleanError extends Errors.BaseError {\n  override readonly name = 'Hex.InvalidHexBooleanError'\n\n  constructor(hex: Hex) {\n    super(`Hex value \\`\"${hex}\"\\` is not a valid boolean.`, {\n      metaMessages: [\n        'The hex value must be `\"0x0\"` (false) or `\"0x1\"` (true).',\n      ],\n    })\n  }\n}\n\n/**\n * Thrown when the provided value is not a valid hex type.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.assert(1)\n * // @error: Hex.InvalidHexTypeError: Value `1` of type `number` is an invalid hex type.\n * ```\n */\nexport class InvalidHexTypeError extends Errors.BaseError {\n  override readonly name = 'Hex.InvalidHexTypeError'\n\n  constructor(value: unknown) {\n    super(\n      `Value \\`${typeof value === 'object' ? Json.stringify(value) : value}\\` of type \\`${typeof value}\\` is an invalid hex type.`,\n      {\n        metaMessages: ['Hex types must be represented as `\"0x${string}\"`.'],\n      },\n    )\n  }\n}\n\n/**\n * Thrown when the provided hex value is invalid.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.assert('0x0123456789abcdefg')\n * // @error: Hex.InvalidHexValueError: Value `0x0123456789abcdefg` is an invalid hex value.\n * // @error: Hex values must start with `\"0x\"` and contain only hexadecimal characters (0-9, a-f, A-F).\n * ```\n */\nexport class InvalidHexValueError extends Errors.BaseError {\n  override readonly name = 'Hex.InvalidHexValueError'\n\n  constructor(value: unknown) {\n    super(`Value \\`${value}\\` is an invalid hex value.`, {\n      metaMessages: [\n        'Hex values must start with `\"0x\"` and contain only hexadecimal characters (0-9, a-f, A-F).',\n      ],\n    })\n  }\n}\n\n/**\n * Thrown when the provided hex value is an odd length.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.fromHex('0xabcde')\n * // @error: Hex.InvalidLengthError: Hex value `\"0xabcde\"` is an odd length (5 nibbles).\n * ```\n */\nexport class InvalidLengthError extends Errors.BaseError {\n  override readonly name = 'Hex.InvalidLengthError'\n\n  constructor(value: Hex) {\n    super(\n      `Hex value \\`\"${value}\"\\` is an odd length (${value.length - 2} nibbles).`,\n      {\n        metaMessages: ['It must be an even length.'],\n      },\n    )\n  }\n}\n\n/**\n * Thrown when the size of the value exceeds the expected max size.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.fromString('Hello World!', { size: 8 })\n * // @error: Hex.SizeOverflowError: Size cannot exceed `8` bytes. Given size: `12` bytes.\n * ```\n */\nexport class SizeOverflowError extends Errors.BaseError {\n  override readonly name = 'Hex.SizeOverflowError'\n\n  constructor({ givenSize, maxSize }: { givenSize: number; maxSize: number }) {\n    super(\n      `Size cannot exceed \\`${maxSize}\\` bytes. Given size: \\`${givenSize}\\` bytes.`,\n    )\n  }\n}\n\n/**\n * Thrown when the slice offset exceeds the bounds of the value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.slice('0x0123456789', 6)\n * // @error: Hex.SliceOffsetOutOfBoundsError: Slice starting at offset `6` is out-of-bounds (size: `5`).\n * ```\n */\nexport class SliceOffsetOutOfBoundsError extends Errors.BaseError {\n  override readonly name = 'Hex.SliceOffsetOutOfBoundsError'\n\n  constructor({\n    offset,\n    position,\n    size,\n  }: { offset: number; position: 'start' | 'end'; size: number }) {\n    super(\n      `Slice ${\n        position === 'start' ? 'starting' : 'ending'\n      } at offset \\`${offset}\\` is out-of-bounds (size: \\`${size}\\`).`,\n    )\n  }\n}\n\n/**\n * Thrown when the size of the value exceeds the pad size.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.padLeft('0x1a4e12a45a21323123aaa87a897a897a898a6567a578a867a98778a667a85a875a87a6a787a65a675a6a9', 32)\n * // @error: Hex.SizeExceedsPaddingSizeError: Hex size (`43`) exceeds padding size (`32`).\n * ```\n */\nexport class SizeExceedsPaddingSizeError extends Errors.BaseError {\n  override readonly name = 'Hex.SizeExceedsPaddingSizeError'\n\n  constructor({\n    size,\n    targetSize,\n    type,\n  }: {\n    size: number\n    targetSize: number\n    type: 'Hex' | 'Bytes'\n  }) {\n    super(\n      `${type.charAt(0).toUpperCase()}${type\n        .slice(1)\n        .toLowerCase()} size (\\`${size}\\`) exceeds padding size (\\`${targetSize}\\`).`,\n    )\n  }\n}\n","import type * as Errors from './Errors.js'\n\nconst bigIntSuffix = '#__bigint'\n\n/**\n * Parses a JSON string, with support for `bigint`.\n *\n * @example\n * ```ts twoslash\n * import { Json } from 'ox'\n *\n * const json = Json.parse('{\"foo\":\"bar\",\"baz\":\"69420694206942069420694206942069420694206942069420#__bigint\"}')\n * // @log: {\n * // @log:   foo: 'bar',\n * // @log:   baz: 69420694206942069420694206942069420694206942069420n\n * // @log: }\n * ```\n *\n * @param string - The value to parse.\n * @param reviver - A function that transforms the results.\n * @returns The parsed value.\n */\nexport function parse(\n  string: string,\n  reviver?: ((this: any, key: string, value: any) => any) | undefined,\n) {\n  return JSON.parse(string, (key, value_) => {\n    const value = value_\n    if (typeof value === 'string' && value.endsWith(bigIntSuffix))\n      return BigInt(value.slice(0, -bigIntSuffix.length))\n    return typeof reviver === 'function' ? reviver(key, value) : value\n  })\n}\n\nexport declare namespace parse {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Stringifies a value to its JSON representation, with support for `bigint`.\n *\n * @example\n * ```ts twoslash\n * import { Json } from 'ox'\n *\n * const json = Json.stringify({\n *   foo: 'bar',\n *   baz: 69420694206942069420694206942069420694206942069420n,\n * })\n * // @log: '{\"foo\":\"bar\",\"baz\":\"69420694206942069420694206942069420694206942069420#__bigint\"}'\n * ```\n *\n * @param value - The value to stringify.\n * @param replacer - A function that transforms the results. It is passed the key and value of the property, and must return the value to be used in the JSON string. If this function returns `undefined`, the property is not included in the resulting JSON string.\n * @param space - A string or number that determines the indentation of the JSON string. If it is a number, it indicates the number of spaces to use as indentation; if it is a string (e.g. `'\\t'`), it uses the string as the indentation character.\n * @returns The JSON string.\n */\nexport function stringify(\n  value: any,\n  replacer?: ((this: any, key: string, value: any) => any) | null | undefined,\n  space?: string | number | undefined,\n) {\n  return JSON.stringify(\n    value,\n    (key, value) => {\n      if (typeof replacer === 'function') return replacer(key, value)\n      if (typeof value === 'bigint') return value.toString() + bigIntSuffix\n      return value\n    },\n    space,\n  )\n}\n\nexport declare namespace stringify {\n  type ErrorType = Errors.GlobalErrorType\n}\n","import * as Bytes from './Bytes.js'\nimport * as Errors from './Errors.js'\nimport * as Hex from './Hex.js'\nimport * as Json from './Json.js'\nimport type { Compute, ExactPartial } from './internal/types.js'\n\n/** Root type for an ECDSA Public Key. */\nexport type PublicKey<\n  compressed extends boolean = false,\n  bigintType = bigint,\n  numberType = number,\n> = Compute<\n  compressed extends true\n    ? {\n        prefix: numberType\n        x: bigintType\n        y?: undefined\n      }\n    : {\n        prefix: numberType\n        x: bigintType\n        y: bigintType\n      }\n>\n\n/**\n * Asserts that a {@link ox#PublicKey.PublicKey} is valid.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * PublicKey.assert({\n *   prefix: 4,\n *   y: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n * })\n * // @error: PublicKey.InvalidError: Value \\`{\"y\":\"1\"}\\` is not a valid public key.\n * // @error: Public key must contain:\n * // @error: - an `x` and `prefix` value (compressed)\n * // @error: - an `x`, `y`, and `prefix` value (uncompressed)\n * ```\n *\n * @param publicKey - The public key object to assert.\n */\nexport function assert(\n  publicKey: ExactPartial<PublicKey>,\n  options: assert.Options = {},\n): asserts publicKey is PublicKey {\n  const { compressed } = options\n  const { prefix, x, y } = publicKey\n\n  // Uncompressed\n  if (\n    compressed === false ||\n    (typeof x === 'bigint' && typeof y === 'bigint')\n  ) {\n    if (prefix !== 4)\n      throw new InvalidPrefixError({\n        prefix,\n        cause: new InvalidUncompressedPrefixError(),\n      })\n    return\n  }\n\n  // Compressed\n  if (\n    compressed === true ||\n    (typeof x === 'bigint' && typeof y === 'undefined')\n  ) {\n    if (prefix !== 3 && prefix !== 2)\n      throw new InvalidPrefixError({\n        prefix,\n        cause: new InvalidCompressedPrefixError(),\n      })\n    return\n  }\n\n  // Unknown/invalid\n  throw new InvalidError({ publicKey })\n}\n\nexport declare namespace assert {\n  type Options = {\n    /** Whether or not the public key should be compressed. */\n    compressed?: boolean\n  }\n\n  type ErrorType = InvalidError | InvalidPrefixError | Errors.GlobalErrorType\n}\n\n/**\n * Compresses a {@link ox#PublicKey.PublicKey}.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.from({\n *   prefix: 4,\n *   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n *   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * })\n *\n * const compressed = PublicKey.compress(publicKey) // [!code focus]\n * // @log: {\n * // @log:   prefix: 3,\n * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n * // @log: }\n * ```\n *\n * @param publicKey - The public key to compress.\n * @returns The compressed public key.\n */\nexport function compress(publicKey: PublicKey<false>): PublicKey<true> {\n  const { x, y } = publicKey\n  return {\n    prefix: y % 2n === 0n ? 2 : 3,\n    x,\n  }\n}\n\nexport declare namespace compress {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Instantiates a typed {@link ox#PublicKey.PublicKey} object from a {@link ox#PublicKey.PublicKey}, {@link ox#Bytes.Bytes}, or {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.from({\n *   prefix: 4,\n *   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n *   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * })\n * // @log: {\n * // @log:   prefix: 4,\n * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n * // @log:   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * // @log: }\n * ```\n *\n * @example\n * ### From Serialized\n *\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.from('0x048318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed753547f11ca8696646f2f3acb08e31016afac23e630c5d11f59f61fef57b0d2aa5')\n * // @log: {\n * // @log:   prefix: 4,\n * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n * // @log:   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * // @log: }\n * ```\n *\n * @param value - The public key value to instantiate.\n * @returns The instantiated {@link ox#PublicKey.PublicKey}.\n */\nexport function from<\n  const publicKey extends\n    | CompressedPublicKey\n    | UncompressedPublicKey\n    | Hex.Hex\n    | Bytes.Bytes,\n>(value: from.Value<publicKey>): from.ReturnType<publicKey> {\n  const publicKey = (() => {\n    if (Hex.validate(value)) return fromHex(value)\n    if (Bytes.validate(value)) return fromBytes(value)\n\n    const { prefix, x, y } = value\n    if (typeof x === 'bigint' && typeof y === 'bigint')\n      return { prefix: prefix ?? 0x04, x, y }\n    return { prefix, x }\n  })()\n\n  assert(publicKey)\n\n  return publicKey as never\n}\n\n/** @internal */\ntype CompressedPublicKey = PublicKey<true>\n\n/** @internal */\ntype UncompressedPublicKey = Omit<PublicKey<false>, 'prefix'> & {\n  prefix?: PublicKey['prefix'] | undefined\n}\n\nexport declare namespace from {\n  type Value<\n    publicKey extends\n      | CompressedPublicKey\n      | UncompressedPublicKey\n      | Hex.Hex\n      | Bytes.Bytes = PublicKey,\n  > = publicKey | CompressedPublicKey | UncompressedPublicKey\n\n  type ReturnType<\n    publicKey extends\n      | CompressedPublicKey\n      | UncompressedPublicKey\n      | Hex.Hex\n      | Bytes.Bytes = PublicKey,\n  > = publicKey extends CompressedPublicKey | UncompressedPublicKey\n    ? publicKey extends UncompressedPublicKey\n      ? Compute<publicKey & { readonly prefix: 0x04 }>\n      : publicKey\n    : PublicKey\n\n  type ErrorType = assert.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Deserializes a {@link ox#PublicKey.PublicKey} from a {@link ox#Bytes.Bytes} value.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.fromBytes(new Uint8Array([128, 3, 131, ...]))\n * // @log: {\n * // @log:   prefix: 4,\n * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n * // @log:   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * // @log: }\n * ```\n *\n * @param publicKey - The serialized public key.\n * @returns The deserialized public key.\n */\nexport function fromBytes(publicKey: Bytes.Bytes): PublicKey {\n  return fromHex(Hex.fromBytes(publicKey))\n}\n\nexport declare namespace fromBytes {\n  type ErrorType =\n    | fromHex.ErrorType\n    | Hex.fromBytes.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Deserializes a {@link ox#PublicKey.PublicKey} from a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.fromHex('0x8318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed753547f11ca8696646f2f3acb08e31016afac23e630c5d11f59f61fef57b0d2aa5')\n * // @log: {\n * // @log:   prefix: 4,\n * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n * // @log:   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * // @log: }\n * ```\n *\n * @example\n * ### Deserializing a Compressed Public Key\n *\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.fromHex('0x038318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed75')\n * // @log: {\n * // @log:   prefix: 3,\n * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n * // @log: }\n * ```\n *\n * @param publicKey - The serialized public key.\n * @returns The deserialized public key.\n */\nexport function fromHex(publicKey: Hex.Hex): PublicKey {\n  if (\n    publicKey.length !== 132 &&\n    publicKey.length !== 130 &&\n    publicKey.length !== 68\n  )\n    throw new InvalidSerializedSizeError({ publicKey })\n\n  if (publicKey.length === 130) {\n    const x = BigInt(Hex.slice(publicKey, 0, 32))\n    const y = BigInt(Hex.slice(publicKey, 32, 64))\n    return {\n      prefix: 4,\n      x,\n      y,\n    } as never\n  }\n\n  if (publicKey.length === 132) {\n    const prefix = Number(Hex.slice(publicKey, 0, 1))\n    const x = BigInt(Hex.slice(publicKey, 1, 33))\n    const y = BigInt(Hex.slice(publicKey, 33, 65))\n    return {\n      prefix,\n      x,\n      y,\n    } as never\n  }\n\n  const prefix = Number(Hex.slice(publicKey, 0, 1))\n  const x = BigInt(Hex.slice(publicKey, 1, 33))\n  return {\n    prefix,\n    x,\n  } as never\n}\n\nexport declare namespace fromHex {\n  type ErrorType = Hex.slice.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Serializes a {@link ox#PublicKey.PublicKey} to {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.from({\n *   prefix: 4,\n *   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n *   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * })\n *\n * const bytes = PublicKey.toBytes(publicKey) // [!code focus]\n * // @log: Uint8Array [128, 3, 131, ...]\n * ```\n *\n * @param publicKey - The public key to serialize.\n * @returns The serialized public key.\n */\nexport function toBytes(\n  publicKey: PublicKey<boolean>,\n  options: toBytes.Options = {},\n): Bytes.Bytes {\n  return Bytes.fromHex(toHex(publicKey, options))\n}\n\nexport declare namespace toBytes {\n  type Options = {\n    /**\n     * Whether to include the prefix in the serialized public key.\n     * @default true\n     */\n    includePrefix?: boolean | undefined\n  }\n\n  type ErrorType =\n    | Hex.fromNumber.ErrorType\n    | Bytes.fromHex.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Serializes a {@link ox#PublicKey.PublicKey} to {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.from({\n *   prefix: 4,\n *   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n *   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * })\n *\n * const hex = PublicKey.toHex(publicKey) // [!code focus]\n * // @log: '0x048318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed753547f11ca8696646f2f3acb08e31016afac23e630c5d11f59f61fef57b0d2aa5'\n * ```\n *\n * @param publicKey - The public key to serialize.\n * @returns The serialized public key.\n */\nexport function toHex(\n  publicKey: PublicKey<boolean>,\n  options: toHex.Options = {},\n): Hex.Hex {\n  assert(publicKey)\n\n  const { prefix, x, y } = publicKey\n  const { includePrefix = true } = options\n\n  const publicKey_ = Hex.concat(\n    includePrefix ? Hex.fromNumber(prefix, { size: 1 }) : '0x',\n    Hex.fromNumber(x, { size: 32 }),\n    // If the public key is not compressed, add the y coordinate.\n    typeof y === 'bigint' ? Hex.fromNumber(y, { size: 32 }) : '0x',\n  )\n\n  return publicKey_\n}\n\nexport declare namespace toHex {\n  type Options = {\n    /**\n     * Whether to include the prefix in the serialized public key.\n     * @default true\n     */\n    includePrefix?: boolean | undefined\n  }\n\n  type ErrorType = Hex.fromNumber.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Validates a {@link ox#PublicKey.PublicKey}. Returns `true` if valid, `false` otherwise.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const valid = PublicKey.validate({\n *   prefix: 4,\n *   y: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n * })\n * // @log: false\n * ```\n *\n * @param publicKey - The public key object to assert.\n */\nexport function validate(\n  publicKey: ExactPartial<PublicKey>,\n  options: validate.Options = {},\n): boolean {\n  try {\n    assert(publicKey, options)\n    return true\n  } catch (error) {\n    return false\n  }\n}\n\nexport declare namespace validate {\n  type Options = {\n    /** Whether or not the public key should be compressed. */\n    compressed?: boolean\n  }\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Thrown when a public key is invalid.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * PublicKey.assert({ y: 1n })\n * // @error: PublicKey.InvalidError: Value `{\"y\":1n}` is not a valid public key.\n * // @error: Public key must contain:\n * // @error: - an `x` and `prefix` value (compressed)\n * // @error: - an `x`, `y`, and `prefix` value (uncompressed)\n * ```\n */\nexport class InvalidError extends Errors.BaseError {\n  override readonly name = 'PublicKey.InvalidError'\n\n  constructor({ publicKey }: { publicKey: unknown }) {\n    super(`Value \\`${Json.stringify(publicKey)}\\` is not a valid public key.`, {\n      metaMessages: [\n        'Public key must contain:',\n        '- an `x` and `prefix` value (compressed)',\n        '- an `x`, `y`, and `prefix` value (uncompressed)',\n      ],\n    })\n  }\n}\n\n/** Thrown when a public key has an invalid prefix. */\nexport class InvalidPrefixError<\n  cause extends InvalidCompressedPrefixError | InvalidUncompressedPrefixError =\n    | InvalidCompressedPrefixError\n    | InvalidUncompressedPrefixError,\n> extends Errors.BaseError<cause> {\n  override readonly name = 'PublicKey.InvalidPrefixError'\n\n  constructor({ prefix, cause }: { prefix: number | undefined; cause: cause }) {\n    super(`Prefix \"${prefix}\" is invalid.`, {\n      cause,\n    })\n  }\n}\n\n/** Thrown when the public key has an invalid prefix for a compressed public key. */\nexport class InvalidCompressedPrefixError extends Errors.BaseError {\n  override readonly name = 'PublicKey.InvalidCompressedPrefixError'\n\n  constructor() {\n    super('Prefix must be 2 or 3 for compressed public keys.')\n  }\n}\n\n/** Thrown when the public key has an invalid prefix for an uncompressed public key. */\nexport class InvalidUncompressedPrefixError extends Errors.BaseError {\n  override readonly name = 'PublicKey.InvalidUncompressedPrefixError'\n\n  constructor() {\n    super('Prefix must be 4 for uncompressed public keys.')\n  }\n}\n\n/** Thrown when the public key has an invalid serialized size. */\nexport class InvalidSerializedSizeError extends Errors.BaseError {\n  override readonly name = 'PublicKey.InvalidSerializedSizeError'\n\n  constructor({ publicKey }: { publicKey: Hex.Hex | Bytes.Bytes }) {\n    super(`Value \\`${publicKey}\\` is an invalid public key size.`, {\n      metaMessages: [\n        'Expected: 33 bytes (compressed + prefix), 64 bytes (uncompressed) or 65 bytes (uncompressed + prefix).',\n        `Received ${Hex.size(Hex.from(publicKey))} bytes.`,\n      ],\n    })\n  }\n}\n","export const arrayRegex = /^(.*)\\[([0-9]*)\\]$/\n\n// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n// https://regexr.com/6va55\nexport const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/\n\n// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n// https://regexr.com/6v8hp\nexport const integerRegex =\n  /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/\n\nexport const maxInt8 = 2n ** (8n - 1n) - 1n\nexport const maxInt16 = 2n ** (16n - 1n) - 1n\nexport const maxInt24 = 2n ** (24n - 1n) - 1n\nexport const maxInt32 = 2n ** (32n - 1n) - 1n\nexport const maxInt40 = 2n ** (40n - 1n) - 1n\nexport const maxInt48 = 2n ** (48n - 1n) - 1n\nexport const maxInt56 = 2n ** (56n - 1n) - 1n\nexport const maxInt64 = 2n ** (64n - 1n) - 1n\nexport const maxInt72 = 2n ** (72n - 1n) - 1n\nexport const maxInt80 = 2n ** (80n - 1n) - 1n\nexport const maxInt88 = 2n ** (88n - 1n) - 1n\nexport const maxInt96 = 2n ** (96n - 1n) - 1n\nexport const maxInt104 = 2n ** (104n - 1n) - 1n\nexport const maxInt112 = 2n ** (112n - 1n) - 1n\nexport const maxInt120 = 2n ** (120n - 1n) - 1n\nexport const maxInt128 = 2n ** (128n - 1n) - 1n\nexport const maxInt136 = 2n ** (136n - 1n) - 1n\nexport const maxInt144 = 2n ** (144n - 1n) - 1n\nexport const maxInt152 = 2n ** (152n - 1n) - 1n\nexport const maxInt160 = 2n ** (160n - 1n) - 1n\nexport const maxInt168 = 2n ** (168n - 1n) - 1n\nexport const maxInt176 = 2n ** (176n - 1n) - 1n\nexport const maxInt184 = 2n ** (184n - 1n) - 1n\nexport const maxInt192 = 2n ** (192n - 1n) - 1n\nexport const maxInt200 = 2n ** (200n - 1n) - 1n\nexport const maxInt208 = 2n ** (208n - 1n) - 1n\nexport const maxInt216 = 2n ** (216n - 1n) - 1n\nexport const maxInt224 = 2n ** (224n - 1n) - 1n\nexport const maxInt232 = 2n ** (232n - 1n) - 1n\nexport const maxInt240 = 2n ** (240n - 1n) - 1n\nexport const maxInt248 = 2n ** (248n - 1n) - 1n\nexport const maxInt256 = 2n ** (256n - 1n) - 1n\n\nexport const minInt8 = -(2n ** (8n - 1n))\nexport const minInt16 = -(2n ** (16n - 1n))\nexport const minInt24 = -(2n ** (24n - 1n))\nexport const minInt32 = -(2n ** (32n - 1n))\nexport const minInt40 = -(2n ** (40n - 1n))\nexport const minInt48 = -(2n ** (48n - 1n))\nexport const minInt56 = -(2n ** (56n - 1n))\nexport const minInt64 = -(2n ** (64n - 1n))\nexport const minInt72 = -(2n ** (72n - 1n))\nexport const minInt80 = -(2n ** (80n - 1n))\nexport const minInt88 = -(2n ** (88n - 1n))\nexport const minInt96 = -(2n ** (96n - 1n))\nexport const minInt104 = -(2n ** (104n - 1n))\nexport const minInt112 = -(2n ** (112n - 1n))\nexport const minInt120 = -(2n ** (120n - 1n))\nexport const minInt128 = -(2n ** (128n - 1n))\nexport const minInt136 = -(2n ** (136n - 1n))\nexport const minInt144 = -(2n ** (144n - 1n))\nexport const minInt152 = -(2n ** (152n - 1n))\nexport const minInt160 = -(2n ** (160n - 1n))\nexport const minInt168 = -(2n ** (168n - 1n))\nexport const minInt176 = -(2n ** (176n - 1n))\nexport const minInt184 = -(2n ** (184n - 1n))\nexport const minInt192 = -(2n ** (192n - 1n))\nexport const minInt200 = -(2n ** (200n - 1n))\nexport const minInt208 = -(2n ** (208n - 1n))\nexport const minInt216 = -(2n ** (216n - 1n))\nexport const minInt224 = -(2n ** (224n - 1n))\nexport const minInt232 = -(2n ** (232n - 1n))\nexport const minInt240 = -(2n ** (240n - 1n))\nexport const minInt248 = -(2n ** (248n - 1n))\nexport const minInt256 = -(2n ** (256n - 1n))\n\nexport const maxUint8 = 2n ** 8n - 1n\nexport const maxUint16 = 2n ** 16n - 1n\nexport const maxUint24 = 2n ** 24n - 1n\nexport const maxUint32 = 2n ** 32n - 1n\nexport const maxUint40 = 2n ** 40n - 1n\nexport const maxUint48 = 2n ** 48n - 1n\nexport const maxUint56 = 2n ** 56n - 1n\nexport const maxUint64 = 2n ** 64n - 1n\nexport const maxUint72 = 2n ** 72n - 1n\nexport const maxUint80 = 2n ** 80n - 1n\nexport const maxUint88 = 2n ** 88n - 1n\nexport const maxUint96 = 2n ** 96n - 1n\nexport const maxUint104 = 2n ** 104n - 1n\nexport const maxUint112 = 2n ** 112n - 1n\nexport const maxUint120 = 2n ** 120n - 1n\nexport const maxUint128 = 2n ** 128n - 1n\nexport const maxUint136 = 2n ** 136n - 1n\nexport const maxUint144 = 2n ** 144n - 1n\nexport const maxUint152 = 2n ** 152n - 1n\nexport const maxUint160 = 2n ** 160n - 1n\nexport const maxUint168 = 2n ** 168n - 1n\nexport const maxUint176 = 2n ** 176n - 1n\nexport const maxUint184 = 2n ** 184n - 1n\nexport const maxUint192 = 2n ** 192n - 1n\nexport const maxUint200 = 2n ** 200n - 1n\nexport const maxUint208 = 2n ** 208n - 1n\nexport const maxUint216 = 2n ** 216n - 1n\nexport const maxUint224 = 2n ** 224n - 1n\nexport const maxUint232 = 2n ** 232n - 1n\nexport const maxUint240 = 2n ** 240n - 1n\nexport const maxUint248 = 2n ** 248n - 1n\nexport const maxUint256 = 2n ** 256n - 1n\n","import type * as Errors from './Errors.js'\nimport * as Hex from './Hex.js'\n\n/** A Withdrawal as defined in the [Execution API specification](https://github.com/ethereum/execution-apis/blob/main/src/schemas/withdrawal.yaml). */\nexport type Withdrawal<bigintType = bigint, numberType = number> = {\n  address: Hex.Hex\n  amount: bigintType\n  index: numberType\n  validatorIndex: numberType\n}\n\n/** An RPC Withdrawal as defined in the [Execution API specification](https://github.com/ethereum/execution-apis/blob/main/src/schemas/withdrawal.yaml). */\nexport type Rpc = Withdrawal<Hex.Hex, Hex.Hex>\n\n/**\n * Converts a {@link ox#Withdrawal.Rpc} to an {@link ox#Withdrawal.Withdrawal}.\n *\n * @example\n * ```ts twoslash\n * import { Withdrawal } from 'ox'\n *\n * const withdrawal = Withdrawal.fromRpc({\n *   address: '0x00000000219ab540356cBB839Cbe05303d7705Fa',\n *   amount: '0x620323',\n *   index: '0x0',\n *   validatorIndex: '0x1',\n * })\n * // @log: {\n * // @log:   address: '0x00000000219ab540356cBB839Cbe05303d7705Fa',\n * // @log:   amount: 6423331n,\n * // @log:   index: 0,\n * // @log:   validatorIndex: 1\n * // @log: }\n * ```\n *\n * @param withdrawal - The RPC withdrawal to convert.\n * @returns An instantiated {@link ox#Withdrawal.Withdrawal}.\n */\nexport function fromRpc(withdrawal: Rpc): Withdrawal {\n  return {\n    ...withdrawal,\n    amount: BigInt(withdrawal.amount),\n    index: Number(withdrawal.index),\n    validatorIndex: Number(withdrawal.validatorIndex),\n  }\n}\n\nexport declare namespace fromRpc {\n  export type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Converts a {@link ox#Withdrawal.Withdrawal} to an {@link ox#Withdrawal.Rpc}.\n *\n * @example\n * ```ts twoslash\n * import { Withdrawal } from 'ox'\n *\n * const withdrawal = Withdrawal.toRpc({\n *   address: '0x00000000219ab540356cBB839Cbe05303d7705Fa',\n *   amount: 6423331n,\n *   index: 0,\n *   validatorIndex: 1,\n * })\n * // @log: {\n * // @log:   address: '0x00000000219ab540356cBB839Cbe05303d7705Fa',\n * // @log:   amount: '0x620323',\n * // @log:   index: '0x0',\n * // @log:   validatorIndex: '0x1',\n * // @log: }\n * ```\n *\n * @param withdrawal - The Withdrawal to convert.\n * @returns An RPC Withdrawal.\n */\nexport function toRpc(withdrawal: Withdrawal): Rpc {\n  return {\n    address: withdrawal.address,\n    amount: Hex.fromNumber(withdrawal.amount),\n    index: Hex.fromNumber(withdrawal.index),\n    validatorIndex: Hex.fromNumber(withdrawal.validatorIndex),\n  }\n}\n\nexport declare namespace toRpc {\n  export type ErrorType = Errors.GlobalErrorType\n}\n","import type * as abitype from 'abitype'\nimport type * as Abi from '../Abi.js'\nimport type * as AbiItem from '../AbiItem.js'\nimport type * as AbiParameters from '../AbiParameters.js'\nimport * as Address from '../Address.js'\nimport * as Errors from '../Errors.js'\nimport type {\n  Compute,\n  IsNever,\n  IsUnion,\n  TypeErrorMessage,\n  UnionToTuple,\n} from './types.js'\n\n/** @internal */\nexport type ExtractArgs<\n  abi extends Abi.Abi | readonly unknown[] = Abi.Abi,\n  name extends AbiItem.Name<abi> = AbiItem.Name<abi>,\n> = abitype.AbiParametersToPrimitiveTypes<\n  AbiItem.FromAbi<abi extends Abi.Abi ? abi : Abi.Abi, name>['inputs'],\n  'inputs'\n> extends infer args\n  ? [args] extends [never]\n    ? readonly unknown[]\n    : args\n  : readonly unknown[]\n\n/** @internal */\nexport type ExtractForArgs<\n  abi extends Abi.Abi,\n  name extends AbiItem.Name<abi>,\n  args extends ExtractArgs<abi, name>,\n> = IsUnion<name> extends true\n  ? {\n      [key in keyof abi]: abi[key] extends { name: name } ? abi[key] : never\n    }[number]\n  : AbiItem.FromAbi<abi, name> extends infer abiItem extends AbiItem.AbiItem & {\n        inputs: readonly abitype.AbiParameter[]\n      }\n    ? IsUnion<abiItem> extends true // narrow overloads using `args` by converting to tuple and filtering out overloads that don't match\n      ? UnionToTuple<abiItem> extends infer abiItems extends\n          readonly (AbiItem.AbiItem & {\n            inputs: readonly abitype.AbiParameter[]\n          })[]\n        ? IsNever<TupleToUnion<abiItems, abi, name, args>> extends true\n          ? Compute<\n              abiItems[0] & {\n                readonly overloads: UnionToTuple<\n                  Exclude<abiItems[number], abiItems[0]>\n                >\n              }\n            >\n          : TupleToUnion<abiItems, abi, name, args> // convert back to union (removes `never` tuple entries: `['foo', never, 'bar'][number]` => `'foo' | 'bar'`)\n        : never\n      : abiItem\n    : never\n\n/** @internal */\nexport type TupleToUnion<\n  abiItems extends readonly {\n    inputs: readonly abitype.AbiParameter[]\n  }[],\n  abi extends Abi.Abi,\n  name extends AbiItem.Name<abi>,\n  args extends ExtractArgs<abi, name>,\n> = {\n  [k in keyof abiItems]: (\n    readonly [] extends args\n      ? readonly [] // fallback to `readonly []` if `args` has no value (e.g. `args` property not provided)\n      : args\n  ) extends abitype.AbiParametersToPrimitiveTypes<\n    abiItems[k]['inputs'],\n    'inputs'\n  >\n    ? abiItems[k]\n    : never\n}[number]\n\n/** @internal */\nexport type ErrorSignature<\n  name extends string = string,\n  parameters extends string = string,\n> = `error ${name}(${parameters})`\n\n/** @internal */\nexport type IsErrorSignature<signature extends string> =\n  signature extends ErrorSignature<infer name> ? IsName<name> : false\n\n/** @internal */\nexport type EventSignature<\n  name extends string = string,\n  parameters extends string = string,\n> = `event ${name}(${parameters})`\n\n/** @internal */\nexport type IsEventSignature<signature extends string> =\n  signature extends EventSignature<infer name> ? IsName<name> : false\n\n/** @internal */\nexport type FunctionSignature<\n  name extends string = string,\n  tail extends string = string,\n> = `function ${name}(${tail}`\nexport type IsFunctionSignature<signature> =\n  signature extends FunctionSignature<infer name>\n    ? IsName<name> extends true\n      ? signature extends ValidFunctionSignatures\n        ? true\n        : // Check that `Parameters` is not absorbing other types (e.g. `returns`)\n          signature extends `function ${string}(${infer parameters})`\n          ? parameters extends InvalidFunctionParameters\n            ? false\n            : true\n          : false\n      : false\n    : false\n/** @internal */\nexport type Scope = 'public' | 'external' // `internal` or `private` functions wouldn't make it to ABI so can ignore\n\n/** @internal */\nexport type Returns = `returns (${string})` | `returns(${string})`\n\n// Almost all valid function signatures, except `function ${string}(${infer parameters})` since `parameters` can absorb returns\n/** @internal */\nexport type ValidFunctionSignatures =\n  | `function ${string}()`\n  // basic\n  | `function ${string}() ${Returns}`\n  | `function ${string}() ${abitype.AbiStateMutability}`\n  | `function ${string}() ${Scope}`\n  // combinations\n  | `function ${string}() ${abitype.AbiStateMutability} ${Returns}`\n  | `function ${string}() ${Scope} ${Returns}`\n  | `function ${string}() ${Scope} ${abitype.AbiStateMutability}`\n  | `function ${string}() ${Scope} ${abitype.AbiStateMutability} ${Returns}`\n  // Parameters\n  | `function ${string}(${string}) ${Returns}`\n  | `function ${string}(${string}) ${abitype.AbiStateMutability}`\n  | `function ${string}(${string}) ${Scope}`\n  | `function ${string}(${string}) ${abitype.AbiStateMutability} ${Returns}`\n  | `function ${string}(${string}) ${Scope} ${Returns}`\n  | `function ${string}(${string}) ${Scope} ${abitype.AbiStateMutability}`\n  | `function ${string}(${string}) ${Scope} ${abitype.AbiStateMutability} ${Returns}`\n\n/** @internal */\nexport type StructSignature<\n  name extends string = string,\n  properties extends string = string,\n> = `struct ${name} {${properties}}`\n\n/** @internal */\nexport type IsStructSignature<signature extends string> =\n  signature extends StructSignature<infer name> ? IsName<name> : false\n\n/** @internal */\nexport type ConstructorSignature<tail extends string = string> =\n  `constructor(${tail}`\n\n/** @internal */\nexport type IsConstructorSignature<signature> =\n  signature extends ConstructorSignature\n    ? signature extends ValidConstructorSignatures\n      ? true\n      : false\n    : false\n\n/** @internal */\nexport type ValidConstructorSignatures =\n  | `constructor(${string})`\n  | `constructor(${string}) payable`\n\n/** @internal */\nexport type FallbackSignature<abiStateMutability extends '' | ' payable' = ''> =\n  `fallback() external${abiStateMutability}`\n\n/** @internal */\nexport type ReceiveSignature = 'receive() external payable'\n\n// TODO: Maybe use this for signature validation one day\n// https://twitter.com/devanshj__/status/1610423724708343808\n/** @internal */\nexport type IsSignature<type extends string> =\n  | (IsErrorSignature<type> extends true ? true : never)\n  | (IsEventSignature<type> extends true ? true : never)\n  | (IsFunctionSignature<type> extends true ? true : never)\n  | (IsStructSignature<type> extends true ? true : never)\n  | (IsConstructorSignature<type> extends true ? true : never)\n  | (type extends FallbackSignature ? true : never)\n  | (type extends ReceiveSignature ? true : never) extends infer condition\n  ? [condition] extends [never]\n    ? false\n    : true\n  : false\n\n/** @internal */\nexport type Signature<\n  string1 extends string,\n  string2 extends string | unknown = unknown,\n> = IsSignature<string1> extends true\n  ? string1\n  : string extends string1 // if exactly `string` (not narrowed), then pass through as valid\n    ? string1\n    : TypeErrorMessage<`Signature \"${string1}\" is invalid${string2 extends string\n        ? ` at position ${string2}`\n        : ''}.`>\n\n/** @internal */\nexport type Signatures<signatures extends readonly string[]> = {\n  [key in keyof signatures]: Signature<signatures[key], key>\n}\n\n/** @internal */\nexport type IsName<name extends string> = name extends ''\n  ? false\n  : ValidateName<name> extends name\n    ? true\n    : false\n\n/** @internal */\nexport type ValidateName<\n  name extends string,\n  checkCharacters extends boolean = false,\n> = name extends `${string}${' '}${string}`\n  ? TypeErrorMessage<`Identifier \"${name}\" cannot contain whitespace.`>\n  : IsSolidityKeyword<name> extends true\n    ? TypeErrorMessage<`\"${name}\" is a protected Solidity keyword.`>\n    : name extends `${number}`\n      ? TypeErrorMessage<`Identifier \"${name}\" cannot be a number string.`>\n      : name extends `${number}${string}`\n        ? TypeErrorMessage<`Identifier \"${name}\" cannot start with a number.`>\n        : checkCharacters extends true\n          ? IsValidCharacter<name> extends true\n            ? name\n            : TypeErrorMessage<`\"${name}\" contains invalid character.`>\n          : name\n\n/** @internal */\nexport type IsSolidityKeyword<type extends string> =\n  type extends SolidityKeywords ? true : false\n\n/** @internal */\nexport type SolidityKeywords =\n  | 'after'\n  | 'alias'\n  | 'anonymous'\n  | 'apply'\n  | 'auto'\n  | 'byte'\n  | 'calldata'\n  | 'case'\n  | 'catch'\n  | 'constant'\n  | 'copyof'\n  | 'default'\n  | 'defined'\n  | 'error'\n  | 'event'\n  | 'external'\n  | 'false'\n  | 'final'\n  | 'function'\n  | 'immutable'\n  | 'implements'\n  | 'in'\n  | 'indexed'\n  | 'inline'\n  | 'internal'\n  | 'let'\n  | 'mapping'\n  | 'match'\n  | 'memory'\n  | 'mutable'\n  | 'null'\n  | 'of'\n  | 'override'\n  | 'partial'\n  | 'private'\n  | 'promise'\n  | 'public'\n  | 'pure'\n  | 'reference'\n  | 'relocatable'\n  | 'return'\n  | 'returns'\n  | 'sizeof'\n  | 'static'\n  | 'storage'\n  | 'struct'\n  | 'super'\n  | 'supports'\n  | 'switch'\n  | 'this'\n  | 'true'\n  | 'try'\n  | 'typedef'\n  | 'typeof'\n  | 'var'\n  | 'view'\n  | 'virtual'\n  | `address${`[${string}]` | ''}`\n  | `bool${`[${string}]` | ''}`\n  | `string${`[${string}]` | ''}`\n  | `tuple${`[${string}]` | ''}`\n  | `bytes${number | ''}${`[${string}]` | ''}`\n  | `${'u' | ''}int${number | ''}${`[${string}]` | ''}`\n\n/** @internal */\nexport type IsValidCharacter<character extends string> =\n  character extends `${ValidCharacters}${infer tail}`\n    ? tail extends ''\n      ? true\n      : IsValidCharacter<tail>\n    : false\n\n// biome-ignore format: no formatting\n/** @internal */\nexport type ValidCharacters =\n  // uppercase letters\n  | 'A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G' | 'H' | 'I' | 'J' | 'K' | 'L' | 'M' | 'N' | 'O' | 'P' | 'Q' | 'R' | 'S' | 'T' | 'U' | 'V' | 'W' | 'X' | 'Y' | 'Z'\n  // lowercase letters\n  | 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g' | 'h' | 'i' | 'j' | 'k' | 'l' | 'm' | 'n' | 'o' | 'p' | 'q' | 'r' | 's' | 't' | 'u' | 'v' | 'w' | 'x' | 'y' | 'z'\n  // numbers\n  | '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9'\n  // special characters\n  | '_' | '$'\n\n// Template string inference can absorb `returns`:\n// type Result = `function foo(string) return s (uint256)` extends `function ${string}(${infer Parameters})` ? Parameters : never\n// //   ^? type Result = \"string ) return s (uint256\"\n// So we need to validate against `returns` keyword with all combinations of whitespace\n/** @internal */\nexport type InvalidFunctionParameters =\n  | `${string}${MangledReturns} (${string}`\n  | `${string}) ${MangledReturns}${string}`\n  | `${string})${string}${MangledReturns}${string}(${string}`\n\n// r_e_t_u_r_n_s\n/** @internal */\nexport type MangledReturns =\n  // Single\n  | `r${string}eturns`\n  | `re${string}turns`\n  | `ret${string}urns`\n  | `retu${string}rns`\n  | `retur${string}ns`\n  | `return${string}s`\n  // Double\n  // `r_e*`\n  | `r${string}e${string}turns`\n  | `r${string}et${string}urns`\n  | `r${string}etu${string}rns`\n  | `r${string}etur${string}ns`\n  | `r${string}eturn${string}s`\n  // `re_t*`\n  | `re${string}t${string}urns`\n  | `re${string}tu${string}rns`\n  | `re${string}tur${string}ns`\n  | `re${string}turn${string}s`\n  // `ret_u*`\n  | `ret${string}u${string}rns`\n  | `ret${string}ur${string}ns`\n  | `ret${string}urn${string}s`\n  // `retu_r*`\n  | `retu${string}r${string}ns`\n  | `retu${string}rn${string}s`\n  // `retur_n*`\n  | `retur${string}n${string}s`\n  // Triple\n  // `r_e_t*`\n  | `r${string}e${string}t${string}urns`\n  | `r${string}e${string}tu${string}rns`\n  | `r${string}e${string}tur${string}ns`\n  | `r${string}e${string}turn${string}s`\n  // `re_t_u*`\n  | `re${string}t${string}u${string}rns`\n  | `re${string}t${string}ur${string}ns`\n  | `re${string}t${string}urn${string}s`\n  // `ret_u_r*`\n  | `ret${string}u${string}r${string}ns`\n  | `ret${string}u${string}rn${string}s`\n  // `retu_r_n*`\n  | `retu${string}r${string}n${string}s`\n  // Quadruple\n  // `r_e_t_u*`\n  | `r${string}e${string}t${string}u${string}rns`\n  | `r${string}e${string}t${string}ur${string}ns`\n  | `r${string}e${string}t${string}urn${string}s`\n  // `re_t_u_r*`\n  | `re${string}t${string}u${string}r${string}ns`\n  | `re${string}t${string}u${string}rn${string}s`\n  // `ret_u_r_n*`\n  | `ret${string}u${string}r${string}n${string}s`\n  // Quintuple\n  // `r_e_t_u_r*`\n  | `r${string}e${string}t${string}u${string}r${string}ns`\n  | `r${string}e${string}t${string}u${string}rn${string}s`\n  // `re_t_u_r_n*`\n  | `re${string}t${string}u${string}r${string}n${string}s`\n  // Sextuple\n  // `r_e_t_u_r_n_s`\n  | `r${string}e${string}t${string}u${string}r${string}n${string}s`\n\n/** @internal */\nexport type Widen<type> =\n  | ([unknown] extends [type] ? unknown : never)\n  | (type extends Function ? type : never)\n  | (type extends abitype.ResolvedRegister['bigIntType'] ? bigint : never)\n  | (type extends boolean ? boolean : never)\n  | (type extends abitype.ResolvedRegister['intType'] ? number : never)\n  | (type extends string\n      ? type extends abitype.ResolvedRegister['addressType']\n        ? abitype.ResolvedRegister['addressType']\n        : type extends abitype.ResolvedRegister['bytesType']['inputs']\n          ? abitype.ResolvedRegister['bytesType']\n          : string\n      : never)\n  | (type extends readonly [] ? readonly [] : never)\n  | (type extends Record<string, unknown>\n      ? { [K in keyof type]: Widen<type[K]> }\n      : never)\n  | (type extends { length: number }\n      ? {\n          [K in keyof type]: Widen<type[K]>\n        } extends infer Val extends readonly unknown[]\n        ? readonly [...Val]\n        : never\n      : never)\n\n/** @internal */\nexport function normalizeSignature(signature: string): string {\n  let active = true\n  let current = ''\n  let level = 0\n  let result = ''\n  let valid = false\n\n  for (let i = 0; i < signature.length; i++) {\n    const char = signature[i]!\n\n    // If the character is a separator, we want to reactivate.\n    if (['(', ')', ','].includes(char)) active = true\n\n    // If the character is a \"level\" token, we want to increment/decrement.\n    if (char === '(') level++\n    if (char === ')') level--\n\n    // If we aren't active, we don't want to mutate the result.\n    if (!active) continue\n\n    // If level === 0, we are at the definition level.\n    if (level === 0) {\n      if (char === ' ' && ['event', 'function', 'error', ''].includes(result))\n        result = ''\n      else {\n        result += char\n\n        // If we are at the end of the definition, we must be finished.\n        if (char === ')') {\n          valid = true\n          break\n        }\n      }\n\n      continue\n    }\n\n    // Ignore spaces\n    if (char === ' ') {\n      // If the previous character is a separator, and the current section isn't empty, we want to deactivate.\n      if (signature[i - 1] !== ',' && current !== ',' && current !== ',(') {\n        current = ''\n        active = false\n      }\n      continue\n    }\n\n    result += char\n    current += char\n  }\n\n  if (!valid) throw new Errors.BaseError('Unable to normalize signature.')\n\n  return result\n}\n\n/** @internal */\nexport declare namespace normalizeSignature {\n  export type ErrorType = Errors.BaseError | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function isArgOfType(\n  arg: unknown,\n  abiParameter: AbiParameters.Parameter,\n): boolean {\n  const argType = typeof arg\n  const abiParameterType = abiParameter.type\n  switch (abiParameterType) {\n    case 'address':\n      return Address.validate(arg as Address.Address, { strict: false })\n    case 'bool':\n      return argType === 'boolean'\n    case 'function':\n      return argType === 'string'\n    case 'string':\n      return argType === 'string'\n    default: {\n      if (abiParameterType === 'tuple' && 'components' in abiParameter)\n        return Object.values(abiParameter.components).every(\n          (component, index) => {\n            return isArgOfType(\n              Object.values(arg as unknown[] | Record<string, unknown>)[index],\n              component as AbiParameters.Parameter,\n            )\n          },\n        )\n\n      // `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n      // https://regexr.com/6v8hp\n      if (\n        /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(\n          abiParameterType,\n        )\n      )\n        return argType === 'number' || argType === 'bigint'\n\n      // `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n      // https://regexr.com/6va55\n      if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(abiParameterType))\n        return argType === 'string' || arg instanceof Uint8Array\n\n      // fixed-length (`<type>[M]`) and dynamic (`<type>[]`) arrays\n      // https://regexr.com/6va6i\n      if (/[a-z]+[1-9]{0,3}(\\[[0-9]{0,}\\])+$/.test(abiParameterType)) {\n        return (\n          Array.isArray(arg) &&\n          arg.every((x: unknown) =>\n            isArgOfType(x, {\n              ...abiParameter,\n              // Pop off `[]` or `[M]` from end of type\n              type: abiParameterType.replace(/(\\[[0-9]{0,}\\])$/, ''),\n            } as AbiParameters.Parameter),\n          )\n        )\n      }\n\n      return false\n    }\n  }\n}\n\n/** @internal */\nexport function getAmbiguousTypes(\n  sourceParameters: readonly AbiParameters.Parameter[],\n  targetParameters: readonly AbiParameters.Parameter[],\n  args: ExtractArgs,\n): AbiParameters.Parameter['type'][] | undefined {\n  for (const parameterIndex in sourceParameters) {\n    const sourceParameter = sourceParameters[parameterIndex]!\n    const targetParameter = targetParameters[parameterIndex]!\n\n    if (\n      sourceParameter.type === 'tuple' &&\n      targetParameter.type === 'tuple' &&\n      'components' in sourceParameter &&\n      'components' in targetParameter\n    )\n      return getAmbiguousTypes(\n        sourceParameter.components,\n        targetParameter.components,\n        (args as any)[parameterIndex],\n      )\n\n    const types = [sourceParameter.type, targetParameter.type]\n\n    const ambiguous = (() => {\n      if (types.includes('address') && types.includes('bytes20')) return true\n      if (types.includes('address') && types.includes('string'))\n        return Address.validate(args[parameterIndex] as Address.Address, {\n          strict: false,\n        })\n      if (types.includes('address') && types.includes('bytes'))\n        return Address.validate(args[parameterIndex] as Address.Address, {\n          strict: false,\n        })\n      return false\n    })()\n\n    if (ambiguous) return types\n  }\n\n  return\n}\n","import type {\n  AbiParameter,\n  AbiParameterKind,\n  AbiParameterToPrimitiveType,\n  AbiParametersToPrimitiveTypes,\n} from 'abitype'\nimport * as AbiParameters from '../AbiParameters.js'\nimport * as Address from '../Address.js'\nimport * as Bytes from '../Bytes.js'\nimport * as Errors from '../Errors.js'\nimport * as Hex from '../Hex.js'\nimport { integerRegex } from '../Solidity.js'\nimport type * as Cursor from './cursor.js'\nimport type { Compute, IsNarrowable, UnionToIntersection } from './types.js'\n\n/** @internal */\nexport type ParameterToPrimitiveType<\n  abiParameter extends AbiParameter | { name: string; type: unknown },\n  abiParameterKind extends AbiParameterKind = AbiParameterKind,\n> = AbiParameterToPrimitiveType<abiParameter, abiParameterKind>\n\n/** @internal */\nexport type PreparedParameter = { dynamic: boolean; encoded: Hex.Hex }\n\n/** @internal */\nexport type ToObject<\n  parameters extends readonly AbiParameter[],\n  kind extends AbiParameterKind = AbiParameterKind,\n> = IsNarrowable<parameters, AbiParameters.AbiParameters> extends true\n  ? Compute<\n      UnionToIntersection<\n        {\n          [index in keyof parameters]: parameters[index] extends {\n            name: infer name extends string\n          }\n            ? {\n                [key in name]: AbiParameterToPrimitiveType<\n                  parameters[index],\n                  kind\n                >\n              }\n            : {\n                [key in index]: AbiParameterToPrimitiveType<\n                  parameters[index],\n                  kind\n                >\n              }\n        }[number]\n      >\n    >\n  : unknown\n\n/** @internal */\nexport type ToPrimitiveTypes<\n  abiParameters extends readonly AbiParameter[],\n  abiParameterKind extends AbiParameterKind = AbiParameterKind,\n> = AbiParametersToPrimitiveTypes<abiParameters, abiParameterKind>\n\n/** @internal */\nexport type Tuple = ParameterToPrimitiveType<TupleAbiParameter>\n\n/** @internal */\nexport function decodeParameter(\n  cursor: Cursor.Cursor,\n  param: AbiParameters.Parameter,\n  options: { checksumAddress?: boolean | undefined; staticPosition: number },\n) {\n  const { checksumAddress, staticPosition } = options\n  const arrayComponents = getArrayComponents(param.type)\n  if (arrayComponents) {\n    const [length, type] = arrayComponents\n    return decodeArray(\n      cursor,\n      { ...param, type },\n      { checksumAddress, length, staticPosition },\n    )\n  }\n  if (param.type === 'tuple')\n    return decodeTuple(cursor, param as TupleAbiParameter, {\n      checksumAddress,\n      staticPosition,\n    })\n  if (param.type === 'address')\n    return decodeAddress(cursor, { checksum: checksumAddress })\n  if (param.type === 'bool') return decodeBool(cursor)\n  if (param.type.startsWith('bytes'))\n    return decodeBytes(cursor, param, { staticPosition })\n  if (param.type.startsWith('uint') || param.type.startsWith('int'))\n    return decodeNumber(cursor, param)\n  if (param.type === 'string') return decodeString(cursor, { staticPosition })\n  throw new AbiParameters.InvalidTypeError(param.type)\n}\n\nexport declare namespace decodeParameter {\n  type ErrorType =\n    | decodeArray.ErrorType\n    | decodeTuple.ErrorType\n    | decodeAddress.ErrorType\n    | decodeBool.ErrorType\n    | decodeBytes.ErrorType\n    | decodeNumber.ErrorType\n    | decodeString.ErrorType\n    | AbiParameters.InvalidTypeError\n    | Errors.GlobalErrorType\n}\n\nconst sizeOfLength = 32\nconst sizeOfOffset = 32\n\n/** @internal */\nexport function decodeAddress(\n  cursor: Cursor.Cursor,\n  options: { checksum?: boolean | undefined } = {},\n) {\n  const { checksum = false } = options\n  const value = cursor.readBytes(32)\n  const wrap = (address: Hex.Hex) =>\n    checksum ? Address.checksum(address) : address\n  return [wrap(Hex.fromBytes(Bytes.slice(value, -20))), 32]\n}\n\nexport declare namespace decodeAddress {\n  type ErrorType =\n    | Hex.fromBytes.ErrorType\n    | Bytes.slice.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function decodeArray(\n  cursor: Cursor.Cursor,\n  param: AbiParameters.Parameter,\n  options: {\n    checksumAddress?: boolean | undefined\n    length: number | null\n    staticPosition: number\n  },\n) {\n  const { checksumAddress, length, staticPosition } = options\n\n  // If the length of the array is not known in advance (dynamic array),\n  // this means we will need to wonder off to the pointer and decode.\n  if (!length) {\n    // Dealing with a dynamic type, so get the offset of the array data.\n    const offset = Bytes.toNumber(cursor.readBytes(sizeOfOffset))\n\n    // Start is the static position of current slot + offset.\n    const start = staticPosition + offset\n    const startOfData = start + sizeOfLength\n\n    // Get the length of the array from the offset.\n    cursor.setPosition(start)\n    const length = Bytes.toNumber(cursor.readBytes(sizeOfLength))\n\n    // Check if the array has any dynamic children.\n    const dynamicChild = hasDynamicChild(param)\n\n    let consumed = 0\n    const value: unknown[] = []\n    for (let i = 0; i < length; ++i) {\n      // If any of the children is dynamic, then all elements will be offset pointer, thus size of one slot (32 bytes).\n      // Otherwise, elements will be the size of their encoding (consumed bytes).\n      cursor.setPosition(startOfData + (dynamicChild ? i * 32 : consumed))\n      const [data, consumed_] = decodeParameter(cursor, param, {\n        checksumAddress,\n        staticPosition: startOfData,\n      })\n      consumed += consumed_\n      value.push(data)\n    }\n\n    // As we have gone wondering, restore to the original position + next slot.\n    cursor.setPosition(staticPosition + 32)\n    return [value, 32]\n  }\n\n  // If the length of the array is known in advance,\n  // and the length of an element deeply nested in the array is not known,\n  // we need to decode the offset of the array data.\n  if (hasDynamicChild(param)) {\n    // Dealing with dynamic types, so get the offset of the array data.\n    const offset = Bytes.toNumber(cursor.readBytes(sizeOfOffset))\n\n    // Start is the static position of current slot + offset.\n    const start = staticPosition + offset\n\n    const value: unknown[] = []\n    for (let i = 0; i < length; ++i) {\n      // Move cursor along to the next slot (next offset pointer).\n      cursor.setPosition(start + i * 32)\n      const [data] = decodeParameter(cursor, param, {\n        checksumAddress,\n        staticPosition: start,\n      })\n      value.push(data)\n    }\n\n    // As we have gone wondering, restore to the original position + next slot.\n    cursor.setPosition(staticPosition + 32)\n    return [value, 32]\n  }\n\n  // If the length of the array is known in advance and the array is deeply static,\n  // then we can just decode each element in sequence.\n  let consumed = 0\n  const value: unknown[] = []\n  for (let i = 0; i < length; ++i) {\n    const [data, consumed_] = decodeParameter(cursor, param, {\n      checksumAddress,\n      staticPosition: staticPosition + consumed,\n    })\n    consumed += consumed_\n    value.push(data)\n  }\n  return [value, consumed]\n}\n\nexport declare namespace decodeArray {\n  type ErrorType = Bytes.toNumber.ErrorType | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function decodeBool(cursor: Cursor.Cursor) {\n  return [Bytes.toBoolean(cursor.readBytes(32), { size: 32 }), 32]\n}\n\nexport declare namespace decodeBool {\n  type ErrorType = Bytes.toBoolean.ErrorType | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function decodeBytes(\n  cursor: Cursor.Cursor,\n  param: AbiParameters.Parameter,\n  { staticPosition }: { staticPosition: number },\n) {\n  const [_, size] = param.type.split('bytes')\n  if (!size) {\n    // Dealing with dynamic types, so get the offset of the bytes data.\n    const offset = Bytes.toNumber(cursor.readBytes(32))\n\n    // Set position of the cursor to start of bytes data.\n    cursor.setPosition(staticPosition + offset)\n\n    const length = Bytes.toNumber(cursor.readBytes(32))\n\n    // If there is no length, we have zero data.\n    if (length === 0) {\n      // As we have gone wondering, restore to the original position + next slot.\n      cursor.setPosition(staticPosition + 32)\n      return ['0x', 32]\n    }\n\n    const data = cursor.readBytes(length)\n\n    // As we have gone wondering, restore to the original position + next slot.\n    cursor.setPosition(staticPosition + 32)\n    return [Hex.fromBytes(data), 32]\n  }\n\n  const value = Hex.fromBytes(cursor.readBytes(Number.parseInt(size), 32))\n  return [value, 32]\n}\n\nexport declare namespace decodeBytes {\n  type ErrorType =\n    | Hex.fromBytes.ErrorType\n    | Bytes.toNumber.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function decodeNumber(\n  cursor: Cursor.Cursor,\n  param: AbiParameters.Parameter,\n) {\n  const signed = param.type.startsWith('int')\n  const size = Number.parseInt(param.type.split('int')[1] || '256')\n  const value = cursor.readBytes(32)\n  return [\n    size > 48\n      ? Bytes.toBigInt(value, { signed })\n      : Bytes.toNumber(value, { signed }),\n    32,\n  ]\n}\n\nexport declare namespace decodeNumber {\n  type ErrorType =\n    | Bytes.toNumber.ErrorType\n    | Bytes.toBigInt.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport type TupleAbiParameter = AbiParameters.Parameter & {\n  components: readonly AbiParameters.Parameter[]\n}\n\n/** @internal */\nexport function decodeTuple(\n  cursor: Cursor.Cursor,\n  param: TupleAbiParameter,\n  options: { checksumAddress?: boolean | undefined; staticPosition: number },\n) {\n  const { checksumAddress, staticPosition } = options\n\n  // Tuples can have unnamed components (i.e. they are arrays), so we must\n  // determine whether the tuple is named or unnamed. In the case of a named\n  // tuple, the value will be an object where each property is the name of the\n  // component. In the case of an unnamed tuple, the value will be an array.\n  const hasUnnamedChild =\n    param.components.length === 0 || param.components.some(({ name }) => !name)\n\n  // Initialize the value to an object or an array, depending on whether the\n  // tuple is named or unnamed.\n  const value: any = hasUnnamedChild ? [] : {}\n  let consumed = 0\n\n  // If the tuple has a dynamic child, we must first decode the offset to the\n  // tuple data.\n  if (hasDynamicChild(param)) {\n    // Dealing with dynamic types, so get the offset of the tuple data.\n    const offset = Bytes.toNumber(cursor.readBytes(sizeOfOffset))\n\n    // Start is the static position of referencing slot + offset.\n    const start = staticPosition + offset\n\n    for (let i = 0; i < param.components.length; ++i) {\n      const component = param.components[i]!\n      cursor.setPosition(start + consumed)\n      const [data, consumed_] = decodeParameter(cursor, component, {\n        checksumAddress,\n        staticPosition: start,\n      })\n      consumed += consumed_\n      value[hasUnnamedChild ? i : component?.name!] = data\n    }\n\n    // As we have gone wondering, restore to the original position + next slot.\n    cursor.setPosition(staticPosition + 32)\n    return [value, 32]\n  }\n\n  // If the tuple has static children, we can just decode each component\n  // in sequence.\n  for (let i = 0; i < param.components.length; ++i) {\n    const component = param.components[i]!\n    const [data, consumed_] = decodeParameter(cursor, component, {\n      checksumAddress,\n      staticPosition,\n    })\n    value[hasUnnamedChild ? i : component?.name!] = data\n    consumed += consumed_\n  }\n  return [value, consumed]\n}\n\nexport declare namespace decodeTuple {\n  type ErrorType = Bytes.toNumber.ErrorType | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function decodeString(\n  cursor: Cursor.Cursor,\n  { staticPosition }: { staticPosition: number },\n) {\n  // Get offset to start of string data.\n  const offset = Bytes.toNumber(cursor.readBytes(32))\n\n  // Start is the static position of current slot + offset.\n  const start = staticPosition + offset\n  cursor.setPosition(start)\n\n  const length = Bytes.toNumber(cursor.readBytes(32))\n\n  // If there is no length, we have zero data (empty string).\n  if (length === 0) {\n    cursor.setPosition(staticPosition + 32)\n    return ['', 32]\n  }\n\n  const data = cursor.readBytes(length, 32)\n  const value = Bytes.toString(Bytes.trimLeft(data))\n\n  // As we have gone wondering, restore to the original position + next slot.\n  cursor.setPosition(staticPosition + 32)\n\n  return [value, 32]\n}\n\nexport declare namespace decodeString {\n  type ErrorType =\n    | Bytes.toNumber.ErrorType\n    | Bytes.toString.ErrorType\n    | Bytes.trimLeft.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function prepareParameters<\n  const parameters extends AbiParameters.AbiParameters,\n>({\n  checksumAddress,\n  parameters,\n  values,\n}: {\n  checksumAddress?: boolean | undefined\n  parameters: parameters\n  values: parameters extends AbiParameters.AbiParameters\n    ? ToPrimitiveTypes<parameters>\n    : never\n}) {\n  const preparedParameters: PreparedParameter[] = []\n  for (let i = 0; i < parameters.length; i++) {\n    preparedParameters.push(\n      prepareParameter({\n        checksumAddress,\n        parameter: parameters[i]!,\n        value: values[i],\n      }),\n    )\n  }\n  return preparedParameters\n}\n\n/** @internal */\nexport declare namespace prepareParameters {\n  type ErrorType = prepareParameter.ErrorType | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function prepareParameter<\n  const parameter extends AbiParameters.Parameter,\n>({\n  checksumAddress = false,\n  parameter: parameter_,\n  value,\n}: {\n  parameter: parameter\n  value: parameter extends AbiParameters.Parameter\n    ? ParameterToPrimitiveType<parameter>\n    : never\n  checksumAddress?: boolean | undefined\n}): PreparedParameter {\n  const parameter = parameter_ as AbiParameters.Parameter\n\n  const arrayComponents = getArrayComponents(parameter.type)\n  if (arrayComponents) {\n    const [length, type] = arrayComponents\n    return encodeArray(value, {\n      checksumAddress,\n      length,\n      parameter: {\n        ...parameter,\n        type,\n      },\n    })\n  }\n  if (parameter.type === 'tuple') {\n    return encodeTuple(value as unknown as Tuple, {\n      checksumAddress,\n      parameter: parameter as TupleAbiParameter,\n    })\n  }\n  if (parameter.type === 'address') {\n    return encodeAddress(value as unknown as Hex.Hex, {\n      checksum: checksumAddress,\n    })\n  }\n  if (parameter.type === 'bool') {\n    return encodeBoolean(value as unknown as boolean)\n  }\n  if (parameter.type.startsWith('uint') || parameter.type.startsWith('int')) {\n    const signed = parameter.type.startsWith('int')\n    const [, , size = '256'] = integerRegex.exec(parameter.type) ?? []\n    return encodeNumber(value as unknown as number, {\n      signed,\n      size: Number(size),\n    })\n  }\n  if (parameter.type.startsWith('bytes')) {\n    return encodeBytes(value as unknown as Hex.Hex, { type: parameter.type })\n  }\n  if (parameter.type === 'string') {\n    return encodeString(value as unknown as string)\n  }\n  throw new AbiParameters.InvalidTypeError(parameter.type)\n}\n\n/** @internal */\nexport declare namespace prepareParameter {\n  type ErrorType =\n    | encodeArray.ErrorType\n    | encodeTuple.ErrorType\n    | encodeAddress.ErrorType\n    | encodeBoolean.ErrorType\n    | encodeBytes.ErrorType\n    | encodeString.ErrorType\n    | AbiParameters.InvalidTypeError\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function encode(preparedParameters: PreparedParameter[]): Hex.Hex {\n  // 1. Compute the size of the static part of the parameters.\n  let staticSize = 0\n  for (let i = 0; i < preparedParameters.length; i++) {\n    const { dynamic, encoded } = preparedParameters[i]!\n    if (dynamic) staticSize += 32\n    else staticSize += Hex.size(encoded)\n  }\n\n  // 2. Split the parameters into static and dynamic parts.\n  const staticParameters: Hex.Hex[] = []\n  const dynamicParameters: Hex.Hex[] = []\n  let dynamicSize = 0\n  for (let i = 0; i < preparedParameters.length; i++) {\n    const { dynamic, encoded } = preparedParameters[i]!\n    if (dynamic) {\n      staticParameters.push(\n        Hex.fromNumber(staticSize + dynamicSize, { size: 32 }),\n      )\n      dynamicParameters.push(encoded)\n      dynamicSize += Hex.size(encoded)\n    } else {\n      staticParameters.push(encoded)\n    }\n  }\n\n  // 3. Concatenate static and dynamic parts.\n  return Hex.concat(...staticParameters, ...dynamicParameters)\n}\n\n/** @internal */\nexport declare namespace encode {\n  type ErrorType =\n    | Hex.concat.ErrorType\n    | Hex.fromNumber.ErrorType\n    | Hex.size.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function encodeAddress(\n  value: Hex.Hex,\n  options: { checksum: boolean },\n): PreparedParameter {\n  const { checksum = false } = options\n  Address.assert(value, { strict: checksum })\n  return {\n    dynamic: false,\n    encoded: Hex.padLeft(value.toLowerCase() as Hex.Hex),\n  }\n}\n\n/** @internal */\nexport declare namespace encodeAddress {\n  type ErrorType =\n    | Address.assert.ErrorType\n    | Hex.padLeft.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function encodeArray<const parameter extends AbiParameters.Parameter>(\n  value: ParameterToPrimitiveType<parameter>,\n  options: {\n    checksumAddress?: boolean | undefined\n    length: number | null\n    parameter: parameter\n  },\n): PreparedParameter {\n  const { checksumAddress, length, parameter } = options\n\n  const dynamic = length === null\n\n  if (!Array.isArray(value)) throw new AbiParameters.InvalidArrayError(value)\n  if (!dynamic && value.length !== length)\n    throw new AbiParameters.ArrayLengthMismatchError({\n      expectedLength: length!,\n      givenLength: value.length,\n      type: `${parameter.type}[${length}]`,\n    })\n\n  let dynamicChild = false\n  const preparedParameters: PreparedParameter[] = []\n  for (let i = 0; i < value.length; i++) {\n    const preparedParam = prepareParameter({\n      checksumAddress,\n      parameter,\n      value: value[i],\n    })\n    if (preparedParam.dynamic) dynamicChild = true\n    preparedParameters.push(preparedParam)\n  }\n\n  if (dynamic || dynamicChild) {\n    const data = encode(preparedParameters)\n    if (dynamic) {\n      const length = Hex.fromNumber(preparedParameters.length, { size: 32 })\n      return {\n        dynamic: true,\n        encoded:\n          preparedParameters.length > 0 ? Hex.concat(length, data) : length,\n      }\n    }\n    if (dynamicChild) return { dynamic: true, encoded: data }\n  }\n  return {\n    dynamic: false,\n    encoded: Hex.concat(...preparedParameters.map(({ encoded }) => encoded)),\n  }\n}\n\n/** @internal */\nexport declare namespace encodeArray {\n  type ErrorType =\n    | AbiParameters.InvalidArrayError\n    | AbiParameters.ArrayLengthMismatchError\n    | Hex.concat.ErrorType\n    | Hex.fromNumber.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function encodeBytes(\n  value: Hex.Hex,\n  { type }: { type: string },\n): PreparedParameter {\n  const [, parametersize] = type.split('bytes')\n  const bytesSize = Hex.size(value)\n  if (!parametersize) {\n    let value_ = value\n    // If the size is not divisible by 32 bytes, pad the end\n    // with empty bytes to the ceiling 32 bytes.\n    if (bytesSize % 32 !== 0)\n      value_ = Hex.padRight(value_, Math.ceil((value.length - 2) / 2 / 32) * 32)\n    return {\n      dynamic: true,\n      encoded: Hex.concat(\n        Hex.padLeft(Hex.fromNumber(bytesSize, { size: 32 })),\n        value_,\n      ),\n    }\n  }\n  if (bytesSize !== Number.parseInt(parametersize))\n    throw new AbiParameters.BytesSizeMismatchError({\n      expectedSize: Number.parseInt(parametersize),\n      value,\n    })\n  return { dynamic: false, encoded: Hex.padRight(value) }\n}\n\n/** @internal */\nexport declare namespace encodeBytes {\n  type ErrorType =\n    | Hex.padLeft.ErrorType\n    | Hex.padRight.ErrorType\n    | Hex.fromNumber.ErrorType\n    | Hex.slice.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function encodeBoolean(value: boolean): PreparedParameter {\n  if (typeof value !== 'boolean')\n    throw new Errors.BaseError(\n      `Invalid boolean value: \"${value}\" (type: ${typeof value}). Expected: \\`true\\` or \\`false\\`.`,\n    )\n  return { dynamic: false, encoded: Hex.padLeft(Hex.fromBoolean(value)) }\n}\n\n/** @internal */\nexport declare namespace encodeBoolean {\n  type ErrorType =\n    | Hex.padLeft.ErrorType\n    | Hex.fromBoolean.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function encodeNumber(\n  value: number,\n  { signed, size }: { signed: boolean; size: number },\n): PreparedParameter {\n  if (typeof size === 'number') {\n    const max = 2n ** (BigInt(size) - (signed ? 1n : 0n)) - 1n\n    const min = signed ? -max - 1n : 0n\n    if (value > max || value < min)\n      throw new Hex.IntegerOutOfRangeError({\n        max: max.toString(),\n        min: min.toString(),\n        signed,\n        size: size / 8,\n        value: value.toString(),\n      })\n  }\n  return {\n    dynamic: false,\n    encoded: Hex.fromNumber(value, {\n      size: 32,\n      signed,\n    }),\n  }\n}\n\n/** @internal */\nexport declare namespace encodeNumber {\n  type ErrorType = Hex.fromNumber.ErrorType | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function encodeString(value: string): PreparedParameter {\n  const hexValue = Hex.fromString(value)\n  const partsLength = Math.ceil(Hex.size(hexValue) / 32)\n  const parts: Hex.Hex[] = []\n  for (let i = 0; i < partsLength; i++) {\n    parts.push(Hex.padRight(Hex.slice(hexValue, i * 32, (i + 1) * 32)))\n  }\n  return {\n    dynamic: true,\n    encoded: Hex.concat(\n      Hex.padRight(Hex.fromNumber(Hex.size(hexValue), { size: 32 })),\n      ...parts,\n    ),\n  }\n}\n\n/** @internal */\nexport declare namespace encodeString {\n  type ErrorType =\n    | Hex.fromNumber.ErrorType\n    | Hex.padRight.ErrorType\n    | Hex.slice.ErrorType\n    | Hex.size.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function encodeTuple<\n  const parameter extends AbiParameters.Parameter & {\n    components: readonly AbiParameters.Parameter[]\n  },\n>(\n  value: ParameterToPrimitiveType<parameter>,\n  options: {\n    checksumAddress?: boolean | undefined\n    parameter: parameter\n  },\n): PreparedParameter {\n  const { checksumAddress, parameter } = options\n\n  let dynamic = false\n  const preparedParameters: PreparedParameter[] = []\n  for (let i = 0; i < parameter.components.length; i++) {\n    const param_ = parameter.components[i]!\n    const index = Array.isArray(value) ? i : param_.name\n    const preparedParam = prepareParameter({\n      checksumAddress,\n      parameter: param_,\n      value: (value as any)[index!] as readonly unknown[],\n    })\n    preparedParameters.push(preparedParam)\n    if (preparedParam.dynamic) dynamic = true\n  }\n  return {\n    dynamic,\n    encoded: dynamic\n      ? encode(preparedParameters)\n      : Hex.concat(...preparedParameters.map(({ encoded }) => encoded)),\n  }\n}\n\n/** @internal */\nexport declare namespace encodeTuple {\n  type ErrorType = Hex.concat.ErrorType | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function getArrayComponents(\n  type: string,\n): [length: number | null, innerType: string] | undefined {\n  const matches = type.match(/^(.*)\\[(\\d+)?\\]$/)\n  return matches\n    ? // Return `null` if the array is dynamic.\n      [matches[2]! ? Number(matches[2]!) : null, matches[1]!]\n    : undefined\n}\n\n/** @internal */\nexport function hasDynamicChild(param: AbiParameters.Parameter) {\n  const { type } = param\n  if (type === 'string') return true\n  if (type === 'bytes') return true\n  if (type.endsWith('[]')) return true\n\n  if (type === 'tuple') return (param as any).components?.some(hasDynamicChild)\n\n  const arrayComponents = getArrayComponents(param.type)\n  if (\n    arrayComponents &&\n    hasDynamicChild({\n      ...param,\n      type: arrayComponents[1],\n    } as AbiParameters.Parameter)\n  )\n    return true\n\n  return false\n}\n","import * as Bytes from '../Bytes.js'\nimport type * as Errors from '../Errors.js'\n\n/** @internal */\nexport function assertSize(bytes: Bytes.Bytes, size_: number): void {\n  if (Bytes.size(bytes) > size_)\n    throw new Bytes.SizeOverflowError({\n      givenSize: Bytes.size(bytes),\n      maxSize: size_,\n    })\n}\n\n/** @internal */\nexport declare namespace assertSize {\n  type ErrorType =\n    | Bytes.size.ErrorType\n    | Bytes.SizeOverflowError\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function assertStartOffset(\n  value: Bytes.Bytes,\n  start?: number | undefined,\n) {\n  if (typeof start === 'number' && start > 0 && start > Bytes.size(value) - 1)\n    throw new Bytes.SliceOffsetOutOfBoundsError({\n      offset: start,\n      position: 'start',\n      size: Bytes.size(value),\n    })\n}\n\nexport declare namespace assertStartOffset {\n  export type ErrorType =\n    | Bytes.SliceOffsetOutOfBoundsError\n    | Bytes.size.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function assertEndOffset(\n  value: Bytes.Bytes,\n  start?: number | undefined,\n  end?: number | undefined,\n) {\n  if (\n    typeof start === 'number' &&\n    typeof end === 'number' &&\n    Bytes.size(value) !== end - start\n  ) {\n    throw new Bytes.SliceOffsetOutOfBoundsError({\n      offset: end,\n      position: 'end',\n      size: Bytes.size(value),\n    })\n  }\n}\n\n/** @internal */\nexport declare namespace assertEndOffset {\n  type ErrorType =\n    | Bytes.SliceOffsetOutOfBoundsError\n    | Bytes.size.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport const charCodeMap = {\n  zero: 48,\n  nine: 57,\n  A: 65,\n  F: 70,\n  a: 97,\n  f: 102,\n} as const\n\n/** @internal */\nexport function charCodeToBase16(char: number) {\n  if (char >= charCodeMap.zero && char <= charCodeMap.nine)\n    return char - charCodeMap.zero\n  if (char >= charCodeMap.A && char <= charCodeMap.F)\n    return char - (charCodeMap.A - 10)\n  if (char >= charCodeMap.a && char <= charCodeMap.f)\n    return char - (charCodeMap.a - 10)\n  return undefined\n}\n\n/** @internal */\nexport function pad(bytes: Bytes.Bytes, options: pad.Options = {}) {\n  const { dir, size = 32 } = options\n  if (size === 0) return bytes\n  if (bytes.length > size)\n    throw new Bytes.SizeExceedsPaddingSizeError({\n      size: bytes.length,\n      targetSize: size,\n      type: 'Bytes',\n    })\n  const paddedBytes = new Uint8Array(size)\n  for (let i = 0; i < size; i++) {\n    const padEnd = dir === 'right'\n    paddedBytes[padEnd ? i : size - i - 1] =\n      bytes[padEnd ? i : bytes.length - i - 1]!\n  }\n  return paddedBytes\n}\n\n/** @internal */\nexport declare namespace pad {\n  type Options = {\n    dir?: 'left' | 'right' | undefined\n    size?: number | undefined\n  }\n\n  type ReturnType = Bytes.Bytes\n\n  type ErrorType = Bytes.SizeExceedsPaddingSizeError | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function trim(\n  value: Bytes.Bytes,\n  options: trim.Options = {},\n): trim.ReturnType {\n  const { dir = 'left' } = options\n\n  let data = value\n\n  let sliceLength = 0\n  for (let i = 0; i < data.length - 1; i++) {\n    if (data[dir === 'left' ? i : data.length - i - 1]!.toString() === '0')\n      sliceLength++\n    else break\n  }\n  data =\n    dir === 'left'\n      ? data.slice(sliceLength)\n      : data.slice(0, data.length - sliceLength)\n\n  return data as trim.ReturnType\n}\n\n/** @internal */\nexport declare namespace trim {\n  type Options = {\n    dir?: 'left' | 'right' | undefined\n  }\n\n  type ReturnType = Bytes.Bytes\n\n  type ErrorType = Errors.GlobalErrorType\n}\n","import type { Bytes } from '../Bytes.js'\nimport * as Errors from '../Errors.js'\n\n/** @internal */\nexport type Cursor = {\n  bytes: Bytes\n  dataView: DataView\n  position: number\n  positionReadCount: Map<number, number>\n  recursiveReadCount: number\n  recursiveReadLimit: number\n  remaining: number\n  assertReadLimit(position?: number): void\n  assertPosition(position: number): void\n  decrementPosition(offset: number): void\n  getReadCount(position?: number): number\n  incrementPosition(offset: number): void\n  inspectByte(position?: number): Bytes[number]\n  inspectBytes(length: number, position?: number): Bytes\n  inspectUint8(position?: number): number\n  inspectUint16(position?: number): number\n  inspectUint24(position?: number): number\n  inspectUint32(position?: number): number\n  pushByte(byte: Bytes[number]): void\n  pushBytes(bytes: Bytes): void\n  pushUint8(value: number): void\n  pushUint16(value: number): void\n  pushUint24(value: number): void\n  pushUint32(value: number): void\n  readByte(): Bytes[number]\n  readBytes(length: number, size?: number): Bytes\n  readUint8(): number\n  readUint16(): number\n  readUint24(): number\n  readUint32(): number\n  setPosition(position: number): () => void\n  _touch(): void\n}\n\nconst staticCursor: Cursor = /*#__PURE__*/ {\n  bytes: new Uint8Array(),\n  dataView: new DataView(new ArrayBuffer(0)),\n  position: 0,\n  positionReadCount: new Map(),\n  recursiveReadCount: 0,\n  recursiveReadLimit: Number.POSITIVE_INFINITY,\n  assertReadLimit() {\n    if (this.recursiveReadCount >= this.recursiveReadLimit)\n      throw new RecursiveReadLimitExceededError({\n        count: this.recursiveReadCount + 1,\n        limit: this.recursiveReadLimit,\n      })\n  },\n  assertPosition(position) {\n    if (position < 0 || position > this.bytes.length - 1)\n      throw new PositionOutOfBoundsError({\n        length: this.bytes.length,\n        position,\n      })\n  },\n  decrementPosition(offset) {\n    if (offset < 0) throw new NegativeOffsetError({ offset })\n    const position = this.position - offset\n    this.assertPosition(position)\n    this.position = position\n  },\n  getReadCount(position) {\n    return this.positionReadCount.get(position || this.position) || 0\n  },\n  incrementPosition(offset) {\n    if (offset < 0) throw new NegativeOffsetError({ offset })\n    const position = this.position + offset\n    this.assertPosition(position)\n    this.position = position\n  },\n  inspectByte(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position)\n    return this.bytes[position]!\n  },\n  inspectBytes(length, position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + length - 1)\n    return this.bytes.subarray(position, position + length)\n  },\n  inspectUint8(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position)\n    return this.bytes[position]!\n  },\n  inspectUint16(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 1)\n    return this.dataView.getUint16(position)\n  },\n  inspectUint24(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 2)\n    return (\n      (this.dataView.getUint16(position) << 8) +\n      this.dataView.getUint8(position + 2)\n    )\n  },\n  inspectUint32(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 3)\n    return this.dataView.getUint32(position)\n  },\n  pushByte(byte: Bytes[number]) {\n    this.assertPosition(this.position)\n    this.bytes[this.position] = byte\n    this.position++\n  },\n  pushBytes(bytes: Bytes) {\n    this.assertPosition(this.position + bytes.length - 1)\n    this.bytes.set(bytes, this.position)\n    this.position += bytes.length\n  },\n  pushUint8(value: number) {\n    this.assertPosition(this.position)\n    this.bytes[this.position] = value\n    this.position++\n  },\n  pushUint16(value: number) {\n    this.assertPosition(this.position + 1)\n    this.dataView.setUint16(this.position, value)\n    this.position += 2\n  },\n  pushUint24(value: number) {\n    this.assertPosition(this.position + 2)\n    this.dataView.setUint16(this.position, value >> 8)\n    this.dataView.setUint8(this.position + 2, value & ~4294967040)\n    this.position += 3\n  },\n  pushUint32(value: number) {\n    this.assertPosition(this.position + 3)\n    this.dataView.setUint32(this.position, value)\n    this.position += 4\n  },\n  readByte() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectByte()\n    this.position++\n    return value\n  },\n  readBytes(length, size) {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectBytes(length)\n    this.position += size ?? length\n    return value\n  },\n  readUint8() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint8()\n    this.position += 1\n    return value\n  },\n  readUint16() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint16()\n    this.position += 2\n    return value\n  },\n  readUint24() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint24()\n    this.position += 3\n    return value\n  },\n  readUint32() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint32()\n    this.position += 4\n    return value\n  },\n  get remaining() {\n    return this.bytes.length - this.position\n  },\n  setPosition(position) {\n    const oldPosition = this.position\n    this.assertPosition(position)\n    this.position = position\n    return () => (this.position = oldPosition)\n  },\n  _touch() {\n    if (this.recursiveReadLimit === Number.POSITIVE_INFINITY) return\n    const count = this.getReadCount()\n    this.positionReadCount.set(this.position, count + 1)\n    if (count > 0) this.recursiveReadCount++\n  },\n}\n\n/** @internal */\nexport function create(\n  bytes: Bytes,\n  { recursiveReadLimit = 8_192 }: create.Config = {},\n): Cursor {\n  const cursor: Cursor = Object.create(staticCursor)\n  cursor.bytes = bytes\n  cursor.dataView = new DataView(\n    bytes.buffer,\n    bytes.byteOffset,\n    bytes.byteLength,\n  )\n  cursor.positionReadCount = new Map()\n  cursor.recursiveReadLimit = recursiveReadLimit\n  return cursor\n}\n\n/** @internal */\nexport declare namespace create {\n  type Config = { recursiveReadLimit?: number | undefined }\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/** @internal */\nexport class NegativeOffsetError extends Errors.BaseError {\n  override readonly name = 'Cursor.NegativeOffsetError'\n\n  constructor({ offset }: { offset: number }) {\n    super(`Offset \\`${offset}\\` cannot be negative.`)\n  }\n}\n\n/** @internal */\nexport class PositionOutOfBoundsError extends Errors.BaseError {\n  override readonly name = 'Cursor.PositionOutOfBoundsError'\n\n  constructor({ length, position }: { length: number; position: number }) {\n    super(\n      `Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`,\n    )\n  }\n}\n\n/** @internal */\nexport class RecursiveReadLimitExceededError extends Errors.BaseError {\n  override readonly name = 'Cursor.RecursiveReadLimitExceededError'\n\n  constructor({ count, limit }: { count: number; limit: number }) {\n    super(\n      `Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`,\n    )\n  }\n}\n","import { version } from '../version.js'\n\n/** @internal */\nexport function getUrl(url: string) {\n  return url\n}\n\n/** @internal */\nexport function getVersion() {\n  return version\n}\n\n/** @internal */\nexport function prettyPrint(args: unknown) {\n  if (!args) return ''\n  const entries = Object.entries(args)\n    .map(([key, value]) => {\n      if (value === undefined || value === false) return null\n      return [key, value]\n    })\n    .filter(Boolean) as [string, string][]\n  const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0)\n  return entries\n    .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n    .join('\\n')\n}\n","import type * as Errors from '../Errors.js'\nimport * as Hex from '../Hex.js'\n\n/** @internal */\nexport function assertSize(hex: Hex.Hex, size_: number): void {\n  if (Hex.size(hex) > size_)\n    throw new Hex.SizeOverflowError({\n      givenSize: Hex.size(hex),\n      maxSize: size_,\n    })\n}\n\n/** @internal */\nexport declare namespace assertSize {\n  type ErrorType =\n    | Hex.size.ErrorType\n    | Hex.SizeOverflowError\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function assertStartOffset(value: Hex.Hex, start?: number | undefined) {\n  if (typeof start === 'number' && start > 0 && start > Hex.size(value) - 1)\n    throw new Hex.SliceOffsetOutOfBoundsError({\n      offset: start,\n      position: 'start',\n      size: Hex.size(value),\n    })\n}\n\nexport declare namespace assertStartOffset {\n  type ErrorType =\n    | Hex.SliceOffsetOutOfBoundsError\n    | Hex.size.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function assertEndOffset(\n  value: Hex.Hex,\n  start?: number | undefined,\n  end?: number | undefined,\n) {\n  if (\n    typeof start === 'number' &&\n    typeof end === 'number' &&\n    Hex.size(value) !== end - start\n  ) {\n    throw new Hex.SliceOffsetOutOfBoundsError({\n      offset: end,\n      position: 'end',\n      size: Hex.size(value),\n    })\n  }\n}\n\nexport declare namespace assertEndOffset {\n  type ErrorType =\n    | Hex.SliceOffsetOutOfBoundsError\n    | Hex.size.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function pad(hex_: Hex.Hex, options: pad.Options = {}) {\n  const { dir, size = 32 } = options\n\n  if (size === 0) return hex_\n\n  const hex = hex_.replace('0x', '')\n  if (hex.length > size * 2)\n    throw new Hex.SizeExceedsPaddingSizeError({\n      size: Math.ceil(hex.length / 2),\n      targetSize: size,\n      type: 'Hex',\n    })\n\n  return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](size * 2, '0')}` as Hex.Hex\n}\n\n/** @internal */\nexport declare namespace pad {\n  type Options = {\n    dir?: 'left' | 'right' | undefined\n    size?: number | undefined\n  }\n  type ErrorType = Hex.SizeExceedsPaddingSizeError | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function trim(\n  value: Hex.Hex,\n  options: trim.Options = {},\n): trim.ReturnType {\n  const { dir = 'left' } = options\n\n  let data = value.replace('0x', '')\n\n  let sliceLength = 0\n  for (let i = 0; i < data.length - 1; i++) {\n    if (data[dir === 'left' ? i : data.length - i - 1]!.toString() === '0')\n      sliceLength++\n    else break\n  }\n  data =\n    dir === 'left'\n      ? data.slice(sliceLength)\n      : data.slice(0, data.length - sliceLength)\n\n  if (data === '0') return '0x'\n  if (dir === 'right' && data.length % 2 === 1) return `0x${data}0`\n  return `0x${data}` as trim.ReturnType\n}\n\n/** @internal */\nexport declare namespace trim {\n  type Options = {\n    dir?: 'left' | 'right' | undefined\n  }\n\n  type ReturnType = Hex.Hex\n\n  type ErrorType = Errors.GlobalErrorType\n}\n","/**\n * @internal\n *\n * Map with a LRU (Least recently used) policy.\n * @see https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\n */\nexport class LruMap<value = unknown> extends Map<string, value> {\n  maxSize: number\n\n  constructor(size: number) {\n    super()\n    this.maxSize = size\n  }\n\n  override get(key: string) {\n    const value = super.get(key)\n\n    if (super.has(key) && value !== undefined) {\n      this.delete(key)\n      super.set(key, value)\n    }\n\n    return value\n  }\n\n  override set(key: string, value: value) {\n    super.set(key, value)\n    if (this.maxSize && this.size > this.maxSize) {\n      const firstKey = this.keys().next().value\n      if (firstKey) this.delete(firstKey)\n    }\n    return this\n  }\n}\n","/** @internal */\nexport const version = '0.1.1'\n","import type { Address } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../types.js'\n\nexport type ParseAccountErrorType = ErrorType\n\nexport function parseAccount<accountOrAddress extends Address | Account>(\n  account: accountOrAddress,\n): accountOrAddress extends Address ? Account : accountOrAddress {\n  if (typeof account === 'string')\n    return { address: account, type: 'json-rpc' } as any\n  return account as any\n}\n","import type { Address } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport {\n  type ChecksumAddressErrorType,\n  checksumAddress,\n} from '../../utils/address/getAddress.js'\nimport {\n  type Keccak256ErrorType,\n  keccak256,\n} from '../../utils/hash/keccak256.js'\n\nexport type PublicKeyToAddressErrorType =\n  | ChecksumAddressErrorType\n  | Keccak256ErrorType\n  | ErrorType\n\n/**\n * @description Converts an ECDSA public key to an address.\n *\n * @param publicKey The public key to convert.\n *\n * @returns The address.\n */\nexport function publicKeyToAddress(publicKey: Hex): Address {\n  const address = keccak256(`0x${publicKey.substring(4)}`).substring(26)\n  return checksumAddress(`0x${address}`) as Address\n}\n","import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  addressResolverAbi,\n  universalResolverResolveAbi,\n} from '../../constants/abis.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport { type TrimErrorType, trim } from '../../utils/data/trim.js'\nimport { type ToHexErrorType, toHex } from '../../utils/encoding/toHex.js'\nimport { isNullUniversalResolverError } from '../../utils/ens/errors.js'\nimport { localBatchGatewayUrl } from '../../utils/ens/localBatchGatewayRequest.js'\nimport { type NamehashErrorType, namehash } from '../../utils/ens/namehash.js'\nimport {\n  type PacketToBytesErrorType,\n  packetToBytes,\n} from '../../utils/ens/packetToBytes.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type ReadContractParameters,\n  readContract,\n} from '../public/readContract.js'\n\nexport type GetEnsAddressParameters = Prettify<\n  Pick<ReadContractParameters, 'blockNumber' | 'blockTag'> & {\n    /** ENSIP-9 compliant coinType used to resolve addresses for other chains */\n    coinType?: number | undefined\n    /** Universal Resolver gateway URLs to use for resolving CCIP-read requests. */\n    gatewayUrls?: string[] | undefined\n    /** Name to get the address for. */\n    name: string\n    /** Whether or not to throw errors propagated from the ENS Universal Resolver Contract. */\n    strict?: boolean | undefined\n    /** Address of ENS Universal Resolver Contract. */\n    universalResolverAddress?: Address | undefined\n  }\n>\n\nexport type GetEnsAddressReturnType = Address | null\n\nexport type GetEnsAddressErrorType =\n  | GetChainContractAddressErrorType\n  | EncodeFunctionDataErrorType\n  | NamehashErrorType\n  | ToHexErrorType\n  | PacketToBytesErrorType\n  | DecodeFunctionResultErrorType\n  | TrimErrorType\n  | ErrorType\n\n/**\n * Gets address for ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsAddress\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsAddressParameters}\n * @returns Address for ENS name or `null` if not found. {@link GetEnsAddressReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsAddress, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const ensAddress = await getEnsAddress(client, {\n *   name: normalize('wevm.eth'),\n * })\n * // '0xd2135CfB216b74109775236E36d4b433F1DF507B'\n */\nexport async function getEnsAddress<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  parameters: GetEnsAddressParameters,\n): Promise<GetEnsAddressReturnType> {\n  const { blockNumber, blockTag, coinType, name, gatewayUrls, strict } =\n    parameters\n  const { chain } = client\n\n  const universalResolverAddress = (() => {\n    if (parameters.universalResolverAddress)\n      return parameters.universalResolverAddress\n    if (!chain)\n      throw new Error(\n        'client chain not configured. universalResolverAddress is required.',\n      )\n    return getChainContractAddress({\n      blockNumber,\n      chain,\n      contract: 'ensUniversalResolver',\n    })\n  })()\n\n  const tlds = chain?.ensTlds\n  if (tlds && !tlds.some((tld) => name.endsWith(tld))) return null\n\n  try {\n    const functionData = encodeFunctionData({\n      abi: addressResolverAbi,\n      functionName: 'addr',\n      ...(coinType != null\n        ? { args: [namehash(name), BigInt(coinType)] }\n        : { args: [namehash(name)] }),\n    })\n\n    const readContractParameters = {\n      address: universalResolverAddress,\n      abi: universalResolverResolveAbi,\n      functionName: 'resolve',\n      args: [\n        toHex(packetToBytes(name)),\n        functionData,\n        gatewayUrls ?? [localBatchGatewayUrl],\n      ],\n      blockNumber,\n      blockTag,\n    } as const\n\n    const readContractAction = getAction(client, readContract, 'readContract')\n\n    const res = await readContractAction(readContractParameters)\n\n    if (res[0] === '0x') return null\n\n    const address = decodeFunctionResult({\n      abi: addressResolverAbi,\n      args: coinType != null ? [namehash(name), BigInt(coinType)] : undefined,\n      functionName: 'addr',\n      data: res[0],\n    })\n\n    if (address === '0x') return null\n    if (trim(address) === '0x00') return null\n    return address\n  } catch (err) {\n    if (strict) throw err\n    if (isNullUniversalResolverError(err, 'resolve')) return null\n    throw err\n  }\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { AssetGatewayUrls } from '../../types/ens.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type ParseAvatarRecordErrorType,\n  parseAvatarRecord,\n} from '../../utils/ens/avatar/parseAvatarRecord.js'\nimport { getAction } from '../../utils/getAction.js'\n\nimport {\n  type GetEnsTextErrorType,\n  type GetEnsTextParameters,\n  getEnsText,\n} from './getEnsText.js'\n\nexport type GetEnsAvatarParameters = Prettify<\n  Omit<GetEnsTextParameters, 'key'> & {\n    /** Gateway urls to resolve IPFS and/or Arweave assets. */\n    assetGatewayUrls?: AssetGatewayUrls | undefined\n  }\n>\n\nexport type GetEnsAvatarReturnType = string | null\n\nexport type GetEnsAvatarErrorType =\n  | GetEnsTextErrorType\n  | ParseAvatarRecordErrorType\n  | ErrorType\n\n/**\n * Gets the avatar of an ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsAvatar\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls [`getEnsText`](https://viem.sh/docs/ens/actions/getEnsText) with `key` set to `'avatar'`.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsAvatarParameters}\n * @returns Avatar URI or `null` if not found. {@link GetEnsAvatarReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsAvatar, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const ensAvatar = await getEnsAvatar(client, {\n *   name: normalize('wevm.eth'),\n * })\n * // 'https://ipfs.io/ipfs/Qma8mnp6xV3J2cRNf3mTth5C8nV11CAnceVinc3y8jSbio'\n */\nexport async function getEnsAvatar<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  {\n    blockNumber,\n    blockTag,\n    assetGatewayUrls,\n    name,\n    gatewayUrls,\n    strict,\n    universalResolverAddress,\n  }: GetEnsAvatarParameters,\n): Promise<GetEnsAvatarReturnType> {\n  const record = await getAction(\n    client,\n    getEnsText,\n    'getEnsText',\n  )({\n    blockNumber,\n    blockTag,\n    key: 'avatar',\n    name,\n    universalResolverAddress,\n    gatewayUrls,\n    strict,\n  })\n  if (!record) return null\n  try {\n    return await parseAvatarRecord(client, {\n      record,\n      gatewayUrls: assetGatewayUrls,\n    })\n  } catch {\n    return null\n  }\n}\n","import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { universalResolverReverseAbi } from '../../constants/abis.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport { type ToHexErrorType, toHex } from '../../utils/encoding/toHex.js'\nimport { isNullUniversalResolverError } from '../../utils/ens/errors.js'\nimport {\n  type PacketToBytesErrorType,\n  packetToBytes,\n} from '../../utils/ens/packetToBytes.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type ReadContractErrorType,\n  type ReadContractParameters,\n  readContract,\n} from '../public/readContract.js'\n\nexport type GetEnsNameParameters = Prettify<\n  Pick<ReadContractParameters, 'blockNumber' | 'blockTag'> & {\n    /** Address to get ENS name for. */\n    address: Address\n    /** Universal Resolver gateway URLs to use for resolving CCIP-read requests. */\n    gatewayUrls?: string[] | undefined\n    /** Whether or not to throw errors propagated from the ENS Universal Resolver Contract. */\n    strict?: boolean | undefined\n    /** Address of ENS Universal Resolver Contract. */\n    universalResolverAddress?: Address | undefined\n  }\n>\n\nexport type GetEnsNameReturnType = string | null\n\nexport type GetEnsNameErrorType =\n  | GetChainContractAddressErrorType\n  | ReadContractErrorType\n  | ToHexErrorType\n  | PacketToBytesErrorType\n  | ErrorType\n\n/**\n * Gets primary name for specified address.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsName\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls `reverse(bytes)` on ENS Universal Resolver Contract to \"reverse resolve\" the address to the primary ENS name.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsNameParameters}\n * @returns Name or `null` if not found. {@link GetEnsNameReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsName } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const ensName = await getEnsName(client, {\n *   address: '0xd2135CfB216b74109775236E36d4b433F1DF507B',\n * })\n * // 'wevm.eth'\n */\nexport async function getEnsName<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  {\n    address,\n    blockNumber,\n    blockTag,\n    gatewayUrls,\n    strict,\n    universalResolverAddress: universalResolverAddress_,\n  }: GetEnsNameParameters,\n): Promise<GetEnsNameReturnType> {\n  let universalResolverAddress = universalResolverAddress_\n  if (!universalResolverAddress) {\n    if (!client.chain)\n      throw new Error(\n        'client chain not configured. universalResolverAddress is required.',\n      )\n\n    universalResolverAddress = getChainContractAddress({\n      blockNumber,\n      chain: client.chain,\n      contract: 'ensUniversalResolver',\n    })\n  }\n\n  const reverseNode = `${address.toLowerCase().substring(2)}.addr.reverse`\n  try {\n    const readContractParameters = {\n      address: universalResolverAddress,\n      abi: universalResolverReverseAbi,\n      functionName: 'reverse',\n      args: [toHex(packetToBytes(reverseNode))],\n      blockNumber,\n      blockTag,\n    } as const\n\n    const readContractAction = getAction(client, readContract, 'readContract')\n\n    const [name, resolvedAddress] = gatewayUrls\n      ? await readContractAction({\n          ...readContractParameters,\n          args: [...readContractParameters.args, gatewayUrls],\n        })\n      : await readContractAction(readContractParameters)\n\n    if (address.toLowerCase() !== resolvedAddress.toLowerCase()) return null\n    return name\n  } catch (err) {\n    if (strict) throw err\n    if (isNullUniversalResolverError(err, 'reverse')) return null\n    throw err\n  }\n}\n","import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport { type ToHexErrorType, toHex } from '../../utils/encoding/toHex.js'\nimport {\n  type PacketToBytesErrorType,\n  packetToBytes,\n} from '../../utils/ens/packetToBytes.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type ReadContractParameters,\n  readContract,\n} from '../public/readContract.js'\n\nexport type GetEnsResolverParameters = Prettify<\n  Pick<ReadContractParameters, 'blockNumber' | 'blockTag'> & {\n    /** Name to get the address for. */\n    name: string\n    /** Address of ENS Universal Resolver Contract. */\n    universalResolverAddress?: Address | undefined\n  }\n>\n\nexport type GetEnsResolverReturnType = Address\n\nexport type GetEnsResolverErrorType =\n  | GetChainContractAddressErrorType\n  | ToHexErrorType\n  | PacketToBytesErrorType\n  | ErrorType\n\n/**\n * Gets resolver for ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls `findResolver(bytes)` on ENS Universal Resolver Contract to retrieve the resolver of an ENS name.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsResolverParameters}\n * @returns Address for ENS resolver. {@link GetEnsResolverReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsResolver, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const resolverAddress = await getEnsResolver(client, {\n *   name: normalize('wevm.eth'),\n * })\n * // '0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41'\n */\nexport async function getEnsResolver<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  parameters: GetEnsResolverParameters,\n): Promise<GetEnsResolverReturnType> {\n  const { blockNumber, blockTag, name } = parameters\n  const { chain } = client\n\n  const universalResolverAddress = (() => {\n    if (parameters.universalResolverAddress)\n      return parameters.universalResolverAddress\n    if (!chain)\n      throw new Error(\n        'client chain not configured. universalResolverAddress is required.',\n      )\n    return getChainContractAddress({\n      blockNumber,\n      chain,\n      contract: 'ensUniversalResolver',\n    })\n  })()\n\n  const tlds = chain?.ensTlds\n  if (tlds && !tlds.some((tld) => name.endsWith(tld)))\n    throw new Error(\n      `${name} is not a valid ENS TLD (${tlds?.join(', ')}) for chain \"${chain.name}\" (id: ${chain.id}).`,\n    )\n\n  const [resolverAddress] = await getAction(\n    client,\n    readContract,\n    'readContract',\n  )({\n    address: universalResolverAddress,\n    abi: [\n      {\n        inputs: [{ type: 'bytes' }],\n        name: 'findResolver',\n        outputs: [{ type: 'address' }, { type: 'bytes32' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n    ],\n    functionName: 'findResolver',\n    args: [toHex(packetToBytes(name))],\n    blockNumber,\n    blockTag,\n  })\n  return resolverAddress\n}\n","import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  textResolverAbi,\n  universalResolverResolveAbi,\n} from '../../constants/abis.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport { type ToHexErrorType, toHex } from '../../utils/encoding/toHex.js'\nimport { isNullUniversalResolverError } from '../../utils/ens/errors.js'\nimport { localBatchGatewayUrl } from '../../utils/ens/localBatchGatewayRequest.js'\nimport { type NamehashErrorType, namehash } from '../../utils/ens/namehash.js'\nimport {\n  type PacketToBytesErrorType,\n  packetToBytes,\n} from '../../utils/ens/packetToBytes.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type ReadContractErrorType,\n  type ReadContractParameters,\n  readContract,\n} from '../public/readContract.js'\n\nexport type GetEnsTextParameters = Prettify<\n  Pick<ReadContractParameters, 'blockNumber' | 'blockTag'> & {\n    /** ENS name to get Text for. */\n    name: string\n    /** Universal Resolver gateway URLs to use for resolving CCIP-read requests. */\n    gatewayUrls?: string[] | undefined\n    /** Text record to retrieve. */\n    key: string\n    /** Whether or not to throw errors propagated from the ENS Universal Resolver Contract. */\n    strict?: boolean | undefined\n    /** Address of ENS Universal Resolver Contract. */\n    universalResolverAddress?: Address | undefined\n  }\n>\n\nexport type GetEnsTextReturnType = string | null\n\nexport type GetEnsTextErrorType =\n  | GetChainContractAddressErrorType\n  | ReadContractErrorType\n  | ToHexErrorType\n  | PacketToBytesErrorType\n  | EncodeFunctionDataErrorType\n  | NamehashErrorType\n  | DecodeFunctionResultErrorType\n\n/**\n * Gets a text record for specified ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsTextParameters}\n * @returns Address for ENS resolver. {@link GetEnsTextReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsText, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const twitterRecord = await getEnsText(client, {\n *   name: normalize('wevm.eth'),\n *   key: 'com.twitter',\n * })\n * // 'wevm_dev'\n */\nexport async function getEnsText<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  parameters: GetEnsTextParameters,\n): Promise<GetEnsTextReturnType> {\n  const { blockNumber, blockTag, key, name, gatewayUrls, strict } = parameters\n  const { chain } = client\n\n  const universalResolverAddress = (() => {\n    if (parameters.universalResolverAddress)\n      return parameters.universalResolverAddress\n    if (!chain)\n      throw new Error(\n        'client chain not configured. universalResolverAddress is required.',\n      )\n    return getChainContractAddress({\n      blockNumber,\n      chain,\n      contract: 'ensUniversalResolver',\n    })\n  })()\n\n  const tlds = chain?.ensTlds\n  if (tlds && !tlds.some((tld) => name.endsWith(tld))) return null\n\n  try {\n    const readContractParameters = {\n      address: universalResolverAddress,\n      abi: universalResolverResolveAbi,\n      functionName: 'resolve',\n      args: [\n        toHex(packetToBytes(name)),\n        encodeFunctionData({\n          abi: textResolverAbi,\n          functionName: 'text',\n          args: [namehash(name), key],\n        }),\n        gatewayUrls ?? [localBatchGatewayUrl],\n      ],\n      blockNumber,\n      blockTag,\n    } as const\n\n    const readContractAction = getAction(client, readContract, 'readContract')\n\n    const res = await readContractAction(readContractParameters)\n\n    if (res[0] === '0x') return null\n\n    const record = decodeFunctionResult({\n      abi: textResolverAbi,\n      functionName: 'text',\n      data: res[0],\n    })\n\n    return record === '' ? null : record\n  } catch (err) {\n    if (strict) throw err\n    if (isNullUniversalResolverError(err, 'resolve')) return null\n    throw err\n  }\n}\n","import type {\n  Abi,\n  AbiEvent,\n  AbiFunction,\n  AbiParametersToPrimitiveTypes,\n  Address,\n  ExtractAbiEvent,\n  ExtractAbiEventNames,\n  ExtractAbiFunction,\n  ExtractAbiFunctionNames,\n} from 'abitype'\n\nimport type { Account } from '../accounts/types.js'\nimport type { Client } from '../clients/createClient.js'\nimport type { Transport } from '../clients/transports/createTransport.js'\nimport type { Chain } from '../types/chain.js'\nimport type {\n  AbiEventParametersToPrimitiveTypes,\n  ContractEventName,\n  ContractFunctionArgs,\n  ContractFunctionName,\n  MaybeExtractEventArgsFromAbi,\n} from '../types/contract.js'\nimport type {\n  IsNarrowable,\n  IsNever,\n  IsUndefined,\n  Or,\n  Prettify,\n  UnionOmit,\n} from '../types/utils.js'\n\nimport type { ErrorType } from '../errors/utils.js'\nimport { getAction } from '../utils/getAction.js'\nimport {\n  type CreateContractEventFilterParameters,\n  type CreateContractEventFilterReturnType,\n  createContractEventFilter,\n} from './public/createContractEventFilter.js'\nimport {\n  type EstimateContractGasParameters,\n  type EstimateContractGasReturnType,\n  estimateContractGas,\n} from './public/estimateContractGas.js'\nimport {\n  type GetContractEventsParameters,\n  type GetContractEventsReturnType,\n  getContractEvents,\n} from './public/getContractEvents.js'\nimport {\n  type ReadContractParameters,\n  type ReadContractReturnType,\n  readContract,\n} from './public/readContract.js'\nimport {\n  type SimulateContractParameters,\n  type SimulateContractReturnType,\n  simulateContract,\n} from './public/simulateContract.js'\nimport {\n  type WatchContractEventParameters,\n  type WatchContractEventReturnType,\n  watchContractEvent,\n} from './public/watchContractEvent.js'\nimport {\n  type WriteContractParameters,\n  type WriteContractReturnType,\n  writeContract,\n} from './wallet/writeContract.js'\n\ntype KeyedClient<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n> =\n  | {\n      public?: Client<transport, chain> | undefined\n      wallet: Client<transport, chain, account>\n    }\n  | {\n      public: Client<transport, chain>\n      wallet?: Client<transport, chain, account> | undefined\n    }\n\nexport type GetContractParameters<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  abi extends Abi | readonly unknown[] = Abi,\n  client extends\n    | Client<transport, chain, account>\n    | KeyedClient<transport, chain, account> =\n    | Client<transport, chain, account>\n    | KeyedClient<transport, chain, account>,\n  address extends Address = Address,\n> = {\n  /** Contract ABI */\n  abi: abi\n  /** Contract address */\n  address: address\n  /** The Client.\n   *\n   * If you pass in a [`publicClient`](https://viem.sh/docs/clients/public), the following methods are available:\n   *\n   * - [`createEventFilter`](https://viem.sh/docs/contract/createContractEventFilter)\n   * - [`estimateGas`](https://viem.sh/docs/contract/estimateContractGas)\n   * - [`getEvents`](https://viem.sh/docs/contract/getContractEvents)\n   * - [`read`](https://viem.sh/docs/contract/readContract)\n   * - [`simulate`](https://viem.sh/docs/contract/simulateContract)\n   * - [`watchEvent`](https://viem.sh/docs/contract/watchContractEvent)\n   *\n   * If you pass in a [`walletClient`](https://viem.sh/docs/clients/wallet), the following methods are available:\n   *\n   * - [`estimateGas`](https://viem.sh/docs/contract/estimateContractGas)\n   * - [`write`](https://viem.sh/docs/contract/writeContract)\n   */\n  client: client\n}\n\nexport type GetContractReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  client extends Client | KeyedClient = Client | KeyedClient,\n  address extends Address = Address,\n  //\n  _eventNames extends string = abi extends Abi\n    ? Abi extends abi\n      ? string\n      : ExtractAbiEventNames<abi>\n    : string,\n  _readFunctionNames extends string = abi extends Abi\n    ? Abi extends abi\n      ? string\n      : ExtractAbiFunctionNames<abi, 'pure' | 'view'>\n    : string,\n  _writeFunctionNames extends string = abi extends Abi\n    ? Abi extends abi\n      ? string\n      : ExtractAbiFunctionNames<abi, 'nonpayable' | 'payable'>\n    : string,\n  _narrowable extends boolean = IsNarrowable<abi, Abi>,\n  _publicClient extends Client | unknown = client extends {\n    public: Client\n  }\n    ? client['public']\n    : client,\n  _walletClient extends Client | unknown = client extends {\n    wallet: Client\n  }\n    ? client['wallet']\n    : client,\n> = Prettify<\n  Prettify<\n    (_publicClient extends Client\n      ? (IsNever<_readFunctionNames> extends true\n          ? unknown\n          : {\n              /**\n               * Calls a read-only function on a contract, and returns the response.\n               *\n               * A \"read-only\" function (constant function) on a Solidity contract is denoted by a `view` or `pure` keyword. They can only read the state of the contract, and cannot make any changes to it. Since read-only methods do not change the state of the contract, they do not require any gas to be executed, and can be called by any user without the need to pay for gas.\n               *\n               * Internally, `read` uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`call` action](https://viem.sh/docs/actions/public/call) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n               *\n               * @example\n               * import { createPublicClient, getContract, http, parseAbi } from 'viem'\n               * import { mainnet } from 'viem/chains'\n               *\n               * const publicClient = createPublicClient({\n               *   chain: mainnet,\n               *   transport: http(),\n               * })\n               * const contract = getContract({\n               *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n               *   abi: parseAbi([\n               *     'function balanceOf(address owner) view returns (uint256)',\n               *   ]),\n               *   client: publicClient,\n               * })\n               * const result = await contract.read.balanceOf(['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'])\n               * // 424122n\n               */\n              read: {\n                [functionName in _readFunctionNames]: GetReadFunction<\n                  _narrowable,\n                  abi,\n                  functionName extends ContractFunctionName<\n                    abi,\n                    'pure' | 'view'\n                  >\n                    ? functionName\n                    : never\n                >\n              }\n            }) &\n          (IsNever<_writeFunctionNames> extends true\n            ? unknown\n            : {\n                /**\n                 * Estimates the gas necessary to complete a transaction without submitting it to the network.\n                 *\n                 * @example\n                 * import { createPublicClient, getContract, http, parseAbi } from 'viem'\n                 * import { mainnet } from 'viem/chains'\n                 *\n                 * const publicClient = createPublicClient({\n                 *   chain: mainnet,\n                 *   transport: http(),\n                 * })\n                 * const contract = getContract({\n                 *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n                 *   abi: parseAbi(['function mint() public']),\n                 *   client: publicClient,\n                 * })\n                 * const gas = await contract.estimateGas.mint({\n                 *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n                 * })\n                 */\n                estimateGas: {\n                  [functionName in _writeFunctionNames]: GetEstimateFunction<\n                    _narrowable,\n                    _publicClient['chain'],\n                    undefined,\n                    abi,\n                    functionName extends ContractFunctionName<\n                      abi,\n                      'nonpayable' | 'payable'\n                    >\n                      ? functionName\n                      : never\n                  >\n                }\n                /**\n                 * Simulates/validates a contract interaction. This is useful for retrieving return data and revert reasons of contract write functions.\n                 *\n                 * This function does not require gas to execute and does not change the state of the blockchain. It is almost identical to [`readContract`](https://viem.sh/docs/contract/readContract), but also supports contract write functions.\n                 *\n                 * Internally, `simulate` uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`call` action](https://viem.sh/docs/actions/public/call) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n                 *\n                 * @example\n                 * import { createPublicClient, getContract, http, parseAbi } from 'viem'\n                 * import { mainnet } from 'viem/chains'\n                 *\n                 * const publicClient = createPublicClient({\n                 *   chain: mainnet,\n                 *   transport: http(),\n                 * })\n                 * const contract = getContract({\n                 *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n                 *   abi: parseAbi(['function mint() public']),\n                 *   client: publicClient,\n                 * })\n                 * const result = await contract.simulate.mint({\n                 *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n                 * })\n                 */\n                simulate: {\n                  [functionName in _writeFunctionNames]: GetSimulateFunction<\n                    _narrowable,\n                    _publicClient['chain'],\n                    _walletClient extends Client\n                      ? _walletClient['account']\n                      : _publicClient['account'],\n                    abi,\n                    functionName extends ContractFunctionName<\n                      abi,\n                      'nonpayable' | 'payable'\n                    >\n                      ? functionName\n                      : never\n                  >\n                }\n              }) &\n          (IsNever<_eventNames> extends true\n            ? unknown\n            : {\n                /**\n                 * Creates a Filter to retrieve event logs that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges) or [`getFilterLogs`](https://viem.sh/docs/actions/public/getFilterLogs).\n                 *\n                 * @example\n                 * import { createPublicClient, getContract, http, parseAbi } from 'viem'\n                 * import { mainnet } from 'viem/chains'\n                 *\n                 * const publicClient = createPublicClient({\n                 *   chain: mainnet,\n                 *   transport: http(),\n                 * })\n                 * const contract = getContract({\n                 *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n                 *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n                 *   client: publicClient,\n                 * })\n                 * const filter = await contract.createEventFilter.Transfer()\n                 */\n                createEventFilter: {\n                  [EventName in _eventNames]: GetEventFilter<\n                    _narrowable,\n                    abi,\n                    EventName extends ContractEventName<abi> ? EventName : never\n                  >\n                }\n                /**\n                 * Creates a Filter to retrieve event logs that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges) or [`getFilterLogs`](https://viem.sh/docs/actions/public/getFilterLogs).\n                 *\n                 * @example\n                 * import { createPublicClient, getContract, http, parseAbi } from 'viem'\n                 * import { mainnet } from 'viem/chains'\n                 *\n                 * const publicClient = createPublicClient({\n                 *   chain: mainnet,\n                 *   transport: http(),\n                 * })\n                 * const contract = getContract({\n                 *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n                 *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n                 *   client: publicClient,\n                 * })\n                 * const filter = await contract.createEventFilter.Transfer()\n                 */\n                getEvents: {\n                  [EventName in _eventNames]: GetEventsFunction<\n                    _narrowable,\n                    abi,\n                    EventName extends ContractEventName<abi> ? EventName : never\n                  >\n                }\n                /**\n                 * Watches and returns emitted contract event logs.\n                 *\n                 * This Action will batch up all the event logs found within the [`pollingInterval`](https://viem.sh/docs/contract/watchContractEvent#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/contract/watchContractEvent#onLogs).\n                 *\n                 * `watchEvent` will attempt to create an [Event Filter](https://viem.sh/docs/contract/createContractEventFilter) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs) instead.\n                 *\n                 * @example\n                 * import { createPublicClient, getContract, http, parseAbi } from 'viem'\n                 * import { mainnet } from 'viem/chains'\n                 *\n                 * const publicClient = createPublicClient({\n                 *   chain: mainnet,\n                 *   transport: http(),\n                 * })\n                 * const contract = getContract({\n                 *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n                 *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n                 *   client: publicClient,\n                 * })\n                 * const filter = await contract.createEventFilter.Transfer()\n                 * const unwatch = contract.watchEvent.Transfer(\n                 *   { from: '0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b' },\n                 *   { onLogs: (logs) => console.log(logs) },\n                 * )\n                 */\n                watchEvent: {\n                  [EventName in _eventNames]: GetWatchEvent<\n                    _narrowable,\n                    abi,\n                    EventName extends ContractEventName<abi> ? EventName : never\n                  >\n                }\n              })\n      : unknown) &\n      (_walletClient extends Client\n        ? IsNever<_writeFunctionNames> extends true\n          ? unknown\n          : {\n              /**\n               * Estimates the gas necessary to complete a transaction without submitting it to the network.\n               *\n               * @example\n               * import { createWalletClient, getContract, http, parseAbi } from 'viem'\n               * import { mainnet } from 'viem/chains'\n               *\n               * const walletClient = createWalletClient({\n               *   chain: mainnet,\n               *   transport: http(),\n               * })\n               * const contract = getContract({\n               *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n               *   abi: parseAbi(['function mint() public']),\n               *   client: walletClient,\n               * })\n               * const gas = await contract.estimateGas.mint({\n               *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n               * })\n               */\n              estimateGas: {\n                [functionName in _writeFunctionNames]: GetEstimateFunction<\n                  _narrowable,\n                  _walletClient['chain'],\n                  _walletClient['account'],\n                  abi,\n                  functionName extends ContractFunctionName<\n                    abi,\n                    'nonpayable' | 'payable'\n                  >\n                    ? functionName\n                    : never\n                >\n              }\n              /**\n               * Executes a write function on a contract.\n               *\n               * A \"write\" function on a Solidity contract modifies the state of the blockchain. These types of functions require gas to be executed, and hence a [Transaction](https://viem.sh/docs/glossary/terms) is needed to be broadcast in order to change the state.\n               *\n               * Internally, `write` uses a [Wallet Client](https://viem.sh/docs/clients/wallet) to call the [`sendTransaction` action](https://viem.sh/docs/actions/wallet/sendTransaction) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n               *\n               * __Warning: The `write` internally sends a transaction – it does not validate if the contract write will succeed (the contract may throw an error). It is highly recommended to [simulate the contract write with `contract.simulate`](https://viem.sh/docs/contract/writeContract#usage) before you execute it.__\n               *\n               * @example\n               * import { createWalletClient, getContract, http, parseAbi } from 'viem'\n               * import { mainnet } from 'viem/chains'\n               *\n               * const walletClient = createWalletClient({\n               *   chain: mainnet,\n               *   transport: http(),\n               * })\n               * const contract = getContract({\n               *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n               *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n               *   client: walletClient,\n               * })\n               * const hash = await contract.write.min([69420], {\n               *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n               * })\n               */\n              write: {\n                [functionName in _writeFunctionNames]: GetWriteFunction<\n                  _narrowable,\n                  _walletClient['chain'],\n                  _walletClient['account'],\n                  abi,\n                  functionName extends ContractFunctionName<\n                    abi,\n                    'nonpayable' | 'payable'\n                  >\n                    ? functionName\n                    : never\n                >\n              }\n            }\n        : unknown)\n  > & { address: address; abi: abi }\n>\n\nexport type GetContractErrorType = ErrorType\n\n/**\n * Gets type-safe interface for performing contract-related actions with a specific `abi` and `address`.\n *\n * - Docs https://viem.sh/docs/contract/getContract\n *\n * Using Contract Instances can make it easier to work with contracts if you don't want to pass the `abi` and `address` properties every time you perform contract actions, e.g. [`readContract`](https://viem.sh/docs/contract/readContract), [`writeContract`](https://viem.sh/docs/contract/writeContract), [`estimateContractGas`](https://viem.sh/docs/contract/estimateContractGas), etc.\n *\n * @example\n * import { createPublicClient, getContract, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const publicClient = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const contract = getContract({\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi([\n *     'function balanceOf(address owner) view returns (uint256)',\n *     'function ownerOf(uint256 tokenId) view returns (address)',\n *     'function totalSupply() view returns (uint256)',\n *   ]),\n *   client: publicClient,\n * })\n */\nexport function getContract<\n  transport extends Transport,\n  address extends Address,\n  const abi extends Abi | readonly unknown[],\n  const client extends\n    | Client<transport, chain, account>\n    | KeyedClient<transport, chain, account>,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n>({\n  abi,\n  address,\n  client: client_,\n}: GetContractParameters<\n  transport,\n  chain,\n  account,\n  abi,\n  client,\n  address\n>): GetContractReturnType<abi, client, address> {\n  const client = client_ as\n    | Client<transport, chain, account>\n    | KeyedClient<transport, chain, account>\n\n  const [publicClient, walletClient] = (() => {\n    if (!client) return [undefined, undefined]\n    if ('public' in client && 'wallet' in client)\n      return [client.public as Client, client.wallet as Client]\n    if ('public' in client) return [client.public as Client, undefined]\n    if ('wallet' in client) return [undefined, client.wallet as Client]\n    return [client, client]\n  })()\n\n  const hasPublicClient = publicClient !== undefined && publicClient !== null\n  const hasWalletClient = walletClient !== undefined && walletClient !== null\n\n  const contract: {\n    [_ in\n      | 'abi'\n      | 'address'\n      | 'createEventFilter'\n      | 'estimateGas'\n      | 'getEvents'\n      | 'read'\n      | 'simulate'\n      | 'watchEvent'\n      | 'write']?: unknown\n  } = {}\n\n  let hasReadFunction = false\n  let hasWriteFunction = false\n  let hasEvent = false\n  for (const item of abi as Abi) {\n    if (item.type === 'function')\n      if (item.stateMutability === 'view' || item.stateMutability === 'pure')\n        hasReadFunction = true\n      else hasWriteFunction = true\n    else if (item.type === 'event') hasEvent = true\n    // Exit early if all flags are `true`\n    if (hasReadFunction && hasWriteFunction && hasEvent) break\n  }\n\n  if (hasPublicClient) {\n    if (hasReadFunction)\n      contract.read = new Proxy(\n        {},\n        {\n          get(_, functionName: string) {\n            return (\n              ...parameters: [\n                args?: readonly unknown[] | undefined,\n                options?: UnionOmit<\n                  ReadContractParameters,\n                  'abi' | 'address' | 'functionName' | 'args'\n                >,\n              ]\n            ) => {\n              const { args, options } = getFunctionParameters(parameters)\n              return getAction(\n                publicClient,\n                readContract,\n                'readContract',\n              )({\n                abi,\n                address,\n                functionName,\n                args,\n                ...options,\n              } as ReadContractParameters)\n            }\n          },\n        },\n      )\n\n    if (hasWriteFunction)\n      contract.simulate = new Proxy(\n        {},\n        {\n          get(_, functionName: string) {\n            return (\n              ...parameters: [\n                args?: readonly unknown[],\n                options?: UnionOmit<\n                  SimulateContractParameters,\n                  'abi' | 'address' | 'functionName' | 'args'\n                >,\n              ]\n            ) => {\n              const { args, options } = getFunctionParameters(parameters)\n              return getAction(\n                publicClient,\n                simulateContract,\n                'simulateContract',\n              )({\n                abi,\n                address,\n                functionName,\n                args,\n                ...options,\n              } as SimulateContractParameters)\n            }\n          },\n        },\n      )\n\n    if (hasEvent) {\n      contract.createEventFilter = new Proxy(\n        {},\n        {\n          get(_, eventName: string) {\n            return (\n              ...parameters: [\n                args?: readonly unknown[] | object,\n                options?: Omit<\n                  CreateContractEventFilterParameters,\n                  'abi' | 'address' | 'eventName' | 'args'\n                >,\n              ]\n            ) => {\n              const abiEvent = (abi as readonly AbiEvent[]).find(\n                (x: AbiEvent) => x.type === 'event' && x.name === eventName,\n              )\n              const { args, options } = getEventParameters(\n                parameters,\n                abiEvent!,\n              )\n              return getAction(\n                publicClient,\n                createContractEventFilter,\n                'createContractEventFilter',\n              )({\n                abi,\n                address,\n                eventName,\n                args,\n                ...options,\n              } as CreateContractEventFilterParameters)\n            }\n          },\n        },\n      )\n      contract.getEvents = new Proxy(\n        {},\n        {\n          get(_, eventName: string) {\n            return (\n              ...parameters: [\n                args?: readonly unknown[] | object,\n                options?: Omit<\n                  GetContractEventsParameters,\n                  'abi' | 'address' | 'eventName'\n                >,\n              ]\n            ) => {\n              const abiEvent = (abi as readonly AbiEvent[]).find(\n                (x: AbiEvent) => x.type === 'event' && x.name === eventName,\n              )\n              const { args, options } = getEventParameters(\n                parameters,\n                abiEvent!,\n              )\n              return getAction(\n                publicClient,\n                getContractEvents,\n                'getContractEvents',\n              )({\n                abi,\n                address,\n                eventName,\n                args,\n                ...options,\n              } as unknown as GetContractEventsParameters)\n            }\n          },\n        },\n      )\n      contract.watchEvent = new Proxy(\n        {},\n        {\n          get(_, eventName: string) {\n            return (\n              ...parameters: [\n                args?: readonly unknown[] | object,\n                options?: Omit<\n                  WatchContractEventParameters,\n                  'abi' | 'address' | 'eventName'\n                >,\n              ]\n            ) => {\n              const abiEvent = (abi as readonly AbiEvent[]).find(\n                (x: AbiEvent) => x.type === 'event' && x.name === eventName,\n              )\n              const { args, options } = getEventParameters(\n                parameters,\n                abiEvent!,\n              )\n              return getAction(\n                publicClient,\n                watchContractEvent,\n                'watchContractEvent',\n              )({\n                abi,\n                address,\n                eventName,\n                args,\n                ...options,\n              } as unknown as WatchContractEventParameters)\n            }\n          },\n        },\n      )\n    }\n  }\n\n  if (hasWalletClient) {\n    if (hasWriteFunction)\n      contract.write = new Proxy(\n        {},\n        {\n          get(_, functionName: string) {\n            return (\n              ...parameters: [\n                args?: readonly unknown[],\n                options?: UnionOmit<\n                  WriteContractParameters,\n                  'abi' | 'address' | 'functionName' | 'args'\n                >,\n              ]\n            ) => {\n              const { args, options } = getFunctionParameters(parameters)\n              return getAction(\n                walletClient,\n                writeContract,\n                'writeContract',\n              )({\n                abi,\n                address,\n                functionName,\n                args,\n                ...(options as any),\n              })\n            }\n          },\n        },\n      )\n  }\n\n  if (hasPublicClient || hasWalletClient)\n    if (hasWriteFunction)\n      contract.estimateGas = new Proxy(\n        {},\n        {\n          get(_, functionName: string) {\n            return (\n              ...parameters: [\n                args?: readonly unknown[],\n                options?: UnionOmit<\n                  EstimateContractGasParameters,\n                  'abi' | 'address' | 'functionName' | 'args'\n                >,\n              ]\n            ) => {\n              const { args, options } = getFunctionParameters(parameters)\n              const client = (publicClient ?? walletClient)!\n              return getAction(\n                client,\n                estimateContractGas,\n                'estimateContractGas',\n              )({\n                abi,\n                address,\n                functionName,\n                args,\n                ...options,\n                account:\n                  (options as EstimateContractGasParameters).account ??\n                  (walletClient as unknown as Client).account,\n              } as any)\n            }\n          },\n        },\n      )\n  contract.address = address\n  contract.abi = abi\n\n  return contract as unknown as GetContractReturnType<abi, client, address>\n}\n\n/**\n * @internal exporting for testing only\n */\nexport function getFunctionParameters(\n  values: [args?: readonly unknown[] | undefined, options?: object | undefined],\n) {\n  const hasArgs = values.length && Array.isArray(values[0])\n  const args = hasArgs ? values[0]! : []\n  const options = (hasArgs ? values[1] : values[0]) ?? {}\n  return { args, options }\n}\n\n/**\n * @internal exporting for testing only\n */\nexport function getEventParameters(\n  values: [args?: object | unknown[], options?: object],\n  abiEvent: AbiEvent,\n) {\n  let hasArgs = false\n  // If first item is array, must be `args`\n  if (Array.isArray(values[0])) hasArgs = true\n  // Check if first item is `args` or `options`\n  else if (values.length === 1) {\n    // if event has indexed inputs, must have `args`\n    hasArgs = abiEvent.inputs.some((x) => x.indexed)\n    // If there are two items in array, must have `args`\n  } else if (values.length === 2) {\n    hasArgs = true\n  }\n\n  const args = hasArgs ? values[0]! : undefined\n  const options = (hasArgs ? values[1] : values[0]) ?? {}\n  return { args, options }\n}\n\ntype GetReadFunction<\n  narrowable extends boolean,\n  abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi, 'pure' | 'view'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'pure' | 'view',\n    functionName\n  > = ContractFunctionArgs<abi, 'pure' | 'view', functionName>,\n  abiFunction extends AbiFunction = abi extends Abi\n    ? ExtractAbiFunction<abi, functionName>\n    : AbiFunction,\n  //\n  _args = AbiParametersToPrimitiveTypes<abiFunction['inputs']>,\n  _options = Prettify<\n    UnionOmit<\n      ReadContractParameters<abi, functionName, args>,\n      'abi' | 'address' | 'args' | 'functionName'\n    >\n  >,\n> = narrowable extends true\n  ? (\n      ...parameters: _args extends readonly []\n        ? [options?: _options]\n        : [args: _args, options?: _options]\n    ) => Promise<ReadContractReturnType<abi, functionName, args>>\n  : (\n      ...parameters:\n        | [options?: _options]\n        | [args: readonly unknown[], options?: _options]\n    ) => Promise<ReadContractReturnType>\n\ntype GetEstimateFunction<\n  narrowable extends boolean,\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  > = ContractFunctionArgs<abi, 'nonpayable' | 'payable', functionName>,\n  abiFunction extends AbiFunction = abi extends Abi\n    ? ExtractAbiFunction<abi, functionName>\n    : AbiFunction,\n  //\n  _args = AbiParametersToPrimitiveTypes<abiFunction['inputs']>,\n  _options = Prettify<\n    UnionOmit<\n      EstimateContractGasParameters<abi, functionName, args, chain>,\n      'abi' | 'address' | 'args' | 'functionName'\n    >\n  >,\n  // For making `options` parameter required if `account`\n  IsOptionsRequired = IsUndefined<account>,\n> = narrowable extends true\n  ? (\n      ...parameters: _args extends readonly []\n        ? IsOptionsRequired extends true\n          ? [options: _options]\n          : [options?: _options]\n        : [\n            args: _args,\n            ...parameters: IsOptionsRequired extends true\n              ? [options: _options]\n              : [options?: _options],\n          ]\n    ) => Promise<EstimateContractGasReturnType>\n  : (\n      ...parameters:\n        | (IsOptionsRequired extends true\n            ? [options: _options]\n            : [options?: _options])\n        | [\n            args: readonly unknown[],\n            ...parameters: IsOptionsRequired extends true\n              ? [options: _options]\n              : [options?: _options],\n          ]\n    ) => Promise<EstimateContractGasReturnType>\n\ntype GetSimulateFunction<\n  narrowable extends boolean,\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  > = ContractFunctionArgs<abi, 'nonpayable' | 'payable', functionName>,\n  abiFunction extends AbiFunction = abi extends Abi\n    ? ExtractAbiFunction<abi, functionName>\n    : AbiFunction,\n  //\n  _args = AbiParametersToPrimitiveTypes<abiFunction['inputs']>,\n> = narrowable extends true\n  ? <\n      chainOverride extends Chain | undefined = undefined,\n      accountOverride extends Account | Address | undefined = undefined,\n    >(\n      ...parameters: _args extends readonly []\n        ? [\n            options?: Omit<\n              SimulateContractParameters<\n                abi,\n                functionName,\n                args,\n                chain,\n                chainOverride,\n                accountOverride\n              >,\n              'abi' | 'address' | 'args' | 'functionName'\n            >,\n          ]\n        : [\n            args: _args,\n            options?: Omit<\n              SimulateContractParameters<\n                abi,\n                functionName,\n                args,\n                chain,\n                chainOverride,\n                accountOverride\n              >,\n              'abi' | 'address' | 'args' | 'functionName'\n            >,\n          ]\n    ) => Promise<\n      SimulateContractReturnType<\n        abi,\n        functionName,\n        args,\n        chain,\n        account,\n        chainOverride,\n        accountOverride\n      >\n    >\n  : <\n      chainOverride extends Chain | undefined = undefined,\n      accountOverride extends Account | Address | undefined = undefined,\n    >(\n      ...parameters:\n        | [\n            options?: Omit<\n              SimulateContractParameters<\n                abi,\n                functionName,\n                args,\n                chain,\n                chainOverride,\n                accountOverride\n              >,\n              'abi' | 'address' | 'args' | 'functionName'\n            >,\n          ]\n        | [\n            args: readonly unknown[],\n            options?: Omit<\n              SimulateContractParameters<\n                abi,\n                functionName,\n                args,\n                chain,\n                chainOverride,\n                accountOverride\n              >,\n              'abi' | 'address' | 'args' | 'functionName'\n            >,\n          ]\n    ) => Promise<SimulateContractReturnType>\n\ntype GetWriteFunction<\n  narrowable extends boolean,\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  > = ContractFunctionArgs<abi, 'nonpayable' | 'payable', functionName>,\n  abiFunction extends AbiFunction = abi extends Abi\n    ? ExtractAbiFunction<abi, functionName>\n    : AbiFunction,\n  //\n  _args = AbiParametersToPrimitiveTypes<abiFunction['inputs']>,\n  // For making `options` parameter required if `account` or `chain` is undefined\n  _isOptionsRequired = Or<[IsUndefined<account>, IsUndefined<chain>]>,\n> = narrowable extends true\n  ? <\n      chainOverride extends Chain | undefined,\n      options extends Prettify<\n        UnionOmit<\n          WriteContractParameters<\n            abi,\n            functionName,\n            args,\n            chain,\n            account,\n            chainOverride\n          >,\n          'abi' | 'address' | 'args' | 'functionName'\n        >\n      >,\n    >(\n      ...parameters: _args extends readonly []\n        ? _isOptionsRequired extends true\n          ? [options: options]\n          : [options?: options]\n        : [\n            args: _args,\n            ...parameters: _isOptionsRequired extends true\n              ? [options: options]\n              : [options?: options],\n          ]\n    ) => Promise<WriteContractReturnType>\n  : <\n      chainOverride extends Chain | undefined,\n      options extends Prettify<\n        UnionOmit<\n          WriteContractParameters<\n            abi,\n            functionName,\n            args,\n            chain,\n            account,\n            chainOverride\n          >,\n          'abi' | 'address' | 'args' | 'functionName'\n        >\n      >,\n      Rest extends unknown[] = _isOptionsRequired extends true\n        ? [options: options]\n        : [options?: options],\n    >(\n      ...parameters: Rest | [args: readonly unknown[], ...parameters: Rest]\n    ) => Promise<WriteContractReturnType>\n\ntype GetEventFilter<\n  narrowable extends boolean,\n  abi extends Abi | readonly unknown[],\n  eventName extends ContractEventName<abi>,\n  abiEvent extends AbiEvent = abi extends Abi\n    ? ExtractAbiEvent<abi, eventName>\n    : AbiEvent,\n  //\n  _args = AbiEventParametersToPrimitiveTypes<abiEvent['inputs']>,\n  _options = Prettify<\n    Omit<\n      CreateContractEventFilterParameters<abi, eventName>,\n      'abi' | 'address' | 'args' | 'eventName' | 'strict'\n    >\n  >,\n  IndexedInputs = Extract<abiEvent['inputs'][number], { indexed: true }>,\n> = narrowable extends true\n  ? <\n      const args extends\n        | MaybeExtractEventArgsFromAbi<abi, eventName>\n        | undefined,\n      strict extends boolean | undefined = undefined,\n    >(\n      ...parameters: IsNever<IndexedInputs> extends true\n        ? [options?: _options & { strict?: strict }]\n        : [\n            args: _args | (_args extends args ? Readonly<args> : never),\n            options?: _options & { strict?: strict },\n          ]\n    ) => Promise<\n      CreateContractEventFilterReturnType<abi, eventName, args, strict>\n    >\n  : <strict extends boolean | undefined = undefined>(\n      ...parameters:\n        | [options?: _options & { strict?: strict }]\n        | [\n            args: readonly unknown[] | CreateContractFilterOptions,\n            options?: _options & { strict?: strict },\n          ]\n    ) => Promise<CreateContractEventFilterReturnType>\n\ntype GetEventsFunction<\n  narrowable extends boolean,\n  abi extends Abi | readonly unknown[],\n  eventName extends ContractEventName<abi>,\n  abiEvent extends AbiEvent = abi extends Abi\n    ? ExtractAbiEvent<abi, eventName>\n    : AbiEvent,\n  //\n  _args = AbiEventParametersToPrimitiveTypes<abiEvent['inputs']>,\n  _options = Prettify<\n    Omit<\n      GetContractEventsParameters<abi, eventName>,\n      'abi' | 'address' | 'args' | 'eventName'\n    >\n  >,\n  IndexedInputs = Extract<abiEvent['inputs'][number], { indexed: true }>,\n> = narrowable extends true\n  ? (\n      ...parameters: IsNever<IndexedInputs> extends true\n        ? [options?: _options]\n        : [args?: _args, options?: _options]\n    ) => Promise<GetContractEventsReturnType<abi, eventName>>\n  : (\n      ...parameters:\n        | [options?: _options]\n        | [\n            args?: readonly unknown[] | WatchContractEventOptions,\n            options?: _options,\n          ]\n    ) => Promise<GetContractEventsReturnType<abi, eventName>>\n\ntype GetWatchEvent<\n  narrowable extends boolean,\n  abi extends Abi | readonly unknown[],\n  eventName extends ContractEventName<abi>,\n  abiEvent extends AbiEvent = abi extends Abi\n    ? ExtractAbiEvent<abi, eventName>\n    : AbiEvent,\n  //\n  _args = AbiEventParametersToPrimitiveTypes<abiEvent['inputs']>,\n  _options = Prettify<\n    Omit<\n      WatchContractEventParameters<abi, eventName>,\n      'abi' | 'address' | 'args' | 'eventName'\n    >\n  >,\n  _indexedInputs = Extract<abiEvent['inputs'][number], { indexed: true }>,\n> = narrowable extends true\n  ? (\n      ...parameters: IsNever<_indexedInputs> extends true\n        ? [options: _options]\n        : [args: _args, options: _options]\n    ) => WatchContractEventReturnType\n  : (\n      ...parameters:\n        | [options?: _options]\n        | [\n            args: readonly unknown[] | WatchContractEventOptions,\n            options?: _options,\n          ]\n    ) => WatchContractEventReturnType\n\ntype CreateContractFilterOptions =\n  RemoveProperties<CreateContractEventFilterParameters>\ntype WatchContractEventOptions = RemoveProperties<WatchContractEventParameters>\n\ntype RemoveProperties<T extends object> = Prettify<\n  {\n    [key: string]: unknown\n  } & {\n    [_ in keyof T]?: never\n  }\n>\n","import { type Address, parseAbi } from 'abitype'\nimport * as BlockOverrides from 'ox/BlockOverrides'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { multicall3Abi } from '../../constants/abis.js'\nimport { aggregate3Signature } from '../../constants/contract.js'\nimport {\n  deploylessCallViaBytecodeBytecode,\n  deploylessCallViaFactoryBytecode,\n} from '../../constants/contracts.js'\nimport { BaseError } from '../../errors/base.js'\nimport {\n  ChainDoesNotSupportContract,\n  ClientChainNotConfiguredError,\n} from '../../errors/chain.js'\nimport {\n  CounterfactualDeploymentFailedError,\n  RawContractError,\n  type RawContractErrorType,\n} from '../../errors/contract.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RpcTransactionRequest } from '../../types/rpc.js'\nimport type { StateOverride } from '../../types/stateOverride.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport type { ExactPartial, UnionOmit } from '../../types/utils.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeDeployDataErrorType,\n  encodeDeployData,\n} from '../../utils/abi/encodeDeployData.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type GetCallErrorReturnType,\n  getCallError,\n} from '../../utils/errors/getCallError.js'\nimport { extract } from '../../utils/formatters/extract.js'\nimport {\n  type FormatTransactionRequestErrorType,\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport {\n  type CreateBatchSchedulerErrorType,\n  createBatchScheduler,\n} from '../../utils/promise/createBatchScheduler.js'\nimport {\n  type SerializeStateOverrideErrorType,\n  serializeStateOverride,\n} from '../../utils/stateOverride.js'\nimport { assertRequest } from '../../utils/transaction/assertRequest.js'\nimport type {\n  AssertRequestErrorType,\n  AssertRequestParameters,\n} from '../../utils/transaction/assertRequest.js'\n\nexport type CallParameters<\n  chain extends Chain | undefined = Chain | undefined,\n> = UnionOmit<FormattedCall<chain>, 'from'> & {\n  /** Account attached to the call (msg.sender). */\n  account?: Account | Address | undefined\n  /** Whether or not to enable multicall batching on this call. */\n  batch?: boolean | undefined\n  /** Block overrides for the call. */\n  blockOverrides?: BlockOverrides.BlockOverrides | undefined\n  /** Bytecode to perform the call on. */\n  code?: Hex | undefined\n  /** Contract deployment factory address (ie. Create2 factory, Smart Account factory, etc). */\n  factory?: Address | undefined\n  /** Calldata to execute on the factory to deploy the contract. */\n  factoryData?: Hex | undefined\n  /** State overrides for the call. */\n  stateOverride?: StateOverride | undefined\n} & (\n    | {\n        /** The balance of the account at a block number. */\n        blockNumber?: bigint | undefined\n        blockTag?: undefined\n      }\n    | {\n        blockNumber?: undefined\n        /**\n         * The balance of the account at a block tag.\n         * @default 'latest'\n         */\n        blockTag?: BlockTag | undefined\n      }\n  )\ntype FormattedCall<chain extends Chain | undefined = Chain | undefined> =\n  FormattedTransactionRequest<chain>\n\nexport type CallReturnType = { data: Hex | undefined }\n\nexport type CallErrorType = GetCallErrorReturnType<\n  | ParseAccountErrorType\n  | SerializeStateOverrideErrorType\n  | AssertRequestErrorType\n  | NumberToHexErrorType\n  | FormatTransactionRequestErrorType\n  | ScheduleMulticallErrorType\n  | RequestErrorType\n  | ToDeploylessCallViaBytecodeDataErrorType\n  | ToDeploylessCallViaFactoryDataErrorType\n>\n\n/**\n * Executes a new message call immediately without submitting a transaction to the network.\n *\n * - Docs: https://viem.sh/docs/actions/public/call\n * - JSON-RPC Methods: [`eth_call`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_call)\n *\n * @param client - Client to use\n * @param parameters - {@link CallParameters}\n * @returns The call data. {@link CallReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { call } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const data = await call(client, {\n *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n *   data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n * })\n */\nexport async function call<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  args: CallParameters<chain>,\n): Promise<CallReturnType> {\n  const {\n    account: account_ = client.account,\n    batch = Boolean(client.batch?.multicall),\n    blockNumber,\n    blockTag = 'latest',\n    accessList,\n    blobs,\n    blockOverrides,\n    code,\n    data: data_,\n    factory,\n    factoryData,\n    gas,\n    gasPrice,\n    maxFeePerBlobGas,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    to,\n    value,\n    stateOverride,\n    ...rest\n  } = args\n  const account = account_ ? parseAccount(account_) : undefined\n\n  if (code && (factory || factoryData))\n    throw new BaseError(\n      'Cannot provide both `code` & `factory`/`factoryData` as parameters.',\n    )\n  if (code && to)\n    throw new BaseError('Cannot provide both `code` & `to` as parameters.')\n\n  // Check if the call is deployless via bytecode.\n  const deploylessCallViaBytecode = code && data_\n  // Check if the call is deployless via a factory.\n  const deploylessCallViaFactory = factory && factoryData && to && data_\n  const deploylessCall = deploylessCallViaBytecode || deploylessCallViaFactory\n\n  const data = (() => {\n    if (deploylessCallViaBytecode)\n      return toDeploylessCallViaBytecodeData({\n        code,\n        data: data_,\n      })\n    if (deploylessCallViaFactory)\n      return toDeploylessCallViaFactoryData({\n        data: data_,\n        factory,\n        factoryData,\n        to,\n      })\n    return data_\n  })()\n\n  try {\n    assertRequest(args as AssertRequestParameters)\n\n    const blockNumberHex =\n      typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : undefined\n    const block = blockNumberHex || blockTag\n\n    const rpcBlockOverrides = blockOverrides\n      ? BlockOverrides.toRpc(blockOverrides)\n      : undefined\n    const rpcStateOverride = serializeStateOverride(stateOverride)\n\n    const chainFormat = client.chain?.formatters?.transactionRequest?.format\n    const format = chainFormat || formatTransactionRequest\n\n    const request = format({\n      // Pick out extra data that might exist on the chain's transaction request type.\n      ...extract(rest, { format: chainFormat }),\n      from: account?.address,\n      accessList,\n      blobs,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerBlobGas,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to: deploylessCall ? undefined : to,\n      value,\n    } as TransactionRequest) as TransactionRequest\n\n    if (\n      batch &&\n      shouldPerformMulticall({ request }) &&\n      !rpcStateOverride &&\n      !rpcBlockOverrides\n    ) {\n      try {\n        return await scheduleMulticall(client, {\n          ...request,\n          blockNumber,\n          blockTag,\n        } as unknown as ScheduleMulticallParameters<chain>)\n      } catch (err) {\n        if (\n          !(err instanceof ClientChainNotConfiguredError) &&\n          !(err instanceof ChainDoesNotSupportContract)\n        )\n          throw err\n      }\n    }\n\n    const params = (() => {\n      const base = [\n        request as ExactPartial<RpcTransactionRequest>,\n        block,\n      ] as const\n      if (rpcStateOverride && rpcBlockOverrides)\n        return [...base, rpcStateOverride, rpcBlockOverrides] as const\n      if (rpcStateOverride) return [...base, rpcStateOverride] as const\n      if (rpcBlockOverrides) return [...base, {}, rpcBlockOverrides] as const\n      return base\n    })()\n\n    const response = await client.request({\n      method: 'eth_call',\n      params,\n    })\n    if (response === '0x') return { data: undefined }\n    return { data: response }\n  } catch (err) {\n    const data = getRevertErrorData(err)\n\n    // Check for CCIP-Read offchain lookup signature.\n    const { offchainLookup, offchainLookupSignature } = await import(\n      '../../utils/ccip.js'\n    )\n    if (\n      client.ccipRead !== false &&\n      data?.slice(0, 10) === offchainLookupSignature &&\n      to\n    )\n      return { data: await offchainLookup(client, { data, to }) }\n\n    // Check for counterfactual deployment error.\n    if (deploylessCall && data?.slice(0, 10) === '0x101bb98d')\n      throw new CounterfactualDeploymentFailedError({ factory })\n\n    throw getCallError(err as ErrorType, {\n      ...args,\n      account,\n      chain: client.chain,\n    })\n  }\n}\n\n// We only want to perform a scheduled multicall if:\n// - The request has calldata,\n// - The request has a target address,\n// - The target address is not already the aggregate3 signature,\n// - The request has no other properties (`nonce`, `gas`, etc cannot be sent with a multicall).\nfunction shouldPerformMulticall({ request }: { request: TransactionRequest }) {\n  const { data, to, ...request_ } = request\n  if (!data) return false\n  if (data.startsWith(aggregate3Signature)) return false\n  if (!to) return false\n  if (\n    Object.values(request_).filter((x) => typeof x !== 'undefined').length > 0\n  )\n    return false\n  return true\n}\n\ntype ScheduleMulticallParameters<chain extends Chain | undefined> = Pick<\n  CallParameters<chain>,\n  'blockNumber' | 'blockTag'\n> & {\n  data: Hex\n  multicallAddress?: Address | undefined\n  to: Address\n}\n\ntype ScheduleMulticallErrorType =\n  | GetChainContractAddressErrorType\n  | NumberToHexErrorType\n  | CreateBatchSchedulerErrorType\n  | EncodeFunctionDataErrorType\n  | DecodeFunctionResultErrorType\n  | RawContractErrorType\n  | ErrorType\n\nasync function scheduleMulticall<chain extends Chain | undefined>(\n  client: Client<Transport>,\n  args: ScheduleMulticallParameters<chain>,\n) {\n  const { batchSize = 1024, wait = 0 } =\n    typeof client.batch?.multicall === 'object' ? client.batch.multicall : {}\n  const {\n    blockNumber,\n    blockTag = 'latest',\n    data,\n    multicallAddress: multicallAddress_,\n    to,\n  } = args\n\n  let multicallAddress = multicallAddress_\n  if (!multicallAddress) {\n    if (!client.chain) throw new ClientChainNotConfiguredError()\n\n    multicallAddress = getChainContractAddress({\n      blockNumber,\n      chain: client.chain,\n      contract: 'multicall3',\n    })\n  }\n\n  const blockNumberHex =\n    typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : undefined\n  const block = blockNumberHex || blockTag\n\n  const { schedule } = createBatchScheduler({\n    id: `${client.uid}.${block}`,\n    wait,\n    shouldSplitBatch(args) {\n      const size = args.reduce((size, { data }) => size + (data.length - 2), 0)\n      return size > batchSize * 2\n    },\n    fn: async (\n      requests: {\n        data: Hex\n        to: Address\n      }[],\n    ) => {\n      const calls = requests.map((request) => ({\n        allowFailure: true,\n        callData: request.data,\n        target: request.to,\n      }))\n\n      const calldata = encodeFunctionData({\n        abi: multicall3Abi,\n        args: [calls],\n        functionName: 'aggregate3',\n      })\n\n      const data = await client.request({\n        method: 'eth_call',\n        params: [\n          {\n            data: calldata,\n            to: multicallAddress,\n          },\n          block,\n        ],\n      })\n\n      return decodeFunctionResult({\n        abi: multicall3Abi,\n        args: [calls],\n        functionName: 'aggregate3',\n        data: data || '0x',\n      })\n    },\n  })\n\n  const [{ returnData, success }] = await schedule({ data, to })\n\n  if (!success) throw new RawContractError({ data: returnData })\n  if (returnData === '0x') return { data: undefined }\n  return { data: returnData }\n}\n\ntype ToDeploylessCallViaBytecodeDataErrorType =\n  | EncodeDeployDataErrorType\n  | ErrorType\n\nfunction toDeploylessCallViaBytecodeData(parameters: {\n  code: Hex\n  data: Hex\n}) {\n  const { code, data } = parameters\n  return encodeDeployData({\n    abi: parseAbi(['constructor(bytes, bytes)']),\n    bytecode: deploylessCallViaBytecodeBytecode,\n    args: [code, data],\n  })\n}\n\ntype ToDeploylessCallViaFactoryDataErrorType =\n  | EncodeDeployDataErrorType\n  | ErrorType\n\nfunction toDeploylessCallViaFactoryData(parameters: {\n  data: Hex\n  factory: Address\n  factoryData: Hex\n  to: Address\n}) {\n  const { data, factory, factoryData, to } = parameters\n  return encodeDeployData({\n    abi: parseAbi(['constructor(address, bytes, address, bytes)']),\n    bytecode: deploylessCallViaFactoryBytecode,\n    args: [to, data, factory, factoryData],\n  })\n}\n\n/** @internal */\nexport type GetRevertErrorDataErrorType = ErrorType\n\n/** @internal */\nexport function getRevertErrorData(err: unknown) {\n  if (!(err instanceof BaseError)) return undefined\n  const error = err.walk() as RawContractError\n  return typeof error?.data === 'object' ? error.data?.data : error.data\n}\n","import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RpcTransactionRequest } from '../../types/rpc.js'\nimport type { AccessList, TransactionRequest } from '../../types/transaction.js'\nimport type { ExactPartial, Prettify, UnionOmit } from '../../types/utils.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type GetCallErrorReturnType,\n  getCallError,\n} from '../../utils/errors/getCallError.js'\nimport { extract } from '../../utils/formatters/extract.js'\nimport {\n  type FormatTransactionRequestErrorType,\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport { assertRequest } from '../../utils/transaction/assertRequest.js'\nimport type {\n  AssertRequestErrorType,\n  AssertRequestParameters,\n} from '../../utils/transaction/assertRequest.js'\n\nexport type CreateAccessListParameters<\n  chain extends Chain | undefined = Chain | undefined,\n> = UnionOmit<\n  FormattedTransactionRequest<chain>,\n  'from' | 'nonce' | 'accessList'\n> & {\n  /** Account attached to the call (msg.sender). */\n  account?: Account | Address | undefined\n} & (\n    | {\n        /** The balance of the account at a block number. */\n        blockNumber?: bigint | undefined\n        blockTag?: undefined\n      }\n    | {\n        blockNumber?: undefined\n        /**\n         * The balance of the account at a block tag.\n         * @default 'latest'\n         */\n        blockTag?: BlockTag | undefined\n      }\n  )\n\nexport type CreateAccessListReturnType = Prettify<{\n  accessList: AccessList\n  gasUsed: bigint\n}>\n\nexport type CreateAccessListErrorType = GetCallErrorReturnType<\n  | ParseAccountErrorType\n  | AssertRequestErrorType\n  | NumberToHexErrorType\n  | FormatTransactionRequestErrorType\n  | RequestErrorType\n>\n\n/**\n * Creates an EIP-2930 access list.\n *\n * - Docs: https://viem.sh/docs/actions/public/createAccessList\n * - JSON-RPC Methods: `eth_createAccessList`\n *\n * @param client - Client to use\n * @param parameters - {@link CreateAccessListParameters}\n * @returns The access list. {@link CreateAccessListReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createAccessList } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const data = await createAccessList(client, {\n *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n *   data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n * })\n */\nexport async function createAccessList<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  args: CreateAccessListParameters<chain>,\n): Promise<CreateAccessListReturnType> {\n  const {\n    account: account_ = client.account,\n    blockNumber,\n    blockTag = 'latest',\n    blobs,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerBlobGas,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    to,\n    value,\n    ...rest\n  } = args\n  const account = account_ ? parseAccount(account_) : undefined\n\n  try {\n    assertRequest(args as AssertRequestParameters)\n\n    const blockNumberHex =\n      typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : undefined\n    const block = blockNumberHex || blockTag\n\n    const chainFormat = client.chain?.formatters?.transactionRequest?.format\n    const format = chainFormat || formatTransactionRequest\n\n    const request = format({\n      // Pick out extra data that might exist on the chain's transaction request type.\n      ...extract(rest, { format: chainFormat }),\n      from: account?.address,\n      blobs,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerBlobGas,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      to,\n      value,\n    } as TransactionRequest) as TransactionRequest\n\n    const response = await client.request({\n      method: 'eth_createAccessList',\n      params: [request as ExactPartial<RpcTransactionRequest>, block],\n    })\n    return {\n      accessList: response.accessList,\n      gasUsed: BigInt(response.gasUsed),\n    }\n  } catch (err) {\n    throw getCallError(err as ErrorType, {\n      ...args,\n      account,\n      chain: client.chain,\n    })\n  }\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js'\n\nexport type CreateBlockFilterReturnType = Filter<'block'>\n\nexport type CreateBlockFilterErrorType = RequestErrorType | ErrorType\n\n/**\n * Creates a [`Filter`](https://viem.sh/docs/glossary/types#filter) to listen for new block hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\n *\n * - Docs: https://viem.sh/docs/actions/public/createBlockFilter\n * - JSON-RPC Methods: [`eth_newBlockFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newBlockFilter)\n *\n * @param client - Client to use\n * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateBlockFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createBlockFilter } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createBlockFilter(client)\n * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'block' }\n */\nexport async function createBlockFilter<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n): Promise<CreateBlockFilterReturnType> {\n  const getRequest = createFilterRequestScope(client, {\n    method: 'eth_newBlockFilter',\n  })\n  const id = await client.request({\n    method: 'eth_newBlockFilter',\n  })\n  return { id, request: getRequest(id), type: 'block' }\n}\n","import type { Abi, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Hex } from '../../types/misc.js'\nimport {\n  type EncodeEventTopicsErrorType,\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from '../../utils/abi/encodeEventTopics.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js'\n\nexport type CreateContractEventFilterParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> | undefined = undefined,\n  args extends\n    | MaybeExtractEventArgsFromAbi<abi, eventName>\n    | undefined = undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = {\n  address?: Address | Address[] | undefined\n  abi: abi\n  eventName?: eventName | ContractEventName<abi> | undefined\n  fromBlock?: fromBlock | BlockNumber | BlockTag | undefined\n  /**\n   * Whether or not the logs must match the indexed/non-indexed arguments in the event ABI item.\n   * @default false\n   */\n  strict?: strict | boolean | undefined\n  toBlock?: toBlock | BlockNumber | BlockTag | undefined\n} & (undefined extends eventName\n  ? {\n      args?: undefined\n    }\n  : MaybeExtractEventArgsFromAbi<abi, eventName> extends infer eventFilterArgs\n    ? {\n        args?:\n          | eventFilterArgs\n          | (args extends eventFilterArgs ? args : never)\n          | undefined\n      }\n    : {\n        args?: undefined\n      })\n\nexport type CreateContractEventFilterReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> | undefined = undefined,\n  args extends\n    | MaybeExtractEventArgsFromAbi<abi, eventName>\n    | undefined = undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = Filter<'event', abi, eventName, args, strict, fromBlock, toBlock>\n\nexport type CreateContractEventFilterErrorType =\n  | EncodeEventTopicsErrorType\n  | RequestErrorType\n  | NumberToHexErrorType\n  | ErrorType\n\n/**\n * Creates a Filter to retrieve event logs that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges) or [`getFilterLogs`](https://viem.sh/docs/actions/public/getFilterLogs).\n *\n * - Docs: https://viem.sh/docs/contract/createContractEventFilter\n *\n * @param client - Client to use\n * @param parameters - {@link CreateContractEventFilterParameters}\n * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateContractEventFilterReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createContractEventFilter } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createContractEventFilter(client, {\n *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n * })\n */\nexport async function createContractEventFilter<\n  chain extends Chain | undefined,\n  const abi extends Abi | readonly unknown[],\n  eventName extends ContractEventName<abi> | undefined,\n  args extends MaybeExtractEventArgsFromAbi<abi, eventName> | undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  client: Client<Transport, chain>,\n  parameters: CreateContractEventFilterParameters<\n    abi,\n    eventName,\n    args,\n    strict,\n    fromBlock,\n    toBlock\n  >,\n): Promise<\n  CreateContractEventFilterReturnType<\n    abi,\n    eventName,\n    args,\n    strict,\n    fromBlock,\n    toBlock\n  >\n> {\n  const { address, abi, args, eventName, fromBlock, strict, toBlock } =\n    parameters as CreateContractEventFilterParameters\n\n  const getRequest = createFilterRequestScope(client, {\n    method: 'eth_newFilter',\n  })\n\n  const topics = eventName\n    ? encodeEventTopics({\n        abi,\n        args,\n        eventName,\n      } as unknown as EncodeEventTopicsParameters)\n    : undefined\n  const id: Hex = await client.request({\n    method: 'eth_newFilter',\n    params: [\n      {\n        address,\n        fromBlock:\n          typeof fromBlock === 'bigint' ? numberToHex(fromBlock) : fromBlock,\n        toBlock: typeof toBlock === 'bigint' ? numberToHex(toBlock) : toBlock,\n        topics,\n      },\n    ],\n  })\n\n  return {\n    abi,\n    args,\n    eventName,\n    id,\n    request: getRequest(id),\n    strict: Boolean(strict),\n    type: 'event',\n  } as unknown as CreateContractEventFilterReturnType<\n    abi,\n    eventName,\n    args,\n    strict,\n    fromBlock,\n    toBlock\n  >\n}\n","import type { AbiEvent, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  MaybeAbiEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Hex, LogTopic } from '../../types/misc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type EncodeEventTopicsErrorType,\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from '../../utils/abi/encodeEventTopics.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js'\n\nexport type CreateEventFilterParameters<\n  abiEvent extends AbiEvent | undefined = undefined,\n  abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  //\n  _eventName extends string | undefined = MaybeAbiEventName<abiEvent>,\n  _args extends\n    | MaybeExtractEventArgsFromAbi<abiEvents, _eventName>\n    | undefined = undefined,\n> = {\n  address?: Address | Address[] | undefined\n  fromBlock?: fromBlock | BlockNumber | BlockTag | undefined\n  toBlock?: toBlock | BlockNumber | BlockTag | undefined\n} & (MaybeExtractEventArgsFromAbi<\n  abiEvents,\n  _eventName\n> extends infer eventFilterArgs\n  ?\n      | {\n          args:\n            | eventFilterArgs\n            | (_args extends eventFilterArgs ? _args : never)\n          event: abiEvent\n          events?: undefined\n          /**\n           * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n           * @default false\n           */\n          strict?: strict | undefined\n        }\n      | {\n          args?: undefined\n          event?: abiEvent | undefined\n          events?: undefined\n          /**\n           * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n           * @default false\n           */\n          strict?: strict | undefined\n        }\n      | {\n          args?: undefined\n          event?: undefined\n          events: abiEvents | undefined\n          /**\n           * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n           * @default false\n           */\n          strict?: strict | undefined\n        }\n      | {\n          args?: undefined\n          event?: undefined\n          events?: undefined\n          strict?: undefined\n        }\n  : {\n      args?: undefined\n      event?: undefined\n      events?: undefined\n      strict?: undefined\n    })\n\nexport type CreateEventFilterReturnType<\n  abiEvent extends AbiEvent | undefined = undefined,\n  abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _eventName extends string | undefined = MaybeAbiEventName<abiEvent>,\n  _args extends\n    | MaybeExtractEventArgsFromAbi<abiEvents, _eventName>\n    | undefined = undefined,\n> = Prettify<\n  Filter<'event', abiEvents, _eventName, _args, strict, fromBlock, toBlock>\n>\n\nexport type CreateEventFilterErrorType =\n  | EncodeEventTopicsErrorType\n  | RequestErrorType\n  | NumberToHexErrorType\n  | ErrorType\n\n/**\n * Creates a [`Filter`](https://viem.sh/docs/glossary/types#filter) to listen for new events that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\n *\n * - Docs: https://viem.sh/docs/actions/public/createEventFilter\n * - JSON-RPC Methods: [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter)\n *\n * @param client - Client to use\n * @param parameters - {@link CreateEventFilterParameters}\n * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateEventFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createEventFilter } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createEventFilter(client, {\n *   address: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\n * })\n */\nexport async function createEventFilter<\n  chain extends Chain | undefined,\n  const abiEvent extends AbiEvent | undefined = undefined,\n  const abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber<bigint> | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber<bigint> | BlockTag | undefined = undefined,\n  _eventName extends string | undefined = MaybeAbiEventName<abiEvent>,\n  _args extends\n    | MaybeExtractEventArgsFromAbi<abiEvents, _eventName>\n    | undefined = undefined,\n>(\n  client: Client<Transport, chain>,\n  {\n    address,\n    args,\n    event,\n    events: events_,\n    fromBlock,\n    strict,\n    toBlock,\n  }: CreateEventFilterParameters<\n    abiEvent,\n    abiEvents,\n    strict,\n    fromBlock,\n    toBlock,\n    _eventName,\n    _args\n  > = {} as any,\n): Promise<\n  CreateEventFilterReturnType<\n    abiEvent,\n    abiEvents,\n    strict,\n    fromBlock,\n    toBlock,\n    _eventName,\n    _args\n  >\n> {\n  const events = events_ ?? (event ? [event] : undefined)\n\n  const getRequest = createFilterRequestScope(client, {\n    method: 'eth_newFilter',\n  })\n\n  let topics: LogTopic[] = []\n  if (events) {\n    const encoded = (events as AbiEvent[]).flatMap((event) =>\n      encodeEventTopics({\n        abi: [event],\n        eventName: (event as AbiEvent).name,\n        args,\n      } as EncodeEventTopicsParameters),\n    )\n    // TODO: Clean up type casting\n    topics = [encoded as LogTopic]\n    if (event) topics = topics[0] as LogTopic[]\n  }\n\n  const id: Hex = await client.request({\n    method: 'eth_newFilter',\n    params: [\n      {\n        address,\n        fromBlock:\n          typeof fromBlock === 'bigint' ? numberToHex(fromBlock) : fromBlock,\n        toBlock: typeof toBlock === 'bigint' ? numberToHex(toBlock) : toBlock,\n        ...(topics.length ? { topics } : {}),\n      },\n    ],\n  })\n\n  return {\n    abi: events,\n    args,\n    eventName: event ? (event as AbiEvent).name : undefined,\n    fromBlock,\n    id,\n    request: getRequest(id),\n    strict: Boolean(strict),\n    toBlock,\n    type: 'event',\n  } as unknown as CreateEventFilterReturnType<\n    abiEvent,\n    abiEvents,\n    strict,\n    fromBlock,\n    toBlock,\n    _eventName,\n    _args\n  >\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js'\n\nexport type CreatePendingTransactionFilterReturnType = Filter<'transaction'>\n\nexport type CreatePendingTransactionFilterErrorType =\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Creates a Filter to listen for new pending transaction hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\n *\n * - Docs: https://viem.sh/docs/actions/public/createPendingTransactionFilter\n * - JSON-RPC Methods: [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter)\n *\n * @param client - Client to use\n * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateBlockFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createPendingTransactionFilter } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createPendingTransactionFilter(client)\n * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'transaction' }\n */\nexport async function createPendingTransactionFilter<\n  transport extends Transport,\n  chain extends Chain | undefined,\n>(\n  client: Client<transport, chain>,\n): Promise<CreatePendingTransactionFilterReturnType> {\n  const getRequest = createFilterRequestScope(client, {\n    method: 'eth_newPendingTransactionFilter',\n  })\n  const id = await client.request({\n    method: 'eth_newPendingTransactionFilter',\n  })\n  return { id, request: getRequest(id), type: 'transaction' }\n}\n","import type { Abi } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BaseError } from '../../errors/base.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n  ContractFunctionParameters,\n  GetValue,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from '../../utils/errors/getContractError.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type EstimateGasErrorType,\n  type EstimateGasParameters,\n  estimateGas,\n} from './estimateGas.js'\n\nexport type EstimateContractGasParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends ContractFunctionName<\n    abi,\n    'nonpayable' | 'payable'\n  > = ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  > = ContractFunctionArgs<abi, 'nonpayable' | 'payable', functionName>,\n  chain extends Chain | undefined = Chain | undefined,\n> = ContractFunctionParameters<\n  abi,\n  'nonpayable' | 'payable',\n  functionName,\n  args\n> &\n  UnionOmit<EstimateGasParameters<chain>, 'data' | 'to' | 'value'> &\n  GetValue<\n    abi,\n    functionName,\n    EstimateGasParameters<chain> extends EstimateGasParameters\n      ? EstimateGasParameters<chain>['value']\n      : EstimateGasParameters['value']\n  > & {\n    /** Data to append to the end of the calldata. Useful for adding a [\"domain\" tag](https://opensea.notion.site/opensea/Seaport-Order-Attributions-ec2d69bf455041a5baa490941aad307f). */\n    dataSuffix?: Hex | undefined\n  }\n\nexport type EstimateContractGasReturnType = bigint\n\nexport type EstimateContractGasErrorType = GetContractErrorReturnType<\n  EncodeFunctionDataErrorType | EstimateGasErrorType | ParseAccountErrorType\n>\n\n/**\n * Estimates the gas required to successfully execute a contract write function call.\n *\n * - Docs: https://viem.sh/docs/contract/estimateContractGas\n *\n * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`estimateGas` action](https://viem.sh/docs/actions/public/estimateGas) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateContractGasParameters}\n * @returns The gas estimate (in wei). {@link EstimateContractGasReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateContractGas } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const gas = await estimateContractGas(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint() public']),\n *   functionName: 'mint',\n *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n * })\n */\nexport async function estimateContractGas<\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  args extends ContractFunctionArgs<abi, 'pure' | 'view', functionName>,\n  chain extends Chain | undefined,\n  account extends Account | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: EstimateContractGasParameters<abi, functionName, args, chain>,\n): Promise<EstimateContractGasReturnType> {\n  const { abi, address, args, functionName, dataSuffix, ...request } =\n    parameters as EstimateContractGasParameters\n  const data = encodeFunctionData({\n    abi,\n    args,\n    functionName,\n  } as EncodeFunctionDataParameters)\n  try {\n    const gas = await getAction(\n      client,\n      estimateGas,\n      'estimateGas',\n    )({\n      data: `${data}${dataSuffix ? dataSuffix.replace('0x', '') : ''}`,\n      to: address,\n      ...request,\n    } as unknown as EstimateGasParameters)\n    return gas\n  } catch (error) {\n    const account = request.account ? parseAccount(request.account) : undefined\n    throw getContractError(error as BaseError, {\n      abi,\n      address,\n      args,\n      docsPath: '/docs/contract/estimateContractGas',\n      functionName,\n      sender: account?.address,\n    })\n  }\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  BaseFeeScalarError,\n  type BaseFeeScalarErrorType,\n  Eip1559FeesNotSupportedError,\n  type Eip1559FeesNotSupportedErrorType,\n} from '../../errors/fee.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Block } from '../../types/block.js'\nimport type {\n  Chain,\n  ChainEstimateFeesPerGasFnParameters,\n  ChainFeesFnParameters,\n  GetChainParameter,\n} from '../../types/chain.js'\nimport type {\n  FeeValuesEIP1559,\n  FeeValuesLegacy,\n  FeeValuesType,\n} from '../../types/fee.js'\nimport { getAction } from '../../utils/getAction.js'\nimport type { PrepareTransactionRequestParameters } from '../wallet/prepareTransactionRequest.js'\nimport {\n  type EstimateMaxPriorityFeePerGasErrorType,\n  internal_estimateMaxPriorityFeePerGas,\n} from './estimateMaxPriorityFeePerGas.js'\nimport { getBlock } from './getBlock.js'\nimport { type GetGasPriceErrorType, getGasPrice } from './getGasPrice.js'\n\nexport type EstimateFeesPerGasParameters<\n  chain extends Chain | undefined = Chain | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  type extends FeeValuesType = FeeValuesType,\n> = {\n  /**\n   * The type of fee values to return.\n   *\n   * - `legacy`: Returns the legacy gas price.\n   * - `eip1559`: Returns the max fee per gas and max priority fee per gas.\n   *\n   * @default 'eip1559'\n   */\n  type?: type | FeeValuesType | undefined\n} & GetChainParameter<chain, chainOverride>\n\nexport type EstimateFeesPerGasReturnType<\n  type extends FeeValuesType = FeeValuesType,\n> =\n  | (type extends 'legacy' ? FeeValuesLegacy : never)\n  | (type extends 'eip1559' ? FeeValuesEIP1559 : never)\n\nexport type EstimateFeesPerGasErrorType =\n  | BaseFeeScalarErrorType\n  | EstimateMaxPriorityFeePerGasErrorType\n  | GetGasPriceErrorType\n  | Eip1559FeesNotSupportedErrorType\n  | ErrorType\n\n/**\n * Returns an estimate for the fees per gas (in wei) for a\n * transaction to be likely included in the next block.\n * Defaults to [`chain.fees.estimateFeesPerGas`](/docs/clients/chains#fees-estimatefeespergas) if set.\n *\n * - Docs: https://viem.sh/docs/actions/public/estimateFeesPerGas\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateFeesPerGasParameters}\n * @returns An estimate (in wei) for the fees per gas. {@link EstimateFeesPerGasReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateFeesPerGas } from 'viem/actions'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const maxPriorityFeePerGas = await estimateFeesPerGas(client)\n * // { maxFeePerGas: ..., maxPriorityFeePerGas: ... }\n */\nexport async function estimateFeesPerGas<\n  chain extends Chain | undefined,\n  chainOverride extends Chain | undefined,\n  type extends FeeValuesType = 'eip1559',\n>(\n  client: Client<Transport, chain>,\n  args?: EstimateFeesPerGasParameters<chain, chainOverride, type> | undefined,\n): Promise<EstimateFeesPerGasReturnType<type>> {\n  return internal_estimateFeesPerGas(client, args as any)\n}\n\nexport async function internal_estimateFeesPerGas<\n  chain extends Chain | undefined,\n  chainOverride extends Chain | undefined,\n  type extends FeeValuesType = 'eip1559',\n>(\n  client: Client<Transport, chain>,\n  args: EstimateFeesPerGasParameters<chain, chainOverride, type> & {\n    block?: Block | undefined\n    request?: PrepareTransactionRequestParameters<Chain, Account> | undefined\n  },\n): Promise<EstimateFeesPerGasReturnType<type>> {\n  const {\n    block: block_,\n    chain = client.chain,\n    request,\n    type = 'eip1559',\n  } = args || {}\n\n  const baseFeeMultiplier = await (async () => {\n    if (typeof chain?.fees?.baseFeeMultiplier === 'function')\n      return chain.fees.baseFeeMultiplier({\n        block: block_ as Block,\n        client,\n        request,\n      } as ChainFeesFnParameters)\n    return chain?.fees?.baseFeeMultiplier ?? 1.2\n  })()\n  if (baseFeeMultiplier < 1) throw new BaseFeeScalarError()\n\n  const decimals = baseFeeMultiplier.toString().split('.')[1]?.length ?? 0\n  const denominator = 10 ** decimals\n  const multiply = (base: bigint) =>\n    (base * BigInt(Math.ceil(baseFeeMultiplier * denominator))) /\n    BigInt(denominator)\n\n  const block = block_\n    ? block_\n    : await getAction(client, getBlock, 'getBlock')({})\n\n  if (typeof chain?.fees?.estimateFeesPerGas === 'function') {\n    const fees = (await chain.fees.estimateFeesPerGas({\n      block: block_ as Block,\n      client,\n      multiply,\n      request,\n      type,\n    } as ChainEstimateFeesPerGasFnParameters)) as unknown as EstimateFeesPerGasReturnType<type>\n\n    if (fees !== null) return fees\n  }\n\n  if (type === 'eip1559') {\n    if (typeof block.baseFeePerGas !== 'bigint')\n      throw new Eip1559FeesNotSupportedError()\n\n    const maxPriorityFeePerGas =\n      typeof request?.maxPriorityFeePerGas === 'bigint'\n        ? request.maxPriorityFeePerGas\n        : await internal_estimateMaxPriorityFeePerGas(\n            client as Client<Transport, Chain>,\n            {\n              block: block as Block,\n              chain,\n              request,\n            },\n          )\n\n    const baseFeePerGas = multiply(block.baseFeePerGas)\n    const maxFeePerGas =\n      request?.maxFeePerGas ?? baseFeePerGas + maxPriorityFeePerGas\n\n    return {\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n    } as EstimateFeesPerGasReturnType<type>\n  }\n\n  const gasPrice =\n    request?.gasPrice ??\n    multiply(await getAction(client, getGasPrice, 'getGasPrice')({}))\n  return {\n    gasPrice,\n  } as EstimateFeesPerGasReturnType<type>\n}\n","import type { Address } from 'abitype'\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { BaseError } from '../../errors/base.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { StateOverride } from '../../types/stateOverride.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport {\n  type RecoverAuthorizationAddressErrorType,\n  recoverAuthorizationAddress,\n} from '../../utils/authorization/recoverAuthorizationAddress.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type GetEstimateGasErrorReturnType,\n  getEstimateGasError,\n} from '../../utils/errors/getEstimateGasError.js'\nimport { extract } from '../../utils/formatters/extract.js'\nimport {\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport { serializeStateOverride } from '../../utils/stateOverride.js'\nimport {\n  type AssertRequestErrorType,\n  type AssertRequestParameters,\n  assertRequest,\n} from '../../utils/transaction/assertRequest.js'\nimport {\n  type PrepareTransactionRequestParameters,\n  prepareTransactionRequest,\n} from '../wallet/prepareTransactionRequest.js'\nimport { getBalance } from './getBalance.js'\n\nexport type EstimateGasParameters<\n  chain extends Chain | undefined = Chain | undefined,\n> = UnionOmit<FormattedEstimateGas<chain>, 'from'> & {\n  account?: Account | Address | undefined\n  stateOverride?: StateOverride | undefined\n} & (\n    | {\n        /** The balance of the account at a block number. */\n        blockNumber?: bigint | undefined\n        blockTag?: undefined\n      }\n    | {\n        blockNumber?: undefined\n        /**\n         * The balance of the account at a block tag.\n         * @default 'latest'\n         */\n        blockTag?: BlockTag | undefined\n      }\n  )\ntype FormattedEstimateGas<chain extends Chain | undefined = Chain | undefined> =\n  FormattedTransactionRequest<chain>\n\nexport type EstimateGasReturnType = bigint\n\nexport type EstimateGasErrorType = GetEstimateGasErrorReturnType<\n  | ParseAccountErrorType\n  | NumberToHexErrorType\n  | RequestErrorType\n  | RecoverAuthorizationAddressErrorType\n  | AssertRequestErrorType\n>\n\n/**\n * Estimates the gas necessary to complete a transaction without submitting it to the network.\n *\n * - Docs: https://viem.sh/docs/actions/public/estimateGas\n * - JSON-RPC Methods: [`eth_estimateGas`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_estimategas)\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateGasParameters}\n * @returns The gas estimate (in wei). {@link EstimateGasReturnType}\n *\n * @example\n * import { createPublicClient, http, parseEther } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateGas } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const gasEstimate = await estimateGas(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: parseEther('1'),\n * })\n */\nexport async function estimateGas<\n  chain extends Chain | undefined,\n  account extends Account | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  args: EstimateGasParameters<chain>,\n): Promise<EstimateGasReturnType> {\n  const { account: account_ = client.account } = args\n  const account = account_ ? parseAccount(account_) : undefined\n\n  try {\n    const {\n      accessList,\n      authorizationList,\n      blobs,\n      blobVersionedHashes,\n      blockNumber,\n      blockTag,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerBlobGas,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      value,\n      stateOverride,\n      ...rest\n    } = (await prepareTransactionRequest(client, {\n      ...args,\n      parameters:\n        // Some RPC Providers do not compute versioned hashes from blobs. We will need\n        // to compute them.\n        account?.type === 'local' ? undefined : ['blobVersionedHashes'],\n    } as PrepareTransactionRequestParameters)) as EstimateGasParameters\n\n    const blockNumberHex =\n      typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : undefined\n    const block = blockNumberHex || blockTag\n\n    const rpcStateOverride = serializeStateOverride(stateOverride)\n\n    const to = await (async () => {\n      // If `to` exists on the parameters, use that.\n      if (rest.to) return rest.to\n\n      // If no `to` exists, and we are sending a EIP-7702 transaction, use the\n      // address of the first authorization in the list.\n      if (authorizationList && authorizationList.length > 0)\n        return await recoverAuthorizationAddress({\n          authorization: authorizationList[0],\n        }).catch(() => {\n          throw new BaseError(\n            '`to` is required. Could not infer from `authorizationList`',\n          )\n        })\n\n      // Otherwise, we are sending a deployment transaction.\n      return undefined\n    })()\n\n    assertRequest(args as AssertRequestParameters)\n\n    const chainFormat = client.chain?.formatters?.transactionRequest?.format\n    const format = chainFormat || formatTransactionRequest\n\n    const request = format({\n      // Pick out extra data that might exist on the chain's transaction request type.\n      ...extract(rest, { format: chainFormat }),\n      from: account?.address,\n      accessList,\n      authorizationList,\n      blobs,\n      blobVersionedHashes,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerBlobGas,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    } as TransactionRequest)\n\n    function estimateGas_rpc(parameters: {\n      block: any\n      request: any\n      rpcStateOverride: any\n    }) {\n      const { block, request, rpcStateOverride } = parameters\n      return client.request({\n        method: 'eth_estimateGas',\n        params: rpcStateOverride\n          ? [request, block ?? 'latest', rpcStateOverride]\n          : block\n            ? [request, block]\n            : [request],\n      })\n    }\n\n    let estimate = BigInt(\n      await estimateGas_rpc({ block, request, rpcStateOverride }),\n    )\n\n    // TODO(7702): Remove this once https://github.com/ethereum/execution-apis/issues/561 is resolved.\n    //       Authorization list schema is not implemented on JSON-RPC spec yet, so we need to\n    //       manually estimate the gas.\n    if (authorizationList) {\n      const value = await getBalance(client, { address: request.from })\n      const estimates = await Promise.all(\n        authorizationList.map(async (authorization) => {\n          const { address } = authorization\n          const estimate = await estimateGas_rpc({\n            block,\n            request: {\n              authorizationList: undefined,\n              data,\n              from: account?.address,\n              to: address,\n              value: numberToHex(value),\n            },\n            rpcStateOverride,\n          }).catch(() => 100_000n)\n          return 2n * BigInt(estimate)\n        }),\n      )\n      estimate += estimates.reduce((acc, curr) => acc + curr, 0n)\n    }\n\n    return estimate\n  } catch (err) {\n    throw getEstimateGasError(err as BaseError, {\n      ...args,\n      account,\n      chain: client.chain,\n    })\n  }\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  Eip1559FeesNotSupportedError,\n  type Eip1559FeesNotSupportedErrorType,\n} from '../../errors/fee.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Block } from '../../types/block.js'\nimport type { Chain, ChainFeesFnParameters } from '../../types/chain.js'\nimport type { GetChainParameter } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type HexToBigIntErrorType,\n  hexToBigInt,\n} from '../../utils/encoding/fromHex.js'\nimport { getAction } from '../../utils/getAction.js'\nimport type { PrepareTransactionRequestParameters } from '../wallet/prepareTransactionRequest.js'\nimport { type GetBlockErrorType, getBlock } from './getBlock.js'\nimport { type GetGasPriceErrorType, getGasPrice } from './getGasPrice.js'\n\nexport type EstimateMaxPriorityFeePerGasParameters<\n  chain extends Chain | undefined = Chain | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n> = GetChainParameter<chain, chainOverride>\n\nexport type EstimateMaxPriorityFeePerGasReturnType = bigint\n\nexport type EstimateMaxPriorityFeePerGasErrorType =\n  | GetBlockErrorType\n  | HexToBigIntErrorType\n  | RequestErrorType\n  | GetBlockErrorType\n  | GetGasPriceErrorType\n  | Eip1559FeesNotSupportedErrorType\n  | ErrorType\n\n/**\n * Returns an estimate for the max priority fee per gas (in wei) for a\n * transaction to be likely included in the next block.\n * Defaults to [`chain.fees.defaultPriorityFee`](/docs/clients/chains#fees-defaultpriorityfee) if set.\n *\n * - Docs: https://viem.sh/docs/actions/public/estimateMaxPriorityFeePerGas\n *\n * @param client - Client to use\n * @returns An estimate (in wei) for the max priority fee per gas. {@link EstimateMaxPriorityFeePerGasReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateMaxPriorityFeePerGas } from 'viem/actions'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const maxPriorityFeePerGas = await estimateMaxPriorityFeePerGas(client)\n * // 10000000n\n */\nexport async function estimateMaxPriorityFeePerGas<\n  chain extends Chain | undefined,\n  chainOverride extends Chain | undefined,\n>(\n  client: Client<Transport, chain>,\n  args?:\n    | EstimateMaxPriorityFeePerGasParameters<chain, chainOverride>\n    | undefined,\n): Promise<EstimateMaxPriorityFeePerGasReturnType> {\n  return internal_estimateMaxPriorityFeePerGas(client, args as any)\n}\n\nexport async function internal_estimateMaxPriorityFeePerGas<\n  chain extends Chain | undefined,\n  chainOverride extends Chain | undefined,\n>(\n  client: Client<Transport, chain>,\n  args: EstimateMaxPriorityFeePerGasParameters<chain, chainOverride> & {\n    block?: Block | undefined\n    request?:\n      | PrepareTransactionRequestParameters<\n          chain,\n          Account | undefined,\n          chainOverride\n        >\n      | undefined\n  },\n): Promise<EstimateMaxPriorityFeePerGasReturnType> {\n  const { block: block_, chain = client.chain, request } = args || {}\n\n  try {\n    const maxPriorityFeePerGas =\n      chain?.fees?.maxPriorityFeePerGas ?? chain?.fees?.defaultPriorityFee\n\n    if (typeof maxPriorityFeePerGas === 'function') {\n      const block =\n        block_ || (await getAction(client, getBlock, 'getBlock')({}))\n      const maxPriorityFeePerGas_ = await maxPriorityFeePerGas({\n        block,\n        client,\n        request,\n      } as ChainFeesFnParameters)\n      if (maxPriorityFeePerGas_ === null) throw new Error()\n      return maxPriorityFeePerGas_\n    }\n\n    if (typeof maxPriorityFeePerGas !== 'undefined') return maxPriorityFeePerGas\n\n    const maxPriorityFeePerGasHex = await client.request({\n      method: 'eth_maxPriorityFeePerGas',\n    })\n    return hexToBigInt(maxPriorityFeePerGasHex)\n  } catch {\n    // If the RPC Provider does not support `eth_maxPriorityFeePerGas`\n    // fall back to calculating it manually via `gasPrice - baseFeePerGas`.\n    // See: https://github.com/ethereum/pm/issues/328#:~:text=eth_maxPriorityFeePerGas%20after%20London%20will%20effectively%20return%20eth_gasPrice%20%2D%20baseFee\n    const [block, gasPrice] = await Promise.all([\n      block_\n        ? Promise.resolve(block_)\n        : getAction(client, getBlock, 'getBlock')({}),\n      getAction(client, getGasPrice, 'getGasPrice')({}),\n    ])\n\n    if (typeof block.baseFeePerGas !== 'bigint')\n      throw new Eip1559FeesNotSupportedError()\n\n    const maxPriorityFeePerGas = gasPrice - block.baseFeePerGas\n\n    if (maxPriorityFeePerGas < 0n) return 0n\n    return maxPriorityFeePerGas\n  }\n}\n","import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type GetBalanceParameters = {\n  /** The address of the account. */\n  address: Address\n} & (\n  | {\n      /** The balance of the account at a block number. */\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n  | {\n      blockNumber?: undefined\n      /** The balance of the account at a block tag. */\n      blockTag?: BlockTag | undefined\n    }\n)\n\nexport type GetBalanceReturnType = bigint\n\nexport type GetBalanceErrorType =\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns the balance of an address in wei.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBalance\n * - JSON-RPC Methods: [`eth_getBalance`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getbalance)\n *\n * You can convert the balance to ether units with [`formatEther`](https://viem.sh/docs/utilities/formatEther).\n *\n * ```ts\n * const balance = await getBalance(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   blockTag: 'safe'\n * })\n * const balanceAsEther = formatEther(balance)\n * // \"6.942\"\n * ```\n *\n * @param client - Client to use\n * @param parameters - {@link GetBalanceParameters}\n * @returns The balance of the address in wei. {@link GetBalanceReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBalance } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const balance = await getBalance(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n * // 10000000000000000000000n (wei)\n */\nexport async function getBalance<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  { address, blockNumber, blockTag = 'latest' }: GetBalanceParameters,\n): Promise<GetBalanceReturnType> {\n  const blockNumberHex =\n    typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : undefined\n\n  const balance = await client.request({\n    method: 'eth_getBalance',\n    params: [address, blockNumberHex || blockTag],\n  })\n  return BigInt(balance)\n}\n","import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type GetBlobBaseFeeReturnType = bigint\n\nexport type GetBlobBaseFeeErrorType = RequestErrorType | ErrorType\n\n/**\n * Returns the base fee per blob gas in wei.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlobBaseFee\n * - JSON-RPC Methods: [`eth_blobBaseFee`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blobBaseFee)\n *\n * @param client - Client to use\n * @returns The blob base fee (in wei). {@link GetBlobBaseFeeReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlobBaseFee } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const blobBaseFee = await getBlobBaseFee(client)\n */\nexport async function getBlobBaseFee<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: Client<Transport, chain, account>,\n): Promise<GetBlobBaseFeeReturnType> {\n  const baseFee = await client.request({\n    method: 'eth_blobBaseFee',\n  })\n  return BigInt(baseFee)\n}\n","import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  BlockNotFoundError,\n  type BlockNotFoundErrorType,\n} from '../../errors/block.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RpcBlock } from '../../types/rpc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type FormattedBlock,\n  formatBlock,\n} from '../../utils/formatters/block.js'\n\nexport type GetBlockParameters<\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n> = {\n  /** Whether or not to include transaction data in the response. */\n  includeTransactions?: includeTransactions | undefined\n} & (\n  | {\n      /** Hash of the block. */\n      blockHash?: Hash | undefined\n      blockNumber?: undefined\n      blockTag?: undefined\n    }\n  | {\n      blockHash?: undefined\n      /** The block number. */\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n  | {\n      blockHash?: undefined\n      blockNumber?: undefined\n      /**\n       * The block tag.\n       * @default 'latest'\n       */\n      blockTag?: blockTag | BlockTag | undefined\n    }\n)\n\nexport type GetBlockReturnType<\n  chain extends Chain | undefined = undefined,\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n> = Prettify<FormattedBlock<chain, includeTransactions, blockTag>>\n\nexport type GetBlockErrorType =\n  | BlockNotFoundErrorType\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns information about a block at a block number, hash, or tag.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlock\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_fetching-blocks\n * - JSON-RPC Methods:\n *   - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) for `blockNumber` & `blockTag`.\n *   - Calls [`eth_getBlockByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbyhash) for `blockHash`.\n *\n * @param client - Client to use\n * @param parameters - {@link GetBlockParameters}\n * @returns Information about the block. {@link GetBlockReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlock } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const block = await getBlock(client)\n */\nexport async function getBlock<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n>(\n  client: Client<Transport, chain, account>,\n  {\n    blockHash,\n    blockNumber,\n    blockTag: blockTag_,\n    includeTransactions: includeTransactions_,\n  }: GetBlockParameters<includeTransactions, blockTag> = {},\n): Promise<GetBlockReturnType<chain, includeTransactions, blockTag>> {\n  const blockTag = blockTag_ ?? 'latest'\n  const includeTransactions = includeTransactions_ ?? false\n\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n\n  let block: RpcBlock | null = null\n  if (blockHash) {\n    block = await client.request(\n      {\n        method: 'eth_getBlockByHash',\n        params: [blockHash, includeTransactions],\n      },\n      { dedupe: true },\n    )\n  } else {\n    block = await client.request(\n      {\n        method: 'eth_getBlockByNumber',\n        params: [blockNumberHex || blockTag, includeTransactions],\n      },\n      { dedupe: Boolean(blockNumberHex) },\n    )\n  }\n\n  if (!block) throw new BlockNotFoundError({ blockHash, blockNumber })\n\n  const format = client.chain?.formatters?.block?.format || formatBlock\n  return format(block)\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type GetCacheErrorType,\n  getCache,\n  withCache,\n} from '../../utils/promise/withCache.js'\n\nexport type GetBlockNumberParameters = {\n  /** Time (in ms) that cached block number will remain in memory. */\n  cacheTime?: number | undefined\n}\n\nexport type GetBlockNumberReturnType = bigint\n\nexport type GetBlockNumberErrorType = RequestErrorType | ErrorType\n\nconst cacheKey = (id: string) => `blockNumber.${id}`\n\n/** @internal */\nexport type GetBlockNumberCacheErrorType = GetCacheErrorType | ErrorType\n\n/** @internal */\nexport function getBlockNumberCache(id: string) {\n  return getCache(cacheKey(id))\n}\n\n/**\n * Returns the number of the most recent block seen.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlockNumber\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_fetching-blocks\n * - JSON-RPC Methods: [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber)\n *\n * @param client - Client to use\n * @param parameters - {@link GetBlockNumberParameters}\n * @returns The number of the block. {@link GetBlockNumberReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlockNumber } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const blockNumber = await getBlockNumber(client)\n * // 69420n\n */\nexport async function getBlockNumber<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  { cacheTime = client.cacheTime }: GetBlockNumberParameters = {},\n): Promise<GetBlockNumberReturnType> {\n  const blockNumberHex = await withCache(\n    () =>\n      client.request({\n        method: 'eth_blockNumber',\n      }),\n    { cacheKey: cacheKey(client.uid), cacheTime },\n  )\n  return BigInt(blockNumberHex)\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { Quantity } from '../../types/rpc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type HexToNumberErrorType,\n  hexToNumber,\n} from '../../utils/encoding/fromHex.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type GetBlockTransactionCountParameters =\n  | {\n      /** Hash of the block. */\n      blockHash?: Hash | undefined\n      blockNumber?: undefined\n      blockTag?: undefined\n    }\n  | {\n      blockHash?: undefined\n      /** The block number. */\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n  | {\n      blockHash?: undefined\n      blockNumber?: undefined\n      /** The block tag. Defaults to 'latest'. */\n      blockTag?: BlockTag | undefined\n    }\n\nexport type GetBlockTransactionCountReturnType = number\n\nexport type GetBlockTransactionCountErrorType =\n  | NumberToHexErrorType\n  | HexToNumberErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns the number of Transactions at a block number, hash, or tag.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlockTransactionCount\n * - JSON-RPC Methods:\n *   - Calls [`eth_getBlockTransactionCountByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbynumber) for `blockNumber` & `blockTag`.\n *   - Calls [`eth_getBlockTransactionCountByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbyhash) for `blockHash`.\n *\n * @param client - Client to use\n * @param parameters - {@link GetBlockTransactionCountParameters}\n * @returns The block transaction count. {@link GetBlockTransactionCountReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlockTransactionCount } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const count = await getBlockTransactionCount(client)\n */\nexport async function getBlockTransactionCount<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  {\n    blockHash,\n    blockNumber,\n    blockTag = 'latest',\n  }: GetBlockTransactionCountParameters = {},\n): Promise<GetBlockTransactionCountReturnType> {\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n\n  let count: Quantity\n  if (blockHash) {\n    count = await client.request(\n      {\n        method: 'eth_getBlockTransactionCountByHash',\n        params: [blockHash],\n      },\n      { dedupe: true },\n    )\n  } else {\n    count = await client.request(\n      {\n        method: 'eth_getBlockTransactionCountByNumber',\n        params: [blockNumberHex || blockTag],\n      },\n      { dedupe: Boolean(blockNumberHex) },\n    )\n  }\n\n  return hexToNumber(count)\n}\n","import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type HexToNumberErrorType,\n  hexToNumber,\n} from '../../utils/encoding/fromHex.js'\n\nexport type GetChainIdReturnType = number\n\nexport type GetChainIdErrorType =\n  | HexToNumberErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns the chain ID associated with the current network.\n *\n * - Docs: https://viem.sh/docs/actions/public/getChainId\n * - JSON-RPC Methods: [`eth_chainId`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_chainid)\n *\n * @param client - Client to use\n * @returns The current chain ID. {@link GetChainIdReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getChainId } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const chainId = await getChainId(client)\n * // 1\n */\nexport async function getChainId<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(client: Client<Transport, chain, account>): Promise<GetChainIdReturnType> {\n  const chainIdHex = await client.request(\n    {\n      method: 'eth_chainId',\n    },\n    { dedupe: true },\n  )\n  return hexToNumber(chainIdHex)\n}\n","import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type GetCodeParameters = {\n  address: Address\n} & (\n  | {\n      blockNumber?: undefined\n      blockTag?: BlockTag | undefined\n    }\n  | {\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n)\n\nexport type GetCodeReturnType = Hex | undefined\n\nexport type GetCodeErrorType =\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Retrieves the bytecode at an address.\n *\n * - Docs: https://viem.sh/docs/contract/getCode\n * - JSON-RPC Methods: [`eth_getCode`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getcode)\n *\n * @param client - Client to use\n * @param parameters - {@link GetCodeParameters}\n * @returns The contract's bytecode. {@link GetCodeReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getCode } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const code = await getCode(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n * })\n */\nexport async function getCode<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  { address, blockNumber, blockTag = 'latest' }: GetCodeParameters,\n): Promise<GetCodeReturnType> {\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n  const hex = await client.request(\n    {\n      method: 'eth_getCode',\n      params: [address, blockNumberHex || blockTag],\n    },\n    { dedupe: Boolean(blockNumberHex) },\n  )\n  if (hex === '0x') return undefined\n  return hex\n}\n","import type { Abi, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractEventArgs,\n  ContractEventName,\n} from '../../types/contract.js'\nimport type { Log } from '../../types/log.js'\nimport type { Hash } from '../../types/misc.js'\nimport {\n  type GetAbiItemErrorType,\n  type GetAbiItemParameters,\n  getAbiItem,\n} from '../../utils/abi/getAbiItem.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type GetLogsErrorType,\n  type GetLogsParameters,\n  getLogs,\n} from './getLogs.js'\n\nexport type GetContractEventsParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> | undefined =\n    | ContractEventName<abi>\n    | undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = {\n  /** The address of the contract. */\n  address?: Address | Address[] | undefined\n  /** Contract ABI. */\n  abi: abi\n  args?:\n    | ContractEventArgs<\n        abi,\n        eventName extends ContractEventName<abi>\n          ? eventName\n          : ContractEventName<abi>\n      >\n    | undefined\n  /** Contract event. */\n  eventName?: eventName | ContractEventName<abi> | undefined\n  /**\n   * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n   * @default false\n   */\n  strict?: strict | boolean | undefined\n} & (\n  | {\n      /** Block number or tag after which to include logs */\n      fromBlock?: fromBlock | BlockNumber | BlockTag | undefined\n      /** Block number or tag before which to include logs */\n      toBlock?: toBlock | BlockNumber | BlockTag | undefined\n      blockHash?: undefined\n    }\n  | {\n      fromBlock?: undefined\n      toBlock?: undefined\n      /** Hash of block to include logs from */\n      blockHash?: Hash | undefined\n    }\n)\n\nexport type GetContractEventsReturnType<\n  abi extends Abi | readonly unknown[] = readonly unknown[],\n  eventName extends ContractEventName<abi> | undefined =\n    | ContractEventName<abi>\n    | undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  ///\n  isPending extends boolean =\n    | (fromBlock extends 'pending' ? true : false)\n    | (toBlock extends 'pending' ? true : false),\n> = Log<bigint, number, isPending, undefined, strict, abi, eventName>[]\n\nexport type GetContractEventsErrorType =\n  | GetAbiItemErrorType\n  | GetLogsErrorType\n  | ErrorType\n\n/**\n * Returns a list of event logs emitted by a contract.\n *\n * - Docs: https://viem.sh/docs/contract/getContractEvents#getcontractevents\n * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\n *\n * @param client - Client to use\n * @param parameters - {@link GetContractEventsParameters}\n * @returns A list of event logs. {@link GetContractEventsReturnType}\n *\n * @example\n * import { createClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getContractEvents } from 'viem/public'\n * import { wagmiAbi } from './abi'\n *\n * const client = createClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const logs = await getContractEvents(client, {\n *  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *  abi: wagmiAbi,\n *  eventName: 'Transfer'\n * })\n */\nexport async function getContractEvents<\n  chain extends Chain | undefined,\n  const abi extends Abi | readonly unknown[],\n  eventName extends ContractEventName<abi> | undefined = undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  client: Client<Transport, chain>,\n  parameters: GetContractEventsParameters<\n    abi,\n    eventName,\n    strict,\n    fromBlock,\n    toBlock\n  >,\n): Promise<\n  GetContractEventsReturnType<abi, eventName, strict, fromBlock, toBlock>\n> {\n  const {\n    abi,\n    address,\n    args,\n    blockHash,\n    eventName,\n    fromBlock,\n    toBlock,\n    strict,\n  } = parameters\n  const event = eventName\n    ? getAbiItem({ abi, name: eventName } as GetAbiItemParameters)\n    : undefined\n  const events = !event\n    ? (abi as Abi).filter((x) => x.type === 'event')\n    : undefined\n  return getAction(\n    client,\n    getLogs,\n    'getLogs',\n  )({\n    address,\n    args,\n    blockHash,\n    event,\n    events,\n    fromBlock,\n    toBlock,\n    strict,\n  } as {} as GetLogsParameters) as unknown as GetContractEventsReturnType<\n    abi,\n    eventName,\n    strict,\n    fromBlock,\n    toBlock\n  >\n}\n","import type { Address, TypedDataDomain } from 'abitype'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  Eip712DomainNotFoundError,\n  type Eip712DomainNotFoundErrorType,\n} from '../../errors/eip712.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RequiredBy } from '../../types/utils.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type ReadContractErrorType,\n  type ReadContractParameters,\n  readContract,\n} from './readContract.js'\n\nexport type GetEip712DomainParameters = {\n  address: Address\n} & Pick<ReadContractParameters, 'factory' | 'factoryData'>\n\nexport type GetEip712DomainReturnType = {\n  domain: RequiredBy<\n    TypedDataDomain,\n    'chainId' | 'name' | 'verifyingContract' | 'salt' | 'version'\n  >\n  fields: Hex\n  extensions: readonly bigint[]\n}\n\nexport type GetEip712DomainErrorType =\n  | Eip712DomainNotFoundErrorType\n  | ReadContractErrorType\n  | ErrorType\n\n/**\n * Reads the EIP-712 domain from a contract, based on the ERC-5267 specification.\n *\n * @param client - A {@link Client} instance.\n * @param parameters - The parameters of the action. {@link GetEip712DomainParameters}\n * @returns The EIP-712 domain, fields, and extensions. {@link GetEip712DomainReturnType}\n *\n * @example\n * ```ts\n * import { createPublicClient, http, getEip712Domain } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const domain = await getEip712Domain(client, {\n *   address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n * })\n * // {\n * //   domain: {\n * //     name: 'ExampleContract',\n * //     version: '1',\n * //     chainId: 1,\n * //     verifyingContract: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n * //   },\n * //   fields: '0x0f',\n * //   extensions: [],\n * // }\n * ```\n */\nexport async function getEip712Domain(\n  client: Client<Transport>,\n  parameters: GetEip712DomainParameters,\n): Promise<GetEip712DomainReturnType> {\n  const { address, factory, factoryData } = parameters\n\n  try {\n    const [\n      fields,\n      name,\n      version,\n      chainId,\n      verifyingContract,\n      salt,\n      extensions,\n    ] = await getAction(\n      client,\n      readContract,\n      'readContract',\n    )({\n      abi,\n      address,\n      functionName: 'eip712Domain',\n      factory,\n      factoryData,\n    })\n\n    return {\n      domain: {\n        name,\n        version,\n        chainId: Number(chainId),\n        verifyingContract,\n        salt,\n      },\n      extensions,\n      fields,\n    }\n  } catch (e) {\n    const error = e as ReadContractErrorType\n    if (\n      error.name === 'ContractFunctionExecutionError' &&\n      error.cause.name === 'ContractFunctionZeroDataError'\n    ) {\n      throw new Eip712DomainNotFoundError({ address })\n    }\n    throw error\n  }\n}\n\nconst abi = [\n  {\n    inputs: [],\n    name: 'eip712Domain',\n    outputs: [\n      { name: 'fields', type: 'bytes1' },\n      { name: 'name', type: 'string' },\n      { name: 'version', type: 'string' },\n      { name: 'chainId', type: 'uint256' },\n      { name: 'verifyingContract', type: 'address' },\n      { name: 'salt', type: 'bytes32' },\n      { name: 'extensions', type: 'uint256[]' },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n] as const\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { FeeHistory } from '../../types/fee.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type FormatFeeHistoryErrorType,\n  formatFeeHistory,\n} from '../../utils/formatters/feeHistory.js'\n\nexport type GetFeeHistoryParameters = {\n  /**\n   * Number of blocks in the requested range. Between 1 and 1024 blocks can be requested in a single query. Less than requested may be returned if not all blocks are available.\n   */\n  blockCount: number\n  /**\n   * A monotonically increasing list of percentile values to sample from each block's effective priority fees per gas in ascending order, weighted by gas used.\n   */\n  rewardPercentiles: number[]\n} & (\n  | {\n      blockNumber?: undefined\n      /**\n       * Highest number block of the requested range.\n       * @default 'latest'\n       */\n      blockTag?: BlockTag | undefined\n    }\n  | {\n      /** Highest number block of the requested range. */\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n)\nexport type GetFeeHistoryReturnType = FeeHistory\n\nexport type GetFeeHistoryErrorType =\n  | NumberToHexErrorType\n  | RequestErrorType\n  | FormatFeeHistoryErrorType\n\n/**\n * Returns a collection of historical gas information.\n *\n * - Docs: https://viem.sh/docs/actions/public/getFeeHistory\n * - JSON-RPC Methods: [`eth_feeHistory`](https://docs.alchemy.com/reference/eth-feehistory)\n *\n * @param client - Client to use\n * @param parameters - {@link GetFeeHistoryParameters}\n * @returns The gas estimate (in wei). {@link GetFeeHistoryReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getFeeHistory } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const feeHistory = await getFeeHistory(client, {\n *   blockCount: 4,\n *   rewardPercentiles: [25, 75],\n * })\n */\nexport async function getFeeHistory<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  {\n    blockCount,\n    blockNumber,\n    blockTag = 'latest',\n    rewardPercentiles,\n  }: GetFeeHistoryParameters,\n): Promise<GetFeeHistoryReturnType> {\n  const blockNumberHex =\n    typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : undefined\n  const feeHistory = await client.request(\n    {\n      method: 'eth_feeHistory',\n      params: [\n        numberToHex(blockCount),\n        blockNumberHex || blockTag,\n        rewardPercentiles,\n      ],\n    },\n    { dedupe: Boolean(blockNumberHex) },\n  )\n  return formatFeeHistory(feeHistory)\n}\n","import type { Abi, AbiEvent, ExtractAbiEvent } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { RpcLog } from '../../index.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter, FilterType } from '../../types/filter.js'\nimport type { Log } from '../../types/log.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { DecodeEventLogErrorType } from '../../utils/abi/decodeEventLog.js'\nimport { parseEventLogs } from '../../utils/abi/parseEventLogs.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type FormatLogErrorType,\n  formatLog,\n} from '../../utils/formatters/log.js'\n\nexport type GetFilterChangesParameters<\n  filterType extends FilterType = FilterType,\n  abi extends Abi | readonly unknown[] | undefined = undefined,\n  eventName extends string | undefined = undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = {\n  filter: Filter<filterType, abi, eventName, any, strict, fromBlock, toBlock>\n}\n\nexport type GetFilterChangesReturnType<\n  filterType extends FilterType = FilterType,\n  abi extends Abi | readonly unknown[] | undefined = undefined,\n  eventName extends string | undefined = undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _AbiEvent extends AbiEvent | undefined = abi extends Abi\n    ? eventName extends string\n      ? ExtractAbiEvent<abi, eventName>\n      : undefined\n    : undefined,\n  _Pending extends boolean =\n    | (fromBlock extends 'pending' ? true : false)\n    | (toBlock extends 'pending' ? true : false),\n> = filterType extends 'event'\n  ? Log<bigint, number, _Pending, _AbiEvent, strict, abi, eventName>[]\n  : Hash[]\n\nexport type GetFilterChangesErrorType =\n  | RequestErrorType\n  | DecodeEventLogErrorType\n  | FormatLogErrorType\n  | ErrorType\n\n/**\n * Returns a list of logs or hashes based on a [Filter](/docs/glossary/terms#filter) since the last time it was called.\n *\n * - Docs: https://viem.sh/docs/actions/public/getFilterChanges\n * - JSON-RPC Methods: [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges)\n *\n * A Filter can be created from the following actions:\n *\n * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter)\n * - [`createContractEventFilter`](https://viem.sh/docs/contract/createContractEventFilter)\n * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter)\n * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter)\n *\n * Depending on the type of filter, the return value will be different:\n *\n * - If the filter was created with `createContractEventFilter` or `createEventFilter`, it returns a list of logs.\n * - If the filter was created with `createPendingTransactionFilter`, it returns a list of transaction hashes.\n * - If the filter was created with `createBlockFilter`, it returns a list of block hashes.\n *\n * @param client - Client to use\n * @param parameters - {@link GetFilterChangesParameters}\n * @returns Logs or hashes. {@link GetFilterChangesReturnType}\n *\n * @example\n * // Blocks\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createBlockFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createBlockFilter(client)\n * const hashes = await getFilterChanges(client, { filter })\n *\n * @example\n * // Contract Events\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createContractEventFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createContractEventFilter(client, {\n *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n *   eventName: 'Transfer',\n * })\n * const logs = await getFilterChanges(client, { filter })\n *\n * @example\n * // Raw Events\n * import { createPublicClient, http, parseAbiItem } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createEventFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createEventFilter(client, {\n *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n * })\n * const logs = await getFilterChanges(client, { filter })\n *\n * @example\n * // Transactions\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createPendingTransactionFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createPendingTransactionFilter(client)\n * const hashes = await getFilterChanges(client, { filter })\n */\nexport async function getFilterChanges<\n  transport extends Transport,\n  chain extends Chain | undefined,\n  filterType extends FilterType,\n  const abi extends Abi | readonly unknown[] | undefined,\n  eventName extends string | undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  _client: Client<transport, chain>,\n  {\n    filter,\n  }: GetFilterChangesParameters<\n    filterType,\n    abi,\n    eventName,\n    strict,\n    fromBlock,\n    toBlock\n  >,\n): Promise<\n  GetFilterChangesReturnType<\n    filterType,\n    abi,\n    eventName,\n    strict,\n    fromBlock,\n    toBlock\n  >\n> {\n  const strict = 'strict' in filter && filter.strict\n\n  const logs = await filter.request({\n    method: 'eth_getFilterChanges',\n    params: [filter.id],\n  })\n\n  if (typeof logs[0] === 'string')\n    return logs as GetFilterChangesReturnType<\n      filterType,\n      abi,\n      eventName,\n      strict,\n      fromBlock,\n      toBlock\n    >\n\n  const formattedLogs = logs.map((log) => formatLog(log as RpcLog))\n  if (!('abi' in filter) || !filter.abi)\n    return formattedLogs as GetFilterChangesReturnType<\n      filterType,\n      abi,\n      eventName,\n      strict,\n      fromBlock,\n      toBlock\n    >\n  return parseEventLogs({\n    abi: filter.abi,\n    logs: formattedLogs,\n    strict,\n  }) as unknown as GetFilterChangesReturnType<\n    filterType,\n    abi,\n    eventName,\n    strict,\n    fromBlock,\n    toBlock\n  >\n}\n","import type { Abi, AbiEvent, ExtractAbiEvent } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Log } from '../../types/log.js'\nimport type { DecodeEventLogErrorType } from '../../utils/abi/decodeEventLog.js'\nimport { parseEventLogs } from '../../utils/abi/parseEventLogs.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type FormatLogErrorType,\n  formatLog,\n} from '../../utils/formatters/log.js'\n\nexport type GetFilterLogsParameters<\n  abi extends Abi | readonly unknown[] | undefined = undefined,\n  eventName extends string | undefined = undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = {\n  filter: Filter<'event', abi, eventName, any, strict, fromBlock, toBlock>\n}\nexport type GetFilterLogsReturnType<\n  abi extends Abi | readonly unknown[] | undefined = undefined,\n  eventName extends string | undefined = undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _AbiEvent extends AbiEvent | undefined = abi extends Abi\n    ? eventName extends string\n      ? ExtractAbiEvent<abi, eventName>\n      : undefined\n    : undefined,\n  _Pending extends boolean =\n    | (fromBlock extends 'pending' ? true : false)\n    | (toBlock extends 'pending' ? true : false),\n> = Log<bigint, number, _Pending, _AbiEvent, strict, abi, eventName>[]\n\nexport type GetFilterLogsErrorType =\n  | RequestErrorType\n  | DecodeEventLogErrorType\n  | FormatLogErrorType\n  | ErrorType\n\n/**\n * Returns a list of event logs since the filter was created.\n *\n * - Docs: https://viem.sh/docs/actions/public/getFilterLogs\n * - JSON-RPC Methods: [`eth_getFilterLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterlogs)\n *\n * `getFilterLogs` is only compatible with **event filters**.\n *\n * @param client - Client to use\n * @param parameters - {@link GetFilterLogsParameters}\n * @returns A list of event logs. {@link GetFilterLogsReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbiItem } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createEventFilter, getFilterLogs } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createEventFilter(client, {\n *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n * })\n * const logs = await getFilterLogs(client, { filter })\n */\nexport async function getFilterLogs<\n  chain extends Chain | undefined,\n  const abi extends Abi | readonly unknown[] | undefined,\n  eventName extends string | undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  _client: Client<Transport, chain>,\n  {\n    filter,\n  }: GetFilterLogsParameters<abi, eventName, strict, fromBlock, toBlock>,\n): Promise<\n  GetFilterLogsReturnType<abi, eventName, strict, fromBlock, toBlock>\n> {\n  const strict = filter.strict ?? false\n\n  const logs = await filter.request({\n    method: 'eth_getFilterLogs',\n    params: [filter.id],\n  })\n\n  const formattedLogs = logs.map((log) => formatLog(log))\n  if (!filter.abi)\n    return formattedLogs as GetFilterLogsReturnType<\n      abi,\n      eventName,\n      strict,\n      fromBlock,\n      toBlock\n    >\n  return parseEventLogs({\n    abi: filter.abi,\n    logs: formattedLogs,\n    strict,\n  }) as unknown as GetFilterLogsReturnType<\n    abi,\n    eventName,\n    strict,\n    fromBlock,\n    toBlock\n  >\n}\n","import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type GetGasPriceReturnType = bigint\n\nexport type GetGasPriceErrorType = RequestErrorType | ErrorType\n\n/**\n * Returns the current price of gas (in wei).\n *\n * - Docs: https://viem.sh/docs/actions/public/getGasPrice\n * - JSON-RPC Methods: [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice)\n *\n * @param client - Client to use\n * @returns The gas price (in wei). {@link GetGasPriceReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getGasPrice } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const gasPrice = await getGasPrice(client)\n */\nexport async function getGasPrice<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(client: Client<Transport, chain, account>): Promise<GetGasPriceReturnType> {\n  const gasPrice = await client.request({\n    method: 'eth_gasPrice',\n  })\n  return BigInt(gasPrice)\n}\n","import type { AbiEvent, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  MaybeAbiEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { Log } from '../../types/log.js'\nimport type { Hash, LogTopic } from '../../types/misc.js'\nimport type { RpcLog } from '../../types/rpc.js'\nimport type { DecodeEventLogErrorType } from '../../utils/abi/decodeEventLog.js'\nimport {\n  type EncodeEventTopicsErrorType,\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from '../../utils/abi/encodeEventTopics.js'\nimport { parseEventLogs } from '../../utils/abi/parseEventLogs.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type FormatLogErrorType,\n  formatLog,\n} from '../../utils/formatters/log.js'\n\nexport type GetLogsParameters<\n  abiEvent extends AbiEvent | undefined = undefined,\n  abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  //\n  _eventName extends string | undefined = MaybeAbiEventName<abiEvent>,\n> = {\n  /** Address or list of addresses from which logs originated */\n  address?: Address | Address[] | undefined\n} & (\n  | {\n      event: abiEvent\n      events?: undefined\n      args?: MaybeExtractEventArgsFromAbi<abiEvents, _eventName> | undefined\n      /**\n       * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n       * @default false\n       */\n      strict?: strict | undefined\n    }\n  | {\n      event?: undefined\n      events: abiEvents\n      args?: undefined\n      /**\n       * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n       * @default false\n       */\n      strict?: strict | undefined\n    }\n  | {\n      event?: undefined\n      events?: undefined\n      args?: undefined\n      strict?: undefined\n    }\n) &\n  (\n    | {\n        /** Block number or tag after which to include logs */\n        fromBlock?: fromBlock | BlockNumber | BlockTag | undefined\n        /** Block number or tag before which to include logs */\n        toBlock?: toBlock | BlockNumber | BlockTag | undefined\n        blockHash?: undefined\n      }\n    | {\n        fromBlock?: undefined\n        toBlock?: undefined\n        /** Hash of block to include logs from */\n        blockHash?: Hash | undefined\n      }\n  )\n\nexport type GetLogsReturnType<\n  abiEvent extends AbiEvent | undefined = undefined,\n  abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  //\n  _eventName extends string | undefined = MaybeAbiEventName<abiEvent>,\n  _pending extends boolean =\n    | (fromBlock extends 'pending' ? true : false)\n    | (toBlock extends 'pending' ? true : false),\n> = Log<bigint, number, _pending, abiEvent, strict, abiEvents, _eventName>[]\n\nexport type GetLogsErrorType =\n  | DecodeEventLogErrorType\n  | EncodeEventTopicsErrorType\n  | FormatLogErrorType\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns a list of event logs matching the provided parameters.\n *\n * - Docs: https://viem.sh/docs/actions/public/getLogs\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/logs_event-logs\n * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\n *\n * @param client - Client to use\n * @param parameters - {@link GetLogsParameters}\n * @returns A list of event logs. {@link GetLogsReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbiItem } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getLogs } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const logs = await getLogs(client)\n */\nexport async function getLogs<\n  chain extends Chain | undefined,\n  const abiEvent extends AbiEvent | undefined = undefined,\n  const abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  client: Client<Transport, chain>,\n  {\n    address,\n    blockHash,\n    fromBlock,\n    toBlock,\n    event,\n    events: events_,\n    args,\n    strict: strict_,\n  }: GetLogsParameters<abiEvent, abiEvents, strict, fromBlock, toBlock> = {},\n): Promise<GetLogsReturnType<abiEvent, abiEvents, strict, fromBlock, toBlock>> {\n  const strict = strict_ ?? false\n  const events = events_ ?? (event ? [event] : undefined)\n\n  let topics: LogTopic[] = []\n  if (events) {\n    const encoded = (events as AbiEvent[]).flatMap((event) =>\n      encodeEventTopics({\n        abi: [event],\n        eventName: (event as AbiEvent).name,\n        args: events_ ? undefined : args,\n      } as EncodeEventTopicsParameters),\n    )\n    // TODO: Clean up type casting\n    topics = [encoded as LogTopic]\n    if (event) topics = topics[0] as LogTopic[]\n  }\n\n  let logs: RpcLog[]\n  if (blockHash) {\n    logs = await client.request({\n      method: 'eth_getLogs',\n      params: [{ address, topics, blockHash }],\n    })\n  } else {\n    logs = await client.request({\n      method: 'eth_getLogs',\n      params: [\n        {\n          address,\n          topics,\n          fromBlock:\n            typeof fromBlock === 'bigint' ? numberToHex(fromBlock) : fromBlock,\n          toBlock: typeof toBlock === 'bigint' ? numberToHex(toBlock) : toBlock,\n        },\n      ],\n    })\n  }\n\n  const formattedLogs = logs.map((log) => formatLog(log))\n  if (!events)\n    return formattedLogs as GetLogsReturnType<\n      abiEvent,\n      abiEvents,\n      strict,\n      fromBlock,\n      toBlock\n    >\n  return parseEventLogs({\n    abi: events,\n    args: args as any,\n    logs: formattedLogs,\n    strict,\n  }) as unknown as GetLogsReturnType<\n    abiEvent,\n    abiEvents,\n    strict,\n    fromBlock,\n    toBlock\n  >\n}\n","import type { Address } from 'abitype'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { Proof } from '../../types/proof.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type FormatProofErrorType,\n  formatProof,\n} from '../../utils/formatters/proof.js'\n\nexport type GetProofParameters = {\n  /** Account address. */\n  address: Address\n  /** Array of storage-keys that should be proofed and included. */\n  storageKeys: Hash[]\n} & (\n  | {\n      /** The block number. */\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n  | {\n      blockNumber?: undefined\n      /**\n       * The block tag.\n       * @default 'latest'\n       */\n      blockTag?: BlockTag | undefined\n    }\n)\n\nexport type GetProofReturnType = Proof\n\nexport type GetProofErrorType =\n  | NumberToHexErrorType\n  | FormatProofErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns the account and storage values of the specified account including the Merkle-proof.\n *\n * - Docs: https://viem.sh/docs/actions/public/getProof\n * - JSON-RPC Methods:\n *   - Calls [`eth_getProof`](https://eips.ethereum.org/EIPS/eip-1186)\n *\n * @param client - Client to use\n * @param parameters - {@link GetProofParameters}\n * @returns Proof data. {@link GetProofReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getProof } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const block = await getProof(client, {\n *  address: '0x...',\n *  storageKeys: ['0x...'],\n * })\n */\nexport async function getProof<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  {\n    address,\n    blockNumber,\n    blockTag: blockTag_,\n    storageKeys,\n  }: GetProofParameters,\n): Promise<GetProofReturnType> {\n  const blockTag = blockTag_ ?? 'latest'\n\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n\n  const proof = await client.request({\n    method: 'eth_getProof',\n    params: [address, storageKeys, blockNumberHex || blockTag],\n  })\n\n  return formatProof(proof)\n}\n","import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type GetStorageAtParameters = {\n  address: Address\n  slot: Hex\n} & (\n  | {\n      blockNumber?: undefined\n      blockTag?: BlockTag | undefined\n    }\n  | {\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n)\n\nexport type GetStorageAtReturnType = Hex | undefined\n\nexport type GetStorageAtErrorType =\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns the value from a storage slot at a given address.\n *\n * - Docs: https://viem.sh/docs/contract/getStorageAt\n * - JSON-RPC Methods: [`eth_getStorageAt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getstorageat)\n *\n * @param client - Client to use\n * @param parameters - {@link GetStorageAtParameters}\n * @returns The value of the storage slot. {@link GetStorageAtReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getStorageAt } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const code = await getStorageAt(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   slot: toHex(0),\n * })\n */\nexport async function getStorageAt<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  { address, blockNumber, blockTag = 'latest', slot }: GetStorageAtParameters,\n): Promise<GetStorageAtReturnType> {\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n  const data = await client.request({\n    method: 'eth_getStorageAt',\n    params: [address, slot, blockNumberHex || blockTag],\n  })\n  return data\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  TransactionNotFoundError,\n  type TransactionNotFoundErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RpcTransaction } from '../../types/rpc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type FormattedTransaction,\n  formatTransaction,\n} from '../../utils/formatters/transaction.js'\n\nexport type GetTransactionParameters<blockTag extends BlockTag = 'latest'> =\n  | {\n      /** The block hash */\n      blockHash: Hash\n      blockNumber?: undefined\n      blockTag?: undefined\n      hash?: undefined\n      /** The index of the transaction on the block. */\n      index: number\n    }\n  | {\n      blockHash?: undefined\n      /** The block number */\n      blockNumber: bigint\n      blockTag?: undefined\n      hash?: undefined\n      /** The index of the transaction on the block. */\n      index: number\n    }\n  | {\n      blockHash?: undefined\n      blockNumber?: undefined\n      /** The block tag. */\n      blockTag: blockTag | BlockTag\n      hash?: undefined\n      /** The index of the transaction on the block. */\n      index: number\n    }\n  | {\n      blockHash?: undefined\n      blockNumber?: undefined\n      blockTag?: undefined\n      /** The hash of the transaction. */\n      hash: Hash\n      index?: number | undefined\n    }\n\nexport type GetTransactionReturnType<\n  chain extends Chain | undefined = undefined,\n  blockTag extends BlockTag = 'latest',\n> = Prettify<FormattedTransaction<chain, blockTag>>\n\nexport type GetTransactionErrorType =\n  | TransactionNotFoundErrorType\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns information about a [Transaction](https://viem.sh/docs/glossary/terms#transaction) given a hash or block identifier.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransaction\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_fetching-transactions\n * - JSON-RPC Methods: [`eth_getTransactionByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionByHash)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionParameters}\n * @returns The transaction information. {@link GetTransactionReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransaction } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transaction = await getTransaction(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getTransaction<\n  chain extends Chain | undefined,\n  blockTag extends BlockTag = 'latest',\n>(\n  client: Client<Transport, chain>,\n  {\n    blockHash,\n    blockNumber,\n    blockTag: blockTag_,\n    hash,\n    index,\n  }: GetTransactionParameters<blockTag>,\n): Promise<GetTransactionReturnType<chain, blockTag>> {\n  const blockTag = blockTag_ || 'latest'\n\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n\n  let transaction: RpcTransaction | null = null\n  if (hash) {\n    transaction = await client.request(\n      {\n        method: 'eth_getTransactionByHash',\n        params: [hash],\n      },\n      { dedupe: true },\n    )\n  } else if (blockHash) {\n    transaction = await client.request(\n      {\n        method: 'eth_getTransactionByBlockHashAndIndex',\n        params: [blockHash, numberToHex(index)],\n      },\n      { dedupe: true },\n    )\n  } else if (blockNumberHex || blockTag) {\n    transaction = await client.request(\n      {\n        method: 'eth_getTransactionByBlockNumberAndIndex',\n        params: [blockNumberHex || blockTag, numberToHex(index)],\n      },\n      { dedupe: Boolean(blockNumberHex) },\n    )\n  }\n\n  if (!transaction)\n    throw new TransactionNotFoundError({\n      blockHash,\n      blockNumber,\n      blockTag,\n      hash,\n      index,\n    })\n\n  const format =\n    client.chain?.formatters?.transaction?.format || formatTransaction\n  return format(transaction)\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { FormattedTransactionReceipt } from '../../utils/formatters/transactionReceipt.js'\nimport { getAction } from '../../utils/getAction.js'\n\nimport {\n  type GetBlockNumberErrorType,\n  getBlockNumber,\n} from './getBlockNumber.js'\nimport {\n  type GetTransactionErrorType,\n  getTransaction,\n} from './getTransaction.js'\n\nexport type GetTransactionConfirmationsParameters<\n  chain extends Chain | undefined = Chain,\n> =\n  | {\n      /** The transaction hash. */\n      hash: Hash\n      transactionReceipt?: undefined\n    }\n  | {\n      hash?: undefined\n      /** The transaction receipt. */\n      transactionReceipt: FormattedTransactionReceipt<chain>\n    }\n\nexport type GetTransactionConfirmationsReturnType = bigint\n\nexport type GetTransactionConfirmationsErrorType =\n  | GetBlockNumberErrorType\n  | GetTransactionErrorType\n  | ErrorType\n\n/**\n * Returns the number of blocks passed (confirmations) since the transaction was processed on a block.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransactionConfirmations\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_fetching-transactions\n * - JSON-RPC Methods: [`eth_getTransactionConfirmations`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionConfirmations)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionConfirmationsParameters}\n * @returns The number of blocks passed since the transaction was processed. If confirmations is 0, then the Transaction has not been confirmed & processed yet. {@link GetTransactionConfirmationsReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransactionConfirmations } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const confirmations = await getTransactionConfirmations(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getTransactionConfirmations<\n  chain extends Chain | undefined,\n>(\n  client: Client<Transport, chain>,\n  { hash, transactionReceipt }: GetTransactionConfirmationsParameters<chain>,\n): Promise<GetTransactionConfirmationsReturnType> {\n  const [blockNumber, transaction] = await Promise.all([\n    getAction(client, getBlockNumber, 'getBlockNumber')({}),\n    hash\n      ? getAction(client, getTransaction, 'getTransaction')({ hash })\n      : undefined,\n  ])\n  const transactionBlockNumber =\n    transactionReceipt?.blockNumber || transaction?.blockNumber\n  if (!transactionBlockNumber) return 0n\n  return blockNumber - transactionBlockNumber! + 1n\n}\n","import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type HexToNumberErrorType,\n  hexToNumber,\n} from '../../utils/encoding/fromHex.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type GetTransactionCountParameters = {\n  /** The account address. */\n  address: Address\n} & (\n  | {\n      /** The block number. */\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n  | {\n      blockNumber?: undefined\n      /** The block tag. Defaults to 'latest'. */\n      blockTag?: BlockTag | undefined\n    }\n)\nexport type GetTransactionCountReturnType = number\n\nexport type GetTransactionCountErrorType =\n  | RequestErrorType\n  | NumberToHexErrorType\n  | HexToNumberErrorType\n  | ErrorType\n\n/**\n * Returns the number of [Transactions](https://viem.sh/docs/glossary/terms#transaction) an Account has sent.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransactionCount\n * - JSON-RPC Methods: [`eth_getTransactionCount`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactioncount)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionCountParameters}\n * @returns The number of transactions an account has sent. {@link GetTransactionCountReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransactionCount } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transactionCount = await getTransactionCount(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n */\nexport async function getTransactionCount<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: Client<Transport, chain, account>,\n  { address, blockTag = 'latest', blockNumber }: GetTransactionCountParameters,\n): Promise<GetTransactionCountReturnType> {\n  const count = await client.request(\n    {\n      method: 'eth_getTransactionCount',\n      params: [\n        address,\n        typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : blockTag,\n      ],\n    },\n    {\n      dedupe: Boolean(blockNumber),\n    },\n  )\n  return hexToNumber(count)\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  TransactionReceiptNotFoundError,\n  type TransactionReceiptNotFoundErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type FormattedTransactionReceipt,\n  formatTransactionReceipt,\n} from '../../utils/formatters/transactionReceipt.js'\n\nexport type GetTransactionReceiptParameters = {\n  /** The hash of the transaction. */\n  hash: Hash\n}\n\nexport type GetTransactionReceiptReturnType<\n  chain extends Chain | undefined = undefined,\n> = FormattedTransactionReceipt<chain>\n\nexport type GetTransactionReceiptErrorType =\n  | RequestErrorType\n  | TransactionReceiptNotFoundErrorType\n  | ErrorType\n\n/**\n * Returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms#transaction-receipt) given a [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransactionReceipt\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_fetching-transactions\n * - JSON-RPC Methods: [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactionreceipt)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionReceiptParameters}\n * @returns The transaction receipt. {@link GetTransactionReceiptReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransactionReceipt } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transactionReceipt = await getTransactionReceipt(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getTransactionReceipt<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  { hash }: GetTransactionReceiptParameters,\n) {\n  const receipt = await client.request(\n    {\n      method: 'eth_getTransactionReceipt',\n      params: [hash],\n    },\n    { dedupe: true },\n  )\n\n  if (!receipt) throw new TransactionReceiptNotFoundError({ hash })\n\n  const format =\n    client.chain?.formatters?.transactionReceipt?.format ||\n    formatTransactionReceipt\n  return format(receipt) as GetTransactionReceiptReturnType<chain>\n}\n","import type { AbiStateMutability, Address, Narrow } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { multicall3Abi } from '../../constants/abis.js'\nimport { AbiDecodingZeroDataError } from '../../errors/abi.js'\nimport { BaseError } from '../../errors/base.js'\nimport { RawContractError } from '../../errors/contract.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { ContractFunctionParameters } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type {\n  MulticallContracts,\n  MulticallResults,\n} from '../../types/multicall.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from '../../utils/errors/getContractError.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { getAction } from '../../utils/getAction.js'\nimport type { CallParameters } from './call.js'\nimport { type ReadContractErrorType, readContract } from './readContract.js'\n\nexport type MulticallParameters<\n  contracts extends readonly unknown[] = readonly ContractFunctionParameters[],\n  allowFailure extends boolean = true,\n  options extends {\n    optional?: boolean\n    properties?: Record<string, any>\n  } = {},\n> = Pick<CallParameters, 'blockNumber' | 'blockTag' | 'stateOverride'> & {\n  allowFailure?: allowFailure | boolean | undefined\n  batchSize?: number | undefined\n  contracts: MulticallContracts<\n    Narrow<contracts>,\n    { mutability: AbiStateMutability } & options\n  >\n  multicallAddress?: Address | undefined\n}\n\nexport type MulticallReturnType<\n  contracts extends readonly unknown[] = readonly ContractFunctionParameters[],\n  allowFailure extends boolean = true,\n  options extends {\n    error?: Error\n  } = { error: Error },\n> = MulticallResults<\n  Narrow<contracts>,\n  allowFailure,\n  { mutability: AbiStateMutability } & options\n>\n\nexport type MulticallErrorType =\n  | GetChainContractAddressErrorType\n  | ReadContractErrorType\n  | GetContractErrorReturnType<\n      EncodeFunctionDataErrorType | DecodeFunctionResultErrorType\n    >\n  | ErrorType\n\n/**\n * Similar to [`readContract`](https://viem.sh/docs/contract/readContract), but batches up multiple functions on a contract in a single RPC call via the [`multicall3` contract](https://github.com/mds1/multicall).\n *\n * - Docs: https://viem.sh/docs/contract/multicall\n *\n * @param client - Client to use\n * @param parameters - {@link MulticallParameters}\n * @returns An array of results with accompanying status. {@link MulticallReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { multicall } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const abi = parseAbi([\n *   'function balanceOf(address) view returns (uint256)',\n *   'function totalSupply() view returns (uint256)',\n * ])\n * const results = await multicall(client, {\n *   contracts: [\n *     {\n *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *       abi,\n *       functionName: 'balanceOf',\n *       args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n *     },\n *     {\n *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *       abi,\n *       functionName: 'totalSupply',\n *     },\n *   ],\n * })\n * // [{ result: 424122n, status: 'success' }, { result: 1000000n, status: 'success' }]\n */\nexport async function multicall<\n  const contracts extends readonly unknown[],\n  chain extends Chain | undefined,\n  allowFailure extends boolean = true,\n>(\n  client: Client<Transport, chain>,\n  parameters: MulticallParameters<contracts, allowFailure>,\n): Promise<MulticallReturnType<contracts, allowFailure>> {\n  const {\n    allowFailure = true,\n    batchSize: batchSize_,\n    blockNumber,\n    blockTag,\n    multicallAddress: multicallAddress_,\n    stateOverride,\n  } = parameters\n  const contracts = parameters.contracts as ContractFunctionParameters[]\n\n  const batchSize =\n    batchSize_ ??\n    ((typeof client.batch?.multicall === 'object' &&\n      client.batch.multicall.batchSize) ||\n      1_024)\n\n  let multicallAddress = multicallAddress_\n  if (!multicallAddress) {\n    if (!client.chain)\n      throw new Error(\n        'client chain not configured. multicallAddress is required.',\n      )\n\n    multicallAddress = getChainContractAddress({\n      blockNumber,\n      chain: client.chain,\n      contract: 'multicall3',\n    })\n  }\n\n  type Aggregate3Calls = {\n    allowFailure: boolean\n    callData: Hex\n    target: Address\n  }[]\n\n  const chunkedCalls: Aggregate3Calls[] = [[]]\n  let currentChunk = 0\n  let currentChunkSize = 0\n  for (let i = 0; i < contracts.length; i++) {\n    const { abi, address, args, functionName } = contracts[i]\n    try {\n      const callData = encodeFunctionData({ abi, args, functionName })\n\n      currentChunkSize += (callData.length - 2) / 2\n      // Check to see if we need to create a new chunk.\n      if (\n        // Check if batching is enabled.\n        batchSize > 0 &&\n        // Check if the current size of the batch exceeds the size limit.\n        currentChunkSize > batchSize &&\n        // Check if the current chunk is not already empty.\n        chunkedCalls[currentChunk].length > 0\n      ) {\n        currentChunk++\n        currentChunkSize = (callData.length - 2) / 2\n        chunkedCalls[currentChunk] = []\n      }\n\n      chunkedCalls[currentChunk] = [\n        ...chunkedCalls[currentChunk],\n        {\n          allowFailure: true,\n          callData,\n          target: address,\n        },\n      ]\n    } catch (err) {\n      const error = getContractError(err as BaseError, {\n        abi,\n        address,\n        args,\n        docsPath: '/docs/contract/multicall',\n        functionName,\n      })\n      if (!allowFailure) throw error\n      chunkedCalls[currentChunk] = [\n        ...chunkedCalls[currentChunk],\n        {\n          allowFailure: true,\n          callData: '0x' as Hex,\n          target: address,\n        },\n      ]\n    }\n  }\n\n  const aggregate3Results = await Promise.allSettled(\n    chunkedCalls.map((calls) =>\n      getAction(\n        client,\n        readContract,\n        'readContract',\n      )({\n        abi: multicall3Abi,\n        address: multicallAddress!,\n        args: [calls],\n        blockNumber,\n        blockTag,\n        functionName: 'aggregate3',\n        stateOverride,\n      }),\n    ),\n  )\n\n  const results = []\n  for (let i = 0; i < aggregate3Results.length; i++) {\n    const result = aggregate3Results[i]\n\n    // If an error occurred in a `readContract` invocation (ie. network error),\n    // then append the failure reason to each contract result.\n    if (result.status === 'rejected') {\n      if (!allowFailure) throw result.reason\n      for (let j = 0; j < chunkedCalls[i].length; j++) {\n        results.push({\n          status: 'failure',\n          error: result.reason,\n          result: undefined,\n        })\n      }\n      continue\n    }\n\n    // If the `readContract` call was successful, then decode the results.\n    const aggregate3Result = result.value\n    for (let j = 0; j < aggregate3Result.length; j++) {\n      // Extract the response from `readContract`\n      const { returnData, success } = aggregate3Result[j]\n\n      // Extract the request call data from the original call.\n      const { callData } = chunkedCalls[i][j]\n\n      // Extract the contract config for this call from the `contracts` argument\n      // for decoding.\n      const { abi, address, functionName, args } = contracts[\n        results.length\n      ] as ContractFunctionParameters\n\n      try {\n        if (callData === '0x') throw new AbiDecodingZeroDataError()\n        if (!success) throw new RawContractError({ data: returnData })\n        const result = decodeFunctionResult({\n          abi,\n          args,\n          data: returnData,\n          functionName,\n        })\n        results.push(allowFailure ? { result, status: 'success' } : result)\n      } catch (err) {\n        const error = getContractError(err as BaseError, {\n          abi,\n          address,\n          args,\n          docsPath: '/docs/contract/multicall',\n          functionName,\n        })\n        if (!allowFailure) throw error\n        results.push({ error, result: undefined, status: 'failure' })\n      }\n    }\n  }\n\n  if (results.length !== contracts.length)\n    throw new BaseError('multicall results mismatch')\n  return results as MulticallReturnType<contracts, allowFailure>\n}\n","import type { Abi } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BaseError } from '../../errors/base.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n  ContractFunctionParameters,\n  ContractFunctionReturnType,\n} from '../../types/contract.js'\nimport type { UnionEvaluate } from '../../types/utils.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from '../../utils/errors/getContractError.js'\nimport { getAction } from '../../utils/getAction.js'\n\nimport { type CallErrorType, type CallParameters, call } from './call.js'\n\nexport type ReadContractParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends ContractFunctionName<\n    abi,\n    'pure' | 'view'\n  > = ContractFunctionName<abi, 'pure' | 'view'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'pure' | 'view',\n    functionName\n  > = ContractFunctionArgs<abi, 'pure' | 'view', functionName>,\n> = UnionEvaluate<\n  Pick<\n    CallParameters,\n    | 'account'\n    | 'blockNumber'\n    | 'blockTag'\n    | 'factory'\n    | 'factoryData'\n    | 'stateOverride'\n  >\n> &\n  ContractFunctionParameters<abi, 'pure' | 'view', functionName, args, boolean>\n\nexport type ReadContractReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends ContractFunctionName<\n    abi,\n    'pure' | 'view'\n  > = ContractFunctionName<abi, 'pure' | 'view'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'pure' | 'view',\n    functionName\n  > = ContractFunctionArgs<abi, 'pure' | 'view', functionName>,\n> = ContractFunctionReturnType<abi, 'pure' | 'view', functionName, args>\n\nexport type ReadContractErrorType = GetContractErrorReturnType<\n  CallErrorType | EncodeFunctionDataErrorType | DecodeFunctionResultErrorType\n>\n\n/**\n * Calls a read-only function on a contract, and returns the response.\n *\n * - Docs: https://viem.sh/docs/contract/readContract\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_reading-contracts\n *\n * A \"read-only\" function (constant function) on a Solidity contract is denoted by a `view` or `pure` keyword. They can only read the state of the contract, and cannot make any changes to it. Since read-only methods do not change the state of the contract, they do not require any gas to be executed, and can be called by any user without the need to pay for gas.\n *\n * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`call` action](https://viem.sh/docs/actions/public/call) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n *\n * @param client - Client to use\n * @param parameters - {@link ReadContractParameters}\n * @returns The response from the contract. Type is inferred. {@link ReadContractReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { readContract } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const result = await readContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function balanceOf(address) view returns (uint256)']),\n *   functionName: 'balanceOf',\n *   args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n * })\n * // 424122n\n */\nexport async function readContract<\n  chain extends Chain | undefined,\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi, 'pure' | 'view'>,\n  const args extends ContractFunctionArgs<abi, 'pure' | 'view', functionName>,\n>(\n  client: Client<Transport, chain>,\n  parameters: ReadContractParameters<abi, functionName, args>,\n): Promise<ReadContractReturnType<abi, functionName, args>> {\n  const { abi, address, args, functionName, ...rest } =\n    parameters as ReadContractParameters\n  const calldata = encodeFunctionData({\n    abi,\n    args,\n    functionName,\n  } as EncodeFunctionDataParameters)\n  try {\n    const { data } = await getAction(\n      client,\n      call,\n      'call',\n    )({\n      ...(rest as CallParameters),\n      data: calldata,\n      to: address!,\n    })\n    return decodeFunctionResult({\n      abi,\n      args,\n      functionName,\n      data: data || '0x',\n    }) as ReadContractReturnType<abi, functionName>\n  } catch (error) {\n    throw getContractError(error as BaseError, {\n      abi,\n      address,\n      args,\n      docsPath: '/docs/contract/readContract',\n      functionName,\n    })\n  }\n}\n","import type { Abi, AbiStateMutability, Address, Narrow } from 'abitype'\nimport * as BlockOverrides from 'ox/BlockOverrides'\n\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { AbiDecodingZeroDataError } from '../../errors/abi.js'\nimport type { BaseError } from '../../errors/base.js'\nimport { RawContractError } from '../../errors/contract.js'\nimport { UnknownNodeError } from '../../errors/node.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Block, BlockTag } from '../../types/block.js'\nimport type { Call, Calls } from '../../types/calls.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Log } from '../../types/log.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { MulticallResults } from '../../types/multicall.js'\nimport type { StateOverride } from '../../types/stateOverride.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport type { ExactPartial, UnionOmit } from '../../types/utils.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport { getContractError } from '../../utils/errors/getContractError.js'\nimport {\n  type GetNodeErrorReturnType,\n  getNodeError,\n} from '../../utils/errors/getNodeError.js'\nimport {\n  type FormatBlockErrorType,\n  formatBlock,\n} from '../../utils/formatters/block.js'\nimport { formatLog } from '../../utils/formatters/log.js'\nimport {\n  type FormatTransactionRequestErrorType,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport {\n  type SerializeStateOverrideErrorType,\n  serializeStateOverride,\n} from '../../utils/stateOverride.js'\nimport {\n  type AssertRequestErrorType,\n  assertRequest,\n} from '../../utils/transaction/assertRequest.js'\n\ntype CallExtraProperties = ExactPartial<\n  UnionOmit<\n    TransactionRequest,\n    'blobs' | 'data' | 'kzg' | 'to' | 'sidecars' | 'value'\n  >\n> & {\n  /** Account attached to the call (msg.sender). */\n  account?: Account | Address | undefined\n}\n\nexport type SimulateBlocksParameters<\n  calls extends readonly unknown[] = readonly unknown[],\n> = {\n  /** Blocks to simulate. */\n  blocks: readonly {\n    /** Block overrides. */\n    blockOverrides?: BlockOverrides.BlockOverrides | undefined\n    /** Calls to execute. */\n    calls: Calls<Narrow<calls>, CallExtraProperties>\n    /** State overrides. */\n    stateOverrides?: StateOverride | undefined\n  }[]\n  /** Whether to return the full transactions. */\n  returnFullTransactions?: boolean | undefined\n  /** Whether to trace transfers. */\n  traceTransfers?: boolean | undefined\n  /** Whether to enable validation mode. */\n  validation?: boolean | undefined\n} & (\n  | {\n      /** The balance of the account at a block number. */\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n  | {\n      blockNumber?: undefined\n      /**\n       * The balance of the account at a block tag.\n       * @default 'latest'\n       */\n      blockTag?: BlockTag | undefined\n    }\n)\n\nexport type SimulateBlocksReturnType<\n  calls extends readonly unknown[] = readonly unknown[],\n> = readonly (Block & {\n  calls: MulticallResults<\n    Narrow<calls>,\n    true,\n    {\n      extraProperties: {\n        data: Hex\n        gasUsed: bigint\n        logs?: Log[] | undefined\n      }\n      error: Error\n      mutability: AbiStateMutability\n    }\n  >\n})[]\n\nexport type SimulateBlocksErrorType =\n  | AssertRequestErrorType\n  | DecodeFunctionResultErrorType\n  | EncodeFunctionDataErrorType\n  | FormatBlockErrorType\n  | FormatTransactionRequestErrorType\n  | GetNodeErrorReturnType\n  | ParseAccountErrorType\n  | SerializeStateOverrideErrorType\n  | NumberToHexErrorType\n  | ErrorType\n\n/**\n * Simulates a set of calls on block(s) with optional block and state overrides.\n *\n * @example\n * ```ts\n * import { createClient, http, parseEther } from 'viem'\n * import { simulate } from 'viem/actions'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const result = await simulate(client, {\n *   blocks: [{\n *     blockOverrides: {\n *       number: 69420n,\n *     },\n *     calls: [{\n *       {\n *         account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\n *         data: '0xdeadbeef',\n *         to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *       },\n *       {\n *         account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\n *         to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *         value: parseEther('1'),\n *       },\n *     }],\n *     stateOverrides: [{\n *       address: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\n *       balance: parseEther('10'),\n *     }],\n *   }]\n * })\n * ```\n *\n * @param client - Client to use.\n * @param parameters - {@link SimulateBlocksParameters}\n * @returns Simulated blocks. {@link SimulateBlocksReturnType}\n */\nexport async function simulateBlocks<\n  chain extends Chain | undefined,\n  const calls extends readonly unknown[],\n>(\n  client: Client<Transport, chain>,\n  parameters: SimulateBlocksParameters<calls>,\n): Promise<SimulateBlocksReturnType<calls>> {\n  const {\n    blockNumber,\n    blockTag = 'latest',\n    blocks,\n    returnFullTransactions,\n    traceTransfers,\n    validation,\n  } = parameters\n\n  try {\n    const blockStateCalls = []\n    for (const block of blocks) {\n      const blockOverrides = block.blockOverrides\n        ? BlockOverrides.toRpc(block.blockOverrides)\n        : undefined\n      const calls = block.calls.map((call_) => {\n        const call = call_ as Call<unknown, CallExtraProperties>\n        const account = call.account ? parseAccount(call.account) : undefined\n        const request = {\n          ...call,\n          data: call.abi ? encodeFunctionData(call) : call.data,\n          from: call.from ?? account?.address,\n        } as const\n        assertRequest(request)\n        return formatTransactionRequest(request)\n      })\n      const stateOverrides = block.stateOverrides\n        ? serializeStateOverride(block.stateOverrides)\n        : undefined\n\n      blockStateCalls.push({\n        blockOverrides,\n        calls,\n        stateOverrides,\n      })\n    }\n\n    const blockNumberHex =\n      typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : undefined\n    const block = blockNumberHex || blockTag\n\n    const result = await client.request({\n      method: 'eth_simulateV1',\n      params: [\n        { blockStateCalls, returnFullTransactions, traceTransfers, validation },\n        block,\n      ],\n    })\n\n    return result.map((block, i) => ({\n      ...formatBlock(block),\n      calls: block.calls.map((call, j) => {\n        const { abi, args, functionName, to } = blocks[i].calls[j] as Call<\n          unknown,\n          CallExtraProperties\n        >\n\n        const data = call.error?.data ?? call.returnData\n        const gasUsed = BigInt(call.gasUsed)\n        const logs = call.logs?.map((log) => formatLog(log))\n        const status = call.status === '0x1' ? 'success' : 'failure'\n\n        const result =\n          abi && status === 'success' && data !== '0x'\n            ? decodeFunctionResult({\n                abi,\n                data,\n                functionName,\n              })\n            : null\n\n        const error = (() => {\n          if (status === 'success') return undefined\n\n          let error = undefined\n          if (call.error?.data === '0x') error = new AbiDecodingZeroDataError()\n          else if (call.error) error = new RawContractError(call.error)\n\n          if (!error) return undefined\n          return getContractError(error, {\n            abi: (abi ?? []) as Abi,\n            address: to,\n            args,\n            functionName: functionName ?? '<unknown>',\n          })\n        })()\n\n        return {\n          data,\n          gasUsed,\n          logs,\n          status,\n          ...(status === 'success'\n            ? {\n                result,\n              }\n            : {\n                error,\n              }),\n        }\n      }),\n    })) as unknown as SimulateBlocksReturnType<calls>\n  } catch (e) {\n    const cause = e as BaseError\n    const error = getNodeError(cause, {})\n    if (error instanceof UnknownNodeError) throw cause\n    throw error\n  }\n}\n","import type { AbiStateMutability, Address, Narrow } from 'abitype'\nimport * as AbiConstructor from 'ox/AbiConstructor'\nimport * as AbiFunction from 'ox/AbiFunction'\n\nimport { parseAccount } from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { ethAddress, zeroAddress } from '../../constants/address.js'\nimport { deploylessCallViaBytecodeBytecode } from '../../constants/contracts.js'\nimport { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Block } from '../../types/block.js'\nimport type { Call, Calls } from '../../types/calls.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Log } from '../../types/log.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { MulticallResults } from '../../types/multicall.js'\nimport type { StateOverride } from '../../types/stateOverride.js'\nimport type { Mutable } from '../../types/utils.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport { hexToBigInt } from '../../utils/index.js'\nimport {\n  type CreateAccessListErrorType,\n  createAccessList,\n} from './createAccessList.js'\nimport {\n  type SimulateBlocksErrorType,\n  type SimulateBlocksParameters,\n  simulateBlocks,\n} from './simulateBlocks.js'\n\nconst getBalanceCode =\n  '0x6080604052348015600e575f80fd5b5061016d8061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063f8b2cb4f1461002d575b5f80fd5b610047600480360381019061004291906100db565b61005d565b604051610054919061011e565b60405180910390f35b5f8173ffffffffffffffffffffffffffffffffffffffff16319050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100aa82610081565b9050919050565b6100ba816100a0565b81146100c4575f80fd5b50565b5f813590506100d5816100b1565b92915050565b5f602082840312156100f0576100ef61007d565b5b5f6100fd848285016100c7565b91505092915050565b5f819050919050565b61011881610106565b82525050565b5f6020820190506101315f83018461010f565b9291505056fea26469706673582212203b9fe929fe995c7cf9887f0bdba8a36dd78e8b73f149b17d2d9ad7cd09d2dc6264736f6c634300081a0033'\n\nexport type SimulateCallsParameters<\n  calls extends readonly unknown[] = readonly unknown[],\n  account extends Account | Address | undefined = Account | Address | undefined,\n> = Omit<SimulateBlocksParameters, 'blocks' | 'returnFullTransactions'> & {\n  /** Account attached to the calls (msg.sender). */\n  account?: account | undefined\n  /** Calls to simulate. */\n  calls: Calls<Narrow<calls>>\n  /** State overrides. */\n  stateOverrides?: StateOverride | undefined\n  /** Whether to trace asset changes. */\n  traceAssetChanges?: boolean | undefined\n}\n\nexport type SimulateCallsReturnType<\n  calls extends readonly unknown[] = readonly unknown[],\n> = {\n  /** Asset changes. */\n  assetChanges: readonly {\n    token: {\n      address: Address\n      decimals?: number | undefined\n      symbol?: string | undefined\n    }\n    value: { pre: bigint; post: bigint; diff: bigint }\n  }[]\n  /** Block results. */\n  block: Block\n  /** Call results. */\n  results: MulticallResults<\n    Narrow<calls>,\n    true,\n    {\n      extraProperties: {\n        data: Hex\n        gasUsed: bigint\n        logs?: Log[] | undefined\n      }\n      error: Error\n      mutability: AbiStateMutability\n    }\n  >\n}\n\nexport type SimulateCallsErrorType =\n  | AbiFunction.encodeData.ErrorType\n  | AbiFunction.from.ErrorType\n  | CreateAccessListErrorType\n  | EncodeFunctionDataErrorType\n  | SimulateBlocksErrorType\n  | ErrorType\n\n/**\n * Simulates execution of a batch of calls.\n *\n * @param client - Client to use\n * @param parameters - {@link SimulateCallsParameters}\n * @returns Results. {@link SimulateCallsReturnType}\n *\n * @example\n * ```ts\n * import { createPublicClient, http, parseEther } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { simulateCalls } from 'viem/actions'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const result = await simulateCalls(client, {\n *   account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\n *   calls: [{\n *     {\n *       data: '0xdeadbeef',\n *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *     },\n *     {\n *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *       value: parseEther('1'),\n *     },\n *   ]\n * })\n * ```\n */\nexport async function simulateCalls<\n  const calls extends readonly unknown[],\n  chain extends Chain | undefined,\n  account extends Account | Address | undefined = undefined,\n>(\n  client: Client<Transport, chain>,\n  parameters: SimulateCallsParameters<calls, account>,\n): Promise<SimulateCallsReturnType<calls>> {\n  const {\n    blockNumber,\n    blockTag,\n    calls,\n    stateOverrides,\n    traceAssetChanges,\n    traceTransfers,\n    validation,\n  } = parameters\n\n  const account = parameters.account\n    ? parseAccount(parameters.account)\n    : undefined\n\n  if (traceAssetChanges && !account)\n    throw new BaseError(\n      '`account` is required when `traceAssetChanges` is true',\n    )\n\n  // Derive bytecode to extract ETH balance via a contract call.\n  const getBalanceData = account\n    ? AbiConstructor.encode(AbiConstructor.from('constructor(bytes, bytes)'), {\n        bytecode: deploylessCallViaBytecodeBytecode,\n        args: [\n          getBalanceCode,\n          AbiFunction.encodeData(\n            AbiFunction.from('function getBalance(address)'),\n            [account.address],\n          ),\n        ],\n      })\n    : undefined\n\n  // Fetch ERC20/721 addresses that were \"touched\" from the calls.\n  const assetAddresses = traceAssetChanges\n    ? await Promise.all(\n        parameters.calls.map(async (call: any) => {\n          if (!call.data && !call.abi) return\n          const { accessList } = await createAccessList(client, {\n            account: account!.address,\n            ...call,\n            data: call.abi ? encodeFunctionData(call) : call.data,\n          })\n          return accessList.map(({ address, storageKeys }) =>\n            storageKeys.length > 0 ? address : null,\n          )\n        }),\n      ).then((x) => x.flat().filter(Boolean))\n    : []\n\n  const resultsStateOverrides = stateOverrides?.map((override) => {\n    if (override.address === account?.address)\n      return {\n        ...override,\n        nonce: 0,\n      }\n    return override\n  })\n\n  const blocks = await simulateBlocks(client, {\n    blockNumber,\n    blockTag: blockTag as undefined,\n    blocks: [\n      ...(traceAssetChanges\n        ? [\n            // ETH pre balances\n            {\n              calls: [{ data: getBalanceData }],\n              stateOverrides,\n            },\n\n            // Asset pre balances\n            {\n              calls: assetAddresses.map((address, i) => ({\n                abi: [\n                  AbiFunction.from(\n                    'function balanceOf(address) returns (uint256)',\n                  ),\n                ],\n                functionName: 'balanceOf',\n                args: [account!.address],\n                to: address,\n                from: zeroAddress,\n                nonce: i,\n              })),\n              stateOverrides: [\n                {\n                  address: zeroAddress,\n                  nonce: 0,\n                },\n              ],\n            },\n          ]\n        : []),\n\n      {\n        calls: [...calls, {}].map((call, index) => ({\n          ...(call as Call),\n          from: account?.address,\n          nonce: index,\n        })) as any,\n        stateOverrides: resultsStateOverrides,\n      },\n\n      ...(traceAssetChanges\n        ? [\n            // ETH post balances\n            {\n              calls: [{ data: getBalanceData }],\n            },\n\n            // Asset post balances\n            {\n              calls: assetAddresses.map((address, i) => ({\n                abi: [\n                  AbiFunction.from(\n                    'function balanceOf(address) returns (uint256)',\n                  ),\n                ],\n                functionName: 'balanceOf',\n                args: [account!.address],\n                to: address,\n                from: zeroAddress,\n                nonce: i,\n              })),\n              stateOverrides: [\n                {\n                  address: zeroAddress,\n                  nonce: 0,\n                },\n              ],\n            },\n\n            // Decimals\n            {\n              calls: assetAddresses.map((address, i) => ({\n                to: address,\n                abi: [\n                  AbiFunction.from('function decimals() returns (uint256)'),\n                ],\n                functionName: 'decimals',\n                from: zeroAddress,\n                nonce: i,\n              })),\n              stateOverrides: [\n                {\n                  address: zeroAddress,\n                  nonce: 0,\n                },\n              ],\n            },\n\n            // Token URI\n            {\n              calls: assetAddresses.map((address, i) => ({\n                to: address,\n                abi: [\n                  AbiFunction.from(\n                    'function tokenURI(uint256) returns (string)',\n                  ),\n                ],\n                functionName: 'tokenURI',\n                args: [0n],\n                from: zeroAddress,\n                nonce: i,\n              })),\n              stateOverrides: [\n                {\n                  address: zeroAddress,\n                  nonce: 0,\n                },\n              ],\n            },\n\n            // Symbols\n            {\n              calls: assetAddresses.map((address, i) => ({\n                to: address,\n                abi: [AbiFunction.from('function symbol() returns (string)')],\n                functionName: 'symbol',\n                from: zeroAddress,\n                nonce: i,\n              })),\n              stateOverrides: [\n                {\n                  address: zeroAddress,\n                  nonce: 0,\n                },\n              ],\n            },\n          ]\n        : []),\n    ],\n    traceTransfers,\n    validation,\n  })\n\n  const block_results = traceAssetChanges ? blocks[2] : blocks[0]\n  const [\n    block_ethPre,\n    block_assetsPre,\n    ,\n    block_ethPost,\n    block_assetsPost,\n    block_decimals,\n    block_tokenURI,\n    block_symbols,\n  ] = traceAssetChanges ? blocks : []\n\n  // Extract call results from the simulation.\n  const { calls: block_calls, ...block } = block_results\n  const results = block_calls.slice(0, -1) ?? []\n\n  // Extract pre-execution ETH and asset balances.\n  const ethPre = block_ethPre?.calls ?? []\n  const assetsPre = block_assetsPre?.calls ?? []\n  const balancesPre = [...ethPre, ...assetsPre].map((call) =>\n    call.status === 'success' ? hexToBigInt(call.data) : null,\n  )\n\n  // Extract post-execution ETH and asset balances.\n  const ethPost = block_ethPost?.calls ?? []\n  const assetsPost = block_assetsPost?.calls ?? []\n  const balancesPost = [...ethPost, ...assetsPost].map((call) =>\n    call.status === 'success' ? hexToBigInt(call.data) : null,\n  )\n\n  // Extract asset symbols & decimals.\n  const decimals = (block_decimals?.calls ?? []).map((x) =>\n    x.status === 'success' ? x.result : null,\n  ) as (number | null)[]\n  const symbols = (block_symbols?.calls ?? []).map((x) =>\n    x.status === 'success' ? x.result : null,\n  ) as (string | null)[]\n  const tokenURI = (block_tokenURI?.calls ?? []).map((x) =>\n    x.status === 'success' ? x.result : null,\n  ) as (string | null)[]\n\n  const changes: Mutable<SimulateCallsReturnType<calls>['assetChanges']> = []\n  for (const [i, balancePost] of balancesPost.entries()) {\n    const balancePre = balancesPre[i]\n\n    if (typeof balancePost !== 'bigint') continue\n    if (typeof balancePre !== 'bigint') continue\n\n    const decimals_ = decimals[i - 1]\n    const symbol_ = symbols[i - 1]\n    const tokenURI_ = tokenURI[i - 1]\n\n    const token = (() => {\n      if (i === 0)\n        return {\n          address: ethAddress,\n          decimals: 18,\n          symbol: 'ETH',\n        }\n\n      return {\n        address: assetAddresses[i - 1]! as Address,\n        decimals: tokenURI_ || decimals_ ? Number(decimals_ ?? 1) : undefined,\n        symbol: symbol_ ?? undefined,\n      }\n    })()\n\n    if (changes.some((change) => change.token.address === token.address))\n      continue\n\n    changes.push({\n      token,\n      value: {\n        pre: balancePre,\n        post: balancePost,\n        diff: balancePost - balancePre,\n      },\n    })\n  }\n\n  return {\n    assetChanges: changes,\n    block,\n    results,\n  } as unknown as SimulateCallsReturnType<calls>\n}\n","import type { Abi, AbiFunction, AbiStateMutability, Address } from 'abitype'\n\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account, ParseAccount } from '../../types/account.js'\nimport type { Chain, DeriveChain } from '../../types/chain.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n  ContractFunctionParameters,\n  ContractFunctionReturnType,\n  ExtractAbiFunctionForArgs,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type {\n  IsNarrowable,\n  NoInfer,\n  Prettify,\n  UnionEvaluate,\n  UnionOmit,\n} from '../../types/utils.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from '../../utils/errors/getContractError.js'\nimport type { WriteContractParameters } from '../wallet/writeContract.js'\n\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { type CallErrorType, type CallParameters, call } from './call.js'\n\nexport type GetMutabilityAwareValue<\n  abi extends Abi | readonly unknown[],\n  mutability extends AbiStateMutability = AbiStateMutability,\n  functionName extends ContractFunctionName<\n    abi,\n    mutability\n  > = ContractFunctionName<abi, mutability>,\n  valueType = TransactionRequest['value'],\n  args extends ContractFunctionArgs<\n    abi,\n    mutability,\n    functionName\n  > = ContractFunctionArgs<abi, mutability, functionName>,\n  abiFunction extends AbiFunction = abi extends Abi\n    ? ExtractAbiFunctionForArgs<abi, mutability, functionName, args>\n    : AbiFunction,\n  _Narrowable extends boolean = IsNarrowable<abi, Abi>,\n> = _Narrowable extends true\n  ? abiFunction['stateMutability'] extends 'payable'\n    ? { value?: NoInfer<valueType> | undefined }\n    : abiFunction['payable'] extends true\n      ? { value?: NoInfer<valueType> | undefined }\n      : { value?: undefined }\n  : { value?: NoInfer<valueType> | undefined }\n\nexport type SimulateContractParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends ContractFunctionName<\n    abi,\n    'nonpayable' | 'payable'\n  > = ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  > = ContractFunctionArgs<abi, 'nonpayable' | 'payable', functionName>,\n  chain extends Chain | undefined = Chain | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  accountOverride extends Account | Address | null | undefined = undefined,\n  ///\n  derivedChain extends Chain | undefined = DeriveChain<chain, chainOverride>,\n> = {\n  account?: accountOverride | null | undefined\n  chain?: chainOverride | undefined\n  /** Data to append to the end of the calldata. Useful for adding a [\"domain\" tag](https://opensea.notion.site/opensea/Seaport-Order-Attributions-ec2d69bf455041a5baa490941aad307f). */\n  dataSuffix?: Hex | undefined\n} & ContractFunctionParameters<\n  abi,\n  'nonpayable' | 'payable',\n  functionName,\n  args\n> &\n  UnionOmit<\n    CallParameters<derivedChain>,\n    | 'account'\n    | 'batch'\n    | 'code'\n    | 'to'\n    | 'data'\n    | 'factory'\n    | 'factoryData'\n    | 'value'\n  > &\n  GetMutabilityAwareValue<\n    abi,\n    'nonpayable' | 'payable',\n    functionName,\n    CallParameters<derivedChain> extends CallParameters\n      ? CallParameters<derivedChain>['value']\n      : CallParameters['value'],\n    args\n  >\n\nexport type SimulateContractReturnType<\n  out abi extends Abi | readonly unknown[] = Abi,\n  in out functionName extends ContractFunctionName<\n    abi,\n    'nonpayable' | 'payable'\n  > = ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  in out args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  > = ContractFunctionArgs<abi, 'nonpayable' | 'payable', functionName>,\n  /** @ts-expect-error cast variance */\n  out chain extends Chain | undefined = Chain | undefined,\n  out account extends Account | undefined = Account | undefined,\n  out chainOverride extends Chain | undefined = Chain | undefined,\n  out accountOverride extends Account | Address | null | undefined =\n    | Account\n    | Address\n    | null\n    | undefined,\n  ///\n  in out minimizedAbi extends Abi = readonly [\n    ExtractAbiFunctionForArgs<\n      abi extends Abi ? abi : Abi,\n      'nonpayable' | 'payable',\n      functionName,\n      args\n    >,\n  ],\n  out resolvedAccount extends\n    | Account\n    | null\n    | undefined = accountOverride extends Account | Address | null\n    ? ParseAccount<accountOverride>\n    : account,\n> = {\n  result: ContractFunctionReturnType<\n    minimizedAbi,\n    'nonpayable' | 'payable',\n    functionName,\n    args\n  >\n  request: Prettify<\n    UnionEvaluate<\n      UnionOmit<\n        WriteContractParameters<\n          minimizedAbi,\n          functionName,\n          args,\n          chain,\n          undefined,\n          chainOverride\n        >,\n        'account' | 'abi' | 'args' | 'chain' | 'functionName'\n      >\n    > &\n      ContractFunctionParameters<\n        minimizedAbi,\n        'nonpayable' | 'payable',\n        functionName,\n        args\n      > & {\n        chain: DeriveChain<chain, chainOverride>\n      } & (resolvedAccount extends Account | null\n        ? { account: resolvedAccount }\n        : { account?: undefined })\n  >\n}\n\nexport type SimulateContractErrorType =\n  | ParseAccountErrorType\n  | EncodeFunctionDataErrorType\n  | GetContractErrorReturnType<CallErrorType | DecodeFunctionResultErrorType>\n  | ErrorType\n\n/**\n * Simulates/validates a contract interaction. This is useful for retrieving **return data** and **revert reasons** of contract write functions.\n *\n * - Docs: https://viem.sh/docs/contract/simulateContract\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_writing-to-contracts\n *\n * This function does not require gas to execute and _**does not**_ change the state of the blockchain. It is almost identical to [`readContract`](https://viem.sh/docs/contract/readContract), but also supports contract write functions.\n *\n * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`call` action](https://viem.sh/docs/actions/public/call) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n *\n * @param client - Client to use\n * @param parameters - {@link SimulateContractParameters}\n * @returns The simulation result and write request. {@link SimulateContractReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { simulateContract } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const result = await simulateContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint(uint32) view returns (uint32)']),\n *   functionName: 'mint',\n *   args: ['69420'],\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n */\nexport async function simulateContract<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  const args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  >,\n  chainOverride extends Chain | undefined = undefined,\n  accountOverride extends Account | Address | null | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: SimulateContractParameters<\n    abi,\n    functionName,\n    args,\n    chain,\n    chainOverride,\n    accountOverride\n  >,\n): Promise<\n  SimulateContractReturnType<\n    abi,\n    functionName,\n    args,\n    chain,\n    account,\n    chainOverride,\n    accountOverride\n  >\n> {\n  const { abi, address, args, dataSuffix, functionName, ...callRequest } =\n    parameters as SimulateContractParameters\n\n  const account = callRequest.account\n    ? parseAccount(callRequest.account)\n    : client.account\n  const calldata = encodeFunctionData({ abi, args, functionName })\n  try {\n    const { data } = await getAction(\n      client,\n      call,\n      'call',\n    )({\n      batch: false,\n      data: `${calldata}${dataSuffix ? dataSuffix.replace('0x', '') : ''}`,\n      to: address,\n      ...callRequest,\n      account,\n    })\n    const result = decodeFunctionResult({\n      abi,\n      args,\n      functionName,\n      data: data || '0x',\n    })\n    const minimizedAbi = abi.filter(\n      (abiItem) =>\n        'name' in abiItem && abiItem.name === parameters.functionName,\n    )\n    return {\n      result,\n      request: {\n        abi: minimizedAbi,\n        address,\n        args,\n        dataSuffix,\n        functionName,\n        ...callRequest,\n        account,\n      },\n    } as unknown as SimulateContractReturnType<\n      abi,\n      functionName,\n      args,\n      chain,\n      account,\n      chainOverride,\n      accountOverride\n    >\n  } catch (error) {\n    throw getContractError(error as BaseError, {\n      abi,\n      address,\n      args,\n      docsPath: '/docs/contract/simulateContract',\n      functionName,\n      sender: account?.address,\n    })\n  }\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type UninstallFilterParameters = {\n  filter: Filter<any>\n}\nexport type UninstallFilterReturnType = boolean\n\nexport type UninstallFilterErrorType = RequestErrorType | ErrorType\n\n/**\n * Destroys a [`Filter`](https://viem.sh/docs/glossary/types#filter).\n *\n * - Docs: https://viem.sh/docs/actions/public/uninstallFilter\n * - JSON-RPC Methods: [`eth_uninstallFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_uninstallFilter)\n *\n * Destroys a Filter that was created from one of the following Actions:\n * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter)\n * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter)\n * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter)\n *\n * @param client - Client to use\n * @param parameters - {@link UninstallFilterParameters}\n * @returns A boolean indicating if the Filter was successfully uninstalled. {@link UninstallFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createPendingTransactionFilter, uninstallFilter } from 'viem/public'\n *\n * const filter = await createPendingTransactionFilter(client)\n * const uninstalled = await uninstallFilter(client, { filter })\n * // true\n */\nexport async function uninstallFilter<\n  transport extends Transport,\n  chain extends Chain | undefined,\n>(\n  _client: Client<transport, chain>,\n  { filter }: UninstallFilterParameters,\n): Promise<UninstallFilterReturnType> {\n  return filter.request({\n    method: 'eth_uninstallFilter',\n    params: [filter.id],\n  })\n}\n","import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { universalSignatureValidatorAbi } from '../../constants/abis.js'\nimport { universalSignatureValidatorByteCode } from '../../constants/contracts.js'\nimport { CallExecutionError } from '../../errors/contract.js'\nimport type { InvalidHexBooleanError } from '../../errors/encoding.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\nimport type { OneOf } from '../../types/utils.js'\nimport {\n  type EncodeDeployDataErrorType,\n  encodeDeployData,\n} from '../../utils/abi/encodeDeployData.js'\nimport { getAddress } from '../../utils/address/getAddress.js'\nimport { isAddressEqual } from '../../utils/address/isAddressEqual.js'\nimport { type IsHexErrorType, isHex } from '../../utils/data/isHex.js'\nimport { type ToHexErrorType, bytesToHex } from '../../utils/encoding/toHex.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { encodeFunctionData, hexToBool } from '../../utils/index.js'\nimport { isErc6492Signature } from '../../utils/signature/isErc6492Signature.js'\nimport { recoverAddress } from '../../utils/signature/recoverAddress.js'\nimport { serializeErc6492Signature } from '../../utils/signature/serializeErc6492Signature.js'\nimport { serializeSignature } from '../../utils/signature/serializeSignature.js'\nimport { type CallErrorType, type CallParameters, call } from './call.js'\n\nexport type VerifyHashParameters = Pick<\n  CallParameters,\n  'blockNumber' | 'blockTag'\n> & {\n  /** The address that signed the original message. */\n  address: Address\n  /** The hash to be verified. */\n  hash: Hex\n  /** The signature that was generated by signing the message with the address's private key. */\n  signature: Hex | ByteArray | Signature\n  universalSignatureVerifierAddress?: Address | undefined\n} & OneOf<{ factory: Address; factoryData: Hex } | {}>\n\nexport type VerifyHashReturnType = boolean\n\nexport type VerifyHashErrorType =\n  | CallErrorType\n  | IsHexErrorType\n  | ToHexErrorType\n  | InvalidHexBooleanError\n  | EncodeDeployDataErrorType\n  | ErrorType\n\n/**\n * Verifies a message hash onchain using ERC-6492.\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifyHashParameters}\n * @returns Whether or not the signature is valid. {@link VerifyHashReturnType}\n */\nexport async function verifyHash<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  parameters: VerifyHashParameters,\n): Promise<VerifyHashReturnType> {\n  const {\n    address,\n    factory,\n    factoryData,\n    hash,\n    signature,\n    universalSignatureVerifierAddress = client.chain?.contracts\n      ?.universalSignatureVerifier?.address,\n    ...rest\n  } = parameters\n\n  const signatureHex = (() => {\n    if (isHex(signature)) return signature\n    if (typeof signature === 'object' && 'r' in signature && 's' in signature)\n      return serializeSignature(signature)\n    return bytesToHex(signature)\n  })()\n\n  const wrappedSignature = await (async () => {\n    // If no `factory` or `factoryData` is provided, it is assumed that the\n    // address is not a Smart Account, or the Smart Account is already deployed.\n    if (!factory && !factoryData) return signatureHex\n\n    // If the signature is already wrapped, return the signature.\n    if (isErc6492Signature(signatureHex)) return signatureHex\n\n    // If the Smart Account is not deployed, wrap the signature with a 6492 wrapper\n    // to perform counterfactual validation.\n    return serializeErc6492Signature({\n      address: factory!,\n      data: factoryData!,\n      signature: signatureHex,\n    })\n  })()\n\n  try {\n    const args = universalSignatureVerifierAddress\n      ? ({\n          to: universalSignatureVerifierAddress,\n          data: encodeFunctionData({\n            abi: universalSignatureValidatorAbi,\n            functionName: 'isValidSig',\n            args: [address, hash, wrappedSignature],\n          }),\n          ...rest,\n        } as unknown as CallParameters)\n      : ({\n          data: encodeDeployData({\n            abi: universalSignatureValidatorAbi,\n            args: [address, hash, wrappedSignature],\n            bytecode: universalSignatureValidatorByteCode,\n          }),\n          ...rest,\n        } as unknown as CallParameters)\n\n    const { data } = await getAction(client, call, 'call')(args)\n\n    return hexToBool(data ?? '0x0')\n  } catch (error) {\n    // Fallback attempt to verify the signature via ECDSA recovery.\n    try {\n      const verified = isAddressEqual(\n        getAddress(address),\n        await recoverAddress({ hash, signature }),\n      )\n      if (verified) return true\n    } catch {}\n\n    if (error instanceof CallExecutionError) {\n      // if the execution fails, the signature was not valid and an internal method inside of the validator reverted\n      // this can happen for many reasons, for example if signer can not be recovered from the signature\n      // or if the signature has no valid format\n      return false\n    }\n\n    throw error\n  }\n}\n","import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ByteArray,\n  Hex,\n  SignableMessage,\n  Signature,\n} from '../../types/misc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport { hashMessage } from '../../utils/signature/hashMessage.js'\nimport type { HashMessageErrorType } from '../../utils/signature/hashMessage.js'\nimport {\n  type VerifyHashErrorType,\n  type VerifyHashParameters,\n  verifyHash,\n} from './verifyHash.js'\n\nexport type VerifyMessageParameters = Prettify<\n  Omit<VerifyHashParameters, 'hash'> & {\n    /** The address that signed the original message. */\n    address: Address\n    /** The message to be verified. */\n    message: SignableMessage\n    /** The signature that was generated by signing the message with the address's private key. */\n    signature: Hex | ByteArray | Signature\n  }\n>\n\nexport type VerifyMessageReturnType = boolean\n\nexport type VerifyMessageErrorType =\n  | HashMessageErrorType\n  | VerifyHashErrorType\n  | ErrorType\n\n/**\n * Verify that a message was signed by the provided address.\n *\n * Compatible with Smart Contract Accounts & Externally Owned Accounts via [ERC-6492](https://eips.ethereum.org/EIPS/eip-6492).\n *\n * - Docs {@link https://viem.sh/docs/actions/public/verifyMessage}\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifyMessageParameters}\n * @returns Whether or not the signature is valid. {@link VerifyMessageReturnType}\n */\nexport async function verifyMessage<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  {\n    address,\n    message,\n    factory,\n    factoryData,\n    signature,\n    ...callRequest\n  }: VerifyMessageParameters,\n): Promise<VerifyMessageReturnType> {\n  const hash = hashMessage(message)\n  return verifyHash(client, {\n    address,\n    factory: factory!,\n    factoryData: factoryData!,\n    hash,\n    signature,\n    ...callRequest,\n  })\n}\n","import type { Address, TypedData } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\nimport {\n  type HashTypedDataErrorType,\n  hashTypedData,\n} from '../../utils/signature/hashTypedData.js'\nimport {\n  type VerifyHashErrorType,\n  type VerifyHashParameters,\n  verifyHash,\n} from './verifyHash.js'\n\nexport type VerifyTypedDataParameters<\n  typedData extends TypedData | Record<string, unknown> = TypedData,\n  primaryType extends keyof typedData | 'EIP712Domain' = keyof typedData,\n> = Omit<VerifyHashParameters, 'hash'> &\n  TypedDataDefinition<typedData, primaryType> & {\n    /** The address to verify the typed data for. */\n    address: Address\n    /** The signature to verify */\n    signature: Hex | ByteArray | Signature\n  }\n\nexport type VerifyTypedDataReturnType = boolean\n\nexport type VerifyTypedDataErrorType =\n  | HashTypedDataErrorType\n  | VerifyHashErrorType\n  | ErrorType\n\n/**\n * Verify that typed data was signed by the provided address.\n *\n * - Docs {@link https://viem.sh/docs/actions/public/verifyTypedData}\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifyTypedDataParameters}\n * @returns Whether or not the signature is valid. {@link VerifyTypedDataReturnType}\n */\nexport async function verifyTypedData<\n  const typedData extends TypedData | Record<string, unknown>,\n  primaryType extends keyof typedData | 'EIP712Domain',\n  chain extends Chain | undefined,\n>(\n  client: Client<Transport, chain>,\n  parameters: VerifyTypedDataParameters<typedData, primaryType>,\n): Promise<VerifyTypedDataReturnType> {\n  const {\n    address,\n    factory,\n    factoryData,\n    signature,\n    message,\n    primaryType,\n    types,\n    domain,\n    ...callRequest\n  } = parameters as VerifyTypedDataParameters\n  const hash = hashTypedData({ message, primaryType, types, domain })\n  return verifyHash(client, {\n    address,\n    factory: factory!,\n    factoryData: factoryData!,\n    hash,\n    signature,\n    ...callRequest,\n  })\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { BlockNotFoundError } from '../../errors/block.js'\nimport {\n  TransactionNotFoundError,\n  TransactionReceiptNotFoundError,\n  WaitForTransactionReceiptTimeoutError,\n  type WaitForTransactionReceiptTimeoutErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { Transaction } from '../../types/transaction.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { type ObserveErrorType, observe } from '../../utils/observe.js'\nimport { withResolvers } from '../../utils/promise/withResolvers.js'\nimport {\n  type WithRetryParameters,\n  withRetry,\n} from '../../utils/promise/withRetry.js'\nimport { stringify } from '../../utils/stringify.js'\n\nimport { type GetBlockErrorType, getBlock } from './getBlock.js'\nimport {\n  type GetTransactionErrorType,\n  type GetTransactionReturnType,\n  getTransaction,\n} from './getTransaction.js'\nimport {\n  type GetTransactionReceiptErrorType,\n  type GetTransactionReceiptReturnType,\n  getTransactionReceipt,\n} from './getTransactionReceipt.js'\nimport {\n  type WatchBlockNumberErrorType,\n  watchBlockNumber,\n} from './watchBlockNumber.js'\n\nexport type ReplacementReason = 'cancelled' | 'replaced' | 'repriced'\nexport type ReplacementReturnType<\n  chain extends Chain | undefined = Chain | undefined,\n> = {\n  reason: ReplacementReason\n  replacedTransaction: Transaction\n  transaction: Transaction\n  transactionReceipt: GetTransactionReceiptReturnType<chain>\n}\n\nexport type WaitForTransactionReceiptReturnType<\n  chain extends Chain | undefined = Chain | undefined,\n> = GetTransactionReceiptReturnType<chain>\n\nexport type WaitForTransactionReceiptParameters<\n  chain extends Chain | undefined = Chain | undefined,\n> = {\n  /**\n   * The number of confirmations (blocks that have passed) to wait before resolving.\n   * @default 1\n   */\n  confirmations?: number | undefined\n  /** The hash of the transaction. */\n  hash: Hash\n  /** Optional callback to emit if the transaction has been replaced. */\n  onReplaced?: ((response: ReplacementReturnType<chain>) => void) | undefined\n  /**\n   * Polling frequency (in ms). Defaults to the client's pollingInterval config.\n   * @default client.pollingInterval\n   */\n  pollingInterval?: number | undefined\n  /**\n   * Number of times to retry if the transaction or block is not found.\n   * @default 6 (exponential backoff)\n   */\n  retryCount?: WithRetryParameters['retryCount'] | undefined\n  /**\n   * Time to wait (in ms) between retries.\n   * @default `({ count }) => ~~(1 << count) * 200` (exponential backoff)\n   */\n  retryDelay?: WithRetryParameters['delay'] | undefined\n  /**\n   * Optional timeout (in milliseconds) to wait before stopping polling.\n   * @default 180_000\n   */\n  timeout?: number | undefined\n}\n\nexport type WaitForTransactionReceiptErrorType =\n  | ObserveErrorType\n  | GetBlockErrorType\n  | GetTransactionErrorType\n  | GetTransactionReceiptErrorType\n  | WatchBlockNumberErrorType\n  | WaitForTransactionReceiptTimeoutErrorType\n  | ErrorType\n\n/**\n * Waits for the [Transaction](https://viem.sh/docs/glossary/terms#transaction) to be included on a [Block](https://viem.sh/docs/glossary/terms#block) (one confirmation), and then returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms#transaction-receipt).\n *\n * - Docs: https://viem.sh/docs/actions/public/waitForTransactionReceipt\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\n * - JSON-RPC Methods:\n *   - Polls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt) on each block until it has been processed.\n *   - If a Transaction has been replaced:\n *     - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) and extracts the transactions\n *     - Checks if one of the Transactions is a replacement\n *     - If so, calls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt).\n *\n * The `waitForTransactionReceipt` action additionally supports Replacement detection (e.g. sped up Transactions).\n *\n * Transactions can be replaced when a user modifies their transaction in their wallet (to speed up or cancel). Transactions are replaced when they are sent from the same nonce.\n *\n * There are 3 types of Transaction Replacement reasons:\n *\n * - `repriced`: The gas price has been modified (e.g. different `maxFeePerGas`)\n * - `cancelled`: The Transaction has been cancelled (e.g. `value === 0n`)\n * - `replaced`: The Transaction has been replaced (e.g. different `value` or `data`)\n *\n * @param client - Client to use\n * @param parameters - {@link WaitForTransactionReceiptParameters}\n * @returns The transaction receipt. {@link WaitForTransactionReceiptReturnType}\n *\n * @example\n * import { createPublicClient, waitForTransactionReceipt, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transactionReceipt = await waitForTransactionReceipt(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function waitForTransactionReceipt<\n  chain extends Chain | undefined,\n>(\n  client: Client<Transport, chain>,\n  {\n    confirmations = 1,\n    hash,\n    onReplaced,\n    pollingInterval = client.pollingInterval,\n    retryCount = 6,\n    retryDelay = ({ count }) => ~~(1 << count) * 200, // exponential backoff\n    timeout = 180_000,\n  }: WaitForTransactionReceiptParameters<chain>,\n): Promise<WaitForTransactionReceiptReturnType<chain>> {\n  const observerId = stringify(['waitForTransactionReceipt', client.uid, hash])\n\n  let transaction: GetTransactionReturnType<chain> | undefined\n  let replacedTransaction: GetTransactionReturnType<chain> | undefined\n  let receipt: GetTransactionReceiptReturnType<chain>\n  let retrying = false\n\n  const { promise, resolve, reject } =\n    withResolvers<WaitForTransactionReceiptReturnType<chain>>()\n\n  const timer = timeout\n    ? setTimeout(\n        () => reject(new WaitForTransactionReceiptTimeoutError({ hash })),\n        timeout,\n      )\n    : undefined\n\n  const _unobserve = observe(\n    observerId,\n    { onReplaced, resolve, reject },\n    (emit) => {\n      const _unwatch = getAction(\n        client,\n        watchBlockNumber,\n        'watchBlockNumber',\n      )({\n        emitMissed: true,\n        emitOnBegin: true,\n        poll: true,\n        pollingInterval,\n        async onBlockNumber(blockNumber_) {\n          const done = (fn: () => void) => {\n            clearTimeout(timer)\n            _unwatch()\n            fn()\n            _unobserve()\n          }\n\n          let blockNumber = blockNumber_\n\n          if (retrying) return\n\n          try {\n            // If we already have a valid receipt, let's check if we have enough\n            // confirmations. If we do, then we can resolve.\n            if (receipt) {\n              if (\n                confirmations > 1 &&\n                (!receipt.blockNumber ||\n                  blockNumber - receipt.blockNumber + 1n < confirmations)\n              )\n                return\n\n              done(() => emit.resolve(receipt))\n              return\n            }\n\n            // Get the transaction to check if it's been replaced.\n            // We need to retry as some RPC Providers may be slow to sync\n            // up mined transactions.\n            if (!transaction) {\n              retrying = true\n              await withRetry(\n                async () => {\n                  transaction = (await getAction(\n                    client,\n                    getTransaction,\n                    'getTransaction',\n                  )({ hash })) as GetTransactionReturnType<chain>\n                  if (transaction.blockNumber)\n                    blockNumber = transaction.blockNumber\n                },\n                {\n                  delay: retryDelay,\n                  retryCount,\n                },\n              )\n              retrying = false\n            }\n\n            // Get the receipt to check if it's been processed.\n            receipt = await getAction(\n              client,\n              getTransactionReceipt,\n              'getTransactionReceipt',\n            )({ hash })\n\n            // Check if we have enough confirmations. If not, continue polling.\n            if (\n              confirmations > 1 &&\n              (!receipt.blockNumber ||\n                blockNumber - receipt.blockNumber + 1n < confirmations)\n            )\n              return\n\n            done(() => emit.resolve(receipt))\n          } catch (err) {\n            // If the receipt is not found, the transaction will be pending.\n            // We need to check if it has potentially been replaced.\n            if (\n              err instanceof TransactionNotFoundError ||\n              err instanceof TransactionReceiptNotFoundError\n            ) {\n              if (!transaction) {\n                retrying = false\n                return\n              }\n\n              try {\n                replacedTransaction = transaction\n\n                // Let's retrieve the transactions from the current block.\n                // We need to retry as some RPC Providers may be slow to sync\n                // up mined blocks.\n                retrying = true\n                const block = await withRetry(\n                  () =>\n                    getAction(\n                      client,\n                      getBlock,\n                      'getBlock',\n                    )({\n                      blockNumber,\n                      includeTransactions: true,\n                    }),\n                  {\n                    delay: retryDelay,\n                    retryCount,\n                    shouldRetry: ({ error }) =>\n                      error instanceof BlockNotFoundError,\n                  },\n                )\n                retrying = false\n\n                const replacementTransaction = (\n                  block.transactions as {} as Transaction[]\n                ).find(\n                  ({ from, nonce }) =>\n                    from === replacedTransaction!.from &&\n                    nonce === replacedTransaction!.nonce,\n                )\n\n                // If we couldn't find a replacement transaction, continue polling.\n                if (!replacementTransaction) return\n\n                // If we found a replacement transaction, return it's receipt.\n                receipt = await getAction(\n                  client,\n                  getTransactionReceipt,\n                  'getTransactionReceipt',\n                )({\n                  hash: replacementTransaction.hash,\n                })\n\n                // Check if we have enough confirmations. If not, continue polling.\n                if (\n                  confirmations > 1 &&\n                  (!receipt.blockNumber ||\n                    blockNumber - receipt.blockNumber + 1n < confirmations)\n                )\n                  return\n\n                let reason: ReplacementReason = 'replaced'\n                if (\n                  replacementTransaction.to === replacedTransaction.to &&\n                  replacementTransaction.value === replacedTransaction.value &&\n                  replacementTransaction.input === replacedTransaction.input\n                ) {\n                  reason = 'repriced'\n                } else if (\n                  replacementTransaction.from === replacementTransaction.to &&\n                  replacementTransaction.value === 0n\n                ) {\n                  reason = 'cancelled'\n                }\n\n                done(() => {\n                  emit.onReplaced?.({\n                    reason,\n                    replacedTransaction: replacedTransaction! as any,\n                    transaction: replacementTransaction,\n                    transactionReceipt: receipt,\n                  })\n                  emit.resolve(receipt)\n                })\n              } catch (err_) {\n                done(() => emit.reject(err_))\n              }\n            } else {\n              done(() => emit.reject(err))\n            }\n          }\n        },\n      })\n    },\n  )\n\n  return promise\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { HasTransportType } from '../../types/transport.js'\nimport { hexToBigInt } from '../../utils/encoding/fromHex.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { observe } from '../../utils/observe.js'\nimport { type PollErrorType, poll } from '../../utils/poll.js'\nimport { stringify } from '../../utils/stringify.js'\n\nimport {\n  type GetBlockNumberReturnType,\n  getBlockNumber,\n} from './getBlockNumber.js'\n\nexport type OnBlockNumberParameter = GetBlockNumberReturnType\nexport type OnBlockNumberFn = (\n  blockNumber: OnBlockNumberParameter,\n  prevBlockNumber: OnBlockNumberParameter | undefined,\n) => void\n\nexport type WatchBlockNumberParameters<\n  transport extends Transport = Transport,\n> = {\n  /** The callback to call when a new block number is received. */\n  onBlockNumber: OnBlockNumberFn\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: ((error: Error) => void) | undefined\n} & (\n  | (HasTransportType<transport, 'webSocket'> extends true\n      ? {\n          emitMissed?: undefined\n          emitOnBegin?: undefined\n          /** Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`. */\n          poll?: false | undefined\n          pollingInterval?: undefined\n        }\n      : never)\n  | {\n      /** Whether or not to emit the missed block numbers to the callback. */\n      emitMissed?: boolean | undefined\n      /** Whether or not to emit the latest block number to the callback when the subscription opens. */\n      emitOnBegin?: boolean | undefined\n      poll?: true | undefined\n      /** Polling frequency (in ms). Defaults to Client's pollingInterval config. */\n      pollingInterval?: number | undefined\n    }\n)\n\nexport type WatchBlockNumberReturnType = () => void\n\nexport type WatchBlockNumberErrorType = PollErrorType | ErrorType\n\n/**\n * Watches and returns incoming block numbers.\n *\n * - Docs: https://viem.sh/docs/actions/public/watchBlockNumber\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_watching-blocks\n * - JSON-RPC Methods:\n *   - When `poll: true`, calls [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber) on a polling interval.\n *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchBlockNumberParameters}\n * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlockNumberReturnType}\n *\n * @example\n * import { createPublicClient, watchBlockNumber, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchBlockNumber(client, {\n *   onBlockNumber: (blockNumber) => console.log(blockNumber),\n * })\n */\nexport function watchBlockNumber<\n  chain extends Chain | undefined,\n  transport extends Transport,\n>(\n  client: Client<transport, chain>,\n  {\n    emitOnBegin = false,\n    emitMissed = false,\n    onBlockNumber,\n    onError,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n  }: WatchBlockNumberParameters<transport>,\n): WatchBlockNumberReturnType {\n  const enablePolling = (() => {\n    if (typeof poll_ !== 'undefined') return poll_\n    if (client.transport.type === 'webSocket') return false\n    if (\n      client.transport.type === 'fallback' &&\n      client.transport.transports[0].config.type === 'webSocket'\n    )\n      return false\n    return true\n  })()\n\n  let prevBlockNumber: GetBlockNumberReturnType | undefined\n\n  const pollBlockNumber = () => {\n    const observerId = stringify([\n      'watchBlockNumber',\n      client.uid,\n      emitOnBegin,\n      emitMissed,\n      pollingInterval,\n    ])\n\n    return observe(observerId, { onBlockNumber, onError }, (emit) =>\n      poll(\n        async () => {\n          try {\n            const blockNumber = await getAction(\n              client,\n              getBlockNumber,\n              'getBlockNumber',\n            )({ cacheTime: 0 })\n\n            if (prevBlockNumber) {\n              // If the current block number is the same as the previous,\n              // we can skip.\n              if (blockNumber === prevBlockNumber) return\n\n              // If we have missed out on some previous blocks, and the\n              // `emitMissed` flag is truthy, let's emit those blocks.\n              if (blockNumber - prevBlockNumber > 1 && emitMissed) {\n                for (let i = prevBlockNumber + 1n; i < blockNumber; i++) {\n                  emit.onBlockNumber(i, prevBlockNumber)\n                  prevBlockNumber = i\n                }\n              }\n            }\n\n            // If the next block number is greater than the previous,\n            // it is not in the past, and we can emit the new block number.\n            if (!prevBlockNumber || blockNumber > prevBlockNumber) {\n              emit.onBlockNumber(blockNumber, prevBlockNumber)\n              prevBlockNumber = blockNumber\n            }\n          } catch (err) {\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin,\n          interval: pollingInterval,\n        },\n      ),\n    )\n  }\n\n  const subscribeBlockNumber = () => {\n    const observerId = stringify([\n      'watchBlockNumber',\n      client.uid,\n      emitOnBegin,\n      emitMissed,\n    ])\n\n    return observe(observerId, { onBlockNumber, onError }, (emit) => {\n      let active = true\n      let unsubscribe = () => (active = false)\n      ;(async () => {\n        try {\n          const transport = (() => {\n            if (client.transport.type === 'fallback') {\n              const transport = client.transport.transports.find(\n                (transport: ReturnType<Transport>) =>\n                  transport.config.type === 'webSocket',\n              )\n              if (!transport) return client.transport\n              return transport.value\n            }\n            return client.transport\n          })()\n\n          const { unsubscribe: unsubscribe_ } = await transport.subscribe({\n            params: ['newHeads'],\n            onData(data: any) {\n              if (!active) return\n              const blockNumber = hexToBigInt(data.result?.number)\n              emit.onBlockNumber(blockNumber, prevBlockNumber)\n              prevBlockNumber = blockNumber\n            },\n            onError(error: Error) {\n              emit.onError?.(error)\n            },\n          })\n          unsubscribe = unsubscribe_\n          if (!active) unsubscribe()\n        } catch (err) {\n          onError?.(err as Error)\n        }\n      })()\n      return () => unsubscribe()\n    })\n  }\n\n  return enablePolling ? pollBlockNumber() : subscribeBlockNumber()\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { HasTransportType } from '../../types/transport.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { observe } from '../../utils/observe.js'\nimport { type PollErrorType, poll } from '../../utils/poll.js'\nimport { type StringifyErrorType, stringify } from '../../utils/stringify.js'\n\nimport { type GetBlockReturnType, getBlock } from './getBlock.js'\n\nexport type OnBlockParameter<\n  chain extends Chain | undefined = Chain,\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n> = GetBlockReturnType<chain, includeTransactions, blockTag>\n\nexport type OnBlock<\n  chain extends Chain | undefined = Chain,\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n> = (\n  block: OnBlockParameter<chain, includeTransactions, blockTag>,\n  prevBlock: OnBlockParameter<chain, includeTransactions, blockTag> | undefined,\n) => void\n\nexport type WatchBlocksParameters<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain,\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n> = {\n  /** The callback to call when a new block is received. */\n  onBlock: OnBlock<chain, includeTransactions, blockTag>\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: ((error: Error) => void) | undefined\n} & (\n  | (HasTransportType<transport, 'webSocket'> extends true\n      ? {\n          blockTag?: undefined\n          emitMissed?: undefined\n          emitOnBegin?: undefined\n          includeTransactions?: undefined\n          /** Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`. */\n          poll?: false | undefined\n          pollingInterval?: undefined\n        }\n      : never)\n  | {\n      /** The block tag. Defaults to \"latest\". */\n      blockTag?: blockTag | BlockTag | undefined\n      /** Whether or not to emit the missed blocks to the callback. */\n      emitMissed?: boolean | undefined\n      /** Whether or not to emit the block to the callback when the subscription opens. */\n      emitOnBegin?: boolean | undefined\n      /** Whether or not to include transaction data in the response. */\n      includeTransactions?: includeTransactions | undefined\n      poll?: true | undefined\n      /** Polling frequency (in ms). Defaults to the client's pollingInterval config. */\n      pollingInterval?: number | undefined\n    }\n)\n\nexport type WatchBlocksReturnType = () => void\n\nexport type WatchBlocksErrorType =\n  | StringifyErrorType\n  | PollErrorType\n  | ErrorType\n\n/**\n * Watches and returns information for incoming blocks.\n *\n * - Docs: https://viem.sh/docs/actions/public/watchBlocks\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_watching-blocks\n * - JSON-RPC Methods:\n *   - When `poll: true`, calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getBlockByNumber) on a polling interval.\n *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchBlocksParameters}\n * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlocksReturnType}\n *\n * @example\n * import { createPublicClient, watchBlocks, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchBlocks(client, {\n *   onBlock: (block) => console.log(block),\n * })\n */\nexport function watchBlocks<\n  transport extends Transport,\n  chain extends Chain | undefined,\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n>(\n  client: Client<transport, chain>,\n  {\n    blockTag = 'latest',\n    emitMissed = false,\n    emitOnBegin = false,\n    onBlock,\n    onError,\n    includeTransactions: includeTransactions_,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n  }: WatchBlocksParameters<transport, chain, includeTransactions, blockTag>,\n): WatchBlocksReturnType {\n  const enablePolling = (() => {\n    if (typeof poll_ !== 'undefined') return poll_\n    if (client.transport.type === 'webSocket') return false\n    if (\n      client.transport.type === 'fallback' &&\n      client.transport.transports[0].config.type === 'webSocket'\n    )\n      return false\n    return true\n  })()\n  const includeTransactions = includeTransactions_ ?? false\n\n  let prevBlock:\n    | GetBlockReturnType<chain, false | includeTransactions, 'latest'>\n    | undefined\n\n  const pollBlocks = () => {\n    const observerId = stringify([\n      'watchBlocks',\n      client.uid,\n      blockTag,\n      emitMissed,\n      emitOnBegin,\n      includeTransactions,\n      pollingInterval,\n    ])\n\n    return observe(observerId, { onBlock, onError }, (emit) =>\n      poll(\n        async () => {\n          try {\n            const block = await getAction(\n              client,\n              getBlock,\n              'getBlock',\n            )({\n              blockTag,\n              includeTransactions,\n            })\n            if (block.number !== null && prevBlock?.number != null) {\n              // If the current block number is the same as the previous,\n              // we can skip.\n              if (block.number === prevBlock.number) return\n\n              // If we have missed out on some previous blocks, and the\n              // `emitMissed` flag is truthy, let's emit those blocks.\n              if (block.number - prevBlock.number > 1 && emitMissed) {\n                for (let i = prevBlock?.number + 1n; i < block.number; i++) {\n                  const block = (await getAction(\n                    client,\n                    getBlock,\n                    'getBlock',\n                  )({\n                    blockNumber: i,\n                    includeTransactions,\n                  })) as GetBlockReturnType<chain>\n                  emit.onBlock(block as any, prevBlock as any)\n                  prevBlock = block\n                }\n              }\n            }\n\n            if (\n              // If no previous block exists, emit.\n              prevBlock?.number == null ||\n              // If the block tag is \"pending\" with no block number, emit.\n              (blockTag === 'pending' && block?.number == null) ||\n              // If the next block number is greater than the previous block number, emit.\n              // We don't want to emit blocks in the past.\n              (block.number !== null && block.number > prevBlock.number)\n            ) {\n              emit.onBlock(block as any, prevBlock as any)\n              prevBlock = block as any\n            }\n          } catch (err) {\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin,\n          interval: pollingInterval,\n        },\n      ),\n    )\n  }\n\n  const subscribeBlocks = () => {\n    let active = true\n    let emitFetched = true\n    let unsubscribe = () => (active = false)\n    ;(async () => {\n      try {\n        if (emitOnBegin) {\n          getAction(\n            client,\n            getBlock,\n            'getBlock',\n          )({\n            blockTag,\n            includeTransactions,\n          }).then((block) => {\n            if (!active) return\n            if (!emitFetched) return\n            onBlock(block as any, undefined)\n            emitFetched = false\n          })\n        }\n\n        const transport = (() => {\n          if (client.transport.type === 'fallback') {\n            const transport = client.transport.transports.find(\n              (transport: ReturnType<Transport>) =>\n                transport.config.type === 'webSocket',\n            )\n            if (!transport) return client.transport\n            return transport.value\n          }\n          return client.transport\n        })()\n\n        const { unsubscribe: unsubscribe_ } = await transport.subscribe({\n          params: ['newHeads'],\n          async onData(data: any) {\n            if (!active) return\n            const block = (await getAction(\n              client,\n              getBlock,\n              'getBlock',\n            )({\n              blockNumber: data.blockNumber,\n              includeTransactions,\n            }).catch(() => {})) as GetBlockReturnType<chain>\n            if (!active) return\n            onBlock(block as any, prevBlock as any)\n            emitFetched = false\n            prevBlock = block\n          },\n          onError(error: Error) {\n            onError?.(error)\n          },\n        })\n        unsubscribe = unsubscribe_\n        if (!active) unsubscribe()\n      } catch (err) {\n        onError?.(err as Error)\n      }\n    })()\n    return () => unsubscribe()\n  }\n\n  return enablePolling ? pollBlocks() : subscribeBlocks()\n}\n","import type { Abi, Address, ExtractAbiEvent } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Log } from '../../types/log.js'\n\nimport {\n  DecodeLogDataMismatch,\n  DecodeLogTopicsMismatch,\n} from '../../errors/abi.js'\nimport { InvalidInputRpcError } from '../../errors/rpc.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber } from '../../types/block.js'\nimport type {\n  ContractEventArgs,\n  ContractEventName,\n} from '../../types/contract.js'\nimport type { LogTopic } from '../../types/misc.js'\nimport type { GetPollOptions } from '../../types/transport.js'\nimport { decodeEventLog } from '../../utils/abi/decodeEventLog.js'\nimport {\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from '../../utils/abi/encodeEventTopics.js'\nimport { formatLog } from '../../utils/formatters/log.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { type ObserveErrorType, observe } from '../../utils/observe.js'\nimport { poll } from '../../utils/poll.js'\nimport { type StringifyErrorType, stringify } from '../../utils/stringify.js'\nimport { createContractEventFilter } from './createContractEventFilter.js'\nimport { getBlockNumber } from './getBlockNumber.js'\nimport {\n  type GetContractEventsParameters,\n  getContractEvents,\n} from './getContractEvents.js'\nimport { getFilterChanges } from './getFilterChanges.js'\nimport { uninstallFilter } from './uninstallFilter.js'\n\nexport type WatchContractEventOnLogsParameter<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> = ContractEventName<abi>,\n  strict extends boolean | undefined = undefined,\n> = abi extends Abi\n  ? Abi extends abi\n    ? Log[]\n    : Log<bigint, number, false, ExtractAbiEvent<abi, eventName>, strict>[]\n  : Log[]\n\nexport type WatchContractEventOnLogsFn<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> = ContractEventName<abi>,\n  strict extends boolean | undefined = undefined,\n> = (logs: WatchContractEventOnLogsParameter<abi, eventName, strict>) => void\n\nexport type WatchContractEventParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> | undefined = ContractEventName<abi>,\n  strict extends boolean | undefined = undefined,\n  transport extends Transport = Transport,\n> = {\n  /** The address of the contract. */\n  address?: Address | Address[] | undefined\n  /** Contract ABI. */\n  abi: abi\n  args?:\n    | ContractEventArgs<\n        abi,\n        eventName extends ContractEventName<abi>\n          ? eventName\n          : ContractEventName<abi>\n      >\n    | undefined\n  /** Contract event. */\n  eventName?: eventName | ContractEventName<abi> | undefined\n  /** Block to start listening from. */\n  fromBlock?: BlockNumber<bigint> | undefined\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: ((error: Error) => void) | undefined\n  /** The callback to call when new event logs are received. */\n  onLogs: WatchContractEventOnLogsFn<\n    abi,\n    eventName extends ContractEventName<abi>\n      ? eventName\n      : ContractEventName<abi>,\n    strict\n  >\n  /**\n   * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n   * @default false\n   */\n  strict?: strict | boolean | undefined\n} & GetPollOptions<transport>\n\nexport type WatchContractEventReturnType = () => void\n\nexport type WatchContractEventErrorType =\n  | StringifyErrorType\n  | ObserveErrorType\n  | ErrorType\n\n/**\n * Watches and returns emitted contract event logs.\n *\n * - Docs: https://viem.sh/docs/contract/watchContractEvent\n *\n * This Action will batch up all the event logs found within the [`pollingInterval`](https://viem.sh/docs/contract/watchContractEvent#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/contract/watchContractEvent#onLogs).\n *\n * `watchContractEvent` will attempt to create an [Event Filter](https://viem.sh/docs/contract/createContractEventFilter) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchContractEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs) instead.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchContractEventParameters}\n * @returns A function that can be invoked to stop watching for new event logs. {@link WatchContractEventReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchContractEvent } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchContractEvent(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['event Transfer(address indexed from, address indexed to, uint256 value)']),\n *   eventName: 'Transfer',\n *   args: { from: '0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b' },\n *   onLogs: (logs) => console.log(logs),\n * })\n */\nexport function watchContractEvent<\n  chain extends Chain | undefined,\n  const abi extends Abi | readonly unknown[],\n  eventName extends ContractEventName<abi> | undefined = undefined,\n  strict extends boolean | undefined = undefined,\n  transport extends Transport = Transport,\n>(\n  client: Client<transport, chain>,\n  parameters: WatchContractEventParameters<abi, eventName, strict, transport>,\n): WatchContractEventReturnType {\n  const {\n    abi,\n    address,\n    args,\n    batch = true,\n    eventName,\n    fromBlock,\n    onError,\n    onLogs,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n    strict: strict_,\n  } = parameters\n\n  const enablePolling = (() => {\n    if (typeof poll_ !== 'undefined') return poll_\n    if (typeof fromBlock === 'bigint') return true\n    if (client.transport.type === 'webSocket') return false\n    if (\n      client.transport.type === 'fallback' &&\n      client.transport.transports[0].config.type === 'webSocket'\n    )\n      return false\n    return true\n  })()\n\n  const pollContractEvent = () => {\n    const strict = strict_ ?? false\n    const observerId = stringify([\n      'watchContractEvent',\n      address,\n      args,\n      batch,\n      client.uid,\n      eventName,\n      pollingInterval,\n      strict,\n      fromBlock,\n    ])\n\n    return observe(observerId, { onLogs, onError }, (emit) => {\n      let previousBlockNumber: bigint\n      if (fromBlock !== undefined) previousBlockNumber = fromBlock - 1n\n      let filter: Filter<'event', abi, eventName> | undefined\n      let initialized = false\n\n      const unwatch = poll(\n        async () => {\n          if (!initialized) {\n            try {\n              filter = (await getAction(\n                client,\n                createContractEventFilter,\n                'createContractEventFilter',\n              )({\n                abi,\n                address,\n                args: args as any,\n                eventName: eventName as any,\n                strict: strict as any,\n                fromBlock,\n              })) as Filter<'event', abi, eventName>\n            } catch {}\n            initialized = true\n            return\n          }\n\n          try {\n            let logs: Log[]\n            if (filter) {\n              logs = await getAction(\n                client,\n                getFilterChanges,\n                'getFilterChanges',\n              )({ filter })\n            } else {\n              // If the filter doesn't exist, we will fall back to use `getLogs`.\n              // The fall back exists because some RPC Providers do not support filters.\n\n              // Fetch the block number to use for `getLogs`.\n              const blockNumber = await getAction(\n                client,\n                getBlockNumber,\n                'getBlockNumber',\n              )({})\n\n              // If the block number has changed, we will need to fetch the logs.\n              // If the block number doesn't exist, we are yet to reach the first poll interval,\n              // so do not emit any logs.\n              if (previousBlockNumber && previousBlockNumber < blockNumber) {\n                logs = await getAction(\n                  client,\n                  getContractEvents,\n                  'getContractEvents',\n                )({\n                  abi,\n                  address,\n                  args,\n                  eventName,\n                  fromBlock: previousBlockNumber + 1n,\n                  toBlock: blockNumber,\n                  strict,\n                } as {} as GetContractEventsParameters)\n              } else {\n                logs = []\n              }\n              previousBlockNumber = blockNumber\n            }\n\n            if (logs.length === 0) return\n            if (batch) emit.onLogs(logs as any)\n            else for (const log of logs) emit.onLogs([log] as any)\n          } catch (err) {\n            // If a filter has been set and gets uninstalled, providers will throw an InvalidInput error.\n            // Reinitialize the filter when this occurs\n            if (filter && err instanceof InvalidInputRpcError)\n              initialized = false\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin: true,\n          interval: pollingInterval,\n        },\n      )\n\n      return async () => {\n        if (filter)\n          await getAction(\n            client,\n            uninstallFilter,\n            'uninstallFilter',\n          )({ filter })\n        unwatch()\n      }\n    })\n  }\n\n  const subscribeContractEvent = () => {\n    const strict = strict_ ?? false\n    const observerId = stringify([\n      'watchContractEvent',\n      address,\n      args,\n      batch,\n      client.uid,\n      eventName,\n      pollingInterval,\n      strict,\n    ])\n\n    let active = true\n    let unsubscribe = () => (active = false)\n    return observe(observerId, { onLogs, onError }, (emit) => {\n      ;(async () => {\n        try {\n          const transport = (() => {\n            if (client.transport.type === 'fallback') {\n              const transport = client.transport.transports.find(\n                (transport: ReturnType<Transport>) =>\n                  transport.config.type === 'webSocket',\n              )\n              if (!transport) return client.transport\n              return transport.value\n            }\n            return client.transport\n          })()\n\n          const topics: LogTopic[] = eventName\n            ? encodeEventTopics({\n                abi: abi,\n                eventName: eventName,\n                args,\n              } as EncodeEventTopicsParameters)\n            : []\n\n          const { unsubscribe: unsubscribe_ } = await transport.subscribe({\n            params: ['logs', { address, topics }],\n            onData(data: any) {\n              if (!active) return\n              const log = data.result\n              try {\n                const { eventName, args } = decodeEventLog({\n                  abi: abi,\n                  data: log.data,\n                  topics: log.topics as any,\n                  strict: strict_,\n                })\n                const formatted = formatLog(log, {\n                  args,\n                  eventName: eventName as string,\n                })\n                emit.onLogs([formatted] as any)\n              } catch (err) {\n                let eventName: string | undefined\n                let isUnnamed: boolean | undefined\n                if (\n                  err instanceof DecodeLogDataMismatch ||\n                  err instanceof DecodeLogTopicsMismatch\n                ) {\n                  // If strict mode is on, and log data/topics do not match event definition, skip.\n                  if (strict_) return\n                  eventName = err.abiItem.name\n                  isUnnamed = err.abiItem.inputs?.some(\n                    (x) => !('name' in x && x.name),\n                  )\n                }\n\n                // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n                const formatted = formatLog(log, {\n                  args: isUnnamed ? [] : {},\n                  eventName,\n                })\n                emit.onLogs([formatted] as any)\n              }\n            },\n            onError(error: Error) {\n              emit.onError?.(error)\n            },\n          })\n          unsubscribe = unsubscribe_\n          if (!active) unsubscribe()\n        } catch (err) {\n          onError?.(err as Error)\n        }\n      })()\n      return () => unsubscribe()\n    })\n  }\n\n  return enablePolling ? pollContractEvent() : subscribeContractEvent()\n}\n","import type { AbiEvent, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  MaybeAbiEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Log } from '../../types/log.js'\nimport type { LogTopic } from '../../types/misc.js'\nimport type { GetPollOptions } from '../../types/transport.js'\nimport {\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from '../../utils/abi/encodeEventTopics.js'\nimport { type ObserveErrorType, observe } from '../../utils/observe.js'\nimport { poll } from '../../utils/poll.js'\nimport { type StringifyErrorType, stringify } from '../../utils/stringify.js'\n\nimport {\n  DecodeLogDataMismatch,\n  DecodeLogTopicsMismatch,\n} from '../../errors/abi.js'\nimport { InvalidInputRpcError } from '../../errors/rpc.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber } from '../../types/block.js'\nimport { decodeEventLog } from '../../utils/abi/decodeEventLog.js'\nimport { formatLog } from '../../utils/formatters/log.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type CreateEventFilterParameters,\n  createEventFilter,\n} from './createEventFilter.js'\nimport { getBlockNumber } from './getBlockNumber.js'\nimport { getFilterChanges } from './getFilterChanges.js'\nimport { type GetLogsParameters, getLogs } from './getLogs.js'\nimport { uninstallFilter } from './uninstallFilter.js'\n\nexport type WatchEventOnLogsParameter<\n  abiEvent extends AbiEvent | undefined = undefined,\n  abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  eventName extends string | undefined = MaybeAbiEventName<abiEvent>,\n> = Log<bigint, number, false, abiEvent, strict, abiEvents, eventName>[]\nexport type WatchEventOnLogsFn<\n  abiEvent extends AbiEvent | undefined = undefined,\n  abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  //\n  _eventName extends string | undefined = MaybeAbiEventName<abiEvent>,\n> = (\n  logs: WatchEventOnLogsParameter<abiEvent, abiEvents, strict, _eventName>,\n) => void\n\nexport type WatchEventParameters<\n  abiEvent extends AbiEvent | undefined = undefined,\n  abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  transport extends Transport = Transport,\n  //\n  _eventName extends string | undefined = MaybeAbiEventName<abiEvent>,\n> = {\n  /** The address of the contract. */\n  address?: Address | Address[] | undefined\n  /** Block to start listening from. */\n  fromBlock?: BlockNumber<bigint> | undefined\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: ((error: Error) => void) | undefined\n  /** The callback to call when new event logs are received. */\n  onLogs: WatchEventOnLogsFn<abiEvent, abiEvents, strict, _eventName>\n} & GetPollOptions<transport> &\n  (\n    | {\n        event: abiEvent\n        events?: undefined\n        args?: MaybeExtractEventArgsFromAbi<abiEvents, _eventName> | undefined\n        /**\n         * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n         * @default false\n         */\n        strict?: strict | undefined\n      }\n    | {\n        event?: undefined\n        events?: abiEvents | undefined\n        args?: undefined\n        /**\n         * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n         * @default false\n         */\n        strict?: strict | undefined\n      }\n    | {\n        event?: undefined\n        events?: undefined\n        args?: undefined\n        strict?: undefined\n      }\n  )\n\nexport type WatchEventReturnType = () => void\n\nexport type WatchEventErrorType =\n  | StringifyErrorType\n  | ObserveErrorType\n  | ErrorType\n\n/**\n * Watches and returns emitted [Event Logs](https://viem.sh/docs/glossary/terms#event-log).\n *\n * - Docs: https://viem.sh/docs/actions/public/watchEvent\n * - JSON-RPC Methods:\n *   - **RPC Provider supports `eth_newFilter`:**\n *     - Calls [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter) to create a filter (called on initialize).\n *     - On a polling interval, it will call [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges).\n *   - **RPC Provider does not support `eth_newFilter`:**\n *     - Calls [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs) for each block between the polling interval.\n *\n * This Action will batch up all the Event Logs found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchEvent#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/actions/public/watchEvent#onLogs).\n *\n * `watchEvent` will attempt to create an [Event Filter](https://viem.sh/docs/actions/public/createEventFilter) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs) instead.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchEventParameters}\n * @returns A function that can be invoked to stop watching for new Event Logs. {@link WatchEventReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchEvent } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchEvent(client, {\n *   onLogs: (logs) => console.log(logs),\n * })\n */\nexport function watchEvent<\n  chain extends Chain | undefined,\n  const abiEvent extends AbiEvent | undefined = undefined,\n  const abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  transport extends Transport = Transport,\n  _eventName extends string | undefined = undefined,\n>(\n  client: Client<transport, chain>,\n  {\n    address,\n    args,\n    batch = true,\n    event,\n    events,\n    fromBlock,\n    onError,\n    onLogs,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n    strict: strict_,\n  }: WatchEventParameters<abiEvent, abiEvents, strict, transport>,\n): WatchEventReturnType {\n  const enablePolling = (() => {\n    if (typeof poll_ !== 'undefined') return poll_\n    if (typeof fromBlock === 'bigint') return true\n    if (client.transport.type === 'webSocket') return false\n    if (\n      client.transport.type === 'fallback' &&\n      client.transport.transports[0].config.type === 'webSocket'\n    )\n      return false\n    return true\n  })()\n  const strict = strict_ ?? false\n\n  const pollEvent = () => {\n    const observerId = stringify([\n      'watchEvent',\n      address,\n      args,\n      batch,\n      client.uid,\n      event,\n      pollingInterval,\n      fromBlock,\n    ])\n\n    return observe(observerId, { onLogs, onError }, (emit) => {\n      let previousBlockNumber: bigint\n      if (fromBlock !== undefined) previousBlockNumber = fromBlock - 1n\n      let filter: Filter<'event', abiEvents, _eventName, any>\n      let initialized = false\n\n      const unwatch = poll(\n        async () => {\n          if (!initialized) {\n            try {\n              filter = (await getAction(\n                client,\n                createEventFilter as any,\n                'createEventFilter',\n              )({\n                address,\n                args,\n                event: event!,\n                events,\n                strict,\n                fromBlock,\n              } as unknown as CreateEventFilterParameters)) as unknown as Filter<\n                'event',\n                abiEvents,\n                _eventName\n              >\n            } catch {}\n            initialized = true\n            return\n          }\n\n          try {\n            let logs: Log[]\n            if (filter) {\n              logs = await getAction(\n                client,\n                getFilterChanges,\n                'getFilterChanges',\n              )({ filter })\n            } else {\n              // If the filter doesn't exist, we will fall back to use `getLogs`.\n              // The fall back exists because some RPC Providers do not support filters.\n\n              // Fetch the block number to use for `getLogs`.\n              const blockNumber = await getAction(\n                client,\n                getBlockNumber,\n                'getBlockNumber',\n              )({})\n\n              // If the block number has changed, we will need to fetch the logs.\n              // If the block number doesn't exist, we are yet to reach the first poll interval,\n              // so do not emit any logs.\n              if (previousBlockNumber && previousBlockNumber !== blockNumber) {\n                logs = await getAction(\n                  client,\n                  getLogs,\n                  'getLogs',\n                )({\n                  address,\n                  args,\n                  event: event!,\n                  events,\n                  fromBlock: previousBlockNumber + 1n,\n                  toBlock: blockNumber,\n                } as unknown as GetLogsParameters)\n              } else {\n                logs = []\n              }\n              previousBlockNumber = blockNumber\n            }\n\n            if (logs.length === 0) return\n            if (batch) emit.onLogs(logs as any)\n            else for (const log of logs) emit.onLogs([log] as any)\n          } catch (err) {\n            // If a filter has been set and gets uninstalled, providers will throw an InvalidInput error.\n            // Reinitialize the filter when this occurs\n            if (filter && err instanceof InvalidInputRpcError)\n              initialized = false\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin: true,\n          interval: pollingInterval,\n        },\n      )\n\n      return async () => {\n        if (filter)\n          await getAction(\n            client,\n            uninstallFilter,\n            'uninstallFilter',\n          )({ filter })\n        unwatch()\n      }\n    })\n  }\n\n  const subscribeEvent = () => {\n    let active = true\n    let unsubscribe = () => (active = false)\n    ;(async () => {\n      try {\n        const transport = (() => {\n          if (client.transport.type === 'fallback') {\n            const transport = client.transport.transports.find(\n              (transport: ReturnType<Transport>) =>\n                transport.config.type === 'webSocket',\n            )\n            if (!transport) return client.transport\n            return transport.value\n          }\n          return client.transport\n        })()\n\n        const events_ = events ?? (event ? [event] : undefined)\n        let topics: LogTopic[] = []\n        if (events_) {\n          const encoded = (events_ as AbiEvent[]).flatMap((event) =>\n            encodeEventTopics({\n              abi: [event],\n              eventName: (event as AbiEvent).name,\n              args,\n            } as EncodeEventTopicsParameters),\n          )\n          // TODO: Clean up type casting\n          topics = [encoded as LogTopic]\n          if (event) topics = topics[0] as LogTopic[]\n        }\n\n        const { unsubscribe: unsubscribe_ } = await transport.subscribe({\n          params: ['logs', { address, topics }],\n          onData(data: any) {\n            if (!active) return\n            const log = data.result\n            try {\n              const { eventName, args } = decodeEventLog({\n                abi: events_ ?? [],\n                data: log.data,\n                topics: log.topics,\n                strict,\n              })\n              const formatted = formatLog(log, { args, eventName })\n              onLogs([formatted] as any)\n            } catch (err) {\n              let eventName: string | undefined\n              let isUnnamed: boolean | undefined\n              if (\n                err instanceof DecodeLogDataMismatch ||\n                err instanceof DecodeLogTopicsMismatch\n              ) {\n                // If strict mode is on, and log data/topics do not match event definition, skip.\n                if (strict_) return\n                eventName = err.abiItem.name\n                isUnnamed = err.abiItem.inputs?.some(\n                  (x) => !('name' in x && x.name),\n                )\n              }\n\n              // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n              const formatted = formatLog(log, {\n                args: isUnnamed ? [] : {},\n                eventName,\n              })\n              onLogs([formatted] as any)\n            }\n          },\n          onError(error: Error) {\n            onError?.(error)\n          },\n        })\n        unsubscribe = unsubscribe_\n        if (!active) unsubscribe()\n      } catch (err) {\n        onError?.(err as Error)\n      }\n    })()\n    return () => unsubscribe()\n  }\n\n  return enablePolling ? pollEvent() : subscribeEvent()\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { GetPollOptions } from '../../types/transport.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { type ObserveErrorType, observe } from '../../utils/observe.js'\nimport { poll } from '../../utils/poll.js'\nimport { type StringifyErrorType, stringify } from '../../utils/stringify.js'\n\nimport { createPendingTransactionFilter } from './createPendingTransactionFilter.js'\nimport { getFilterChanges } from './getFilterChanges.js'\nimport { uninstallFilter } from './uninstallFilter.js'\n\nexport type OnTransactionsParameter = Hash[]\nexport type OnTransactionsFn = (transactions: OnTransactionsParameter) => void\n\nexport type WatchPendingTransactionsParameters<\n  transport extends Transport = Transport,\n> = {\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: ((error: Error) => void) | undefined\n  /** The callback to call when new transactions are received. */\n  onTransactions: OnTransactionsFn\n} & GetPollOptions<transport>\n\nexport type WatchPendingTransactionsReturnType = () => void\n\nexport type WatchPendingTransactionsErrorType =\n  | StringifyErrorType\n  | ObserveErrorType\n  | ErrorType\n\n/**\n * Watches and returns pending transaction hashes.\n *\n * - Docs: https://viem.sh/docs/actions/public/watchPendingTransactions\n * - JSON-RPC Methods:\n *   - When `poll: true`\n *     - Calls [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter) to initialize the filter.\n *     - Calls [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getFilterChanges) on a polling interval.\n *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newPendingTransactions\"` event.\n *\n * This Action will batch up all the pending transactions found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchPendingTransactions#pollinginterval-optional), and invoke them via [`onTransactions`](https://viem.sh/docs/actions/public/watchPendingTransactions#ontransactions).\n *\n * @param client - Client to use\n * @param parameters - {@link WatchPendingTransactionsParameters}\n * @returns A function that can be invoked to stop watching for new pending transaction hashes. {@link WatchPendingTransactionsReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchPendingTransactions } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = await watchPendingTransactions(client, {\n *   onTransactions: (hashes) => console.log(hashes),\n * })\n */\nexport function watchPendingTransactions<\n  transport extends Transport,\n  chain extends Chain | undefined,\n>(\n  client: Client<transport, chain>,\n  {\n    batch = true,\n    onError,\n    onTransactions,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n  }: WatchPendingTransactionsParameters<transport>,\n) {\n  const enablePolling =\n    typeof poll_ !== 'undefined' ? poll_ : client.transport.type !== 'webSocket'\n\n  const pollPendingTransactions = () => {\n    const observerId = stringify([\n      'watchPendingTransactions',\n      client.uid,\n      batch,\n      pollingInterval,\n    ])\n    return observe(observerId, { onTransactions, onError }, (emit) => {\n      let filter: Filter<'transaction'>\n\n      const unwatch = poll(\n        async () => {\n          try {\n            if (!filter) {\n              try {\n                filter = await getAction(\n                  client,\n                  createPendingTransactionFilter,\n                  'createPendingTransactionFilter',\n                )({})\n                return\n              } catch (err) {\n                unwatch()\n                throw err\n              }\n            }\n\n            const hashes = await getAction(\n              client,\n              getFilterChanges,\n              'getFilterChanges',\n            )({ filter })\n            if (hashes.length === 0) return\n            if (batch) emit.onTransactions(hashes)\n            else for (const hash of hashes) emit.onTransactions([hash])\n          } catch (err) {\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin: true,\n          interval: pollingInterval,\n        },\n      )\n\n      return async () => {\n        if (filter)\n          await getAction(\n            client,\n            uninstallFilter,\n            'uninstallFilter',\n          )({ filter })\n        unwatch()\n      }\n    })\n  }\n\n  const subscribePendingTransactions = () => {\n    let active = true\n    let unsubscribe = () => (active = false)\n    ;(async () => {\n      try {\n        const { unsubscribe: unsubscribe_ } = await client.transport.subscribe({\n          params: ['newPendingTransactions'],\n          onData(data: any) {\n            if (!active) return\n            const transaction = data.result\n            onTransactions([transaction])\n          },\n          onError(error: Error) {\n            onError?.(error)\n          },\n        })\n        unsubscribe = unsubscribe_\n        if (!active) unsubscribe()\n      } catch (err) {\n        onError?.(err as Error)\n      }\n    })()\n    return () => unsubscribe()\n  }\n\n  return enablePolling\n    ? pollPendingTransactions()\n    : subscribePendingTransactions()\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport { hashMessage } from '../../utils/signature/hashMessage.js'\nimport type { HashMessageErrorType } from '../../utils/signature/hashMessage.js'\nimport { parseSiweMessage } from '../../utils/siwe/parseSiweMessage.js'\nimport {\n  type ValidateSiweMessageParameters,\n  validateSiweMessage,\n} from '../../utils/siwe/validateSiweMessage.js'\nimport {\n  type VerifyHashErrorType,\n  type VerifyHashParameters,\n  verifyHash,\n} from '../public/verifyHash.js'\n\nexport type VerifySiweMessageParameters = Prettify<\n  Pick<VerifyHashParameters, 'blockNumber' | 'blockTag'> &\n    Pick<\n      ValidateSiweMessageParameters,\n      'address' | 'domain' | 'nonce' | 'scheme' | 'time'\n    > & {\n      /**\n       * EIP-4361 formatted message.\n       */\n      message: string\n      /**\n       * Signature to check against.\n       */\n      signature: Hex\n    }\n>\n\nexport type VerifySiweMessageReturnType = boolean\n\nexport type VerifySiweMessageErrorType =\n  | HashMessageErrorType\n  | VerifyHashErrorType\n  | ErrorType\n\n/**\n * Verifies [EIP-4361](https://eips.ethereum.org/EIPS/eip-4361) formatted message was signed.\n *\n * Compatible with Smart Contract Accounts & Externally Owned Accounts via [ERC-6492](https://eips.ethereum.org/EIPS/eip-6492).\n *\n * - Docs {@link https://viem.sh/docs/siwe/actions/verifySiweMessage}\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifySiweMessageParameters}\n * @returns Whether or not the signature is valid. {@link VerifySiweMessageReturnType}\n */\nexport async function verifySiweMessage<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  parameters: VerifySiweMessageParameters,\n): Promise<VerifySiweMessageReturnType> {\n  const {\n    address,\n    domain,\n    message,\n    nonce,\n    scheme,\n    signature,\n    time = new Date(),\n    ...callRequest\n  } = parameters\n\n  const parsed = parseSiweMessage(message)\n  if (!parsed.address) return false\n\n  const isValid = validateSiweMessage({\n    address,\n    domain,\n    message: parsed,\n    nonce,\n    scheme,\n    time,\n  })\n  if (!isValid) return false\n\n  const hash = hashMessage(message)\n  return verifyHash(client, {\n    address: parsed.address,\n    hash,\n    signature,\n    ...callRequest,\n  })\n}\n","import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type DropTransactionParameters = {\n  /** The hash of the transaction to drop. */\n  hash: Hash\n}\n\nexport type DropTransactionErrorType = RequestErrorType | ErrorType\n\n/**\n * Removes a transaction from the mempool.\n *\n * - Docs: https://viem.sh/docs/actions/test/dropTransaction\n *\n * @param client - Client to use\n * @param parameters - {@link DropTransactionParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { dropTransaction } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await dropTransaction(client, {\n *   hash: '0xe58dceb6b20b03965bb678e27d141e151d7d4efc2334c2d6a49b9fac523f7364'\n * })\n */\nexport async function dropTransaction<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n  { hash }: DropTransactionParameters,\n) {\n  await client.request({\n    method: `${client.mode}_dropTransaction`,\n    params: [hash],\n  })\n}\n","import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type DumpStateReturnType = Hex\nexport type DumpStateErrorType = RequestErrorType | ErrorType\n\n/**\n * Serializes the current state (including contracts code, contract's storage,\n * accounts properties, etc.) into a savable data blob.\n *\n * - Docs: https://viem.sh/docs/actions/test/dumpState\n *\n * @param client - Client to use\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { dumpState } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await dumpState(client)\n */\nexport async function dumpState<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n): Promise<DumpStateReturnType> {\n  return client.request({\n    method: `${client.mode}_dumpState`,\n  })\n}\n","import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type GetAutomineReturnType = boolean\n\nexport type GetAutomineErrorType = RequestErrorType | ErrorType\n\n/**\n * Returns the automatic mining status of the node.\n *\n * - Docs: https://viem.sh/docs/actions/test/getAutomine\n *\n * @param client - Client to use\n * @returns Whether or not the node is auto mining. {@link GetAutomineReturnType}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { getAutomine } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * const isAutomining = await getAutomine(client)\n */\nexport async function getAutomine<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n): Promise<GetAutomineReturnType> {\n  if (client.mode === 'ganache')\n    return await client.request({\n      method: 'eth_mining',\n    })\n  return await client.request({\n    method: `${client.mode}_getAutomine`,\n  })\n}\n","import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RpcTransaction } from '../../types/rpc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type GetTxpoolContentReturnType = {\n  /** Pending transactions in the pool */\n  pending: Record<Address, Record<string, RpcTransaction>>\n  /** Queued transactions in the pool */\n  queued: Record<Address, Record<string, RpcTransaction>>\n}\n\nexport type GetTxpoolContentErrorType = RequestErrorType | ErrorType\n\n/**\n * Returns the details of all transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\n *\n * - Docs: https://viem.sh/docs/actions/test/getTxpoolContent\n *\n * @param client - Client to use\n * @returns Transaction pool content. {@link GetTxpoolContentReturnType}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { getTxpoolContent } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * const content = await getTxpoolContent(client)\n */\nexport async function getTxpoolContent<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n): Promise<GetTxpoolContentReturnType> {\n  return await client.request({\n    method: 'txpool_content',\n  })\n}\n","import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { hexToNumber } from '../../utils/encoding/fromHex.js'\n\nexport type GetTxpoolStatusReturnType = {\n  pending: number\n  queued: number\n}\n\nexport type GetTxpoolStatusErrorType = RequestErrorType | ErrorType\n\n/**\n * Returns a summary of all the transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\n *\n * - Docs: https://viem.sh/docs/actions/test/getTxpoolStatus\n *\n * @param client - Client to use\n * @returns Transaction pool status. {@link GetTxpoolStatusReturnType}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { getTxpoolStatus } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * const status = await getTxpoolStatus(client)\n */\nexport async function getTxpoolStatus<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n): Promise<GetTxpoolStatusReturnType> {\n  const { pending, queued } = await client.request({\n    method: 'txpool_status',\n  })\n  return {\n    pending: hexToNumber(pending),\n    queued: hexToNumber(queued),\n  }\n}\n","import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type ImpersonateAccountParameters = {\n  /** The account to impersonate. */\n  address: Address\n}\n\nexport type ImpersonateAccountErrorType = RequestErrorType | ErrorType\n\n/**\n * Impersonate an account or contract address. This lets you send transactions from that account even if you don't have access to its private key.\n *\n * - Docs: https://viem.sh/docs/actions/test/impersonateAccount\n *\n * @param client - Client to use\n * @param parameters - {@link ImpersonateAccountParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { impersonateAccount } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * const content = await impersonateAccount(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n */\nexport async function impersonateAccount<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n  { address }: ImpersonateAccountParameters,\n) {\n  await client.request({\n    method: `${client.mode}_impersonateAccount`,\n    params: [address],\n  })\n}\n","import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type IncreaseTimeParameters = {\n  /** The amount of seconds to jump forward in time. */\n  seconds: number\n}\n\nexport type IncreaseTimeErrorType = RequestErrorType | ErrorType\n\n/**\n * Jump forward in time by the given amount of time, in seconds.\n *\n * - Docs: https://viem.sh/docs/actions/test/increaseTime\n *\n * @param client - Client to use\n * @param parameters – {@link IncreaseTimeParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { increaseTime } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await increaseTime(client, {\n *   seconds: 420,\n * })\n */\nexport async function increaseTime<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n  { seconds }: IncreaseTimeParameters,\n) {\n  return await client.request({\n    method: 'evm_increaseTime',\n    params: [numberToHex(seconds)],\n  })\n}\n","import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type InspectTxpoolReturnType = {\n  pending: Record<Address, Record<string, string>>\n  queued: Record<Address, Record<string, string>>\n}\n\nexport type InspectTxpoolErrorType = RequestErrorType | ErrorType\n\n/**\n * Returns a summary of all the transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\n *\n * - Docs: https://viem.sh/docs/actions/test/inspectTxpool\n *\n * @param client - Client to use\n * @returns Transaction pool inspection data. {@link InspectTxpoolReturnType}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { inspectTxpool } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * const data = await inspectTxpool(client)\n */\nexport async function inspectTxpool<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n): Promise<InspectTxpoolReturnType> {\n  return await client.request({\n    method: 'txpool_inspect',\n  })\n}\n","import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type LoadStateParameters = { state: Hex }\nexport type LoadStateReturnType = void\nexport type LoadStateErrorType = RequestErrorType | ErrorType\n\n/**\n * Adds state previously dumped with `dumpState` to the current chain.\n *\n * - Docs: https://viem.sh/docs/actions/test/loadState\n *\n * @param client - Client to use\n * @param parameters - {@link LoadStateParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { loadState } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await loadState(client, { state: '0x...' })\n */\nexport async function loadState<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n  { state }: LoadStateParameters,\n): Promise<LoadStateReturnType> {\n  await client.request({\n    method: `${client.mode}_loadState`,\n    params: [state],\n  })\n}\n","import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type MineParameters = {\n  /** Number of blocks to mine. */\n  blocks: number\n  /** Interval between each block in seconds. */\n  interval?: number | undefined\n}\n\nexport type MineErrorType = RequestErrorType | ErrorType\n\n/**\n * Mine a specified number of blocks.\n *\n * - Docs: https://viem.sh/docs/actions/test/mine\n *\n * @param client - Client to use\n * @param parameters – {@link MineParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { mine } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await mine(client, { blocks: 1 })\n */\nexport async function mine<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n  { blocks, interval }: MineParameters,\n) {\n  if (client.mode === 'ganache')\n    await client.request({\n      method: 'evm_mine',\n      params: [{ blocks: numberToHex(blocks) }],\n    })\n  else\n    await client.request({\n      method: `${client.mode}_mine`,\n      params: [numberToHex(blocks), numberToHex(interval || 0)],\n    })\n}\n","import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type RemoveBlockTimestampIntervalErrorType = RequestErrorType | ErrorType\n\n/**\n * Removes [`setBlockTimestampInterval`](https://viem.sh/docs/actions/test/setBlockTimestampInterval) if it exists.\n *\n * - Docs: https://viem.sh/docs/actions/test/removeBlockTimestampInterval\n *\n * @param client - Client to use\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { removeBlockTimestampInterval } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await removeBlockTimestampInterval(client)\n */\nexport async function removeBlockTimestampInterval<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(client: TestClient<TestClientMode, Transport, chain, account, false>) {\n  await client.request({\n    method: `${client.mode}_removeBlockTimestampInterval`,\n  })\n}\n","import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type ResetParameters = {\n  /** The block number to reset from. */\n  blockNumber?: bigint | undefined\n  /** The JSON RPC URL. */\n  jsonRpcUrl?: string | undefined\n}\n\nexport type ResetErrorType = RequestErrorType | ErrorType\n\n/**\n * Resets fork back to its original state.\n *\n * - Docs: https://viem.sh/docs/actions/test/reset\n *\n * @param client - Client to use\n * @param parameters – {@link ResetParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { reset } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await reset(client, { blockNumber: 69420n })\n */\nexport async function reset<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n  { blockNumber, jsonRpcUrl }: ResetParameters = {},\n) {\n  await client.request({\n    method: `${client.mode}_reset`,\n    params: [{ forking: { blockNumber: Number(blockNumber), jsonRpcUrl } }],\n  })\n}\n","import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Quantity } from '../../types/rpc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type RevertParameters = {\n  /** The snapshot ID to revert to. */\n  id: Quantity\n}\n\nexport type RevertErrorType = RequestErrorType | ErrorType\n\n/**\n * Revert the state of the blockchain at the current block.\n *\n * - Docs: https://viem.sh/docs/actions/test/revert\n *\n * @param client - Client to use\n * @param parameters – {@link RevertParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { revert } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await revert(client, { id: '0x…' })\n */\nexport async function revert<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n  { id }: RevertParameters,\n) {\n  await client.request({\n    method: 'evm_revert',\n    params: [id],\n  })\n}\n","import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { extract } from '../../utils/formatters/extract.js'\nimport {\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\n\nexport type SendUnsignedTransactionParameters<\n  chain extends Chain | undefined = Chain | undefined,\n> = FormattedTransactionRequest<chain>\n\nexport type SendUnsignedTransactionReturnType = Hash\n\nexport type SendUnsignedTransactionErrorType = RequestErrorType | ErrorType\n\n/**\n * Executes a transaction regardless of the signature.\n *\n * - Docs: https://viem.sh/docs/actions/test/sendUnsignedTransaction#sendunsignedtransaction\n *\n * @param client - Client to use\n * @param parameters – {@link SendUnsignedTransactionParameters}\n * @returns The transaction hash. {@link SendUnsignedTransactionReturnType}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { sendUnsignedTransaction } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * const hash = await sendUnsignedTransaction(client, {\n *   from: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: 1000000000000000000n,\n * })\n */\nexport async function sendUnsignedTransaction<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n  args: SendUnsignedTransactionParameters<chain>,\n): Promise<SendUnsignedTransactionReturnType> {\n  const {\n    accessList,\n    data,\n    from,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    to,\n    value,\n    ...rest\n  } = args\n\n  const chainFormat = client.chain?.formatters?.transactionRequest?.format\n  const format = chainFormat || formatTransactionRequest\n\n  const request = format({\n    // Pick out extra data that might exist on the chain's transaction request type.\n    ...extract(rest, { format: chainFormat }),\n    accessList,\n    data,\n    from,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    to,\n    value,\n  } as TransactionRequest)\n  const hash = await client.request({\n    method: 'eth_sendUnsignedTransaction',\n    params: [request],\n  })\n  return hash\n}\n","import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type SetAutomineErrorType = RequestErrorType | ErrorType\n\n/**\n * Enables or disables the automatic mining of new blocks with each new transaction submitted to the network.\n *\n * - Docs: https://viem.sh/docs/actions/test/setAutomine\n *\n * @param client - Client to use\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setAutomine } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setAutomine(client)\n */\nexport async function setAutomine<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n  enabled: boolean,\n) {\n  if (client.mode === 'ganache') {\n    if (enabled) await client.request({ method: 'miner_start' })\n    else await client.request({ method: 'miner_stop' })\n  } else\n    await client.request({\n      method: 'evm_setAutomine',\n      params: [enabled],\n    })\n}\n","import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type SetBalanceParameters = {\n  /** The account address. */\n  address: Address\n  /** Amount (in wei) to set */\n  value: bigint\n}\n\nexport type SetBalanceErrorType = RequestErrorType | ErrorType\n\n/**\n * Modifies the balance of an account.\n *\n * - Docs: https://viem.sh/docs/actions/test/setBalance\n *\n * @param client - Client to use\n * @param parameters – {@link SetBalanceParameters}\n *\n * @example\n * import { createTestClient, http, parseEther } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setBalance } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setBalance(client, {\n *   address: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\n *   value: parseEther('1'),\n * })\n */\nexport async function setBalance<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n  { address, value }: SetBalanceParameters,\n) {\n  if (client.mode === 'ganache')\n    await client.request({\n      method: 'evm_setAccountBalance',\n      params: [address, numberToHex(value)],\n    })\n  else\n    await client.request({\n      method: `${client.mode}_setBalance`,\n      params: [address, numberToHex(value)],\n    })\n}\n","import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type SetBlockGasLimitParameters = {\n  /** Gas limit (in wei). */\n  gasLimit: bigint\n}\n\nexport type SetBlockGasLimitErrorType = RequestErrorType | ErrorType\n\n/**\n * Sets the block's gas limit.\n *\n * - Docs: https://viem.sh/docs/actions/test/setBlockGasLimit\n *\n * @param client - Client to use\n * @param parameters – {@link SetBlockGasLimitParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setBlockGasLimit } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setBlockGasLimit(client, { gasLimit: 420_000n })\n */\nexport async function setBlockGasLimit<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n  { gasLimit }: SetBlockGasLimitParameters,\n) {\n  await client.request({\n    method: 'evm_setBlockGasLimit',\n    params: [numberToHex(gasLimit)],\n  })\n}\n","import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type SetBlockTimestampIntervalParameters = {\n  /** The interval (in seconds). */\n  interval: number\n}\n\nexport type SetBlockTimestampIntervalErrorType = RequestErrorType | ErrorType\n\n/**\n * Similar to [`increaseTime`](https://viem.sh/docs/actions/test/increaseTime), but sets a block timestamp `interval`. The timestamp of future blocks will be computed as `lastBlock_timestamp` + `interval`.\n *\n * - Docs: https://viem.sh/docs/actions/test/setBlockTimestampInterval\n *\n * @param client - Client to use\n * @param parameters – {@link SetBlockTimestampIntervalParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setBlockTimestampInterval } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setBlockTimestampInterval(client, { interval: 5 })\n */\nexport async function setBlockTimestampInterval<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n  { interval }: SetBlockTimestampIntervalParameters,\n) {\n  const interval_ = (() => {\n    if (client.mode === 'hardhat') return interval * 1000\n    return interval\n  })()\n\n  await client.request({\n    method: `${client.mode}_setBlockTimestampInterval`,\n    params: [interval_],\n  })\n}\n","import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type SetCodeParameters = {\n  /** The account address. */\n  address: Address\n  /** The bytecode to set */\n  bytecode: Hex\n}\n\nexport type SetCodeErrorType = RequestErrorType | ErrorType\n\n/**\n * Modifies the bytecode stored at an account's address.\n *\n * - Docs: https://viem.sh/docs/actions/test/setCode\n *\n * @param client - Client to use\n * @param parameters – {@link SetCodeParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setCode } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setCode(client, {\n *   address: '0xe846c6fcf817734ca4527b28ccb4aea2b6663c79',\n *   bytecode: '0x60806040526000600355600019600955600c80546001600160a01b031916737a250d5630b4cf539739df…',\n * })\n */\nexport async function setCode<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n  { address, bytecode }: SetCodeParameters,\n) {\n  if (client.mode === 'ganache')\n    await client.request({\n      method: 'evm_setAccountCode',\n      params: [address, bytecode],\n    })\n  else\n    await client.request({\n      method: `${client.mode}_setCode`,\n      params: [address, bytecode],\n    })\n}\n","import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type SetCoinbaseParameters = {\n  /** The coinbase address. */\n  address: Address\n}\n\nexport type SetCoinbaseErrorType = RequestErrorType | ErrorType\n\n/**\n * Sets the coinbase address to be used in new blocks.\n *\n * - Docs: https://viem.sh/docs/actions/test/setCoinbase\n *\n * @param client - Client to use\n * @param parameters – {@link SetCoinbaseParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setCoinbase } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setCoinbase(client, {\n *   address: '0xe846c6fcf817734ca4527b28ccb4aea2b6663c79',\n * })\n */\nexport async function setCoinbase<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n  { address }: SetCoinbaseParameters,\n) {\n  await client.request({\n    method: `${client.mode}_setCoinbase`,\n    params: [address],\n  })\n}\n","import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type SetIntervalMiningParameters = {\n  /** The mining interval. */\n  interval: number\n}\n\nexport type SetIntervalMiningErrorType = RequestErrorType | ErrorType\n\n/**\n * Sets the automatic mining interval (in seconds) of blocks. Setting the interval to 0 will disable automatic mining.\n *\n * - Docs: https://viem.sh/docs/actions/test/setIntervalMining\n *\n * @param client - Client to use\n * @param parameters – {@link SetIntervalMiningParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setIntervalMining } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setIntervalMining(client, { interval: 5 })\n */\nexport async function setIntervalMining<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n  { interval }: SetIntervalMiningParameters,\n) {\n  const interval_ = (() => {\n    if (client.mode === 'hardhat') return interval * 1000\n    return interval\n  })()\n\n  await client.request({\n    method: 'evm_setIntervalMining',\n    params: [interval_],\n  })\n}\n","import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type SetLoggingEnabledErrorType = RequestErrorType | ErrorType\n\n/**\n * Enable or disable logging on the test node network.\n *\n * - Docs: https://viem.sh/docs/actions/test/setLoggingEnabled\n *\n * @param client - Client to use\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setLoggingEnabled } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setLoggingEnabled(client)\n */\nexport async function setLoggingEnabled<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n  enabled: boolean,\n) {\n  await client.request({\n    method: `${client.mode}_setLoggingEnabled`,\n    params: [enabled],\n  })\n}\n","import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type SetMinGasPriceParameters = {\n  /** The gas price. */\n  gasPrice: bigint\n}\n\nexport type SetMinGasPriceErrorType = RequestErrorType | ErrorType\n\n/**\n * Change the minimum gas price accepted by the network (in wei).\n *\n * - Docs: https://viem.sh/docs/actions/test/setMinGasPrice\n *\n * Note: `setMinGasPrice` can only be used on clients that do not have EIP-1559 enabled.\n *\n * @param client - Client to use\n * @param parameters – {@link SetBlockGasLimitParameters}\n *\n * @example\n * import { createTestClient, http, parseGwei } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setMinGasPrice } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setMinGasPrice(client, {\n *   gasPrice: parseGwei('20'),\n * })\n */\nexport async function setMinGasPrice<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n  { gasPrice }: SetMinGasPriceParameters,\n) {\n  await client.request({\n    method: `${client.mode}_setMinGasPrice`,\n    params: [numberToHex(gasPrice)],\n  })\n}\n","import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type SetNextBlockBaseFeePerGasParameters = {\n  /** Base fee per gas (in wei). */\n  baseFeePerGas: bigint\n}\n\nexport type SetNextBlockBaseFeePerGasErrorType = RequestErrorType | ErrorType\n\n/**\n * Sets the next block's base fee per gas.\n *\n * - Docs: https://viem.sh/docs/actions/test/setNextBlockBaseFeePerGas\n *\n * @param client - Client to use\n * @param parameters – {@link SetNextBlockBaseFeePerGasParameters}\n *\n * @example\n * import { createTestClient, http, parseGwei } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setNextBlockBaseFeePerGas } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setNextBlockBaseFeePerGas(client, {\n *   baseFeePerGas: parseGwei('20'),\n * })\n */\nexport async function setNextBlockBaseFeePerGas<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n  { baseFeePerGas }: SetNextBlockBaseFeePerGasParameters,\n) {\n  await client.request({\n    method: `${client.mode}_setNextBlockBaseFeePerGas`,\n    params: [numberToHex(baseFeePerGas)],\n  })\n}\n","import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type SetNextBlockTimestampParameters = {\n  /** The timestamp (in seconds). */\n  timestamp: bigint\n}\n\nexport type SetNextBlockTimestampErrorType = RequestErrorType | ErrorType\n\n/**\n * Sets the next block's timestamp.\n *\n * - Docs: https://viem.sh/docs/actions/test/setNextBlockTimestamp\n *\n * @param client - Client to use\n * @param parameters – {@link SetNextBlockTimestampParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setNextBlockTimestamp } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setNextBlockTimestamp(client, { timestamp: 1671744314n })\n */\nexport async function setNextBlockTimestamp<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n  { timestamp }: SetNextBlockTimestampParameters,\n) {\n  await client.request({\n    method: 'evm_setNextBlockTimestamp',\n    params: [numberToHex(timestamp)],\n  })\n}\n","import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type SetNonceParameters = {\n  /** The account address. */\n  address: Address\n  /** The nonce to set. */\n  nonce: number\n}\n\nexport type SetNonceErrorType = RequestErrorType | ErrorType\n\n/**\n * Modifies (overrides) the nonce of an account.\n *\n * - Docs: https://viem.sh/docs/actions/test/setNonce\n *\n * @param client - Client to use\n * @param parameters – {@link SetNonceParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setNonce } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setNonce(client, {\n *   address: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\n *   nonce: 420,\n * })\n */\nexport async function setNonce<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n  { address, nonce }: SetNonceParameters,\n) {\n  await client.request({\n    method: `${client.mode}_setNonce`,\n    params: [address, numberToHex(nonce)],\n  })\n}\n","import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type SetRpcUrlErrorType = RequestErrorType | ErrorType\n\n/**\n * Sets the backend RPC URL.\n *\n * - Docs: https://viem.sh/docs/actions/test/setRpcUrl\n *\n * @param client - Client to use\n * @param jsonRpcUrl – RPC URL\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setRpcUrl } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setRpcUrl(client, 'https://eth-mainnet.g.alchemy.com/v2')\n */\nexport async function setRpcUrl<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n  jsonRpcUrl: string,\n) {\n  await client.request({\n    method: `${client.mode}_setRpcUrl`,\n    params: [jsonRpcUrl],\n  })\n}\n","import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash, Hex } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type SetStorageAtParameters = {\n  /** The account address. */\n  address: Address\n  /** The storage slot (index). Can either be a number or hash value. */\n  index: number | Hash\n  /** The value to store as a 32 byte hex string. */\n  value: Hex\n}\n\nexport type SetStorageAtErrorType = RequestErrorType | ErrorType\n\n/**\n * Writes to a slot of an account's storage.\n *\n * - Docs: https://viem.sh/docs/actions/test/setStorageAt\n *\n * @param client - Client to use\n * @param parameters – {@link SetStorageAtParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setStorageAt } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setStorageAt(client, {\n *   address: '0xe846c6fcf817734ca4527b28ccb4aea2b6663c79',\n *   index: 2,\n *   value: '0x0000000000000000000000000000000000000000000000000000000000000069',\n * })\n */\nexport async function setStorageAt<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n  { address, index, value }: SetStorageAtParameters,\n) {\n  await client.request({\n    method: `${client.mode}_setStorageAt`,\n    params: [\n      address,\n      typeof index === 'number' ? numberToHex(index) : index,\n      value,\n    ],\n  })\n}\n","import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type SnapshotErrorType = RequestErrorType | ErrorType\n\n/**\n * Snapshot the state of the blockchain at the current block.\n *\n * - Docs: https://viem.sh/docs/actions/test/snapshot\n *\n * @param client - Client to use\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { snapshot } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await snapshot(client)\n */\nexport async function snapshot<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(client: TestClient<TestClientMode, Transport, chain, account, false>) {\n  return await client.request({\n    method: 'evm_snapshot',\n  })\n}\n","import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type StopImpersonatingAccountParameters = {\n  /** The account to impersonate. */\n  address: Address\n}\n\nexport type StopImpersonatingAccountErrorType = RequestErrorType | ErrorType\n\n/**\n * Stop impersonating an account after having previously used [`impersonateAccount`](https://viem.sh/docs/actions/test/impersonateAccount).\n *\n * - Docs: https://viem.sh/docs/actions/test/stopImpersonatingAccount\n *\n * @param client - Client to use\n * @param parameters – {@link StopImpersonatingAccountParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { stopImpersonatingAccount } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await stopImpersonatingAccount(client, {\n *   address: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\n * })\n */\nexport async function stopImpersonatingAccount<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n  { address }: StopImpersonatingAccountParameters,\n) {\n  await client.request({\n    method: `${client.mode}_stopImpersonatingAccount`,\n    params: [address],\n  })\n}\n","import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type AddChainParameters = {\n  /** The chain to add to the wallet. */\n  chain: Chain\n}\n\nexport type AddChainErrorType =\n  | RequestErrorType\n  | NumberToHexErrorType\n  | ErrorType\n\n/**\n * Adds an EVM chain to the wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/addChain\n * - JSON-RPC Methods: [`eth_addEthereumChain`](https://eips.ethereum.org/EIPS/eip-3085)\n *\n * @param client - Client to use\n * @param parameters - {@link AddChainParameters}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { optimism } from 'viem/chains'\n * import { addChain } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   transport: custom(window.ethereum),\n * })\n * await addChain(client, { chain: optimism })\n */\nexport async function addChain<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(client: Client<Transport, chain, account>, { chain }: AddChainParameters) {\n  const { id, name, nativeCurrency, rpcUrls, blockExplorers } = chain\n  await client.request(\n    {\n      method: 'wallet_addEthereumChain',\n      params: [\n        {\n          chainId: numberToHex(id),\n          chainName: name,\n          nativeCurrency,\n          rpcUrls: rpcUrls.default.http,\n          blockExplorerUrls: blockExplorers\n            ? Object.values(blockExplorers).map(({ url }) => url)\n            : undefined,\n        },\n      ],\n    },\n    { dedupe: true, retryCount: 0 },\n  )\n}\n","import type { Abi } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { GetChainParameter } from '../../types/chain.js'\nimport type { ContractConstructorArgs } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { UnionEvaluate, UnionOmit } from '../../types/utils.js'\nimport { encodeDeployData } from '../../utils/abi/encodeDeployData.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type SendTransactionErrorType,\n  type SendTransactionParameters,\n  type SendTransactionReturnType,\n  sendTransaction,\n} from './sendTransaction.js'\n\nexport type DeployContractParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  ///\n  allArgs = ContractConstructorArgs<abi>,\n> = UnionOmit<\n  SendTransactionParameters<chain, account, chainOverride>,\n  'accessList' | 'chain' | 'to' | 'data'\n> &\n  GetChainParameter<chain, chainOverride> &\n  UnionEvaluate<\n    readonly [] extends allArgs\n      ? { args?: allArgs | undefined }\n      : { args: allArgs }\n  > & {\n    abi: abi\n    bytecode: Hex\n  }\n\nexport type DeployContractReturnType = SendTransactionReturnType\n\nexport type DeployContractErrorType = SendTransactionErrorType | ErrorType\n\n/**\n * Deploys a contract to the network, given bytecode and constructor arguments.\n *\n * - Docs: https://viem.sh/docs/contract/deployContract\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_deploying-contracts\n *\n * @param client - Client to use\n * @param parameters - {@link DeployContractParameters}\n * @returns The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link DeployContractReturnType}\n *\n * @example\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { deployContract } from 'viem/contract'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const hash = await deployContract(client, {\n *   abi: [],\n *   account: '0x…,\n *   bytecode: '0x608060405260405161083e38038061083e833981016040819052610...',\n * })\n */\nexport function deployContract<\n  const abi extends Abi | readonly unknown[],\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  chainOverride extends Chain | undefined,\n>(\n  walletClient: Client<Transport, chain, account>,\n  parameters: DeployContractParameters<abi, chain, account, chainOverride>,\n): Promise<DeployContractReturnType> {\n  const { abi, args, bytecode, ...request } =\n    parameters as DeployContractParameters\n  const calldata = encodeDeployData({ abi, args, bytecode })\n  return sendTransaction(walletClient, {\n    ...request,\n    ...(request.authorizationList ? { to: null } : {}),\n    data: calldata,\n  } as unknown as SendTransactionParameters<chain, account, chainOverride>)\n}\n","import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport {\n  type ChecksumAddressErrorType,\n  checksumAddress,\n} from '../../utils/address/getAddress.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type GetAddressesReturnType = Address[]\n\nexport type GetAddressesErrorType =\n  | RequestErrorType\n  | ChecksumAddressErrorType\n  | ErrorType\n\n/**\n * Returns a list of account addresses owned by the wallet or client.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/getAddresses\n * - JSON-RPC Methods: [`eth_accounts`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_accounts)\n *\n * @param client - Client to use\n * @returns List of account addresses owned by the wallet or client. {@link GetAddressesReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getAddresses } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const accounts = await getAddresses(client)\n */\nexport async function getAddresses<\n  chain extends Chain | undefined,\n  account extends Account | undefined = undefined,\n>(client: Client<Transport, chain, account>): Promise<GetAddressesReturnType> {\n  if (client.account?.type === 'local') return [client.account.address]\n  const addresses = await client.request(\n    { method: 'eth_accounts' },\n    { dedupe: true },\n  )\n  return addresses.map((address) => checksumAddress(address))\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { ExtractCapabilities } from '../../types/capabilities.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { WalletGetCallsStatusReturnType } from '../../types/eip1193.js'\nimport type { Prettify } from '../../types/utils.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { hexToBigInt, hexToNumber } from '../../utils/encoding/fromHex.js'\nimport { receiptStatuses } from '../../utils/formatters/transactionReceipt.js'\n\nexport type GetCallsStatusParameters = { id: string }\n\nexport type GetCallsStatusReturnType = Prettify<\n  Omit<\n    WalletGetCallsStatusReturnType<\n      ExtractCapabilities<'getCallsStatus', 'ReturnType'>,\n      number,\n      bigint,\n      'success' | 'reverted'\n    >,\n    'status'\n  > & {\n    statusCode: number\n    status: 'pending' | 'success' | 'failure' | undefined\n  }\n>\n\nexport type GetCallsStatusErrorType = RequestErrorType | ErrorType\n\n/**\n * Returns the status of a call batch that was sent via `sendCalls`.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/getCallsStatus\n * - JSON-RPC Methods: [`wallet_getCallsStatus`](https://eips.ethereum.org/EIPS/eip-5792)\n *\n * @param client - Client to use\n * @returns Status of the calls. {@link GetCallsStatusReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getCallsStatus } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const { receipts, status } = await getCallsStatus(client, { id: '0xdeadbeef' })\n */\nexport async function getCallsStatus<\n  chain extends Chain | undefined,\n  account extends Account | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: GetCallsStatusParameters,\n): Promise<GetCallsStatusReturnType> {\n  const {\n    atomic = false,\n    chainId,\n    receipts,\n    version = '2.0.0',\n    ...response\n  } = await client.request({\n    method: 'wallet_getCallsStatus',\n    params: [parameters.id],\n  })\n  const [status, statusCode] = (() => {\n    const statusCode = response.status\n    if (statusCode >= 100 && statusCode < 200)\n      return ['pending', statusCode] as const\n    if (statusCode >= 200 && statusCode < 300)\n      return ['success', statusCode] as const\n    if (statusCode >= 300 && statusCode < 700)\n      return ['failure', statusCode] as const\n    // @ts-expect-error: for backwards compatibility\n    if (statusCode === 'CONFIRMED') return ['success', 200] as const\n    // @ts-expect-error: for backwards compatibility\n    if (statusCode === 'PENDING') return ['pending', 100] as const\n    return [undefined, statusCode]\n  })()\n  return {\n    ...response,\n    atomic,\n    // @ts-expect-error: for backwards compatibility\n    chainId: chainId ? hexToNumber(chainId) : undefined,\n    receipts:\n      receipts?.map((receipt) => ({\n        ...receipt,\n        blockNumber: hexToBigInt(receipt.blockNumber),\n        gasUsed: hexToBigInt(receipt.gasUsed),\n        status: receiptStatuses[receipt.status as '0x0' | '0x1'],\n      })) ?? [],\n    statusCode,\n    status,\n    version,\n  }\n}\n","import type { Address } from 'abitype'\n\nimport { parseAccount } from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type {\n  Capabilities,\n  ChainIdToCapabilities,\n  ExtractCapabilities,\n} from '../../types/capabilities.js'\nimport type { Prettify } from '../../types/utils.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type GetCapabilitiesParameters<\n  chainId extends number | undefined = undefined,\n> = {\n  account?: Account | Address | undefined\n  chainId?: chainId | number | undefined\n}\n\nexport type GetCapabilitiesReturnType<\n  chainId extends number | undefined = undefined,\n> = Prettify<\n  chainId extends number\n    ? ExtractCapabilities<'getCapabilities', 'ReturnType'>\n    : ChainIdToCapabilities<\n        Capabilities<ExtractCapabilities<'getCapabilities', 'ReturnType'>>,\n        number\n      >\n>\n\nexport type GetCapabilitiesErrorType = RequestErrorType | ErrorType\n\n/**\n * Extract capabilities that a connected wallet supports (e.g. paymasters, session keys, etc).\n *\n * - Docs: https://viem.sh/docs/actions/wallet/getCapabilities\n * - JSON-RPC Methods: [`wallet_getCapabilities`](https://eips.ethereum.org/EIPS/eip-5792)\n *\n * @param client - Client to use\n * @returns The wallet's capabilities. {@link GetCapabilitiesReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getCapabilities } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const capabilities = await getCapabilities(client)\n */\nexport async function getCapabilities<\n  chainId extends number | undefined = undefined,\n>(\n  client: Client<Transport>,\n  parameters: GetCapabilitiesParameters<chainId> = {},\n): Promise<GetCapabilitiesReturnType<chainId>> {\n  const { account = client.account, chainId } = parameters\n\n  const account_ = account ? parseAccount(account) : undefined\n\n  const params = chainId\n    ? ([account_?.address, [numberToHex(chainId)]] as const)\n    : ([account_?.address] as const)\n  const capabilities_raw = await client.request({\n    method: 'wallet_getCapabilities',\n    params,\n  })\n\n  const capabilities = {} as ChainIdToCapabilities<\n    ExtractCapabilities<'getCapabilities', 'ReturnType'>,\n    number\n  >\n  for (const [chainId, capabilities_] of Object.entries(capabilities_raw)) {\n    capabilities[Number(chainId)] = {}\n    for (let [key, value] of Object.entries(capabilities_)) {\n      if (key === 'addSubAccount') key = 'unstable_addSubAccount'\n      capabilities[Number(chainId)][key] = value\n    }\n  }\n  return (\n    typeof chainId === 'number' ? capabilities[chainId] : capabilities\n  ) as never\n}\n","import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { WalletPermission } from '../../types/eip1193.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type GetPermissionsReturnType = WalletPermission[]\n\nexport type GetPermissionsErrorType = RequestErrorType | ErrorType\n\n/**\n * Gets the wallets current permissions.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/getPermissions\n * - JSON-RPC Methods: [`wallet_getPermissions`](https://eips.ethereum.org/EIPS/eip-2255)\n *\n * @param client - Client to use\n * @returns The wallet permissions. {@link GetPermissionsReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getPermissions } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const permissions = await getPermissions(client)\n */\nexport async function getPermissions<\n  chain extends Chain | undefined,\n  account extends Account | undefined = undefined,\n>(client: Client<Transport, chain, account>) {\n  const permissions = await client.request(\n    { method: 'wallet_getPermissions' },\n    { dedupe: true },\n  )\n  return permissions\n}\n","import type { Address } from 'abitype'\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  AccountNotFoundError,\n  type AccountNotFoundErrorType,\n} from '../../errors/account.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type {\n  Authorization,\n  AuthorizationRequest,\n} from '../../types/authorization.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { PartialBy } from '../../types/utils.js'\nimport { isAddressEqual } from '../../utils/address/isAddressEqual.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { getChainId } from '../public/getChainId.js'\nimport { getTransactionCount } from '../public/getTransactionCount.js'\n\nexport type PrepareAuthorizationParameters<\n  account extends Account | undefined = Account | undefined,\n> = GetAccountParameter<account> &\n  PartialBy<AuthorizationRequest, 'chainId' | 'nonce'> & {\n    /**\n     * Whether the EIP-7702 Transaction will be executed by the EOA (signing this Authorization) or another Account.\n     *\n     * By default, it will be assumed that the EIP-7702 Transaction will\n     * be executed by another Account.\n     */\n    executor?: 'self' | Account | Address | undefined\n  }\n\nexport type PrepareAuthorizationReturnType = Authorization\n\nexport type PrepareAuthorizationErrorType =\n  | ParseAccountErrorType\n  | RequestErrorType\n  | AccountNotFoundErrorType\n  | ErrorType\n\n/**\n * Prepares an [EIP-7702 Authorization](https://eips.ethereum.org/EIPS/eip-7702) object for signing.\n * This Action will fill the required fields of the Authorization object if they are not provided (e.g. `nonce` and `chainId`).\n *\n * With the prepared Authorization object, you can use [`signAuthorization`](https://viem.sh/docs/eip7702/signAuthorization) to sign over the Authorization object.\n *\n * @param client - Client to use\n * @param parameters - {@link PrepareAuthorizationParameters}\n * @returns The prepared Authorization object. {@link PrepareAuthorizationReturnType}\n *\n * @example\n * import { createClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { prepareAuthorization } from 'viem/experimental'\n *\n * const client = createClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const authorization = await prepareAuthorization(client, {\n *   account: privateKeyToAccount('0x..'),\n *   contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n *\n * @example\n * // Account Hoisting\n * import { createClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { prepareAuthorization } from 'viem/experimental'\n *\n * const client = createClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const authorization = await prepareAuthorization(client, {\n *   contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n */\nexport async function prepareAuthorization<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: PrepareAuthorizationParameters<account>,\n): Promise<PrepareAuthorizationReturnType> {\n  const { account: account_ = client.account, chainId, nonce } = parameters\n\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/eip7702/prepareAuthorization',\n    })\n  const account = parseAccount(account_)\n\n  const executor = (() => {\n    if (!parameters.executor) return undefined\n    if (parameters.executor === 'self') return parameters.executor\n    return parseAccount(parameters.executor)\n  })()\n\n  const authorization = {\n    address: parameters.contractAddress ?? parameters.address,\n    chainId,\n    nonce,\n  } as Authorization\n\n  if (typeof authorization.chainId === 'undefined')\n    authorization.chainId =\n      client.chain?.id ??\n      (await getAction(client, getChainId, 'getChainId')({}))\n\n  if (typeof authorization.nonce === 'undefined') {\n    authorization.nonce = await getAction(\n      client,\n      getTransactionCount,\n      'getTransactionCount',\n    )({\n      address: account.address,\n      blockTag: 'pending',\n    })\n    if (\n      executor === 'self' ||\n      (executor?.address && isAddressEqual(executor.address, account.address))\n    )\n      authorization.nonce += 1\n  }\n\n  return authorization\n}\n","import type { Address } from 'abitype'\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport {\n  type EstimateFeesPerGasErrorType,\n  internal_estimateFeesPerGas,\n} from '../../actions/public/estimateFeesPerGas.js'\nimport {\n  type EstimateGasErrorType,\n  type EstimateGasParameters,\n  estimateGas,\n} from '../../actions/public/estimateGas.js'\nimport {\n  type GetBlockErrorType,\n  getBlock as getBlock_,\n} from '../../actions/public/getBlock.js'\nimport {\n  type GetTransactionCountErrorType,\n  getTransactionCount,\n} from '../../actions/public/getTransactionCount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { AccountNotFoundErrorType } from '../../errors/account.js'\nimport {\n  Eip1559FeesNotSupportedError,\n  MaxFeePerGasTooLowError,\n} from '../../errors/fee.js'\nimport type { DeriveAccount, GetAccountParameter } from '../../types/account.js'\nimport type { Block } from '../../types/block.js'\nimport type { Chain, DeriveChain } from '../../types/chain.js'\nimport type { GetChainParameter } from '../../types/chain.js'\nimport type { GetTransactionRequestKzgParameter } from '../../types/kzg.js'\nimport type {\n  TransactionRequest,\n  TransactionRequestEIP1559,\n  TransactionRequestEIP2930,\n  TransactionRequestEIP4844,\n  TransactionRequestEIP7702,\n  TransactionRequestLegacy,\n  TransactionSerializable,\n} from '../../types/transaction.js'\nimport type {\n  ExactPartial,\n  IsNever,\n  Prettify,\n  UnionOmit,\n  UnionRequiredBy,\n} from '../../types/utils.js'\nimport { blobsToCommitments } from '../../utils/blob/blobsToCommitments.js'\nimport { blobsToProofs } from '../../utils/blob/blobsToProofs.js'\nimport { commitmentsToVersionedHashes } from '../../utils/blob/commitmentsToVersionedHashes.js'\nimport { toBlobSidecars } from '../../utils/blob/toBlobSidecars.js'\nimport type { FormattedTransactionRequest } from '../../utils/formatters/transactionRequest.js'\nimport { getAction } from '../../utils/getAction.js'\nimport type { NonceManager } from '../../utils/nonceManager.js'\nimport {\n  type AssertRequestErrorType,\n  type AssertRequestParameters,\n  assertRequest,\n} from '../../utils/transaction/assertRequest.js'\nimport {\n  type GetTransactionType,\n  getTransactionType,\n} from '../../utils/transaction/getTransactionType.js'\nimport { getChainId as getChainId_ } from '../public/getChainId.js'\n\nexport const defaultParameters = [\n  'blobVersionedHashes',\n  'chainId',\n  'fees',\n  'gas',\n  'nonce',\n  'type',\n] as const\n\n/** @internal */\nexport const eip1559NetworkCache = /*#__PURE__*/ new Map<string, boolean>()\n\nexport type PrepareTransactionRequestParameterType =\n  | 'blobVersionedHashes'\n  | 'chainId'\n  | 'fees'\n  | 'gas'\n  | 'nonce'\n  | 'sidecars'\n  | 'type'\ntype ParameterTypeToParameters<\n  parameterType extends PrepareTransactionRequestParameterType,\n> = parameterType extends 'fees'\n  ? 'maxFeePerGas' | 'maxPriorityFeePerGas' | 'gasPrice'\n  : parameterType\n\nexport type PrepareTransactionRequestRequest<\n  chain extends Chain | undefined = Chain | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  ///\n  _derivedChain extends Chain | undefined = DeriveChain<chain, chainOverride>,\n> = UnionOmit<FormattedTransactionRequest<_derivedChain>, 'from'> &\n  GetTransactionRequestKzgParameter & {\n    /**\n     * Nonce manager to use for the transaction request.\n     */\n    nonceManager?: NonceManager | undefined\n    /**\n     * Parameters to prepare for the transaction request.\n     *\n     * @default ['blobVersionedHashes', 'chainId', 'fees', 'gas', 'nonce', 'type']\n     */\n    parameters?: readonly PrepareTransactionRequestParameterType[] | undefined\n  }\n\nexport type PrepareTransactionRequestParameters<\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  accountOverride extends Account | Address | undefined =\n    | Account\n    | Address\n    | undefined,\n  request extends PrepareTransactionRequestRequest<\n    chain,\n    chainOverride\n  > = PrepareTransactionRequestRequest<chain, chainOverride>,\n> = request &\n  GetAccountParameter<account, accountOverride, false, true> &\n  GetChainParameter<chain, chainOverride> &\n  GetTransactionRequestKzgParameter<request> & { chainId?: number | undefined }\n\nexport type PrepareTransactionRequestReturnType<\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  accountOverride extends Account | Address | undefined =\n    | Account\n    | Address\n    | undefined,\n  request extends PrepareTransactionRequestRequest<\n    chain,\n    chainOverride\n  > = PrepareTransactionRequestRequest<chain, chainOverride>,\n  ///\n  _derivedAccount extends Account | Address | undefined = DeriveAccount<\n    account,\n    accountOverride\n  >,\n  _derivedChain extends Chain | undefined = DeriveChain<chain, chainOverride>,\n  _transactionType = request['type'] extends string | undefined\n    ? request['type']\n    : GetTransactionType<request> extends 'legacy'\n      ? unknown\n      : GetTransactionType<request>,\n  _transactionRequest extends TransactionRequest =\n    | (_transactionType extends 'legacy' ? TransactionRequestLegacy : never)\n    | (_transactionType extends 'eip1559' ? TransactionRequestEIP1559 : never)\n    | (_transactionType extends 'eip2930' ? TransactionRequestEIP2930 : never)\n    | (_transactionType extends 'eip4844' ? TransactionRequestEIP4844 : never)\n    | (_transactionType extends 'eip7702' ? TransactionRequestEIP7702 : never),\n> = Prettify<\n  UnionRequiredBy<\n    Extract<\n      UnionOmit<FormattedTransactionRequest<_derivedChain>, 'from'> &\n        (_derivedChain extends Chain\n          ? { chain: _derivedChain }\n          : { chain?: undefined }) &\n        (_derivedAccount extends Account\n          ? { account: _derivedAccount; from: Address }\n          : { account?: undefined; from?: undefined }),\n      IsNever<_transactionRequest> extends true\n        ? unknown\n        : ExactPartial<_transactionRequest>\n    > & { chainId?: number | undefined },\n    ParameterTypeToParameters<\n      request['parameters'] extends readonly PrepareTransactionRequestParameterType[]\n        ? request['parameters'][number]\n        : (typeof defaultParameters)[number]\n    >\n  > &\n    (unknown extends request['kzg'] ? {} : Pick<request, 'kzg'>)\n>\n\nexport type PrepareTransactionRequestErrorType =\n  | AccountNotFoundErrorType\n  | AssertRequestErrorType\n  | ParseAccountErrorType\n  | GetBlockErrorType\n  | GetTransactionCountErrorType\n  | EstimateGasErrorType\n  | EstimateFeesPerGasErrorType\n\n/**\n * Prepares a transaction request for signing.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/prepareTransactionRequest\n *\n * @param args - {@link PrepareTransactionRequestParameters}\n * @returns The transaction request. {@link PrepareTransactionRequestReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { prepareTransactionRequest } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const request = await prepareTransactionRequest(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { prepareTransactionRequest } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const request = await prepareTransactionRequest(client, {\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n */\nexport async function prepareTransactionRequest<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  const request extends PrepareTransactionRequestRequest<chain, chainOverride>,\n  accountOverride extends Account | Address | undefined = undefined,\n  chainOverride extends Chain | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  args: PrepareTransactionRequestParameters<\n    chain,\n    account,\n    chainOverride,\n    accountOverride,\n    request\n  >,\n): Promise<\n  PrepareTransactionRequestReturnType<\n    chain,\n    account,\n    chainOverride,\n    accountOverride,\n    request\n  >\n> {\n  const {\n    account: account_ = client.account,\n    blobs,\n    chain,\n    gas,\n    kzg,\n    nonce,\n    nonceManager,\n    parameters = defaultParameters,\n    type,\n  } = args\n  const account = account_ ? parseAccount(account_) : account_\n\n  const request = { ...args, ...(account ? { from: account?.address } : {}) }\n\n  let block: Block | undefined\n  async function getBlock(): Promise<Block> {\n    if (block) return block\n    block = await getAction(\n      client,\n      getBlock_,\n      'getBlock',\n    )({ blockTag: 'latest' })\n    return block\n  }\n\n  let chainId: number | undefined\n  async function getChainId(): Promise<number> {\n    if (chainId) return chainId\n    if (chain) return chain.id\n    if (typeof args.chainId !== 'undefined') return args.chainId\n    const chainId_ = await getAction(client, getChainId_, 'getChainId')({})\n    chainId = chainId_\n    return chainId\n  }\n\n  if (parameters.includes('nonce') && typeof nonce === 'undefined' && account) {\n    if (nonceManager) {\n      const chainId = await getChainId()\n      request.nonce = await nonceManager.consume({\n        address: account.address,\n        chainId,\n        client,\n      })\n    } else {\n      request.nonce = await getAction(\n        client,\n        getTransactionCount,\n        'getTransactionCount',\n      )({\n        address: account.address,\n        blockTag: 'pending',\n      })\n    }\n  }\n\n  if (\n    (parameters.includes('blobVersionedHashes') ||\n      parameters.includes('sidecars')) &&\n    blobs &&\n    kzg\n  ) {\n    const commitments = blobsToCommitments({ blobs, kzg })\n\n    if (parameters.includes('blobVersionedHashes')) {\n      const versionedHashes = commitmentsToVersionedHashes({\n        commitments,\n        to: 'hex',\n      })\n      request.blobVersionedHashes = versionedHashes\n    }\n    if (parameters.includes('sidecars')) {\n      const proofs = blobsToProofs({ blobs, commitments, kzg })\n      const sidecars = toBlobSidecars({\n        blobs,\n        commitments,\n        proofs,\n        to: 'hex',\n      })\n      request.sidecars = sidecars\n    }\n  }\n\n  if (parameters.includes('chainId')) request.chainId = await getChainId()\n\n  if (\n    (parameters.includes('fees') || parameters.includes('type')) &&\n    typeof type === 'undefined'\n  ) {\n    try {\n      request.type = getTransactionType(\n        request as TransactionSerializable,\n      ) as any\n    } catch {\n      let isEip1559Network = eip1559NetworkCache.get(client.uid)\n      if (typeof isEip1559Network === 'undefined') {\n        const block = await getBlock()\n        isEip1559Network = typeof block?.baseFeePerGas === 'bigint'\n        eip1559NetworkCache.set(client.uid, isEip1559Network)\n      }\n      request.type = isEip1559Network ? 'eip1559' : 'legacy'\n    }\n  }\n\n  if (parameters.includes('fees')) {\n    // TODO(4844): derive blob base fees once https://github.com/ethereum/execution-apis/pull/486 is merged.\n\n    if (request.type !== 'legacy' && request.type !== 'eip2930') {\n      // EIP-1559 fees\n      if (\n        typeof request.maxFeePerGas === 'undefined' ||\n        typeof request.maxPriorityFeePerGas === 'undefined'\n      ) {\n        const block = await getBlock()\n        const { maxFeePerGas, maxPriorityFeePerGas } =\n          await internal_estimateFeesPerGas(client, {\n            block: block as Block,\n            chain,\n            request: request as PrepareTransactionRequestParameters,\n          })\n\n        if (\n          typeof args.maxPriorityFeePerGas === 'undefined' &&\n          args.maxFeePerGas &&\n          args.maxFeePerGas < maxPriorityFeePerGas\n        )\n          throw new MaxFeePerGasTooLowError({\n            maxPriorityFeePerGas,\n          })\n\n        request.maxPriorityFeePerGas = maxPriorityFeePerGas\n        request.maxFeePerGas = maxFeePerGas\n      }\n    } else {\n      // Legacy fees\n      if (\n        typeof args.maxFeePerGas !== 'undefined' ||\n        typeof args.maxPriorityFeePerGas !== 'undefined'\n      )\n        throw new Eip1559FeesNotSupportedError()\n\n      if (typeof args.gasPrice === 'undefined') {\n        const block = await getBlock()\n        const { gasPrice: gasPrice_ } = await internal_estimateFeesPerGas(\n          client,\n          {\n            block: block as Block,\n            chain,\n            request: request as PrepareTransactionRequestParameters,\n            type: 'legacy',\n          },\n        )\n        request.gasPrice = gasPrice_\n      }\n    }\n  }\n\n  if (parameters.includes('gas') && typeof gas === 'undefined')\n    request.gas = await getAction(\n      client,\n      estimateGas,\n      'estimateGas',\n    )({\n      ...request,\n      account: account\n        ? { address: account.address, type: 'json-rpc' }\n        : account,\n    } as EstimateGasParameters)\n\n  assertRequest(request as AssertRequestParameters)\n\n  delete request.parameters\n\n  return request as any\n}\n","import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport { getAddress } from '../../utils/address/getAddress.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type RequestAddressesReturnType = Address[]\n\nexport type RequestAddressesErrorType = RequestErrorType | ErrorType\n\n/**\n * Requests a list of accounts managed by a wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/requestAddresses\n * - JSON-RPC Methods: [`eth_requestAccounts`](https://eips.ethereum.org/EIPS/eip-1102)\n *\n * Sends a request to the wallet, asking for permission to access the user's accounts. After the user accepts the request, it will return a list of accounts (addresses).\n *\n * This API can be useful for dapps that need to access the user's accounts in order to execute transactions or interact with smart contracts.\n *\n * @param client - Client to use\n * @returns List of accounts managed by a wallet {@link RequestAddressesReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { requestAddresses } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const accounts = await requestAddresses(client)\n */\nexport async function requestAddresses<\n  chain extends Chain | undefined,\n  account extends Account | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n): Promise<RequestAddressesReturnType> {\n  const addresses = await client.request(\n    { method: 'eth_requestAccounts' },\n    { dedupe: true, retryCount: 0 },\n  )\n  return addresses.map((address) => getAddress(address))\n}\n","import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { WalletPermission } from '../../types/eip1193.js'\nimport type { Prettify } from '../../types/utils.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type RequestPermissionsParameters = Prettify<\n  {\n    eth_accounts: Record<string, any>\n  } & {\n    [key: string]: Record<string, any>\n  }\n>\nexport type RequestPermissionsReturnType = WalletPermission[]\n\nexport type RequestPermissionsErrorType = RequestErrorType | ErrorType\n\n/**\n * Requests permissions for a wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/requestPermissions\n * - JSON-RPC Methods: [`wallet_requestPermissions`](https://eips.ethereum.org/EIPS/eip-2255)\n *\n * @param client - Client to use\n * @param parameters - {@link RequestPermissionsParameters}\n * @returns The wallet permissions. {@link RequestPermissionsReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { requestPermissions } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const permissions = await requestPermissions(client, {\n *   eth_accounts: {}\n * })\n */\nexport async function requestPermissions<\n  chain extends Chain | undefined,\n  account extends Account | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  permissions: RequestPermissionsParameters,\n) {\n  return client.request(\n    {\n      method: 'wallet_requestPermissions',\n      params: [permissions],\n    },\n    { retryCount: 0 },\n  )\n}\n","import type { Address, Narrow } from 'abitype'\nimport { parseAccount } from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { AccountNotFoundError } from '../../errors/account.js'\nimport type { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account, GetAccountParameter } from '../../types/account.js'\nimport type { Call, Calls } from '../../types/calls.js'\nimport type { ExtractCapabilities } from '../../types/capabilities.js'\nimport type { Chain, DeriveChain } from '../../types/chain.js'\nimport type { WalletSendCallsParameters } from '../../types/eip1193.js'\nimport type { Prettify } from '../../types/utils.js'\nimport { encodeFunctionData } from '../../utils/abi/encodeFunctionData.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\nimport { getTransactionError } from '../../utils/errors/getTransactionError.js'\n\nexport type SendCallsParameters<\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  calls extends readonly unknown[] = readonly unknown[],\n  //\n  _chain extends Chain | undefined = DeriveChain<chain, chainOverride>,\n> = {\n  chain?: chainOverride | Chain | undefined\n  calls: Calls<Narrow<calls>>\n  capabilities?: ExtractCapabilities<'sendCalls', 'Request'> | undefined\n  forceAtomic?: boolean | undefined\n  id?: string | undefined\n  version?: WalletSendCallsParameters[number]['version'] | undefined\n} & GetAccountParameter<account, Account | Address, true, true>\n\nexport type SendCallsReturnType = Prettify<{\n  capabilities?: ExtractCapabilities<'sendCalls', 'ReturnType'> | undefined\n  id: string\n}>\n\nexport type SendCallsErrorType = RequestErrorType | ErrorType\n\n/**\n * Requests the connected wallet to send a batch of calls.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/sendCalls\n * - JSON-RPC Methods: [`wallet_sendCalls`](https://eips.ethereum.org/EIPS/eip-5792)\n *\n * @param client - Client to use\n * @returns Transaction identifier. {@link SendCallsReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { sendCalls } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const id = await sendCalls(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   calls: [\n *     {\n *       data: '0xdeadbeef',\n *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *     },\n *     {\n *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *       value: 69420n,\n *     },\n *   ],\n * })\n */\nexport async function sendCalls<\n  const calls extends readonly unknown[],\n  chain extends Chain | undefined,\n  account extends Account | undefined = undefined,\n  chainOverride extends Chain | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: SendCallsParameters<chain, account, chainOverride, calls>,\n): Promise<SendCallsReturnType> {\n  const {\n    account: account_ = client.account,\n    chain = client.chain,\n    forceAtomic = false,\n    id,\n    version = '2.0.0',\n  } = parameters\n\n  if (typeof account_ === 'undefined')\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/wallet/sendCalls',\n    })\n  const account = account_ ? parseAccount(account_) : null\n\n  const calls = parameters.calls.map((call_: unknown) => {\n    const call = call_ as Call\n\n    const data = call.abi\n      ? encodeFunctionData({\n          abi: call.abi,\n          functionName: call.functionName,\n          args: call.args,\n        })\n      : call.data\n\n    return {\n      data,\n      to: call.to,\n      value: call.value ? numberToHex(call.value) : undefined,\n    }\n  })\n\n  try {\n    const response = await client.request(\n      {\n        method: 'wallet_sendCalls',\n        params: [\n          {\n            atomicRequired: forceAtomic,\n            calls,\n            capabilities: formatRequestCapabilities(parameters.capabilities),\n            chainId: numberToHex(chain!.id),\n            from: account?.address,\n            id,\n            version,\n          },\n        ],\n      },\n      { retryCount: 0 },\n    )\n    if (typeof response === 'string') return { id: response }\n    return response as never\n  } catch (err) {\n    throw getTransactionError(err as BaseError, {\n      ...parameters,\n      account,\n      chain: parameters.chain!,\n    })\n  }\n}\n\nfunction formatRequestCapabilities(\n  capabilities: ExtractCapabilities<'sendCalls', 'Request'> | undefined,\n) {\n  const paymasterService = capabilities?.paymasterService\n    ? Object.entries(capabilities.paymasterService).reduce(\n        (paymasterService, [chainId, value]) => ({\n          ...(paymasterService ?? {}),\n          [numberToHex(Number(chainId))]: value,\n        }),\n        {},\n      )\n    : undefined\n\n  return {\n    ...capabilities,\n    ...(paymasterService\n      ? {\n          paymasterService,\n        }\n      : {}),\n  }\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { TransactionSerializedGeneric } from '../../types/transaction.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type SendRawTransactionParameters = {\n  /** The signed serialized transaction. */\n  serializedTransaction: TransactionSerializedGeneric\n}\n\nexport type SendRawTransactionReturnType = Hash\n\nexport type SendRawTransactionErrorType = RequestErrorType | ErrorType\n\n/**\n * Sends a **signed** transaction to the network\n *\n * - Docs: https://viem.sh/docs/actions/wallet/sendRawTransaction\n * - JSON-RPC Method: [`eth_sendRawTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n *\n * @param client - Client to use\n * @param parameters - {@link SendRawTransactionParameters}\n * @returns The transaction hash. {@link SendRawTransactionReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { sendRawTransaction } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n *\n * const hash = await sendRawTransaction(client, {\n *   serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33'\n * })\n */\nexport async function sendRawTransaction<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  { serializedTransaction }: SendRawTransactionParameters,\n): Promise<SendRawTransactionReturnType> {\n  return client.request(\n    {\n      method: 'eth_sendRawTransaction',\n      params: [serializedTransaction],\n    },\n    { retryCount: 0 },\n  )\n}\n","import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { SignTransactionErrorType } from '../../accounts/utils/signTransaction.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  AccountNotFoundError,\n  type AccountNotFoundErrorType,\n  AccountTypeNotSupportedError,\n  type AccountTypeNotSupportedErrorType,\n} from '../../errors/account.js'\nimport { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type {\n  Chain,\n  DeriveChain,\n  GetChainParameter,\n} from '../../types/chain.js'\nimport type { GetTransactionRequestKzgParameter } from '../../types/kzg.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport {\n  type RecoverAuthorizationAddressErrorType,\n  recoverAuthorizationAddress,\n} from '../../utils/authorization/recoverAuthorizationAddress.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type AssertCurrentChainErrorType,\n  assertCurrentChain,\n} from '../../utils/chain/assertCurrentChain.js'\nimport {\n  type GetTransactionErrorReturnType,\n  getTransactionError,\n} from '../../utils/errors/getTransactionError.js'\nimport { extract } from '../../utils/formatters/extract.js'\nimport {\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { LruMap } from '../../utils/lru.js'\nimport {\n  type AssertRequestErrorType,\n  type AssertRequestParameters,\n  assertRequest,\n} from '../../utils/transaction/assertRequest.js'\nimport { type GetChainIdErrorType, getChainId } from '../public/getChainId.js'\nimport {\n  type PrepareTransactionRequestErrorType,\n  defaultParameters,\n  prepareTransactionRequest,\n} from './prepareTransactionRequest.js'\nimport {\n  type SendRawTransactionErrorType,\n  sendRawTransaction,\n} from './sendRawTransaction.js'\n\nconst supportsWalletNamespace = new LruMap<boolean>(128)\n\nexport type SendTransactionRequest<\n  chain extends Chain | undefined = Chain | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  ///\n  _derivedChain extends Chain | undefined = DeriveChain<chain, chainOverride>,\n> = UnionOmit<FormattedTransactionRequest<_derivedChain>, 'from'> &\n  GetTransactionRequestKzgParameter\n\nexport type SendTransactionParameters<\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  request extends SendTransactionRequest<\n    chain,\n    chainOverride\n  > = SendTransactionRequest<chain, chainOverride>,\n> = request &\n  GetAccountParameter<account, Account | Address, true, true> &\n  GetChainParameter<chain, chainOverride> &\n  GetTransactionRequestKzgParameter<request>\n\nexport type SendTransactionReturnType = Hash\n\nexport type SendTransactionErrorType =\n  | ParseAccountErrorType\n  | GetTransactionErrorReturnType<\n      | AccountNotFoundErrorType\n      | AccountTypeNotSupportedErrorType\n      | AssertCurrentChainErrorType\n      | AssertRequestErrorType\n      | GetChainIdErrorType\n      | PrepareTransactionRequestErrorType\n      | SendRawTransactionErrorType\n      | RecoverAuthorizationAddressErrorType\n      | SignTransactionErrorType\n      | RequestErrorType\n    >\n  | ErrorType\n\n/**\n * Creates, signs, and sends a new transaction to the network.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/sendTransaction\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\n * - JSON-RPC Methods:\n *   - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\n *   - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\n *\n * @param client - Client to use\n * @param parameters - {@link SendTransactionParameters}\n * @returns The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link SendTransactionReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { sendTransaction } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const hash = await sendTransaction(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: 1000000000000000000n,\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { sendTransaction } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const hash = await sendTransaction(client, {\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: 1000000000000000000n,\n * })\n */\nexport async function sendTransaction<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  const request extends SendTransactionRequest<chain, chainOverride>,\n  chainOverride extends Chain | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: SendTransactionParameters<chain, account, chainOverride, request>,\n): Promise<SendTransactionReturnType> {\n  const {\n    account: account_ = client.account,\n    chain = client.chain,\n    accessList,\n    authorizationList,\n    blobs,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerBlobGas,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    type,\n    value,\n    ...rest\n  } = parameters\n\n  if (typeof account_ === 'undefined')\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/wallet/sendTransaction',\n    })\n  const account = account_ ? parseAccount(account_) : null\n\n  try {\n    assertRequest(parameters as AssertRequestParameters)\n\n    const to = await (async () => {\n      // If `to` exists on the parameters, use that.\n      if (parameters.to) return parameters.to\n\n      // If `to` is null, we are sending a deployment transaction.\n      if (parameters.to === null) return undefined\n\n      // If no `to` exists, and we are sending a EIP-7702 transaction, use the\n      // address of the first authorization in the list.\n      if (authorizationList && authorizationList.length > 0)\n        return await recoverAuthorizationAddress({\n          authorization: authorizationList[0],\n        }).catch(() => {\n          throw new BaseError(\n            '`to` is required. Could not infer from `authorizationList`.',\n          )\n        })\n\n      // Otherwise, we are sending a deployment transaction.\n      return undefined\n    })()\n\n    if (account?.type === 'json-rpc' || account === null) {\n      let chainId: number | undefined\n      if (chain !== null) {\n        chainId = await getAction(client, getChainId, 'getChainId')({})\n        assertCurrentChain({\n          currentChainId: chainId,\n          chain,\n        })\n      }\n\n      const chainFormat = client.chain?.formatters?.transactionRequest?.format\n      const format = chainFormat || formatTransactionRequest\n\n      const request = format({\n        // Pick out extra data that might exist on the chain's transaction request type.\n        ...extract(rest, { format: chainFormat }),\n        accessList,\n        authorizationList,\n        blobs,\n        chainId,\n        data,\n        from: account?.address,\n        gas,\n        gasPrice,\n        maxFeePerBlobGas,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        nonce,\n        to,\n        type,\n        value,\n      } as TransactionRequest)\n\n      const isWalletNamespaceSupported = supportsWalletNamespace.get(client.uid)\n      const method = isWalletNamespaceSupported\n        ? 'wallet_sendTransaction'\n        : 'eth_sendTransaction'\n\n      try {\n        return await client.request(\n          {\n            method,\n            params: [request],\n          },\n          { retryCount: 0 },\n        )\n      } catch (e) {\n        if (isWalletNamespaceSupported === false) throw e\n\n        const error = e as BaseError\n        // If the transport does not support the method or input, attempt to use the\n        // `wallet_sendTransaction` method.\n        if (\n          error.name === 'InvalidInputRpcError' ||\n          error.name === 'InvalidParamsRpcError' ||\n          error.name === 'MethodNotFoundRpcError' ||\n          error.name === 'MethodNotSupportedRpcError'\n        ) {\n          return await client\n            .request(\n              {\n                method: 'wallet_sendTransaction',\n                params: [request],\n              },\n              { retryCount: 0 },\n            )\n            .then((hash) => {\n              supportsWalletNamespace.set(client.uid, true)\n              return hash\n            })\n            .catch((e) => {\n              const walletNamespaceError = e as BaseError\n              if (\n                walletNamespaceError.name === 'MethodNotFoundRpcError' ||\n                walletNamespaceError.name === 'MethodNotSupportedRpcError'\n              ) {\n                supportsWalletNamespace.set(client.uid, false)\n                throw error\n              }\n\n              throw walletNamespaceError\n            })\n        }\n\n        throw error\n      }\n    }\n\n    if (account?.type === 'local') {\n      // Prepare the request for signing (assign appropriate fees, etc.)\n      const request = await getAction(\n        client,\n        prepareTransactionRequest,\n        'prepareTransactionRequest',\n      )({\n        account,\n        accessList,\n        authorizationList,\n        blobs,\n        chain,\n        data,\n        gas,\n        gasPrice,\n        maxFeePerBlobGas,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        nonce,\n        nonceManager: account.nonceManager,\n        parameters: [...defaultParameters, 'sidecars'],\n        type,\n        value,\n        ...rest,\n        to,\n      } as any)\n\n      const serializer = chain?.serializers?.transaction\n      const serializedTransaction = (await account.signTransaction(request, {\n        serializer,\n      })) as Hash\n      return await getAction(\n        client,\n        sendRawTransaction,\n        'sendRawTransaction',\n      )({\n        serializedTransaction,\n      })\n    }\n\n    if (account?.type === 'smart')\n      throw new AccountTypeNotSupportedError({\n        metaMessages: [\n          'Consider using the `sendUserOperation` Action instead.',\n        ],\n        docsPath: '/docs/actions/bundler/sendUserOperation',\n        type: 'smart',\n      })\n\n    throw new AccountTypeNotSupportedError({\n      docsPath: '/docs/actions/wallet/sendTransaction',\n      type: (account as any)?.type,\n    })\n  } catch (err) {\n    if (err instanceof AccountTypeNotSupportedError) throw err\n    throw getTransactionError(err as BaseError, {\n      ...parameters,\n      account,\n      chain: parameters.chain || undefined,\n    })\n  }\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type ShowCallsStatusParameters = { id: string }\n\nexport type ShowCallsStatusReturnType = void\n\nexport type ShowCallsStatusErrorType = RequestErrorType | ErrorType\n\n/**\n * Requests for the wallet to show information about a call batch\n * that was sent via `sendCalls`.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/showCallsStatus\n * - JSON-RPC Methods: [`wallet_showCallsStatus`](https://eips.ethereum.org/EIPS/eip-5792)\n *\n * @param client - Client to use\n * @returns Status of the calls. {@link ShowCallsStatusReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { showCallsStatus } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * await showCallsStatus(client, { id: '0xdeadbeef' })\n */\nexport async function showCallsStatus<\n  chain extends Chain | undefined,\n  account extends Account | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: ShowCallsStatusParameters,\n): Promise<ShowCallsStatusReturnType> {\n  const { id } = parameters\n  await client.request({\n    method: 'wallet_showCallsStatus',\n    params: [id],\n  })\n  return\n}\n","import type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type {\n  SignAuthorizationErrorType as SignAuthorizationErrorType_account,\n  SignAuthorizationReturnType as SignAuthorizationReturnType_account,\n} from '../../accounts/utils/signAuthorization.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  AccountNotFoundError,\n  type AccountNotFoundErrorType,\n  AccountTypeNotSupportedError,\n  type AccountTypeNotSupportedErrorType,\n} from '../../errors/account.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport {\n  type PrepareAuthorizationErrorType,\n  type PrepareAuthorizationParameters,\n  prepareAuthorization,\n} from './prepareAuthorization.js'\n\nexport type SignAuthorizationParameters<\n  account extends Account | undefined = Account | undefined,\n> = PrepareAuthorizationParameters<account>\n\nexport type SignAuthorizationReturnType = SignAuthorizationReturnType_account\n\nexport type SignAuthorizationErrorType =\n  | ParseAccountErrorType\n  | AccountNotFoundErrorType\n  | AccountTypeNotSupportedErrorType\n  | PrepareAuthorizationErrorType\n  | SignAuthorizationErrorType_account\n  | ErrorType\n\n/**\n * Signs an [EIP-7702 Authorization](https://eips.ethereum.org/EIPS/eip-7702) object.\n *\n * With the calculated signature, you can:\n * - use [`verifyAuthorization`](https://viem.sh/docs/eip7702/verifyAuthorization) to verify the signed Authorization object,\n * - use [`recoverAuthorizationAddress`](https://viem.sh/docs/eip7702/recoverAuthorizationAddress) to recover the signing address from the signed Authorization object.\n *\n * @param client - Client to use\n * @param parameters - {@link SignAuthorizationParameters}\n * @returns The signed Authorization object. {@link SignAuthorizationReturnType}\n *\n * @example\n * import { createClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { signAuthorization } from 'viem/experimental'\n *\n * const client = createClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const signature = await signAuthorization(client, {\n *   account: privateKeyToAccount('0x..'),\n *   contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n *\n * @example\n * // Account Hoisting\n * import { createClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { signAuthorization } from 'viem/experimental'\n *\n * const client = createClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const signature = await signAuthorization(client, {\n *   contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n */\nexport async function signAuthorization<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: SignAuthorizationParameters<account>,\n): Promise<SignAuthorizationReturnType> {\n  const { account: account_ = client.account } = parameters\n\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/eip7702/signAuthorization',\n    })\n  const account = parseAccount(account_)\n\n  if (!account.signAuthorization)\n    throw new AccountTypeNotSupportedError({\n      docsPath: '/docs/eip7702/signAuthorization',\n      metaMessages: [\n        'The `signAuthorization` Action does not support JSON-RPC Accounts.',\n      ],\n      type: account.type,\n    })\n\n  const authorization = await prepareAuthorization(client, parameters)\n  return account.signAuthorization(authorization)\n}\n","import type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { SignMessageErrorType as SignMessageErrorType_account } from '../../accounts/utils/signMessage.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { AccountNotFoundError } from '../../errors/account.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex, SignableMessage } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type ToHexErrorType,\n  stringToHex,\n  toHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type SignMessageParameters<\n  account extends Account | undefined = Account | undefined,\n> = GetAccountParameter<account> & {\n  message: SignableMessage\n}\n\nexport type SignMessageReturnType = Hex\n\nexport type SignMessageErrorType =\n  | ParseAccountErrorType\n  | RequestErrorType\n  | SignMessageErrorType_account\n  | ToHexErrorType\n  | ErrorType\n\n/**\n * Calculates an Ethereum-specific signature in [EIP-191 format](https://eips.ethereum.org/EIPS/eip-191): `keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message))`.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/signMessage\n * - JSON-RPC Methods:\n *   - JSON-RPC Accounts: [`personal_sign`](https://docs.metamask.io/guide/signing-data#personal-sign)\n *   - Local Accounts: Signs locally. No JSON-RPC request.\n *\n * With the calculated signature, you can:\n * - use [`verifyMessage`](https://viem.sh/docs/utilities/verifyMessage) to verify the signature,\n * - use [`recoverMessageAddress`](https://viem.sh/docs/utilities/recoverMessageAddress) to recover the signing address from a signature.\n *\n * @param client - Client to use\n * @param parameters - {@link SignMessageParameters}\n * @returns The signed message. {@link SignMessageReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { signMessage } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signMessage(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   message: 'hello world',\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, custom } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { signMessage } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signMessage(client, {\n *   message: 'hello world',\n * })\n */\nexport async function signMessage<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: Client<Transport, chain, account>,\n  {\n    account: account_ = client.account,\n    message,\n  }: SignMessageParameters<account>,\n): Promise<SignMessageReturnType> {\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/wallet/signMessage',\n    })\n  const account = parseAccount(account_)\n\n  if (account.signMessage) return account.signMessage({ message })\n\n  const message_ = (() => {\n    if (typeof message === 'string') return stringToHex(message)\n    if (message.raw instanceof Uint8Array) return toHex(message.raw)\n    return message.raw\n  })()\n\n  return client.request(\n    {\n      method: 'personal_sign',\n      params: [message_, account.address],\n    },\n    { retryCount: 0 },\n  )\n}\n","import type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { SignTransactionErrorType as SignTransactionErrorType_account } from '../../accounts/utils/signTransaction.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { AccountNotFoundError } from '../../errors/account.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type {\n  Chain,\n  DeriveChain,\n  GetChainParameter,\n} from '../../types/chain.js'\nimport type { GetTransactionRequestKzgParameter } from '../../types/kzg.js'\nimport type { RpcTransactionRequest } from '../../types/rpc.js'\nimport type {\n  TransactionRequest,\n  TransactionSerializable,\n  TransactionSerialized,\n} from '../../types/transaction.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type AssertCurrentChainErrorType,\n  assertCurrentChain,\n} from '../../utils/chain/assertCurrentChain.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\nimport type { NumberToHexErrorType } from '../../utils/encoding/toHex.js'\nimport {\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type AssertRequestErrorType,\n  assertRequest,\n} from '../../utils/transaction/assertRequest.js'\nimport type { GetTransactionType } from '../../utils/transaction/getTransactionType.js'\nimport { type GetChainIdErrorType, getChainId } from '../public/getChainId.js'\n\nexport type SignTransactionRequest<\n  chain extends Chain | undefined = Chain | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  ///\n  _derivedChain extends Chain | undefined = DeriveChain<chain, chainOverride>,\n> = UnionOmit<FormattedTransactionRequest<_derivedChain>, 'from'>\n\nexport type SignTransactionParameters<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  request extends SignTransactionRequest<\n    chain,\n    chainOverride\n  > = SignTransactionRequest<chain, chainOverride>,\n> = request &\n  GetAccountParameter<account> &\n  GetChainParameter<chain, chainOverride> &\n  GetTransactionRequestKzgParameter<request>\n\nexport type SignTransactionReturnType<\n  request extends SignTransactionRequest = SignTransactionRequest,\n> = TransactionSerialized<GetTransactionType<request>>\n\nexport type SignTransactionErrorType =\n  | ParseAccountErrorType\n  | AssertRequestErrorType\n  | GetChainIdErrorType\n  | AssertCurrentChainErrorType\n  | SignTransactionErrorType_account\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Signs a transaction.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/signTransaction\n * - JSON-RPC Methods:\n *   - JSON-RPC Accounts: [`eth_signTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n *   - Local Accounts: Signs locally. No JSON-RPC request.\n *\n * @param args - {@link SignTransactionParameters}\n * @returns The signed serialized transaction. {@link SignTransactionReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { signTransaction } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signTransaction(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { signTransaction } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signTransaction(client, {\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n */\nexport async function signTransaction<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  chainOverride extends Chain | undefined = undefined,\n  const request extends SignTransactionRequest<\n    chain,\n    chainOverride\n  > = SignTransactionRequest<chain, chainOverride>,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: SignTransactionParameters<chain, account, chainOverride, request>,\n): Promise<SignTransactionReturnType<request>> {\n  const {\n    account: account_ = client.account,\n    chain = client.chain,\n    ...transaction\n  } = parameters\n\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/wallet/signTransaction',\n    })\n  const account = parseAccount(account_)\n\n  assertRequest({\n    account,\n    ...parameters,\n  })\n\n  const chainId = await getAction(client, getChainId, 'getChainId')({})\n  if (chain !== null)\n    assertCurrentChain({\n      currentChainId: chainId,\n      chain,\n    })\n\n  const formatters = chain?.formatters || client.chain?.formatters\n  const format =\n    formatters?.transactionRequest?.format || formatTransactionRequest\n\n  if (account.signTransaction)\n    return account.signTransaction(\n      {\n        ...transaction,\n        chainId,\n      } as TransactionSerializable,\n      { serializer: client.chain?.serializers?.transaction },\n    ) as Promise<SignTransactionReturnType<request>>\n\n  return await client.request(\n    {\n      method: 'eth_signTransaction',\n      params: [\n        {\n          ...format(transaction as unknown as TransactionRequest),\n          chainId: numberToHex(chainId),\n          from: account.address,\n        } as unknown as RpcTransactionRequest,\n      ],\n    },\n    { retryCount: 0 },\n  )\n}\n","import type { TypedData } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { SignTypedDataErrorType as SignTypedDataErrorType_account } from '../../accounts/utils/signTypedData.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  AccountNotFoundError,\n  type AccountNotFoundErrorType,\n} from '../../errors/account.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport type { IsHexErrorType } from '../../utils/data/isHex.js'\nimport type { StringifyErrorType } from '../../utils/stringify.js'\nimport {\n  type GetTypesForEIP712DomainErrorType,\n  type SerializeTypedDataErrorType,\n  type ValidateTypedDataErrorType,\n  getTypesForEIP712Domain,\n  serializeTypedData,\n  validateTypedData,\n} from '../../utils/typedData.js'\n\nexport type SignTypedDataParameters<\n  typedData extends TypedData | Record<string, unknown> = TypedData,\n  primaryType extends keyof typedData | 'EIP712Domain' = keyof typedData,\n  account extends Account | undefined = undefined,\n  ///\n  primaryTypes = typedData extends TypedData ? keyof typedData : string,\n> = TypedDataDefinition<typedData, primaryType, primaryTypes> &\n  GetAccountParameter<account>\n\nexport type SignTypedDataReturnType = Hex\n\nexport type SignTypedDataErrorType =\n  | AccountNotFoundErrorType\n  | ParseAccountErrorType\n  | GetTypesForEIP712DomainErrorType\n  | ValidateTypedDataErrorType\n  | StringifyErrorType\n  | SignTypedDataErrorType_account\n  | IsHexErrorType\n  | RequestErrorType\n  | SerializeTypedDataErrorType\n  | ErrorType\n\n/**\n * Signs typed data and calculates an Ethereum-specific signature in [https://eips.ethereum.org/EIPS/eip-712](https://eips.ethereum.org/EIPS/eip-712): `sign(keccak256(\"\\x19\\x01\" ‖ domainSeparator ‖ hashStruct(message)))`\n *\n * - Docs: https://viem.sh/docs/actions/wallet/signTypedData\n * - JSON-RPC Methods:\n *   - JSON-RPC Accounts: [`eth_signTypedData_v4`](https://docs.metamask.io/guide/signing-data#signtypeddata-v4)\n *   - Local Accounts: Signs locally. No JSON-RPC request.\n *\n * @param client - Client to use\n * @param parameters - {@link SignTypedDataParameters}\n * @returns The signed data. {@link SignTypedDataReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { signTypedData } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signTypedData(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   domain: {\n *     name: 'Ether Mail',\n *     version: '1',\n *     chainId: 1,\n *     verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n *   },\n *   types: {\n *     Person: [\n *       { name: 'name', type: 'string' },\n *       { name: 'wallet', type: 'address' },\n *     ],\n *     Mail: [\n *       { name: 'from', type: 'Person' },\n *       { name: 'to', type: 'Person' },\n *       { name: 'contents', type: 'string' },\n *     ],\n *   },\n *   primaryType: 'Mail',\n *   message: {\n *     from: {\n *       name: 'Cow',\n *       wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n *     },\n *     to: {\n *       name: 'Bob',\n *       wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n *     },\n *     contents: 'Hello, Bob!',\n *   },\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { signTypedData } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const signature = await signTypedData(client, {\n *   domain: {\n *     name: 'Ether Mail',\n *     version: '1',\n *     chainId: 1,\n *     verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n *   },\n *   types: {\n *     Person: [\n *       { name: 'name', type: 'string' },\n *       { name: 'wallet', type: 'address' },\n *     ],\n *     Mail: [\n *       { name: 'from', type: 'Person' },\n *       { name: 'to', type: 'Person' },\n *       { name: 'contents', type: 'string' },\n *     ],\n *   },\n *   primaryType: 'Mail',\n *   message: {\n *     from: {\n *       name: 'Cow',\n *       wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n *     },\n *     to: {\n *       name: 'Bob',\n *       wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n *     },\n *     contents: 'Hello, Bob!',\n *   },\n * })\n */\nexport async function signTypedData<\n  const typedData extends TypedData | Record<string, unknown>,\n  primaryType extends keyof typedData | 'EIP712Domain',\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: SignTypedDataParameters<typedData, primaryType, account>,\n): Promise<SignTypedDataReturnType> {\n  const {\n    account: account_ = client.account,\n    domain,\n    message,\n    primaryType,\n  } = parameters as unknown as SignTypedDataParameters\n\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/wallet/signTypedData',\n    })\n  const account = parseAccount(account_)\n\n  const types = {\n    EIP712Domain: getTypesForEIP712Domain({ domain }),\n    ...parameters.types,\n  }\n\n  // Need to do a runtime validation check on addresses, byte ranges, integer ranges, etc\n  // as we can't statically check this with TypeScript.\n  validateTypedData({ domain, message, primaryType, types })\n\n  if (account.signTypedData)\n    return account.signTypedData({ domain, message, primaryType, types })\n\n  const typedData = serializeTypedData({ domain, message, primaryType, types })\n  return client.request(\n    {\n      method: 'eth_signTypedData_v4',\n      params: [account.address, typedData],\n    },\n    { retryCount: 0 },\n  )\n}\n","import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type SwitchChainParameters = {\n  /** ID of Chain to switch to */\n  id: Chain['id']\n}\n\nexport type SwitchChainErrorType =\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Switch the target chain in a wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/switchChain\n * - JSON-RPC Methods: [`wallet_switchEthereumChain`](https://eips.ethereum.org/EIPS/eip-3326)\n *\n * @param client - Client to use\n * @param parameters - {@link SwitchChainParameters}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet, optimism } from 'viem/chains'\n * import { switchChain } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * await switchChain(client, { id: optimism.id })\n */\nexport async function switchChain<\n  chain extends Chain | undefined,\n  account extends Account | undefined = undefined,\n>(client: Client<Transport, chain, account>, { id }: SwitchChainParameters) {\n  await client.request(\n    {\n      method: 'wallet_switchEthereumChain',\n      params: [\n        {\n          chainId: numberToHex(id),\n        },\n      ],\n    },\n    { retryCount: 0 },\n  )\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport { type ObserveErrorType, observe } from '../../utils/observe.js'\nimport { type PollErrorType, poll } from '../../utils/poll.js'\nimport { withResolvers } from '../../utils/promise/withResolvers.js'\nimport { stringify } from '../../utils/stringify.js'\nimport {\n  type GetCallsStatusErrorType,\n  type GetCallsStatusReturnType,\n  getCallsStatus,\n} from './getCallsStatus.js'\n\nexport type WaitForCallsStatusParameters = {\n  /**\n   * The id of the call batch to wait for.\n   */\n  id: string\n  /**\n   * Polling frequency (in ms). Defaults to the client's pollingInterval config.\n   *\n   * @default client.pollingInterval\n   */\n  pollingInterval?: number | undefined\n  /**\n   * The status range to wait for.\n   *\n   * @default (status) => status >= 200\n   */\n  status?: ((parameters: GetCallsStatusReturnType) => boolean) | undefined\n  /**\n   * Optional timeout (in milliseconds) to wait before stopping polling.\n   *\n   * @default 60_000\n   */\n  timeout?: number | undefined\n}\n\nexport type WaitForCallsStatusReturnType = GetCallsStatusReturnType\n\nexport type WaitForCallsStatusErrorType =\n  | ObserveErrorType\n  | PollErrorType\n  | GetCallsStatusErrorType\n  | WaitForCallsStatusTimeoutError\n  | ErrorType\n\n/**\n * Waits for the status & receipts of a call bundle that was sent via `sendCalls`.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/waitForCallsStatus\n * - JSON-RPC Methods: [`wallet_getCallsStatus`](https://eips.ethereum.org/EIPS/eip-5792)\n *\n * @param client - Client to use\n * @param parameters - {@link WaitForCallsStatusParameters}\n * @returns Status & receipts of the call bundle. {@link WaitForCallsStatusReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { waitForCallsStatus } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n *\n * const { receipts, status } = await waitForCallsStatus(client, { id: '0xdeadbeef' })\n */\nexport async function waitForCallsStatus<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  parameters: WaitForCallsStatusParameters,\n): Promise<WaitForCallsStatusReturnType> {\n  const {\n    id,\n    pollingInterval = client.pollingInterval,\n    status = ({ statusCode }) => statusCode >= 200,\n    timeout = 60_000,\n  } = parameters\n  const observerId = stringify(['waitForCallsStatus', client.uid, id])\n\n  const { promise, resolve, reject } =\n    withResolvers<WaitForCallsStatusReturnType>()\n\n  let timer: Timer | undefined = undefined\n\n  const unobserve = observe(observerId, { resolve, reject }, (emit) => {\n    const unpoll = poll(\n      async () => {\n        const done = (fn: () => void) => {\n          clearTimeout(timer)\n          unpoll()\n          fn()\n          unobserve()\n        }\n\n        try {\n          const result = await getCallsStatus(client, { id })\n          if (!status(result)) return\n          done(() => emit.resolve(result))\n        } catch (error) {\n          done(() => emit.reject(error))\n        }\n      },\n      {\n        interval: pollingInterval,\n        emitOnBegin: true,\n      },\n    )\n\n    return unpoll\n  })\n\n  timer = timeout\n    ? setTimeout(() => {\n        unobserve()\n        clearTimeout(timer)\n        reject(new WaitForCallsStatusTimeoutError({ id }))\n      }, timeout)\n    : undefined\n\n  return await promise\n}\n\nexport type WaitForCallsStatusTimeoutErrorType =\n  WaitForCallsStatusTimeoutError & {\n    name: 'WaitForCallsStatusTimeoutError'\n  }\nexport class WaitForCallsStatusTimeoutError extends BaseError {\n  constructor({ id }: { id: string }) {\n    super(\n      `Timed out while waiting for call bundle with id \"${id}\" to be confirmed.`,\n      { name: 'WaitForCallsStatusTimeoutError' },\n    )\n  }\n}\n","import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { WatchAssetParams } from '../../types/eip1193.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type WatchAssetParameters = WatchAssetParams\nexport type WatchAssetReturnType = boolean\nexport type WatchAssetErrorType = RequestErrorType | ErrorType\n\n/**\n * Adds an EVM chain to the wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/watchAsset\n * - JSON-RPC Methods: [`eth_switchEthereumChain`](https://eips.ethereum.org/EIPS/eip-747)\n *\n * @param client - Client to use\n * @param parameters - {@link WatchAssetParameters}\n * @returns Boolean indicating if the token was successfully added. {@link WatchAssetReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchAsset } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const success = await watchAsset(client, {\n *   type: 'ERC20',\n *   options: {\n *     address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n *     decimals: 18,\n *     symbol: 'WETH',\n *   },\n * })\n */\nexport async function watchAsset<\n  chain extends Chain | undefined,\n  account extends Account | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  params: WatchAssetParameters,\n): Promise<WatchAssetReturnType> {\n  const added = await client.request(\n    {\n      method: 'wallet_watchAsset',\n      params,\n    },\n    { retryCount: 0 },\n  )\n  return added\n}\n","import type { Abi, Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  AccountNotFoundError,\n  type AccountNotFoundErrorType,\n} from '../../errors/account.js'\nimport type { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type {\n  Chain,\n  DeriveChain,\n  GetChainParameter,\n} from '../../types/chain.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n  ContractFunctionParameters,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { Prettify, UnionEvaluate, UnionOmit } from '../../types/utils.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from '../../utils/errors/getContractError.js'\nimport type { FormattedTransactionRequest } from '../../utils/formatters/transactionRequest.js'\nimport { getAction } from '../../utils/getAction.js'\nimport type { GetMutabilityAwareValue } from '../public/simulateContract.js'\nimport {\n  type SendTransactionErrorType,\n  type SendTransactionReturnType,\n  sendTransaction,\n} from './sendTransaction.js'\n\nexport type WriteContractParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends ContractFunctionName<\n    abi,\n    'nonpayable' | 'payable'\n  > = ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  > = ContractFunctionArgs<abi, 'nonpayable' | 'payable', functionName>,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  ///\n  allFunctionNames = ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  derivedChain extends Chain | undefined = DeriveChain<chain, chainOverride>,\n> = ContractFunctionParameters<\n  abi,\n  'nonpayable' | 'payable',\n  functionName,\n  args,\n  false,\n  allFunctionNames\n> &\n  GetChainParameter<chain, chainOverride> &\n  Prettify<\n    GetAccountParameter<account, Account | Address, true, true> &\n      GetMutabilityAwareValue<\n        abi,\n        'nonpayable' | 'payable',\n        functionName,\n        FormattedTransactionRequest<derivedChain>['value'],\n        args\n      > & {\n        /** Data to append to the end of the calldata. Useful for adding a [\"domain\" tag](https://opensea.notion.site/opensea/Seaport-Order-Attributions-ec2d69bf455041a5baa490941aad307f). */\n        dataSuffix?: Hex | undefined\n      }\n  > &\n  UnionEvaluate<\n    UnionOmit<\n      FormattedTransactionRequest<derivedChain>,\n      'data' | 'from' | 'to' | 'value'\n    >\n  >\n\nexport type WriteContractReturnType = SendTransactionReturnType\n\nexport type WriteContractErrorType =\n  | EncodeFunctionDataErrorType\n  | AccountNotFoundErrorType\n  | ParseAccountErrorType\n  | GetContractErrorReturnType<SendTransactionErrorType>\n  | ErrorType\n\n/**\n * Executes a write function on a contract.\n *\n * - Docs: https://viem.sh/docs/contract/writeContract\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_writing-to-contracts\n *\n * A \"write\" function on a Solidity contract modifies the state of the blockchain. These types of functions require gas to be executed, and hence a [Transaction](https://viem.sh/docs/glossary/terms) is needed to be broadcast in order to change the state.\n *\n * Internally, uses a [Wallet Client](https://viem.sh/docs/clients/wallet) to call the [`sendTransaction` action](https://viem.sh/docs/actions/wallet/sendTransaction) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n *\n * __Warning: The `write` internally sends a transaction – it does not validate if the contract write will succeed (the contract may throw an error). It is highly recommended to [simulate the contract write with `contract.simulate`](https://viem.sh/docs/contract/writeContract#usage) before you execute it.__\n *\n * @param client - Client to use\n * @param parameters - {@link WriteContractParameters}\n * @returns A [Transaction Hash](https://viem.sh/docs/glossary/terms#hash). {@link WriteContractReturnType}\n *\n * @example\n * import { createWalletClient, custom, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { writeContract } from 'viem/contract'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const hash = await writeContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n *   functionName: 'mint',\n *   args: [69420],\n * })\n *\n * @example\n * // With Validation\n * import { createWalletClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { simulateContract, writeContract } from 'viem/contract'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const { request } = await simulateContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n *   functionName: 'mint',\n *   args: [69420],\n * }\n * const hash = await writeContract(client, request)\n */\nexport async function writeContract<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  >,\n  chainOverride extends Chain | undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: WriteContractParameters<\n    abi,\n    functionName,\n    args,\n    chain,\n    account,\n    chainOverride\n  >,\n): Promise<WriteContractReturnType> {\n  const {\n    abi,\n    account: account_ = client.account,\n    address,\n    args,\n    dataSuffix,\n    functionName,\n    ...request\n  } = parameters as WriteContractParameters\n\n  if (typeof account_ === 'undefined')\n    throw new AccountNotFoundError({\n      docsPath: '/docs/contract/writeContract',\n    })\n  const account = account_ ? parseAccount(account_) : null\n\n  const data = encodeFunctionData({\n    abi,\n    args,\n    functionName,\n  } as EncodeFunctionDataParameters)\n\n  try {\n    return await getAction(\n      client,\n      sendTransaction,\n      'sendTransaction',\n    )({\n      data: `${data}${dataSuffix ? dataSuffix.replace('0x', '') : ''}`,\n      to: address,\n      account,\n      ...request,\n    })\n  } catch (error) {\n    throw getContractError(error as BaseError, {\n      abi,\n      address,\n      args,\n      docsPath: '/docs/contract/writeContract',\n      functionName,\n      sender: account?.address,\n    })\n  }\n}\n","import type { Address } from 'abitype'\n\nimport type { JsonRpcAccount } from '../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../accounts/utils/parseAccount.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { Account } from '../types/account.js'\nimport type { Chain } from '../types/chain.js'\nimport type {\n  EIP1193RequestFn,\n  EIP1474Methods,\n  RpcSchema,\n} from '../types/eip1193.js'\nimport type { ExactPartial, Prettify } from '../types/utils.js'\nimport type {\n  CcipRequestParameters,\n  CcipRequestReturnType,\n} from '../utils/ccip.js'\nimport { uid } from '../utils/uid.js'\nimport type { PublicActions } from './decorators/public.js'\nimport type { WalletActions } from './decorators/wallet.js'\nimport type { Transport } from './transports/createTransport.js'\n\nexport type ClientConfig<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  accountOrAddress extends Account | Address | undefined =\n    | Account\n    | Address\n    | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = {\n  /** The Account to use for the Client. This will be used for Actions that require an account as an argument. */\n  account?: accountOrAddress | Account | Address | undefined\n  /** Flags for batch settings. */\n  batch?:\n    | {\n        /** Toggle to enable `eth_call` multicall aggregation. */\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined\n      }\n    | undefined\n  /**\n   * Time (in ms) that cached data will remain in memory.\n   * @default 4_000\n   */\n  cacheTime?: number | undefined\n  /**\n   * [CCIP Read](https://eips.ethereum.org/EIPS/eip-3668) configuration.\n   * If `false`, the client will not support offchain CCIP lookups.\n   */\n  ccipRead?:\n    | {\n        /**\n         * A function that will be called to make the offchain CCIP lookup request.\n         * @see https://eips.ethereum.org/EIPS/eip-3668#client-lookup-protocol\n         */\n        request?: (\n          parameters: CcipRequestParameters,\n        ) => Promise<CcipRequestReturnType>\n      }\n    | false\n    | undefined\n  /** Chain for the client. */\n  chain?: Chain | undefined | chain\n  /** A key for the client. */\n  key?: string | undefined\n  /** A name for the client. */\n  name?: string | undefined\n  /**\n   * Frequency (in ms) for polling enabled actions & events.\n   * @default 4_000\n   */\n  pollingInterval?: number | undefined\n  /**\n   * Typed JSON-RPC schema for the client.\n   */\n  rpcSchema?: rpcSchema | undefined\n  /** The RPC transport */\n  transport: transport\n  /** The type of client. */\n  type?: string | undefined\n}\n\n// Actions that are used internally by other Actions (ie. `call` is used by `readContract`).\n// They are allowed to be extended, but must conform to their parameter & return type interfaces.\n// Example: an extended `call` action must accept `CallParameters` as parameters,\n// and conform to the `CallReturnType` return type.\ntype ExtendableProtectedActions<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n> = Pick<\n  PublicActions<transport, chain, account>,\n  | 'call'\n  | 'createContractEventFilter'\n  | 'createEventFilter'\n  | 'estimateContractGas'\n  | 'estimateGas'\n  | 'getBlock'\n  | 'getBlockNumber'\n  | 'getChainId'\n  | 'getContractEvents'\n  | 'getEnsText'\n  | 'getFilterChanges'\n  | 'getGasPrice'\n  | 'getLogs'\n  | 'getTransaction'\n  | 'getTransactionCount'\n  | 'getTransactionReceipt'\n  | 'prepareTransactionRequest'\n  | 'readContract'\n  | 'sendRawTransaction'\n  | 'simulateContract'\n  | 'uninstallFilter'\n  | 'watchBlockNumber'\n  | 'watchContractEvent'\n> &\n  Pick<WalletActions<chain, account>, 'sendTransaction' | 'writeContract'>\n\n// TODO: Move `transport` to slot index 2 since `chain` and `account` used more frequently.\n// Otherwise, we end up with a lot of `Client<Transport, chain, account>` in actions.\nexport type Client<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n  extended extends Extended | undefined = Extended | undefined,\n> = Client_Base<transport, chain, account, rpcSchema> &\n  (extended extends Extended ? extended : unknown) & {\n    extend: <\n      const client extends Extended &\n        ExactPartial<ExtendableProtectedActions<transport, chain, account>>,\n    >(\n      fn: (\n        client: Client<transport, chain, account, rpcSchema, extended>,\n      ) => client,\n    ) => Client<\n      transport,\n      chain,\n      account,\n      rpcSchema,\n      Prettify<client> & (extended extends Extended ? extended : unknown)\n    >\n  }\n\ntype Client_Base<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = {\n  /** The Account of the Client. */\n  account: account\n  /** Flags for batch settings. */\n  batch?: ClientConfig['batch'] | undefined\n  /** Time (in ms) that cached data will remain in memory. */\n  cacheTime: number\n  /** [CCIP Read](https://eips.ethereum.org/EIPS/eip-3668) configuration. */\n  ccipRead?: ClientConfig['ccipRead'] | undefined\n  /** Chain for the client. */\n  chain: chain\n  /** A key for the client. */\n  key: string\n  /** A name for the client. */\n  name: string\n  /** Frequency (in ms) for polling enabled actions & events. Defaults to 4_000 milliseconds. */\n  pollingInterval: number\n  /** Request function wrapped with friendly error handling */\n  request: EIP1193RequestFn<\n    rpcSchema extends undefined ? EIP1474Methods : rpcSchema\n  >\n  /** The RPC transport */\n  transport: ReturnType<transport>['config'] & ReturnType<transport>['value']\n  /** The type of client. */\n  type: string\n  /** A unique ID for the client. */\n  uid: string\n}\n\ntype Extended = Prettify<\n  // disallow redefining base properties\n  { [_ in keyof Client_Base]?: undefined } & {\n    [key: string]: unknown\n  }\n>\n\nexport type MulticallBatchOptions = {\n  /** The maximum size (in bytes) for each calldata chunk. @default 1_024 */\n  batchSize?: number | undefined\n  /** The maximum number of milliseconds to wait before sending a batch. @default 0 */\n  wait?: number | undefined\n}\n\nexport type CreateClientErrorType = ParseAccountErrorType | ErrorType\n\nexport function createClient<\n  transport extends Transport,\n  chain extends Chain | undefined = undefined,\n  accountOrAddress extends Account | Address | undefined = undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n>(\n  parameters: ClientConfig<transport, chain, accountOrAddress, rpcSchema>,\n): Prettify<\n  Client<\n    transport,\n    chain,\n    accountOrAddress extends Address\n      ? Prettify<JsonRpcAccount<accountOrAddress>>\n      : accountOrAddress,\n    rpcSchema\n  >\n>\n\nexport function createClient(parameters: ClientConfig): Client {\n  const {\n    batch,\n    cacheTime = parameters.pollingInterval ?? 4_000,\n    ccipRead,\n    key = 'base',\n    name = 'Base Client',\n    pollingInterval = 4_000,\n    type = 'base',\n  } = parameters\n\n  const chain = parameters.chain\n  const account = parameters.account\n    ? parseAccount(parameters.account)\n    : undefined\n  const { config, request, value } = parameters.transport({\n    chain,\n    pollingInterval,\n  })\n  const transport = { ...config, ...value }\n\n  const client = {\n    account,\n    batch,\n    cacheTime,\n    ccipRead,\n    chain,\n    key,\n    name,\n    pollingInterval,\n    request,\n    transport,\n    type,\n    uid: uid(),\n  }\n\n  function extend(base: typeof client) {\n    type ExtendFn = (base: typeof client) => unknown\n    return (extendFn: ExtendFn) => {\n      const extended = extendFn(base) as Extended\n      for (const key in client) delete extended[key]\n      const combined = { ...base, ...extended }\n      return Object.assign(combined, { extend: extend(combined as any) })\n    }\n  }\n\n  return Object.assign(client, { extend: extend(client) as any })\n}\n\n/**\n * Defines a typed JSON-RPC schema for the client.\n * Note: This is a runtime noop function.\n */\nexport function rpcSchema<rpcSchema extends RpcSchema>(): rpcSchema {\n  return null as any\n}\n","import type { Address } from 'abitype'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { Account, ParseAccount } from '../types/account.js'\nimport type { Chain } from '../types/chain.js'\nimport type { PublicRpcSchema, RpcSchema } from '../types/eip1193.js'\nimport type { Prettify } from '../types/utils.js'\nimport {\n  type Client,\n  type ClientConfig,\n  type CreateClientErrorType,\n  createClient,\n} from './createClient.js'\nimport { type PublicActions, publicActions } from './decorators/public.js'\nimport type { Transport } from './transports/createTransport.js'\n\nexport type PublicClientConfig<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  accountOrAddress extends Account | Address | undefined = undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = Prettify<\n  Pick<\n    ClientConfig<transport, chain, accountOrAddress, rpcSchema>,\n    | 'batch'\n    | 'cacheTime'\n    | 'ccipRead'\n    | 'chain'\n    | 'key'\n    | 'name'\n    | 'pollingInterval'\n    | 'rpcSchema'\n    | 'transport'\n  >\n>\n\nexport type PublicClient<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  accountOrAddress extends Account | undefined = undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = Prettify<\n  Client<\n    transport,\n    chain,\n    accountOrAddress,\n    rpcSchema extends RpcSchema\n      ? [...PublicRpcSchema, ...rpcSchema]\n      : PublicRpcSchema,\n    PublicActions<transport, chain>\n  >\n>\n\nexport type CreatePublicClientErrorType = CreateClientErrorType | ErrorType\n\n/**\n * Creates a Public Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\n *\n * - Docs: https://viem.sh/docs/clients/public\n *\n * A Public Client is an interface to \"public\" [JSON-RPC API](https://ethereum.org/en/developers/docs/apis/json-rpc/) methods such as retrieving block numbers, transactions, reading from smart contracts, etc through [Public Actions](/docs/actions/public/introduction).\n *\n * @param config - {@link PublicClientConfig}\n * @returns A Public Client. {@link PublicClient}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n */\nexport function createPublicClient<\n  transport extends Transport,\n  chain extends Chain | undefined = undefined,\n  accountOrAddress extends Account | Address | undefined = undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n>(\n  parameters: PublicClientConfig<transport, chain, accountOrAddress, rpcSchema>,\n): PublicClient<transport, chain, ParseAccount<accountOrAddress>, rpcSchema> {\n  const { key = 'public', name = 'Public Client' } = parameters\n  const client = createClient({\n    ...parameters,\n    key,\n    name,\n    type: 'publicClient',\n  })\n  return client.extend(publicActions) as any\n}\n","import type { Address } from 'abitype'\n\nimport type { Account } from '../accounts/types.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { ParseAccount } from '../types/account.js'\nimport type { Chain } from '../types/chain.js'\nimport type { RpcSchema, TestRpcSchema } from '../types/eip1193.js'\nimport type { Prettify } from '../types/utils.js'\nimport {\n  type Client,\n  type ClientConfig,\n  type CreateClientErrorType,\n  createClient,\n} from './createClient.js'\nimport { type TestActions, testActions } from './decorators/test.js'\nimport type { Transport } from './transports/createTransport.js'\n\nexport type TestClientMode = 'anvil' | 'hardhat' | 'ganache'\n\nexport type TestClientConfig<\n  mode extends TestClientMode = TestClientMode,\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  accountOrAddress extends Account | Address | undefined =\n    | Account\n    | Address\n    | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = Prettify<\n  Pick<\n    ClientConfig<transport, chain, accountOrAddress, rpcSchema>,\n    | 'account'\n    | 'cacheTime'\n    | 'chain'\n    | 'key'\n    | 'name'\n    | 'pollingInterval'\n    | 'rpcSchema'\n    | 'transport'\n  > & {\n    /** Mode of the test client. */\n    mode: mode | ('anvil' | 'hardhat' | 'ganache') // TODO: Type utility that expands `TestClientMode`\n  }\n>\n\nexport type TestClient<\n  mode extends TestClientMode = TestClientMode,\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  includeActions extends boolean = true,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = Prettify<\n  { mode: mode } & Client<\n    transport,\n    chain,\n    account,\n    rpcSchema extends RpcSchema\n      ? [...TestRpcSchema<mode>, ...rpcSchema]\n      : TestRpcSchema<mode>,\n    { mode: mode } & (includeActions extends true\n      ? TestActions\n      : Record<string, unknown>)\n  >\n>\n\nexport type CreateTestClientErrorType = CreateClientErrorType | ErrorType\n\n/**\n * @description Creates a test client with a given transport.\n */\n/**\n * Creates a Test Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\n *\n * - Docs: https://viem.sh/docs/clients/test\n *\n * A Test Client is an interface to \"test\" JSON-RPC API methods accessible through a local Ethereum test node such as [Anvil](https://book.getfoundry.sh/anvil/) or [Hardhat](https://hardhat.org/) such as mining blocks, impersonating accounts, setting fees, etc through [Test Actions](https://viem.sh/docs/actions/test/introduction).\n *\n * @param config - {@link TestClientConfig}\n * @returns A Test Client. {@link TestClient}\n *\n * @example\n * import { createTestClient, custom } from 'viem'\n * import { foundry } from 'viem/chains'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: foundry,\n *   transport: http(),\n * })\n */\nexport function createTestClient<\n  mode extends 'anvil' | 'hardhat' | 'ganache', // TODO: Type utility that expands `TestClientMode`\n  transport extends Transport,\n  chain extends Chain | undefined = undefined,\n  accountOrAddress extends Account | Address | undefined = undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n>(\n  parameters: TestClientConfig<\n    mode,\n    transport,\n    chain,\n    accountOrAddress,\n    rpcSchema\n  >,\n): TestClient<\n  mode,\n  transport,\n  chain,\n  ParseAccount<accountOrAddress>,\n  true,\n  rpcSchema\n>\n\nexport function createTestClient(parameters: TestClientConfig): TestClient {\n  const { key = 'test', name = 'Test Client', mode } = parameters\n  const client = createClient({\n    ...parameters,\n    key,\n    name,\n    type: 'testClient',\n  })\n  return client.extend((config) => ({\n    mode,\n    ...testActions({ mode })(config),\n  }))\n}\n","import type { Address } from 'abitype'\n\nimport type { Account } from '../accounts/types.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { ParseAccount } from '../types/account.js'\nimport type { Chain } from '../types/chain.js'\nimport type { RpcSchema, WalletRpcSchema } from '../types/eip1193.js'\nimport type { Prettify } from '../types/utils.js'\nimport {\n  type Client,\n  type ClientConfig,\n  type CreateClientErrorType,\n  createClient,\n} from './createClient.js'\nimport { type WalletActions, walletActions } from './decorators/wallet.js'\nimport type { Transport } from './transports/createTransport.js'\n\nexport type WalletClientConfig<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  accountOrAddress extends Account | Address | undefined =\n    | Account\n    | Address\n    | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = Prettify<\n  Pick<\n    ClientConfig<transport, chain, accountOrAddress, rpcSchema>,\n    | 'account'\n    | 'cacheTime'\n    | 'ccipRead'\n    | 'chain'\n    | 'key'\n    | 'name'\n    | 'pollingInterval'\n    | 'rpcSchema'\n    | 'transport'\n  >\n>\n\nexport type WalletClient<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = Prettify<\n  Client<\n    transport,\n    chain,\n    account,\n    rpcSchema extends RpcSchema\n      ? [...WalletRpcSchema, ...rpcSchema]\n      : WalletRpcSchema,\n    WalletActions<chain, account>\n  >\n>\n\nexport type CreateWalletClientErrorType = CreateClientErrorType | ErrorType\n\n/**\n * Creates a Wallet Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\n *\n * - Docs: https://viem.sh/docs/clients/wallet\n *\n * A Wallet Client is an interface to interact with [Ethereum Account(s)](https://ethereum.org/en/glossary/#account) and provides the ability to retrieve accounts, execute transactions, sign messages, etc. through [Wallet Actions](https://viem.sh/docs/actions/wallet/introduction).\n *\n * The Wallet Client supports signing over:\n * - [JSON-RPC Accounts](https://viem.sh/docs/clients/wallet#json-rpc-accounts) (e.g. Browser Extension Wallets, WalletConnect, etc).\n * - [Local Accounts](https://viem.sh/docs/clients/wallet#local-accounts-private-key-mnemonic-etc) (e.g. private key/mnemonic wallets).\n *\n * @param config - {@link WalletClientConfig}\n * @returns A Wallet Client. {@link WalletClient}\n *\n * @example\n * // JSON-RPC Account\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n *\n * @example\n * // Local Account\n * import { createWalletClient, custom } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…')\n *   chain: mainnet,\n *   transport: http(),\n * })\n */\nexport function createWalletClient<\n  transport extends Transport,\n  chain extends Chain | undefined = undefined,\n  accountOrAddress extends Account | Address | undefined = undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n>(\n  parameters: WalletClientConfig<transport, chain, accountOrAddress, rpcSchema>,\n): WalletClient<transport, chain, ParseAccount<accountOrAddress>, rpcSchema>\n\nexport function createWalletClient(\n  parameters: WalletClientConfig,\n): WalletClient {\n  const { key = 'wallet', name = 'Wallet Client', transport } = parameters\n  const client = createClient({\n    ...parameters,\n    key,\n    name,\n    transport,\n    type: 'walletClient',\n  })\n  return client.extend(walletActions)\n}\n","import type { Abi, AbiEvent, Address } from 'abitype'\n\nimport {\n  type GetEnsAddressParameters,\n  type GetEnsAddressReturnType,\n  getEnsAddress,\n} from '../../actions/ens/getEnsAddress.js'\nimport {\n  type GetEnsAvatarParameters,\n  type GetEnsAvatarReturnType,\n  getEnsAvatar,\n} from '../../actions/ens/getEnsAvatar.js'\nimport {\n  type GetEnsNameParameters,\n  type GetEnsNameReturnType,\n  getEnsName,\n} from '../../actions/ens/getEnsName.js'\nimport {\n  type GetEnsResolverParameters,\n  type GetEnsResolverReturnType,\n  getEnsResolver,\n} from '../../actions/ens/getEnsResolver.js'\nimport {\n  type GetEnsTextParameters,\n  type GetEnsTextReturnType,\n  getEnsText,\n} from '../../actions/ens/getEnsText.js'\nimport {\n  type CallParameters,\n  type CallReturnType,\n  call,\n} from '../../actions/public/call.js'\nimport {\n  type CreateAccessListParameters,\n  type CreateAccessListReturnType,\n  createAccessList,\n} from '../../actions/public/createAccessList.js'\nimport {\n  type CreateBlockFilterReturnType,\n  createBlockFilter,\n} from '../../actions/public/createBlockFilter.js'\nimport {\n  type CreateContractEventFilterParameters,\n  type CreateContractEventFilterReturnType,\n  createContractEventFilter,\n} from '../../actions/public/createContractEventFilter.js'\nimport {\n  type CreateEventFilterParameters,\n  type CreateEventFilterReturnType,\n  createEventFilter,\n} from '../../actions/public/createEventFilter.js'\nimport {\n  type CreatePendingTransactionFilterReturnType,\n  createPendingTransactionFilter,\n} from '../../actions/public/createPendingTransactionFilter.js'\nimport {\n  type EstimateContractGasParameters,\n  type EstimateContractGasReturnType,\n  estimateContractGas,\n} from '../../actions/public/estimateContractGas.js'\nimport {\n  type EstimateFeesPerGasParameters,\n  type EstimateFeesPerGasReturnType,\n  estimateFeesPerGas,\n} from '../../actions/public/estimateFeesPerGas.js'\nimport {\n  type EstimateGasParameters,\n  type EstimateGasReturnType,\n  estimateGas,\n} from '../../actions/public/estimateGas.js'\nimport {\n  type EstimateMaxPriorityFeePerGasParameters,\n  type EstimateMaxPriorityFeePerGasReturnType,\n  estimateMaxPriorityFeePerGas,\n} from '../../actions/public/estimateMaxPriorityFeePerGas.js'\nimport {\n  type GetBalanceParameters,\n  type GetBalanceReturnType,\n  getBalance,\n} from '../../actions/public/getBalance.js'\nimport {\n  type GetBlobBaseFeeReturnType,\n  getBlobBaseFee,\n} from '../../actions/public/getBlobBaseFee.js'\nimport {\n  type GetBlockParameters,\n  type GetBlockReturnType,\n  getBlock,\n} from '../../actions/public/getBlock.js'\nimport {\n  type GetBlockNumberParameters,\n  type GetBlockNumberReturnType,\n  getBlockNumber,\n} from '../../actions/public/getBlockNumber.js'\nimport {\n  type GetBlockTransactionCountParameters,\n  type GetBlockTransactionCountReturnType,\n  getBlockTransactionCount,\n} from '../../actions/public/getBlockTransactionCount.js'\nimport {\n  type GetChainIdReturnType,\n  getChainId,\n} from '../../actions/public/getChainId.js'\nimport {\n  type GetCodeParameters,\n  type GetCodeReturnType,\n  getCode,\n} from '../../actions/public/getCode.js'\nimport {\n  type GetContractEventsParameters,\n  type GetContractEventsReturnType,\n  getContractEvents,\n} from '../../actions/public/getContractEvents.js'\nimport {\n  type GetEip712DomainParameters,\n  type GetEip712DomainReturnType,\n  getEip712Domain,\n} from '../../actions/public/getEip712Domain.js'\nimport {\n  type GetFeeHistoryParameters,\n  type GetFeeHistoryReturnType,\n  getFeeHistory,\n} from '../../actions/public/getFeeHistory.js'\nimport {\n  type GetFilterChangesParameters,\n  type GetFilterChangesReturnType,\n  getFilterChanges,\n} from '../../actions/public/getFilterChanges.js'\nimport {\n  type GetFilterLogsParameters,\n  type GetFilterLogsReturnType,\n  getFilterLogs,\n} from '../../actions/public/getFilterLogs.js'\nimport {\n  type GetGasPriceReturnType,\n  getGasPrice,\n} from '../../actions/public/getGasPrice.js'\nimport {\n  type GetLogsParameters,\n  type GetLogsReturnType,\n  getLogs,\n} from '../../actions/public/getLogs.js'\nimport {\n  type GetProofParameters,\n  type GetProofReturnType,\n  getProof,\n} from '../../actions/public/getProof.js'\nimport {\n  type GetStorageAtParameters,\n  type GetStorageAtReturnType,\n  getStorageAt,\n} from '../../actions/public/getStorageAt.js'\nimport {\n  type GetTransactionParameters,\n  type GetTransactionReturnType,\n  getTransaction,\n} from '../../actions/public/getTransaction.js'\nimport {\n  type GetTransactionConfirmationsParameters,\n  type GetTransactionConfirmationsReturnType,\n  getTransactionConfirmations,\n} from '../../actions/public/getTransactionConfirmations.js'\nimport {\n  type GetTransactionCountParameters,\n  type GetTransactionCountReturnType,\n  getTransactionCount,\n} from '../../actions/public/getTransactionCount.js'\nimport {\n  type GetTransactionReceiptParameters,\n  type GetTransactionReceiptReturnType,\n  getTransactionReceipt,\n} from '../../actions/public/getTransactionReceipt.js'\nimport {\n  type MulticallParameters,\n  type MulticallReturnType,\n  multicall,\n} from '../../actions/public/multicall.js'\nimport {\n  type ReadContractParameters,\n  type ReadContractReturnType,\n  readContract,\n} from '../../actions/public/readContract.js'\nimport {\n  type SimulateBlocksParameters,\n  type SimulateBlocksReturnType,\n  simulateBlocks,\n} from '../../actions/public/simulateBlocks.js'\nimport {\n  type SimulateCallsParameters,\n  type SimulateCallsReturnType,\n  simulateCalls,\n} from '../../actions/public/simulateCalls.js'\nimport {\n  type SimulateContractParameters,\n  type SimulateContractReturnType,\n  simulateContract,\n} from '../../actions/public/simulateContract.js'\nimport {\n  type UninstallFilterParameters,\n  type UninstallFilterReturnType,\n  uninstallFilter,\n} from '../../actions/public/uninstallFilter.js'\nimport {\n  type VerifyMessageParameters,\n  type VerifyMessageReturnType,\n  verifyMessage,\n} from '../../actions/public/verifyMessage.js'\nimport {\n  type VerifyTypedDataParameters,\n  type VerifyTypedDataReturnType,\n  verifyTypedData,\n} from '../../actions/public/verifyTypedData.js'\nimport {\n  type WaitForTransactionReceiptParameters,\n  type WaitForTransactionReceiptReturnType,\n  waitForTransactionReceipt,\n} from '../../actions/public/waitForTransactionReceipt.js'\nimport {\n  type WatchBlockNumberParameters,\n  type WatchBlockNumberReturnType,\n  watchBlockNumber,\n} from '../../actions/public/watchBlockNumber.js'\nimport {\n  type WatchBlocksParameters,\n  type WatchBlocksReturnType,\n  watchBlocks,\n} from '../../actions/public/watchBlocks.js'\nimport {\n  type WatchContractEventParameters,\n  type WatchContractEventReturnType,\n  watchContractEvent,\n} from '../../actions/public/watchContractEvent.js'\nimport {\n  type WatchEventParameters,\n  type WatchEventReturnType,\n  watchEvent,\n} from '../../actions/public/watchEvent.js'\nimport {\n  type WatchPendingTransactionsParameters,\n  type WatchPendingTransactionsReturnType,\n  watchPendingTransactions,\n} from '../../actions/public/watchPendingTransactions.js'\nimport {\n  type VerifySiweMessageParameters,\n  type VerifySiweMessageReturnType,\n  verifySiweMessage,\n} from '../../actions/siwe/verifySiweMessage.js'\nimport {\n  type PrepareTransactionRequestParameters,\n  type PrepareTransactionRequestRequest,\n  type PrepareTransactionRequestReturnType,\n  prepareTransactionRequest,\n} from '../../actions/wallet/prepareTransactionRequest.js'\nimport {\n  type SendRawTransactionParameters,\n  type SendRawTransactionReturnType,\n  sendRawTransaction,\n} from '../../actions/wallet/sendRawTransaction.js'\nimport type { Account } from '../../types/account.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractEventName,\n  ContractFunctionArgs,\n  ContractFunctionName,\n  MaybeAbiEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { FeeValuesType } from '../../types/fee.js'\nimport type { FilterType } from '../../types/filter.js'\nimport type { Client } from '../createClient.js'\nimport type { Transport } from '../transports/createTransport.js'\n\nexport type PublicActions<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n> = {\n  /**\n   * Executes a new message call immediately without submitting a transaction to the network.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/call\n   * - JSON-RPC Methods: [`eth_call`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_call)\n   *\n   * @param args - {@link CallParameters}\n   * @returns The call data. {@link CallReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const data = await client.call({\n   *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n   *   data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   * })\n   */\n  call: (parameters: CallParameters<chain>) => Promise<CallReturnType>\n  /**\n   * Creates an EIP-2930 access list that you can include in a transaction.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/createAccessList\n   * - JSON-RPC Methods: `eth_createAccessList`\n   *\n   * @param args - {@link CreateAccessListParameters}\n   * @returns The call data. {@link CreateAccessListReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const data = await client.createAccessList({\n   *   data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   * })\n   */\n  createAccessList: (\n    parameters: CreateAccessListParameters<chain>,\n  ) => Promise<CreateAccessListReturnType>\n  /**\n   * Creates a Filter to listen for new block hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/createBlockFilter\n   * - JSON-RPC Methods: [`eth_newBlockFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newBlockFilter)\n   *\n   * @returns Filter. {@link CreateBlockFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, createBlockFilter, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await createBlockFilter(client)\n   * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'block' }\n   */\n  createBlockFilter: () => Promise<CreateBlockFilterReturnType>\n  /**\n   * Creates a Filter to retrieve event logs that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges) or [`getFilterLogs`](https://viem.sh/docs/actions/public/getFilterLogs).\n   *\n   * - Docs: https://viem.sh/docs/contract/createContractEventFilter\n   *\n   * @param args - {@link CreateContractEventFilterParameters}\n   * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateContractEventFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createContractEventFilter({\n   *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n   * })\n   */\n  createContractEventFilter: <\n    const abi extends Abi | readonly unknown[],\n    eventName extends ContractEventName<abi> | undefined,\n    args extends MaybeExtractEventArgsFromAbi<abi, eventName> | undefined,\n    strict extends boolean | undefined = undefined,\n    fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args: CreateContractEventFilterParameters<\n      abi,\n      eventName,\n      args,\n      strict,\n      fromBlock,\n      toBlock\n    >,\n  ) => Promise<\n    CreateContractEventFilterReturnType<\n      abi,\n      eventName,\n      args,\n      strict,\n      fromBlock,\n      toBlock\n    >\n  >\n  /**\n   * Creates a [`Filter`](https://viem.sh/docs/glossary/types#filter) to listen for new events that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/createEventFilter\n   * - JSON-RPC Methods: [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter)\n   *\n   * @param args - {@link CreateEventFilterParameters}\n   * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateEventFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createEventFilter({\n   *   address: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\n   * })\n   */\n  createEventFilter: <\n    const abiEvent extends AbiEvent | undefined = undefined,\n    const abiEvents extends\n      | readonly AbiEvent[]\n      | readonly unknown[]\n      | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n    strict extends boolean | undefined = undefined,\n    fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    toBlock extends BlockNumber | BlockTag | undefined = undefined,\n    _EventName extends string | undefined = MaybeAbiEventName<abiEvent>,\n    _Args extends\n      | MaybeExtractEventArgsFromAbi<abiEvents, _EventName>\n      | undefined = undefined,\n  >(\n    args?:\n      | CreateEventFilterParameters<\n          abiEvent,\n          abiEvents,\n          strict,\n          fromBlock,\n          toBlock,\n          _EventName,\n          _Args\n        >\n      | undefined,\n  ) => Promise<\n    CreateEventFilterReturnType<\n      abiEvent,\n      abiEvents,\n      strict,\n      fromBlock,\n      toBlock,\n      _EventName,\n      _Args\n    >\n  >\n  /**\n   * Creates a Filter to listen for new pending transaction hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/createPendingTransactionFilter\n   * - JSON-RPC Methods: [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter)\n   *\n   * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateBlockFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createPendingTransactionFilter()\n   * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'transaction' }\n   */\n  createPendingTransactionFilter: () => Promise<CreatePendingTransactionFilterReturnType>\n  /**\n   * Estimates the gas required to successfully execute a contract write function call.\n   *\n   * - Docs: https://viem.sh/docs/contract/estimateContractGas\n   *\n   * @remarks\n   * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`estimateGas` action](https://viem.sh/docs/actions/public/estimateGas) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n   *\n   * @param args - {@link EstimateContractGasParameters}\n   * @returns The gas estimate (in wei). {@link EstimateContractGasReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const gas = await client.estimateContractGas({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function mint() public']),\n   *   functionName: 'mint',\n   *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n   * })\n   */\n  estimateContractGas: <\n    chain extends Chain | undefined,\n    const abi extends Abi | readonly unknown[],\n    functionName extends ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n    args extends ContractFunctionArgs<\n      abi,\n      'nonpayable' | 'payable',\n      functionName\n    >,\n  >(\n    args: EstimateContractGasParameters<abi, functionName, args, chain>,\n  ) => Promise<EstimateContractGasReturnType>\n  /**\n   * Estimates the gas necessary to complete a transaction without submitting it to the network.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/estimateGas\n   * - JSON-RPC Methods: [`eth_estimateGas`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_estimategas)\n   *\n   * @param args - {@link EstimateGasParameters}\n   * @returns The gas estimate (in wei). {@link EstimateGasReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseEther } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const gasEstimate = await client.estimateGas({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *   value: parseEther('1'),\n   * })\n   */\n  estimateGas: (\n    args: EstimateGasParameters<chain>,\n  ) => Promise<EstimateGasReturnType>\n  /**\n   * Returns the balance of an address in wei.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBalance\n   * - JSON-RPC Methods: [`eth_getBalance`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getbalance)\n   *\n   * @remarks\n   * You can convert the balance to ether units with [`formatEther`](https://viem.sh/docs/utilities/formatEther).\n   *\n   * ```ts\n   * const balance = await getBalance(client, {\n   *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   blockTag: 'safe'\n   * })\n   * const balanceAsEther = formatEther(balance)\n   * // \"6.942\"\n   * ```\n   *\n   * @param args - {@link GetBalanceParameters}\n   * @returns The balance of the address in wei. {@link GetBalanceReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const balance = await client.getBalance({\n   *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   * // 10000000000000000000000n (wei)\n   */\n  getBalance: (args: GetBalanceParameters) => Promise<GetBalanceReturnType>\n  /**\n   * Returns the base fee per blob gas in wei.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBlobBaseFee\n   * - JSON-RPC Methods: [`eth_blobBaseFee`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blobBaseFee)\n   *\n   * @param client - Client to use\n   * @returns The blob base fee (in wei). {@link GetBlobBaseFeeReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { getBlobBaseFee } from 'viem/public'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const blobBaseFee = await client.getBlobBaseFee()\n   */\n  getBlobBaseFee: () => Promise<GetBlobBaseFeeReturnType>\n  /**\n   * Returns information about a block at a block number, hash, or tag.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBlock\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_fetching-blocks\n   * - JSON-RPC Methods:\n   *   - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) for `blockNumber` & `blockTag`.\n   *   - Calls [`eth_getBlockByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbyhash) for `blockHash`.\n   *\n   * @param args - {@link GetBlockParameters}\n   * @returns Information about the block. {@link GetBlockReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const block = await client.getBlock()\n   */\n  getBlock: <\n    includeTransactions extends boolean = false,\n    blockTag extends BlockTag = 'latest',\n  >(\n    args?: GetBlockParameters<includeTransactions, blockTag> | undefined,\n  ) => Promise<GetBlockReturnType<chain, includeTransactions, blockTag>>\n  /**\n   * Returns the number of the most recent block seen.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBlockNumber\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_fetching-blocks\n   * - JSON-RPC Methods: [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber)\n   *\n   * @param args - {@link GetBlockNumberParameters}\n   * @returns The number of the block. {@link GetBlockNumberReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const blockNumber = await client.getBlockNumber()\n   * // 69420n\n   */\n  getBlockNumber: (\n    args?: GetBlockNumberParameters | undefined,\n  ) => Promise<GetBlockNumberReturnType>\n  /**\n   * Returns the number of Transactions at a block number, hash, or tag.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBlockTransactionCount\n   * - JSON-RPC Methods:\n   *   - Calls [`eth_getBlockTransactionCountByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbynumber) for `blockNumber` & `blockTag`.\n   *   - Calls [`eth_getBlockTransactionCountByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbyhash) for `blockHash`.\n   *\n   * @param args - {@link GetBlockTransactionCountParameters}\n   * @returns The block transaction count. {@link GetBlockTransactionCountReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const count = await client.getBlockTransactionCount()\n   */\n  getBlockTransactionCount: (\n    args?: GetBlockTransactionCountParameters | undefined,\n  ) => Promise<GetBlockTransactionCountReturnType>\n  /** @deprecated Use `getCode` instead. */\n  getBytecode: (args: GetCodeParameters) => Promise<GetCodeReturnType>\n  /**\n   * Returns the chain ID associated with the current network.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getChainId\n   * - JSON-RPC Methods: [`eth_chainId`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_chainid)\n   *\n   * @returns The current chain ID. {@link GetChainIdReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const chainId = await client.getChainId()\n   * // 1\n   */\n  getChainId: () => Promise<GetChainIdReturnType>\n  /**\n   * Retrieves the bytecode at an address.\n   *\n   * - Docs: https://viem.sh/docs/contract/getCode\n   * - JSON-RPC Methods: [`eth_getCode`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getcode)\n   *\n   * @param args - {@link GetBytecodeParameters}\n   * @returns The contract's bytecode. {@link GetBytecodeReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const code = await client.getCode({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   * })\n   */\n  getCode: (args: GetCodeParameters) => Promise<GetCodeReturnType>\n  /**\n   * Returns a list of event logs emitted by a contract.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getContractEvents\n   * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link GetContractEventsParameters}\n   * @returns A list of event logs. {@link GetContractEventsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { wagmiAbi } from './abi'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const logs = await client.getContractEvents(client, {\n   *  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *  abi: wagmiAbi,\n   *  eventName: 'Transfer'\n   * })\n   */\n  getContractEvents: <\n    const abi extends Abi | readonly unknown[],\n    eventName extends ContractEventName<abi> | undefined = undefined,\n    strict extends boolean | undefined = undefined,\n    fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args: GetContractEventsParameters<\n      abi,\n      eventName,\n      strict,\n      fromBlock,\n      toBlock\n    >,\n  ) => Promise<\n    GetContractEventsReturnType<abi, eventName, strict, fromBlock, toBlock>\n  >\n  /**\n   * Reads the EIP-712 domain from a contract, based on the ERC-5267 specification.\n   *\n   * @param client - A {@link Client} instance.\n   * @param parameters - The parameters of the action. {@link GetEip712DomainParameters}\n   * @returns The EIP-712 domain, fields, and extensions. {@link GetEip712DomainReturnType}\n   *\n   * @example\n   * ```ts\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const domain = await client.getEip712Domain({\n   *   address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n   * })\n   * // {\n   * //   domain: {\n   * //     name: 'ExampleContract',\n   * //     version: '1',\n   * //     chainId: 1,\n   * //     verifyingContract: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n   * //   },\n   * //   fields: '0x0f',\n   * //   extensions: [],\n   * // }\n   * ```\n   */\n  getEip712Domain: (\n    args: GetEip712DomainParameters,\n  ) => Promise<GetEip712DomainReturnType>\n  /**\n   * Gets address for ENS name.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsAddress\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n   *\n   * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n   *\n   * @param args - {@link GetEnsAddressParameters}\n   * @returns Address for ENS name or `null` if not found. {@link GetEnsAddressReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { normalize } from 'viem/ens'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const ensAddress = await client.getEnsAddress({\n   *   name: normalize('wevm.eth'),\n   * })\n   * // '0xd2135CfB216b74109775236E36d4b433F1DF507B'\n   */\n  getEnsAddress: (\n    args: GetEnsAddressParameters,\n  ) => Promise<GetEnsAddressReturnType>\n  /**\n   * Gets the avatar of an ENS name.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsAvatar\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls [`getEnsText`](https://viem.sh/docs/ens/actions/getEnsText) with `key` set to `'avatar'`.\n   *\n   * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n   *\n   * @param args - {@link GetEnsAvatarParameters}\n   * @returns Avatar URI or `null` if not found. {@link GetEnsAvatarReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { normalize } from 'viem/ens'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const ensAvatar = await client.getEnsAvatar({\n   *   name: normalize('wevm.eth'),\n   * })\n   * // 'https://ipfs.io/ipfs/Qma8mnp6xV3J2cRNf3mTth5C8nV11CAnceVinc3y8jSbio'\n   */\n  getEnsAvatar: (\n    args: GetEnsAvatarParameters,\n  ) => Promise<GetEnsAvatarReturnType>\n  /**\n   * Gets primary name for specified address.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsName\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls `reverse(bytes)` on ENS Universal Resolver Contract to \"reverse resolve\" the address to the primary ENS name.\n   *\n   * @param args - {@link GetEnsNameParameters}\n   * @returns Name or `null` if not found. {@link GetEnsNameReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const ensName = await client.getEnsName({\n   *   address: '0xd2135CfB216b74109775236E36d4b433F1DF507B',\n   * })\n   * // 'wevm.eth'\n   */\n  getEnsName: (args: GetEnsNameParameters) => Promise<GetEnsNameReturnType>\n  /**\n   * Gets resolver for ENS name.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls `findResolver(bytes)` on ENS Universal Resolver Contract to retrieve the resolver of an ENS name.\n   *\n   * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n   *\n   * @param args - {@link GetEnsResolverParameters}\n   * @returns Address for ENS resolver. {@link GetEnsResolverReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { normalize } from 'viem/ens'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const resolverAddress = await client.getEnsResolver({\n   *   name: normalize('wevm.eth'),\n   * })\n   * // '0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41'\n   */\n  getEnsResolver: (\n    args: GetEnsResolverParameters,\n  ) => Promise<GetEnsResolverReturnType>\n  /**\n   * Gets a text record for specified ENS name.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n   *\n   * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n   *\n   * @param args - {@link GetEnsTextParameters}\n   * @returns Address for ENS resolver. {@link GetEnsTextReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { normalize } from 'viem/ens'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const twitterRecord = await client.getEnsText({\n   *   name: normalize('wevm.eth'),\n   *   key: 'com.twitter',\n   * })\n   * // 'wevm_dev'\n   */\n  getEnsText: (args: GetEnsTextParameters) => Promise<GetEnsTextReturnType>\n  /**\n   * Returns a collection of historical gas information.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getFeeHistory\n   * - JSON-RPC Methods: [`eth_feeHistory`](https://docs.alchemy.com/reference/eth-feehistory)\n   *\n   * @param args - {@link GetFeeHistoryParameters}\n   * @returns The gas estimate (in wei). {@link GetFeeHistoryReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const feeHistory = await client.getFeeHistory({\n   *   blockCount: 4,\n   *   rewardPercentiles: [25, 75],\n   * })\n   */\n  getFeeHistory: (\n    args: GetFeeHistoryParameters,\n  ) => Promise<GetFeeHistoryReturnType>\n  /**\n   * Returns an estimate for the fees per gas for a transaction to be included\n   * in the next block.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/estimateFeesPerGas\n   *\n   * @param client - Client to use\n   * @param parameters - {@link EstimateFeesPerGasParameters}\n   * @returns An estimate (in wei) for the fees per gas. {@link EstimateFeesPerGasReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const maxPriorityFeePerGas = await client.estimateFeesPerGas()\n   * // { maxFeePerGas: ..., maxPriorityFeePerGas: ... }\n   */\n  estimateFeesPerGas: <\n    chainOverride extends Chain | undefined = undefined,\n    type extends FeeValuesType = 'eip1559',\n  >(\n    args?: EstimateFeesPerGasParameters<chain, chainOverride, type> | undefined,\n  ) => Promise<EstimateFeesPerGasReturnType<type>>\n  /**\n   * Returns a list of logs or hashes based on a [Filter](/docs/glossary/terms#filter) since the last time it was called.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getFilterChanges\n   * - JSON-RPC Methods: [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges)\n   *\n   * @remarks\n   * A Filter can be created from the following actions:\n   *\n   * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter)\n   * - [`createContractEventFilter`](https://viem.sh/docs/contract/createContractEventFilter)\n   * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter)\n   * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter)\n   *\n   * Depending on the type of filter, the return value will be different:\n   *\n   * - If the filter was created with `createContractEventFilter` or `createEventFilter`, it returns a list of logs.\n   * - If the filter was created with `createPendingTransactionFilter`, it returns a list of transaction hashes.\n   * - If the filter was created with `createBlockFilter`, it returns a list of block hashes.\n   *\n   * @param args - {@link GetFilterChangesParameters}\n   * @returns Logs or hashes. {@link GetFilterChangesReturnType}\n   *\n   * @example\n   * // Blocks\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createBlockFilter()\n   * const hashes = await client.getFilterChanges({ filter })\n   *\n   * @example\n   * // Contract Events\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createContractEventFilter({\n   *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n   *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n   *   eventName: 'Transfer',\n   * })\n   * const logs = await client.getFilterChanges({ filter })\n   *\n   * @example\n   * // Raw Events\n   * import { createPublicClient, http, parseAbiItem } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createEventFilter({\n   *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n   *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n   * })\n   * const logs = await client.getFilterChanges({ filter })\n   *\n   * @example\n   * // Transactions\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createPendingTransactionFilter()\n   * const hashes = await client.getFilterChanges({ filter })\n   */\n  getFilterChanges: <\n    filterType extends FilterType,\n    const abi extends Abi | readonly unknown[] | undefined,\n    eventName extends string | undefined,\n    strict extends boolean | undefined = undefined,\n    fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args: GetFilterChangesParameters<\n      filterType,\n      abi,\n      eventName,\n      strict,\n      fromBlock,\n      toBlock\n    >,\n  ) => Promise<\n    GetFilterChangesReturnType<\n      filterType,\n      abi,\n      eventName,\n      strict,\n      fromBlock,\n      toBlock\n    >\n  >\n  /**\n   * Returns a list of event logs since the filter was created.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getFilterLogs\n   * - JSON-RPC Methods: [`eth_getFilterLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterlogs)\n   *\n   * @remarks\n   * `getFilterLogs` is only compatible with **event filters**.\n   *\n   * @param args - {@link GetFilterLogsParameters}\n   * @returns A list of event logs. {@link GetFilterLogsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbiItem } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createEventFilter({\n   *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n   *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n   * })\n   * const logs = await client.getFilterLogs({ filter })\n   */\n  getFilterLogs: <\n    const abi extends Abi | readonly unknown[] | undefined,\n    eventName extends string | undefined,\n    strict extends boolean | undefined = undefined,\n    fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args: GetFilterLogsParameters<abi, eventName, strict, fromBlock, toBlock>,\n  ) => Promise<\n    GetFilterLogsReturnType<abi, eventName, strict, fromBlock, toBlock>\n  >\n  /**\n   * Returns the current price of gas (in wei).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getGasPrice\n   * - JSON-RPC Methods: [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice)\n   *\n   * @returns The gas price (in wei). {@link GetGasPriceReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const gasPrice = await client.getGasPrice()\n   */\n  getGasPrice: () => Promise<GetGasPriceReturnType>\n  /**\n   * Returns a list of event logs matching the provided parameters.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getLogs\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/logs_event-logs\n   * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\n   *\n   * @param args - {@link GetLogsParameters}\n   * @returns A list of event logs. {@link GetLogsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbiItem } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const logs = await client.getLogs()\n   */\n  getLogs: <\n    const abiEvent extends AbiEvent | undefined = undefined,\n    const abiEvents extends\n      | readonly AbiEvent[]\n      | readonly unknown[]\n      | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n    strict extends boolean | undefined = undefined,\n    fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args?:\n      | GetLogsParameters<abiEvent, abiEvents, strict, fromBlock, toBlock>\n      | undefined,\n  ) => Promise<\n    GetLogsReturnType<abiEvent, abiEvents, strict, fromBlock, toBlock>\n  >\n  /**\n   * Returns the account and storage values of the specified account including the Merkle-proof.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getProof\n   * - JSON-RPC Methods:\n   *   - Calls [`eth_getProof`](https://eips.ethereum.org/EIPS/eip-1186)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link GetProofParameters}\n   * @returns Proof data. {@link GetProofReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const block = await client.getProof({\n   *  address: '0x...',\n   *  storageKeys: ['0x...'],\n   * })\n   */\n  getProof: (args: GetProofParameters) => Promise<GetProofReturnType>\n  /**\n   * Returns an estimate for the max priority fee per gas (in wei) for a transaction\n   * to be included in the next block.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/estimateMaxPriorityFeePerGas\n   *\n   * @param client - Client to use\n   * @returns An estimate (in wei) for the max priority fee per gas. {@link EstimateMaxPriorityFeePerGasReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const maxPriorityFeePerGas = await client.estimateMaxPriorityFeePerGas()\n   * // 10000000n\n   */\n  estimateMaxPriorityFeePerGas: <\n    chainOverride extends Chain | undefined = undefined,\n  >(\n    args?:\n      | EstimateMaxPriorityFeePerGasParameters<chain, chainOverride>\n      | undefined,\n  ) => Promise<EstimateMaxPriorityFeePerGasReturnType>\n  /**\n   * Returns the value from a storage slot at a given address.\n   *\n   * - Docs: https://viem.sh/docs/contract/getStorageAt\n   * - JSON-RPC Methods: [`eth_getStorageAt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getstorageat)\n   *\n   * @param args - {@link GetStorageAtParameters}\n   * @returns The value of the storage slot. {@link GetStorageAtReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { getStorageAt } from 'viem/contract'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const code = await client.getStorageAt({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   slot: toHex(0),\n   * })\n   */\n  getStorageAt: (\n    args: GetStorageAtParameters,\n  ) => Promise<GetStorageAtReturnType>\n  /**\n   * Returns information about a [Transaction](https://viem.sh/docs/glossary/terms#transaction) given a hash or block identifier.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getTransaction\n   * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_fetching-transactions\n   * - JSON-RPC Methods: [`eth_getTransactionByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionByHash)\n   *\n   * @param args - {@link GetTransactionParameters}\n   * @returns The transaction information. {@link GetTransactionReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const transaction = await client.getTransaction({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  getTransaction: <blockTag extends BlockTag = 'latest'>(\n    args: GetTransactionParameters<blockTag>,\n  ) => Promise<GetTransactionReturnType<chain, blockTag>>\n  /**\n   * Returns the number of blocks passed (confirmations) since the transaction was processed on a block.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getTransactionConfirmations\n   * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_fetching-transactions\n   * - JSON-RPC Methods: [`eth_getTransactionConfirmations`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionConfirmations)\n   *\n   * @param args - {@link GetTransactionConfirmationsParameters}\n   * @returns The number of blocks passed since the transaction was processed. If confirmations is 0, then the Transaction has not been confirmed & processed yet. {@link GetTransactionConfirmationsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const confirmations = await client.getTransactionConfirmations({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  getTransactionConfirmations: (\n    args: GetTransactionConfirmationsParameters<chain>,\n  ) => Promise<GetTransactionConfirmationsReturnType>\n  /**\n   * Returns the number of [Transactions](https://viem.sh/docs/glossary/terms#transaction) an Account has broadcast / sent.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getTransactionCount\n   * - JSON-RPC Methods: [`eth_getTransactionCount`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactioncount)\n   *\n   * @param args - {@link GetTransactionCountParameters}\n   * @returns The number of transactions an account has sent. {@link GetTransactionCountReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const transactionCount = await client.getTransactionCount({\n   *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   */\n  getTransactionCount: (\n    args: GetTransactionCountParameters,\n  ) => Promise<GetTransactionCountReturnType>\n  /**\n   * Returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms#transaction-receipt) given a [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getTransactionReceipt\n   * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_fetching-transactions\n   * - JSON-RPC Methods: [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt)\n   *\n   * @param args - {@link GetTransactionReceiptParameters}\n   * @returns The transaction receipt. {@link GetTransactionReceiptReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const transactionReceipt = await client.getTransactionReceipt({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  getTransactionReceipt: (\n    args: GetTransactionReceiptParameters,\n  ) => Promise<GetTransactionReceiptReturnType<chain>>\n  /**\n   * Similar to [`readContract`](https://viem.sh/docs/contract/readContract), but batches up multiple functions on a contract in a single RPC call via the [`multicall3` contract](https://github.com/mds1/multicall).\n   *\n   * - Docs: https://viem.sh/docs/contract/multicall\n   *\n   * @param args - {@link MulticallParameters}\n   * @returns An array of results with accompanying status. {@link MulticallReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const abi = parseAbi([\n   *   'function balanceOf(address) view returns (uint256)',\n   *   'function totalSupply() view returns (uint256)',\n   * ])\n   * const result = await client.multicall({\n   *   contracts: [\n   *     {\n   *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *       abi,\n   *       functionName: 'balanceOf',\n   *       args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n   *     },\n   *     {\n   *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *       abi,\n   *       functionName: 'totalSupply',\n   *     },\n   *   ],\n   * })\n   * // [{ result: 424122n, status: 'success' }, { result: 1000000n, status: 'success' }]\n   */\n  multicall: <\n    const contracts extends readonly unknown[],\n    allowFailure extends boolean = true,\n  >(\n    args: MulticallParameters<contracts, allowFailure>,\n  ) => Promise<MulticallReturnType<contracts, allowFailure>>\n  /**\n   * Prepares a transaction request for signing.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/prepareTransactionRequest\n   *\n   * @param args - {@link PrepareTransactionRequestParameters}\n   * @returns The transaction request. {@link PrepareTransactionRequestReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   */\n  prepareTransactionRequest: <\n    const request extends PrepareTransactionRequestRequest<\n      chain,\n      chainOverride\n    >,\n    chainOverride extends Chain | undefined = undefined,\n    accountOverride extends Account | Address | undefined = undefined,\n  >(\n    args: PrepareTransactionRequestParameters<\n      chain,\n      account,\n      chainOverride,\n      accountOverride,\n      request\n    >,\n  ) => Promise<\n    PrepareTransactionRequestReturnType<\n      chain,\n      account,\n      chainOverride,\n      accountOverride,\n      request\n    >\n  >\n  /**\n   * Calls a read-only function on a contract, and returns the response.\n   *\n   * - Docs: https://viem.sh/docs/contract/readContract\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_reading-contracts\n   *\n   * @remarks\n   * A \"read-only\" function (constant function) on a Solidity contract is denoted by a `view` or `pure` keyword. They can only read the state of the contract, and cannot make any changes to it. Since read-only methods do not change the state of the contract, they do not require any gas to be executed, and can be called by any user without the need to pay for gas.\n   *\n   * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`call` action](https://viem.sh/docs/actions/public/call) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n   *\n   * @param args - {@link ReadContractParameters}\n   * @returns The response from the contract. Type is inferred. {@link ReadContractReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { readContract } from 'viem/contract'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const result = await client.readContract({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function balanceOf(address) view returns (uint256)']),\n   *   functionName: 'balanceOf',\n   *   args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n   * })\n   * // 424122n\n   */\n  readContract: <\n    const abi extends Abi | readonly unknown[],\n    functionName extends ContractFunctionName<abi, 'pure' | 'view'>,\n    const args extends ContractFunctionArgs<abi, 'pure' | 'view', functionName>,\n  >(\n    args: ReadContractParameters<abi, functionName, args>,\n  ) => Promise<ReadContractReturnType<abi, functionName, args>>\n  /**\n   * Sends a **signed** transaction to the network\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/sendRawTransaction\n   * - JSON-RPC Method: [`eth_sendRawTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link SendRawTransactionParameters}\n   * @returns The transaction hash. {@link SendRawTransactionReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { sendRawTransaction } from 'viem/wallet'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   *\n   * const hash = await client.sendRawTransaction({\n   *   serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33'\n   * })\n   */\n  sendRawTransaction: (\n    args: SendRawTransactionParameters,\n  ) => Promise<SendRawTransactionReturnType>\n  /**\n   * @deprecated Use `simulateBlocks` instead.\n   */\n  simulate: <const calls extends readonly unknown[]>(\n    args: SimulateBlocksParameters<calls>,\n  ) => Promise<SimulateBlocksReturnType<calls>>\n  /**\n   * Simulates a set of calls on block(s) with optional block and state overrides.\n   *\n   * @example\n   * ```ts\n   * import { createPublicClient, http, parseEther } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const result = await client.simulateBlocks({\n   *   blocks: [{\n   *     blockOverrides: {\n   *       number: 69420n,\n   *     },\n   *     calls: [{\n   *       {\n   *         account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\n   *         data: '0xdeadbeef',\n   *         to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *       },\n   *       {\n   *         account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\n   *         to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *         value: parseEther('1'),\n   *       },\n   *     }],\n   *     stateOverrides: [{\n   *       address: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\n   *       balance: parseEther('10'),\n   *     }],\n   *   }]\n   * })\n   * ```\n   *\n   * @param client - Client to use.\n   * @param parameters - {@link SimulateParameters}\n   * @returns Simulated blocks. {@link SimulateReturnType}\n   */\n  simulateBlocks: <const calls extends readonly unknown[]>(\n    args: SimulateBlocksParameters<calls>,\n  ) => Promise<SimulateBlocksReturnType<calls>>\n  /**\n   * Simulates a set of calls.\n   *\n   * @example\n   * ```ts\n   * import { createPublicClient, http, parseEther } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const result = await client.simulateCalls({\n   *   account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\n   *   calls: [{\n   *     {\n   *       data: '0xdeadbeef',\n   *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *     },\n   *     {\n   *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *       value: parseEther('1'),\n   *     },\n   *   ]\n   * })\n   * ```\n   *\n   * @param client - Client to use.\n   * @param parameters - {@link SimulateCallsParameters}\n   * @returns Results. {@link SimulateCallsReturnType}\n   */\n  simulateCalls: <const calls extends readonly unknown[]>(\n    args: SimulateCallsParameters<calls>,\n  ) => Promise<SimulateCallsReturnType<calls>>\n  /**\n   * Simulates/validates a contract interaction. This is useful for retrieving **return data** and **revert reasons** of contract write functions.\n   *\n   * - Docs: https://viem.sh/docs/contract/simulateContract\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_writing-to-contracts\n   *\n   * @remarks\n   * This function does not require gas to execute and _**does not**_ change the state of the blockchain. It is almost identical to [`readContract`](https://viem.sh/docs/contract/readContract), but also supports contract write functions.\n   *\n   * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`call` action](https://viem.sh/docs/actions/public/call) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n   *\n   * @param args - {@link SimulateContractParameters}\n   * @returns The simulation result and write request. {@link SimulateContractReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const result = await client.simulateContract({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function mint(uint32) view returns (uint32)']),\n   *   functionName: 'mint',\n   *   args: ['69420'],\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   */\n  simulateContract: <\n    const abi extends Abi | readonly unknown[],\n    functionName extends ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n    const args extends ContractFunctionArgs<\n      abi,\n      'nonpayable' | 'payable',\n      functionName\n    >,\n    chainOverride extends Chain | undefined,\n    accountOverride extends Account | Address | undefined = undefined,\n  >(\n    args: SimulateContractParameters<\n      abi,\n      functionName,\n      args,\n      chain,\n      chainOverride,\n      accountOverride\n    >,\n  ) => Promise<\n    SimulateContractReturnType<\n      abi,\n      functionName,\n      args,\n      chain,\n      account,\n      chainOverride,\n      accountOverride\n    >\n  >\n  /**\n   * Verify that a message was signed by the provided address.\n   *\n   * Compatible with Smart Contract Accounts & Externally Owned Accounts via [ERC-6492](https://eips.ethereum.org/EIPS/eip-6492).\n   *\n   * - Docs {@link https://viem.sh/docs/actions/public/verifyMessage}\n   *\n   * @param parameters - {@link VerifyMessageParameters}\n   * @returns Whether or not the signature is valid. {@link VerifyMessageReturnType}\n   */\n  verifyMessage: (\n    args: VerifyMessageParameters,\n  ) => Promise<VerifyMessageReturnType>\n  /**\n   * Verifies [EIP-4361](https://eips.ethereum.org/EIPS/eip-4361) formatted message was signed.\n   *\n   * Compatible with Smart Contract Accounts & Externally Owned Accounts via [ERC-6492](https://eips.ethereum.org/EIPS/eip-6492).\n   *\n   * - Docs {@link https://viem.sh/docs/siwe/actions/verifySiweMessage}\n   *\n   * @param parameters - {@link VerifySiweMessageParameters}\n   * @returns Whether or not the signature is valid. {@link VerifySiweMessageReturnType}\n   */\n  verifySiweMessage: (\n    args: VerifySiweMessageParameters,\n  ) => Promise<VerifySiweMessageReturnType>\n  /**\n   * Verify that typed data was signed by the provided address.\n   *\n   * - Docs {@link https://viem.sh/docs/actions/public/verifyTypedData}\n   *\n   * @param parameters - {@link VerifyTypedDataParameters}\n   * @returns Whether or not the signature is valid. {@link VerifyTypedDataReturnType}\n   */\n  verifyTypedData: (\n    args: VerifyTypedDataParameters,\n  ) => Promise<VerifyTypedDataReturnType>\n  /**\n   * Destroys a Filter that was created from one of the following Actions:\n   *\n   * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter)\n   * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter)\n   * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter)\n   *\n   * - Docs: https://viem.sh/docs/actions/public/uninstallFilter\n   * - JSON-RPC Methods: [`eth_uninstallFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_uninstallFilter)\n   *\n   * @param args - {@link UninstallFilterParameters}\n   * @returns A boolean indicating if the Filter was successfully uninstalled. {@link UninstallFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { createPendingTransactionFilter, uninstallFilter } from 'viem/public'\n   *\n   * const filter = await client.createPendingTransactionFilter()\n   * const uninstalled = await client.uninstallFilter({ filter })\n   * // true\n   */\n  uninstallFilter: (\n    args: UninstallFilterParameters,\n  ) => Promise<UninstallFilterReturnType>\n  /**\n   * Waits for the [Transaction](https://viem.sh/docs/glossary/terms#transaction) to be included on a [Block](https://viem.sh/docs/glossary/terms#block) (one confirmation), and then returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms#transaction-receipt). If the Transaction reverts, then the action will throw an error.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/waitForTransactionReceipt\n   * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\n   * - JSON-RPC Methods:\n   *   - Polls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt) on each block until it has been processed.\n   *   - If a Transaction has been replaced:\n   *     - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) and extracts the transactions\n   *     - Checks if one of the Transactions is a replacement\n   *     - If so, calls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt).\n   *\n   * @remarks\n   * The `waitForTransactionReceipt` action additionally supports Replacement detection (e.g. sped up Transactions).\n   *\n   * Transactions can be replaced when a user modifies their transaction in their wallet (to speed up or cancel). Transactions are replaced when they are sent from the same nonce.\n   *\n   * There are 3 types of Transaction Replacement reasons:\n   *\n   * - `repriced`: The gas price has been modified (e.g. different `maxFeePerGas`)\n   * - `cancelled`: The Transaction has been cancelled (e.g. `value === 0n`)\n   * - `replaced`: The Transaction has been replaced (e.g. different `value` or `data`)\n   *\n   * @param args - {@link WaitForTransactionReceiptParameters}\n   * @returns The transaction receipt. {@link WaitForTransactionReceiptReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const transactionReceipt = await client.waitForTransactionReceipt({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  waitForTransactionReceipt: (\n    args: WaitForTransactionReceiptParameters<chain>,\n  ) => Promise<WaitForTransactionReceiptReturnType<chain>>\n  /**\n   * Watches and returns incoming block numbers.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/watchBlockNumber\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_watching-blocks\n   * - JSON-RPC Methods:\n   *   - When `poll: true`, calls [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber) on a polling interval.\n   *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n   *\n   * @param args - {@link WatchBlockNumberParameters}\n   * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlockNumberReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = await client.watchBlockNumber({\n   *   onBlockNumber: (blockNumber) => console.log(blockNumber),\n   * })\n   */\n  watchBlockNumber: (\n    args: WatchBlockNumberParameters,\n  ) => WatchBlockNumberReturnType\n  /**\n   * Watches and returns information for incoming blocks.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/watchBlocks\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_watching-blocks\n   * - JSON-RPC Methods:\n   *   - When `poll: true`, calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getBlockByNumber) on a polling interval.\n   *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n   *\n   * @param args - {@link WatchBlocksParameters}\n   * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlocksReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = await client.watchBlocks({\n   *   onBlock: (block) => console.log(block),\n   * })\n   */\n  watchBlocks: <\n    includeTransactions extends boolean = false,\n    blockTag extends BlockTag = 'latest',\n  >(\n    args: WatchBlocksParameters<\n      transport,\n      chain,\n      includeTransactions,\n      blockTag\n    >,\n  ) => WatchBlocksReturnType\n  /**\n   * Watches and returns emitted contract event logs.\n   *\n   * - Docs: https://viem.sh/docs/contract/watchContractEvent\n   *\n   * @remarks\n   * This Action will batch up all the event logs found within the [`pollingInterval`](https://viem.sh/docs/contract/watchContractEvent#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/contract/watchContractEvent#onLogs).\n   *\n   * `watchContractEvent` will attempt to create an [Event Filter](https://viem.sh/docs/contract/createContractEventFilter) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchContractEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs) instead.\n   *\n   * @param args - {@link WatchContractEventParameters}\n   * @returns A function that can be invoked to stop watching for new event logs. {@link WatchContractEventReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = client.watchContractEvent({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['event Transfer(address indexed from, address indexed to, uint256 value)']),\n   *   eventName: 'Transfer',\n   *   args: { from: '0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b' },\n   *   onLogs: (logs) => console.log(logs),\n   * })\n   */\n  watchContractEvent: <\n    const abi extends Abi | readonly unknown[],\n    eventName extends ContractEventName<abi>,\n    strict extends boolean | undefined = undefined,\n  >(\n    args: WatchContractEventParameters<abi, eventName, strict, transport>,\n  ) => WatchContractEventReturnType\n  /**\n   * Watches and returns emitted [Event Logs](https://viem.sh/docs/glossary/terms#event-log).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/watchEvent\n   * - JSON-RPC Methods:\n   *   - **RPC Provider supports `eth_newFilter`:**\n   *     - Calls [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter) to create a filter (called on initialize).\n   *     - On a polling interval, it will call [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges).\n   *   - **RPC Provider does not support `eth_newFilter`:**\n   *     - Calls [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs) for each block between the polling interval.\n   *\n   * @remarks\n   * This Action will batch up all the Event Logs found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchEvent#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/actions/public/watchEvent#onLogs).\n   *\n   * `watchEvent` will attempt to create an [Event Filter](https://viem.sh/docs/actions/public/createEventFilter) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs) instead.\n   *\n   * @param args - {@link WatchEventParameters}\n   * @returns A function that can be invoked to stop watching for new Event Logs. {@link WatchEventReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = client.watchEvent({\n   *   onLogs: (logs) => console.log(logs),\n   * })\n   */\n  watchEvent: <\n    const abiEvent extends AbiEvent | undefined = undefined,\n    const abiEvents extends\n      | readonly AbiEvent[]\n      | readonly unknown[]\n      | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n    strict extends boolean | undefined = undefined,\n  >(\n    args: WatchEventParameters<abiEvent, abiEvents, strict, transport>,\n  ) => WatchEventReturnType\n  /**\n   * Watches and returns pending transaction hashes.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/watchPendingTransactions\n   * - JSON-RPC Methods:\n   *   - When `poll: true`\n   *     - Calls [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter) to initialize the filter.\n   *     - Calls [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getFilterChanges) on a polling interval.\n   *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newPendingTransactions\"` event.\n   *\n   * @remarks\n   * This Action will batch up all the pending transactions found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchPendingTransactions#pollinginterval-optional), and invoke them via [`onTransactions`](https://viem.sh/docs/actions/public/watchPendingTransactions#ontransactions).\n   *\n   * @param args - {@link WatchPendingTransactionsParameters}\n   * @returns A function that can be invoked to stop watching for new pending transaction hashes. {@link WatchPendingTransactionsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = await client.watchPendingTransactions({\n   *   onTransactions: (hashes) => console.log(hashes),\n   * })\n   */\n  watchPendingTransactions: (\n    args: WatchPendingTransactionsParameters<transport>,\n  ) => WatchPendingTransactionsReturnType\n}\n\nexport function publicActions<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n>(\n  client: Client<transport, chain, account>,\n): PublicActions<transport, chain, account> {\n  return {\n    call: (args) => call(client, args),\n    createAccessList: (args) => createAccessList(client, args),\n    createBlockFilter: () => createBlockFilter(client),\n    createContractEventFilter: (args) =>\n      createContractEventFilter(client, args),\n    createEventFilter: (args) => createEventFilter(client, args),\n    createPendingTransactionFilter: () =>\n      createPendingTransactionFilter(client),\n    estimateContractGas: (args) => estimateContractGas(client, args as any),\n    estimateGas: (args) => estimateGas(client, args),\n    getBalance: (args) => getBalance(client, args),\n    getBlobBaseFee: () => getBlobBaseFee(client),\n    getBlock: (args) => getBlock(client, args),\n    getBlockNumber: (args) => getBlockNumber(client, args),\n    getBlockTransactionCount: (args) => getBlockTransactionCount(client, args),\n    getBytecode: (args) => getCode(client, args),\n    getChainId: () => getChainId(client),\n    getCode: (args) => getCode(client, args),\n    getContractEvents: (args) => getContractEvents(client, args),\n    getEip712Domain: (args) => getEip712Domain(client, args),\n    getEnsAddress: (args) => getEnsAddress(client, args),\n    getEnsAvatar: (args) => getEnsAvatar(client, args),\n    getEnsName: (args) => getEnsName(client, args),\n    getEnsResolver: (args) => getEnsResolver(client, args),\n    getEnsText: (args) => getEnsText(client, args),\n    getFeeHistory: (args) => getFeeHistory(client, args),\n    estimateFeesPerGas: (args) => estimateFeesPerGas(client, args),\n    getFilterChanges: (args) => getFilterChanges(client, args),\n    getFilterLogs: (args) => getFilterLogs(client, args),\n    getGasPrice: () => getGasPrice(client),\n    getLogs: (args) => getLogs(client, args as any),\n    getProof: (args) => getProof(client, args),\n    estimateMaxPriorityFeePerGas: (args) =>\n      estimateMaxPriorityFeePerGas(client, args),\n    getStorageAt: (args) => getStorageAt(client, args),\n    getTransaction: (args) => getTransaction(client, args),\n    getTransactionConfirmations: (args) =>\n      getTransactionConfirmations(client, args),\n    getTransactionCount: (args) => getTransactionCount(client, args),\n    getTransactionReceipt: (args) => getTransactionReceipt(client, args),\n    multicall: (args) => multicall(client, args),\n    prepareTransactionRequest: (args) =>\n      prepareTransactionRequest(client as any, args as any) as any,\n    readContract: (args) => readContract(client, args),\n    sendRawTransaction: (args) => sendRawTransaction(client, args),\n    simulate: (args) => simulateBlocks(client, args),\n    simulateBlocks: (args) => simulateBlocks(client, args),\n    simulateCalls: (args) => simulateCalls(client, args),\n    simulateContract: (args) => simulateContract(client, args),\n    verifyMessage: (args) => verifyMessage(client, args),\n    verifySiweMessage: (args) => verifySiweMessage(client, args),\n    verifyTypedData: (args) => verifyTypedData(client, args),\n    uninstallFilter: (args) => uninstallFilter(client, args),\n    waitForTransactionReceipt: (args) =>\n      waitForTransactionReceipt(client, args),\n    watchBlocks: (args) => watchBlocks(client, args),\n    watchBlockNumber: (args) => watchBlockNumber(client, args),\n    watchContractEvent: (args) => watchContractEvent(client, args),\n    watchEvent: (args) => watchEvent(client, args),\n    watchPendingTransactions: (args) => watchPendingTransactions(client, args),\n  }\n}\n","import {\n  type DropTransactionParameters,\n  dropTransaction,\n} from '../../actions/test/dropTransaction.js'\nimport {\n  type DumpStateReturnType,\n  dumpState,\n} from '../../actions/test/dumpState.js'\nimport {\n  type GetAutomineReturnType,\n  getAutomine,\n} from '../../actions/test/getAutomine.js'\nimport {\n  type GetTxpoolContentReturnType,\n  getTxpoolContent,\n} from '../../actions/test/getTxpoolContent.js'\nimport {\n  type GetTxpoolStatusReturnType,\n  getTxpoolStatus,\n} from '../../actions/test/getTxpoolStatus.js'\nimport {\n  type ImpersonateAccountParameters,\n  impersonateAccount,\n} from '../../actions/test/impersonateAccount.js'\nimport {\n  type IncreaseTimeParameters,\n  increaseTime,\n} from '../../actions/test/increaseTime.js'\nimport {\n  type InspectTxpoolReturnType,\n  inspectTxpool,\n} from '../../actions/test/inspectTxpool.js'\nimport {\n  type LoadStateParameters,\n  type LoadStateReturnType,\n  loadState,\n} from '../../actions/test/loadState.js'\nimport { type MineParameters, mine } from '../../actions/test/mine.js'\nimport { removeBlockTimestampInterval } from '../../actions/test/removeBlockTimestampInterval.js'\nimport { type ResetParameters, reset } from '../../actions/test/reset.js'\nimport { type RevertParameters, revert } from '../../actions/test/revert.js'\nimport {\n  type SendUnsignedTransactionParameters,\n  type SendUnsignedTransactionReturnType,\n  sendUnsignedTransaction,\n} from '../../actions/test/sendUnsignedTransaction.js'\nimport { setAutomine } from '../../actions/test/setAutomine.js'\nimport {\n  type SetBalanceParameters,\n  setBalance,\n} from '../../actions/test/setBalance.js'\nimport {\n  type SetBlockGasLimitParameters,\n  setBlockGasLimit,\n} from '../../actions/test/setBlockGasLimit.js'\nimport {\n  type SetBlockTimestampIntervalParameters,\n  setBlockTimestampInterval,\n} from '../../actions/test/setBlockTimestampInterval.js'\nimport { type SetCodeParameters, setCode } from '../../actions/test/setCode.js'\nimport {\n  type SetCoinbaseParameters,\n  setCoinbase,\n} from '../../actions/test/setCoinbase.js'\nimport {\n  type SetIntervalMiningParameters,\n  setIntervalMining,\n} from '../../actions/test/setIntervalMining.js'\nimport { setLoggingEnabled } from '../../actions/test/setLoggingEnabled.js'\nimport {\n  type SetMinGasPriceParameters,\n  setMinGasPrice,\n} from '../../actions/test/setMinGasPrice.js'\nimport {\n  type SetNextBlockBaseFeePerGasParameters,\n  setNextBlockBaseFeePerGas,\n} from '../../actions/test/setNextBlockBaseFeePerGas.js'\nimport {\n  type SetNextBlockTimestampParameters,\n  setNextBlockTimestamp,\n} from '../../actions/test/setNextBlockTimestamp.js'\nimport {\n  type SetNonceParameters,\n  setNonce,\n} from '../../actions/test/setNonce.js'\nimport { setRpcUrl } from '../../actions/test/setRpcUrl.js'\nimport {\n  type SetStorageAtParameters,\n  setStorageAt,\n} from '../../actions/test/setStorageAt.js'\nimport { snapshot } from '../../actions/test/snapshot.js'\nimport {\n  type StopImpersonatingAccountParameters,\n  stopImpersonatingAccount,\n} from '../../actions/test/stopImpersonatingAccount.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Quantity } from '../../types/rpc.js'\nimport type { Client } from '../createClient.js'\nimport type { TestClientMode } from '../createTestClient.js'\nimport type { Transport } from '../transports/createTransport.js'\n\nexport type TestActions = {\n  /**\n   * Removes a transaction from the mempool.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/dropTransaction\n   *\n   * @param args - {@link DropTransactionParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.dropTransaction({\n   *   hash: '0xe58dceb6b20b03965bb678e27d141e151d7d4efc2334c2d6a49b9fac523f7364'\n   * })\n   */\n  dropTransaction: (args: DropTransactionParameters) => Promise<void>\n  /**\n   * Serializes the current state (including contracts code, contract's storage,\n   * accounts properties, etc.) into a savable data blob.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/dumpState\n   *\n   * @param client - Client to use\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.dumpState()\n   */\n  dumpState: () => Promise<DumpStateReturnType>\n  /**\n   * Returns the automatic mining status of the node.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/getAutomine\n   *\n   * @returns Whether or not the node is auto mining. {@link GetAutomineReturnType}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * const isAutomining = await client.getAutomine()\n   */\n  getAutomine: () => Promise<GetAutomineReturnType>\n  /**\n   * Returns the details of all transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/getTxpoolContent\n   *\n   * @returns Transaction pool content. {@link GetTxpoolContentReturnType}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * const content = await client.getTxpoolContent()\n   */\n  getTxpoolContent: () => Promise<GetTxpoolContentReturnType>\n  /**\n   * Returns a summary of all the transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/getTxpoolStatus\n   *\n   * @returns Transaction pool status. {@link GetTxpoolStatusReturnType}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * const status = await client.getTxpoolStatus()\n   */\n  getTxpoolStatus: () => Promise<GetTxpoolStatusReturnType>\n  /**\n   * Impersonate an account or contract address. This lets you send transactions from that account even if you don't have access to its private key.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/impersonateAccount\n   *\n   * @param args - {@link ImpersonateAccountParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.impersonateAccount({\n   *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   */\n  impersonateAccount: (args: ImpersonateAccountParameters) => Promise<void>\n  /**\n   * Jump forward in time by the given amount of time, in seconds.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/increaseTime\n   *\n   * @param args – {@link IncreaseTimeParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.increaseTime({\n   *   seconds: 420,\n   * })\n   */\n  increaseTime: (args: IncreaseTimeParameters) => Promise<Quantity>\n  /**\n   * Returns a summary of all the transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/inspectTxpool\n   *\n   * @returns Transaction pool inspection data. {@link InspectTxpoolReturnType}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * const data = await client.inspectTxpool()\n   */\n  inspectTxpool: () => Promise<InspectTxpoolReturnType>\n  /**\n   * Adds state previously dumped with `dumpState` to the current chain.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/loadState\n   *\n   * @param client - Client to use\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.loadState({ state: '0x...' })\n   */\n  loadState: (args: LoadStateParameters) => Promise<LoadStateReturnType>\n  /**\n   * Mine a specified number of blocks.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/mine\n   *\n   * @param client - Client to use\n   * @param args – {@link MineParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.mine({ blocks: 1 })\n   */\n  mine: (args: MineParameters) => Promise<void>\n  /**\n   * Removes [`setBlockTimestampInterval`](https://viem.sh/docs/actions/test/setBlockTimestampInterval) if it exists.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/removeBlockTimestampInterval\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   * import { removeBlockTimestampInterval } from 'viem/test'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.removeBlockTimestampInterval()\n   */\n  removeBlockTimestampInterval: () => Promise<void>\n  /**\n   * Resets fork back to its original state.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/reset\n   *\n   * @param args – {@link ResetParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.reset({ blockNumber: 69420n })\n   */\n  reset: (args?: ResetParameters | undefined) => Promise<void>\n  /**\n   * Revert the state of the blockchain at the current block.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/revert\n   *\n   * @param args – {@link RevertParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.revert({ id: '0x…' })\n   */\n  revert: (args: RevertParameters) => Promise<void>\n  /**\n   * Executes a transaction regardless of the signature.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/sendUnsignedTransaction\n   *\n   * @param args – {@link SendUnsignedTransactionParameters}\n   * @returns The transaction hash. {@link SendUnsignedTransactionReturnType}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * const hash = await client.sendUnsignedTransaction({\n   *   from: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *   value: 1000000000000000000n,\n   * })\n   */\n  sendUnsignedTransaction: <chain extends Chain | undefined>(\n    args: SendUnsignedTransactionParameters<chain>,\n  ) => Promise<SendUnsignedTransactionReturnType>\n  /**\n   * Enables or disables the automatic mining of new blocks with each new transaction submitted to the network.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setAutomine\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setAutomine()\n   */\n  setAutomine: (args: boolean) => Promise<void>\n  /**\n   * Modifies the balance of an account.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setBalance\n   *\n   * @param args – {@link SetBalanceParameters}\n   *\n   * @example\n   * import { createTestClient, http, parseEther } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setBalance({\n   *   address: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\n   *   value: parseEther('1'),\n   * })\n   */\n  setBalance: (args: SetBalanceParameters) => Promise<void>\n  /**\n   * Sets the block's gas limit.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setBlockGasLimit\n   *\n   * @param args – {@link SetBlockGasLimitParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setBlockGasLimit({ gasLimit: 420_000n })\n   */\n  setBlockGasLimit: (args: SetBlockGasLimitParameters) => Promise<void>\n  /**\n   * Similar to [`increaseTime`](https://viem.sh/docs/actions/test/increaseTime), but sets a block timestamp `interval`. The timestamp of future blocks will be computed as `lastBlock_timestamp` + `interval`.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setBlockTimestampInterval\n   *\n   * @param args – {@link SetBlockTimestampIntervalParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setBlockTimestampInterval({ interval: 5 })\n   */\n  setBlockTimestampInterval: (\n    args: SetBlockTimestampIntervalParameters,\n  ) => Promise<void>\n  /**\n   * Modifies the bytecode stored at an account's address.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setCode\n   *\n   * @param args – {@link SetCodeParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setCode({\n   *   address: '0xe846c6fcf817734ca4527b28ccb4aea2b6663c79',\n   *   bytecode: '0x60806040526000600355600019600955600c80546001600160a01b031916737a250d5630b4cf539739df…',\n   * })\n   */\n  setCode: (args: SetCodeParameters) => Promise<void>\n  /**\n   * Sets the coinbase address to be used in new blocks.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setCoinbase\n   *\n   * @param args – {@link SetCoinbaseParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setCoinbase({\n   *   address: '0xe846c6fcf817734ca4527b28ccb4aea2b6663c79',\n   * })\n   */\n  setCoinbase: (args: SetCoinbaseParameters) => Promise<void>\n  /**\n   * Sets the automatic mining interval (in seconds) of blocks. Setting the interval to 0 will disable automatic mining.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setIntervalMining\n   *\n   * @param args – {@link SetIntervalMiningParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setIntervalMining({ interval: 5 })\n   */\n  setIntervalMining: (args: SetIntervalMiningParameters) => Promise<void>\n  /**\n   * Enable or disable logging on the test node network.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setLoggingEnabled\n   *\n   * @param client - Client to use\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setLoggingEnabled()\n   */\n  setLoggingEnabled: (args: boolean) => Promise<void>\n  /**\n   * Change the minimum gas price accepted by the network (in wei).\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setMinGasPrice\n   *\n   * Note: `setMinGasPrice` can only be used on clients that do not have EIP-1559 enabled.\n   *\n   * @param args – {@link SetBlockGasLimitParameters}\n   *\n   * @example\n   * import { createTestClient, http, parseGwei } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setMinGasPrice({\n   *   gasPrice: parseGwei('20'),\n   * })\n   */\n  setMinGasPrice: (args: SetMinGasPriceParameters) => Promise<void>\n  /**\n   * Sets the next block's base fee per gas.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setNextBlockBaseFeePerGas\n   *\n   * @param args – {@link SetNextBlockBaseFeePerGasParameters}\n   *\n   * @example\n   * import { createTestClient, http, parseGwei } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setNextBlockBaseFeePerGas({\n   *   baseFeePerGas: parseGwei('20'),\n   * })\n   */\n  setNextBlockBaseFeePerGas: (\n    args: SetNextBlockBaseFeePerGasParameters,\n  ) => Promise<void>\n  /**\n   * Sets the next block's timestamp.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setNextBlockTimestamp\n   *\n   * @param args – {@link SetNextBlockTimestampParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setNextBlockTimestamp({ timestamp: 1671744314n })\n   */\n  setNextBlockTimestamp: (\n    args: SetNextBlockTimestampParameters,\n  ) => Promise<void>\n  /**\n   * Modifies (overrides) the nonce of an account.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setNonce\n   *\n   * @param args – {@link SetNonceParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setNonce({\n   *   address: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\n   *   nonce: 420,\n   * })\n   */\n  setNonce: (args: SetNonceParameters) => Promise<void>\n  /**\n   * Sets the backend RPC URL.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setRpcUrl\n   *\n   * @param jsonRpcUrl – RPC URL\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setRpcUrl('https://eth-mainnet.g.alchemy.com/v2')\n   */\n  setRpcUrl: (args: string) => Promise<void>\n  /**\n   * Writes to a slot of an account's storage.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setStorageAt\n   *\n   * @param args – {@link SetStorageAtParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setStorageAt({\n   *   address: '0xe846c6fcf817734ca4527b28ccb4aea2b6663c79',\n   *   index: 2,\n   *   value: '0x0000000000000000000000000000000000000000000000000000000000000069',\n   * })\n   */\n  setStorageAt: (args: SetStorageAtParameters) => Promise<void>\n  /**\n   * Snapshot the state of the blockchain at the current block.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/snapshot\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   * import { snapshot } from 'viem/test'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.snapshot()\n   */\n  snapshot: () => Promise<Quantity>\n  /**\n   * Stop impersonating an account after having previously used [`impersonateAccount`](https://viem.sh/docs/actions/test/impersonateAccount).\n   *\n   * - Docs: https://viem.sh/docs/actions/test/stopImpersonatingAccount\n   *\n   * @param args – {@link StopImpersonatingAccountParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   * import { stopImpersonatingAccount } from 'viem/test'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.stopImpersonatingAccount({\n   *   address: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\n   * })\n   */\n  stopImpersonatingAccount: (\n    args: StopImpersonatingAccountParameters,\n  ) => Promise<void>\n}\n\nexport function testActions<mode extends TestClientMode>({\n  mode,\n}: { mode: mode }): <\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n>(\n  client: Client<transport, chain, account>,\n) => TestActions {\n  return <\n    transport extends Transport = Transport,\n    chain extends Chain | undefined = Chain | undefined,\n    account extends Account | undefined = Account | undefined,\n  >(\n    client_: Client<transport, chain, account>,\n  ): TestActions => {\n    const client = client_.extend(() => ({\n      mode,\n    }))\n    return {\n      dropTransaction: (args) => dropTransaction(client, args),\n      dumpState: () => dumpState(client),\n      getAutomine: () => getAutomine(client),\n      getTxpoolContent: () => getTxpoolContent(client),\n      getTxpoolStatus: () => getTxpoolStatus(client),\n      impersonateAccount: (args) => impersonateAccount(client, args),\n      increaseTime: (args) => increaseTime(client, args),\n      inspectTxpool: () => inspectTxpool(client),\n      loadState: (args) => loadState(client, args),\n      mine: (args) => mine(client, args),\n      removeBlockTimestampInterval: () => removeBlockTimestampInterval(client),\n      reset: (args) => reset(client, args),\n      revert: (args) => revert(client, args),\n      sendUnsignedTransaction: (args) =>\n        sendUnsignedTransaction(client, args as any),\n      setAutomine: (args) => setAutomine(client, args),\n      setBalance: (args) => setBalance(client, args),\n      setBlockGasLimit: (args) => setBlockGasLimit(client, args),\n      setBlockTimestampInterval: (args) =>\n        setBlockTimestampInterval(client, args),\n      setCode: (args) => setCode(client, args),\n      setCoinbase: (args) => setCoinbase(client, args),\n      setIntervalMining: (args) => setIntervalMining(client, args),\n      setLoggingEnabled: (args) => setLoggingEnabled(client, args),\n      setMinGasPrice: (args) => setMinGasPrice(client, args),\n      setNextBlockBaseFeePerGas: (args) =>\n        setNextBlockBaseFeePerGas(client, args),\n      setNextBlockTimestamp: (args) => setNextBlockTimestamp(client, args),\n      setNonce: (args) => setNonce(client, args),\n      setRpcUrl: (args) => setRpcUrl(client, args),\n      setStorageAt: (args) => setStorageAt(client, args),\n      snapshot: () => snapshot(client),\n      stopImpersonatingAccount: (args) =>\n        stopImpersonatingAccount(client, args),\n    }\n  }\n}\n","import type { Abi, Address, TypedData } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type GetChainIdReturnType,\n  getChainId,\n} from '../../actions/public/getChainId.js'\nimport {\n  type AddChainParameters,\n  addChain,\n} from '../../actions/wallet/addChain.js'\nimport {\n  type DeployContractParameters,\n  type DeployContractReturnType,\n  deployContract,\n} from '../../actions/wallet/deployContract.js'\nimport {\n  type GetAddressesReturnType,\n  getAddresses,\n} from '../../actions/wallet/getAddresses.js'\nimport {\n  type GetCallsStatusParameters,\n  type GetCallsStatusReturnType,\n  getCallsStatus,\n} from '../../actions/wallet/getCallsStatus.js'\nimport {\n  type GetCapabilitiesParameters,\n  type GetCapabilitiesReturnType,\n  getCapabilities,\n} from '../../actions/wallet/getCapabilities.js'\nimport {\n  type GetPermissionsReturnType,\n  getPermissions,\n} from '../../actions/wallet/getPermissions.js'\nimport {\n  type PrepareAuthorizationParameters,\n  type PrepareAuthorizationReturnType,\n  prepareAuthorization,\n} from '../../actions/wallet/prepareAuthorization.js'\nimport {\n  type PrepareTransactionRequestParameters,\n  type PrepareTransactionRequestRequest,\n  type PrepareTransactionRequestReturnType,\n  prepareTransactionRequest,\n} from '../../actions/wallet/prepareTransactionRequest.js'\nimport {\n  type RequestAddressesReturnType,\n  requestAddresses,\n} from '../../actions/wallet/requestAddresses.js'\nimport {\n  type RequestPermissionsParameters,\n  type RequestPermissionsReturnType,\n  requestPermissions,\n} from '../../actions/wallet/requestPermissions.js'\nimport {\n  type SendCallsParameters,\n  type SendCallsReturnType,\n  sendCalls,\n} from '../../actions/wallet/sendCalls.js'\nimport {\n  type SendRawTransactionParameters,\n  type SendRawTransactionReturnType,\n  sendRawTransaction,\n} from '../../actions/wallet/sendRawTransaction.js'\nimport {\n  type SendTransactionParameters,\n  type SendTransactionRequest,\n  type SendTransactionReturnType,\n  sendTransaction,\n} from '../../actions/wallet/sendTransaction.js'\nimport {\n  type ShowCallsStatusParameters,\n  type ShowCallsStatusReturnType,\n  showCallsStatus,\n} from '../../actions/wallet/showCallsStatus.js'\nimport {\n  type SignAuthorizationParameters,\n  type SignAuthorizationReturnType,\n  signAuthorization,\n} from '../../actions/wallet/signAuthorization.js'\nimport {\n  type SignMessageParameters,\n  type SignMessageReturnType,\n  signMessage,\n} from '../../actions/wallet/signMessage.js'\nimport {\n  type SignTransactionParameters,\n  type SignTransactionRequest,\n  type SignTransactionReturnType,\n  signTransaction,\n} from '../../actions/wallet/signTransaction.js'\nimport {\n  type SignTypedDataParameters,\n  type SignTypedDataReturnType,\n  signTypedData,\n} from '../../actions/wallet/signTypedData.js'\nimport {\n  type SwitchChainParameters,\n  switchChain,\n} from '../../actions/wallet/switchChain.js'\nimport {\n  type WaitForCallsStatusParameters,\n  type WaitForCallsStatusReturnType,\n  waitForCallsStatus,\n} from '../../actions/wallet/waitForCallsStatus.js'\nimport {\n  type WatchAssetParameters,\n  type WatchAssetReturnType,\n  watchAsset,\n} from '../../actions/wallet/watchAsset.js'\nimport {\n  type WriteContractParameters,\n  type WriteContractReturnType,\n  writeContract,\n} from '../../actions/wallet/writeContract.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n} from '../../types/contract.js'\nimport type { Client } from '../createClient.js'\nimport type { Transport } from '../transports/createTransport.js'\n\nexport type WalletActions<\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n> = {\n  /**\n   * Adds an EVM chain to the wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/addChain\n   * - JSON-RPC Methods: [`eth_addEthereumChain`](https://eips.ethereum.org/EIPS/eip-3085)\n   *\n   * @param args - {@link AddChainParameters}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { optimism } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   transport: custom(window.ethereum),\n   * })\n   * await client.addChain({ chain: optimism })\n   */\n  addChain: (args: AddChainParameters) => Promise<void>\n  /**\n   * Deploys a contract to the network, given bytecode and constructor arguments.\n   *\n   * - Docs: https://viem.sh/docs/contract/deployContract\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_deploying-contracts\n   *\n   * @param args - {@link DeployContractParameters}\n   * @returns The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link DeployContractReturnType}\n   *\n   * @example\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const hash = await client.deployContract({\n   *   abi: [],\n   *   account: '0x…,\n   *   bytecode: '0x608060405260405161083e38038061083e833981016040819052610...',\n   * })\n   */\n  deployContract: <\n    const abi extends Abi | readonly unknown[],\n    chainOverride extends Chain | undefined,\n  >(\n    args: DeployContractParameters<abi, chain, account, chainOverride>,\n  ) => Promise<DeployContractReturnType>\n  /**\n   * Returns a list of account addresses owned by the wallet or client.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/getAddresses\n   * - JSON-RPC Methods: [`eth_accounts`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_accounts)\n   *\n   * @returns List of account addresses owned by the wallet or client. {@link GetAddressesReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const accounts = await client.getAddresses()\n   */\n  getAddresses: () => Promise<GetAddressesReturnType>\n  /**\n   * Returns the status of a call batch that was sent via `sendCalls`.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/getCallsStatus\n   * - JSON-RPC Methods: [`wallet_getCallsStatus`](https://eips.ethereum.org/EIPS/eip-5792)\n   *\n   * @param client - Client to use\n   * @returns Status of the calls. {@link GetCallsStatusReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   *\n   * const { receipts, status } = await client.getCallsStatus({ id: '0xdeadbeef' })\n   */\n  getCallsStatus: (\n    parameters: GetCallsStatusParameters,\n  ) => Promise<GetCallsStatusReturnType>\n  /**\n   * Extract capabilities that a connected wallet supports (e.g. paymasters, session keys, etc).\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/getCapabilities\n   * - JSON-RPC Methods: [`wallet_getCapabilities`](https://eips.ethereum.org/EIPS/eip-5792)\n   *\n   * @param client - Client to use\n   * @returns The wallet's capabilities. {@link GetCapabilitiesReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   *\n   * const capabilities = await client.getCapabilities({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   */\n  getCapabilities: <chainId extends number | undefined>(\n    parameters?: GetCapabilitiesParameters<chainId>,\n  ) => Promise<GetCapabilitiesReturnType<chainId>>\n  /**\n   * Returns the chain ID associated with the current network.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getChainId\n   * - JSON-RPC Methods: [`eth_chainId`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_chainid)\n   *\n   * @returns The current chain ID. {@link GetChainIdReturnType}\n   *\n   * @example\n   * import { createWalletClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const chainId = await client.getChainId()\n   * // 1\n   */\n  getChainId: () => Promise<GetChainIdReturnType>\n  /**\n   * Gets the wallets current permissions.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/getPermissions\n   * - JSON-RPC Methods: [`wallet_getPermissions`](https://eips.ethereum.org/EIPS/eip-2255)\n   *\n   * @returns The wallet permissions. {@link GetPermissionsReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const permissions = await client.getPermissions()\n   */\n  getPermissions: () => Promise<GetPermissionsReturnType>\n  /**\n   * Prepares an [EIP-7702 Authorization](https://eips.ethereum.org/EIPS/eip-7702) object for signing.\n   * This Action will fill the required fields of the Authorization object if they are not provided (e.g. `nonce` and `chainId`).\n   *\n   * With the prepared Authorization object, you can use [`signAuthorization`](https://viem.sh/docs/eip7702/signAuthorization) to sign over the Authorization object.\n   *\n   * @param client - Client to use\n   * @param parameters - {@link PrepareAuthorizationParameters}\n   * @returns The prepared Authorization object. {@link PrepareAuthorizationReturnType}\n   *\n   * @example\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const authorization = await client.prepareAuthorization({\n   *   account: privateKeyToAccount('0x..'),\n   *   contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const authorization = await client.prepareAuthorization({\n   *   contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   */\n  prepareAuthorization: (\n    parameters: PrepareAuthorizationParameters<account>,\n  ) => Promise<PrepareAuthorizationReturnType>\n  /**\n   * Prepares a transaction request for signing.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/prepareTransactionRequest\n   *\n   * @param args - {@link PrepareTransactionRequestParameters}\n   * @returns The transaction request. {@link PrepareTransactionRequestReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   */\n  prepareTransactionRequest: <\n    const request extends PrepareTransactionRequestRequest<\n      chain,\n      chainOverride\n    >,\n    chainOverride extends Chain | undefined = undefined,\n    accountOverride extends Account | Address | undefined = undefined,\n  >(\n    args: PrepareTransactionRequestParameters<\n      chain,\n      account,\n      chainOverride,\n      accountOverride,\n      request\n    >,\n  ) => Promise<\n    PrepareTransactionRequestReturnType<\n      chain,\n      account,\n      chainOverride,\n      accountOverride,\n      request\n    >\n  >\n  /**\n   * Requests a list of accounts managed by a wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/requestAddresses\n   * - JSON-RPC Methods: [`eth_requestAccounts`](https://eips.ethereum.org/EIPS/eip-1102)\n   *\n   * Sends a request to the wallet, asking for permission to access the user's accounts. After the user accepts the request, it will return a list of accounts (addresses).\n   *\n   * This API can be useful for dapps that need to access the user's accounts in order to execute transactions or interact with smart contracts.\n   *\n   * @returns List of accounts managed by a wallet {@link RequestAddressesReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const accounts = await client.requestAddresses()\n   */\n  requestAddresses: () => Promise<RequestAddressesReturnType>\n  /**\n   * Requests permissions for a wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/requestPermissions\n   * - JSON-RPC Methods: [`wallet_requestPermissions`](https://eips.ethereum.org/EIPS/eip-2255)\n   *\n   * @param args - {@link RequestPermissionsParameters}\n   * @returns The wallet permissions. {@link RequestPermissionsReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const permissions = await client.requestPermissions({\n   *   eth_accounts: {}\n   * })\n   */\n  requestPermissions: (\n    args: RequestPermissionsParameters,\n  ) => Promise<RequestPermissionsReturnType>\n  /**\n   * Requests the connected wallet to send a batch of calls.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/sendCalls\n   * - JSON-RPC Methods: [`wallet_sendCalls`](https://eips.ethereum.org/EIPS/eip-5792)\n   *\n   * @param client - Client to use\n   * @returns Transaction identifier. {@link SendCallsReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   *\n   * const id = await client.sendCalls({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   calls: [\n   *     {\n   *       data: '0xdeadbeef',\n   *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *     },\n   *     {\n   *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *       value: 69420n,\n   *     },\n   *   ],\n   * })\n   */\n  sendCalls: <\n    const calls extends readonly unknown[],\n    chainOverride extends Chain | undefined = undefined,\n  >(\n    parameters: SendCallsParameters<chain, account, chainOverride, calls>,\n  ) => Promise<SendCallsReturnType>\n  /**\n   * Sends a **signed** transaction to the network\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/sendRawTransaction\n   * - JSON-RPC Method: [`eth_sendRawTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link SendRawTransactionParameters}\n   * @returns The transaction hash. {@link SendRawTransactionReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { sendRawTransaction } from 'viem/wallet'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   *\n   * const hash = await client.sendRawTransaction({\n   *   serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33'\n   * })\n   */\n  sendRawTransaction: (\n    args: SendRawTransactionParameters,\n  ) => Promise<SendRawTransactionReturnType>\n  /**\n   * Creates, signs, and sends a new transaction to the network.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/sendTransaction\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\n   * - JSON-RPC Methods:\n   *   - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\n   *   - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\n   *\n   * @param args - {@link SendTransactionParameters}\n   * @returns The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link SendTransactionReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const hash = await client.sendTransaction({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *   value: 1000000000000000000n,\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const hash = await client.sendTransaction({\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *   value: 1000000000000000000n,\n   * })\n   */\n  sendTransaction: <\n    const request extends SendTransactionRequest<chain, chainOverride>,\n    chainOverride extends Chain | undefined = undefined,\n  >(\n    args: SendTransactionParameters<chain, account, chainOverride, request>,\n  ) => Promise<SendTransactionReturnType>\n  /**\n   * Requests for the wallet to show information about a call batch\n   * that was sent via `sendCalls`.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/showCallsStatus\n   * - JSON-RPC Methods: [`wallet_showCallsStatus`](https://eips.ethereum.org/EIPS/eip-5792)\n   *\n   * @param client - Client to use\n   * @returns Displays status of the calls in wallet. {@link ShowCallsStatusReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   *\n   * await client.showCallsStatus({ id: '0xdeadbeef' })\n   */\n  showCallsStatus: (\n    parameters: ShowCallsStatusParameters,\n  ) => Promise<ShowCallsStatusReturnType>\n  /**\n   * Signs an [EIP-7702 Authorization](https://eips.ethereum.org/EIPS/eip-7702) object.\n   *\n   * With the calculated signature, you can:\n   * - use [`verifyAuthorization`](https://viem.sh/docs/eip7702/verifyAuthorization) to verify the signed Authorization object,\n   * - use [`recoverAuthorizationAddress`](https://viem.sh/docs/eip7702/recoverAuthorizationAddress) to recover the signing address from the signed Authorization object.\n   *\n   * @param client - Client to use\n   * @param parameters - {@link SignAuthorizationParameters}\n   * @returns The signed Authorization object. {@link SignAuthorizationReturnType}\n   *\n   * @example\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const signature = await client.signAuthorization({\n   *   account: privateKeyToAccount('0x..'),\n   *   contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const signature = await client.signAuthorization({\n   *   contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   */\n  signAuthorization: (\n    parameters: SignAuthorizationParameters<account>,\n  ) => Promise<SignAuthorizationReturnType>\n  /**\n   * Calculates an Ethereum-specific signature in [EIP-191 format](https://eips.ethereum.org/EIPS/eip-191): `keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message))`.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/signMessage\n   * - JSON-RPC Methods:\n   *   - JSON-RPC Accounts: [`personal_sign`](https://docs.metamask.io/guide/signing-data#personal-sign)\n   *   - Local Accounts: Signs locally. No JSON-RPC request.\n   *\n   * With the calculated signature, you can:\n   * - use [`verifyMessage`](https://viem.sh/docs/utilities/verifyMessage) to verify the signature,\n   * - use [`recoverMessageAddress`](https://viem.sh/docs/utilities/recoverMessageAddress) to recover the signing address from a signature.\n   *\n   * @param args - {@link SignMessageParameters}\n   * @returns The signed message. {@link SignMessageReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const signature = await client.signMessage({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   message: 'hello world',\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const signature = await client.signMessage({\n   *   message: 'hello world',\n   * })\n   */\n  signMessage: (\n    args: SignMessageParameters<account>,\n  ) => Promise<SignMessageReturnType>\n  /**\n   * Signs a transaction.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/signTransaction\n   * - JSON-RPC Methods:\n   *   - JSON-RPC Accounts: [`eth_signTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n   *   - Local Accounts: Signs locally. No JSON-RPC request.\n   *\n   * @param args - {@link SignTransactionParameters}\n   * @returns The signed message. {@link SignTransactionReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   * const signature = await client.signTransaction(request)\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   * const signature = await client.signTransaction(request)\n   */\n  signTransaction: <\n    chainOverride extends Chain | undefined,\n    const request extends SignTransactionRequest<\n      chain,\n      chainOverride\n    > = SignTransactionRequest<chain, chainOverride>,\n  >(\n    args: SignTransactionParameters<chain, account, chainOverride, request>,\n  ) => Promise<SignTransactionReturnType<request>>\n  /**\n   * Signs typed data and calculates an Ethereum-specific signature in [EIP-191 format](https://eips.ethereum.org/EIPS/eip-191): `keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message))`.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/signTypedData\n   * - JSON-RPC Methods:\n   *   - JSON-RPC Accounts: [`eth_signTypedData_v4`](https://docs.metamask.io/guide/signing-data#signtypeddata-v4)\n   *   - Local Accounts: Signs locally. No JSON-RPC request.\n   *\n   * @param client - Client to use\n   * @param args - {@link SignTypedDataParameters}\n   * @returns The signed data. {@link SignTypedDataReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const signature = await client.signTypedData({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   domain: {\n   *     name: 'Ether Mail',\n   *     version: '1',\n   *     chainId: 1,\n   *     verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n   *   },\n   *   types: {\n   *     Person: [\n   *       { name: 'name', type: 'string' },\n   *       { name: 'wallet', type: 'address' },\n   *     ],\n   *     Mail: [\n   *       { name: 'from', type: 'Person' },\n   *       { name: 'to', type: 'Person' },\n   *       { name: 'contents', type: 'string' },\n   *     ],\n   *   },\n   *   primaryType: 'Mail',\n   *   message: {\n   *     from: {\n   *       name: 'Cow',\n   *       wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n   *     },\n   *     to: {\n   *       name: 'Bob',\n   *       wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n   *     },\n   *     contents: 'Hello, Bob!',\n   *   },\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const signature = await client.signTypedData({\n   *   domain: {\n   *     name: 'Ether Mail',\n   *     version: '1',\n   *     chainId: 1,\n   *     verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n   *   },\n   *   types: {\n   *     Person: [\n   *       { name: 'name', type: 'string' },\n   *       { name: 'wallet', type: 'address' },\n   *     ],\n   *     Mail: [\n   *       { name: 'from', type: 'Person' },\n   *       { name: 'to', type: 'Person' },\n   *       { name: 'contents', type: 'string' },\n   *     ],\n   *   },\n   *   primaryType: 'Mail',\n   *   message: {\n   *     from: {\n   *       name: 'Cow',\n   *       wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n   *     },\n   *     to: {\n   *       name: 'Bob',\n   *       wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n   *     },\n   *     contents: 'Hello, Bob!',\n   *   },\n   * })\n   */\n  signTypedData: <\n    const typedData extends TypedData | { [key: string]: unknown },\n    primaryType extends string,\n  >(\n    args: SignTypedDataParameters<typedData, primaryType, account>,\n  ) => Promise<SignTypedDataReturnType>\n  /**\n   * Switch the target chain in a wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/switchChain\n   * - JSON-RPC Methods: [`eth_switchEthereumChain`](https://eips.ethereum.org/EIPS/eip-3326)\n   *\n   * @param args - {@link SwitchChainParameters}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet, optimism } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * await client.switchChain({ id: optimism.id })\n   */\n  switchChain: (args: SwitchChainParameters) => Promise<void>\n  /**\n   * Waits for the status & receipts of a call bundle that was sent via `sendCalls`.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/waitForCallsStatus\n   * - JSON-RPC Methods: [`wallet_getCallsStatus`](https://eips.ethereum.org/EIPS/eip-5792)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link WaitForCallsStatusParameters}\n   * @returns Status & receipts of the call bundle. {@link WaitForCallsStatusReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   *\n   * const { receipts, status } = await waitForCallsStatus(client, { id: '0xdeadbeef' })\n   */\n  waitForCallsStatus: (\n    parameters: WaitForCallsStatusParameters,\n  ) => Promise<WaitForCallsStatusReturnType>\n  /**\n   * Adds an EVM chain to the wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/watchAsset\n   * - JSON-RPC Methods: [`eth_switchEthereumChain`](https://eips.ethereum.org/EIPS/eip-747)\n   *\n   * @param args - {@link WatchAssetParameters}\n   * @returns Boolean indicating if the token was successfully added. {@link WatchAssetReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const success = await client.watchAsset({\n   *   type: 'ERC20',\n   *   options: {\n   *     address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n   *     decimals: 18,\n   *     symbol: 'WETH',\n   *   },\n   * })\n   */\n  watchAsset: (args: WatchAssetParameters) => Promise<WatchAssetReturnType>\n  /**\n   * Executes a write function on a contract.\n   *\n   * - Docs: https://viem.sh/docs/contract/writeContract\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_writing-to-contracts\n   *\n   * A \"write\" function on a Solidity contract modifies the state of the blockchain. These types of functions require gas to be executed, and hence a [Transaction](https://viem.sh/docs/glossary/terms) is needed to be broadcast in order to change the state.\n   *\n   * Internally, uses a [Wallet Client](https://viem.sh/docs/clients/wallet) to call the [`sendTransaction` action](https://viem.sh/docs/actions/wallet/sendTransaction) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n   *\n   * __Warning: The `write` internally sends a transaction – it does not validate if the contract write will succeed (the contract may throw an error). It is highly recommended to [simulate the contract write with `contract.simulate`](https://viem.sh/docs/contract/writeContract#usage) before you execute it.__\n   *\n   * @param args - {@link WriteContractParameters}\n   * @returns A [Transaction Hash](https://viem.sh/docs/glossary/terms#hash). {@link WriteContractReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const hash = await client.writeContract({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n   *   functionName: 'mint',\n   *   args: [69420],\n   * })\n   *\n   * @example\n   * // With Validation\n   * import { createWalletClient, custom, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const { request } = await client.simulateContract({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n   *   functionName: 'mint',\n   *   args: [69420],\n   * }\n   * const hash = await client.writeContract(request)\n   */\n  writeContract: <\n    const abi extends Abi | readonly unknown[],\n    functionName extends ContractFunctionName<abi, 'payable' | 'nonpayable'>,\n    args extends ContractFunctionArgs<\n      abi,\n      'payable' | 'nonpayable',\n      functionName\n    >,\n    chainOverride extends Chain | undefined = undefined,\n  >(\n    args: WriteContractParameters<\n      abi,\n      functionName,\n      args,\n      chain,\n      account,\n      chainOverride\n    >,\n  ) => Promise<WriteContractReturnType>\n}\n\nexport function walletActions<\n  transport extends Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n>(client: Client<transport, chain, account>): WalletActions<chain, account> {\n  return {\n    addChain: (args) => addChain(client, args),\n    deployContract: (args) => deployContract(client, args),\n    getAddresses: () => getAddresses(client),\n    getCallsStatus: (args) => getCallsStatus(client, args),\n    getCapabilities: (args) => getCapabilities(client, args),\n    getChainId: () => getChainId(client),\n    getPermissions: () => getPermissions(client),\n    prepareAuthorization: (args) => prepareAuthorization(client, args),\n    prepareTransactionRequest: (args) =>\n      prepareTransactionRequest(client as any, args as any) as any,\n    requestAddresses: () => requestAddresses(client),\n    requestPermissions: (args) => requestPermissions(client, args),\n    sendCalls: (args) => sendCalls(client, args),\n    sendRawTransaction: (args) => sendRawTransaction(client, args),\n    sendTransaction: (args) => sendTransaction(client, args),\n    showCallsStatus: (args) => showCallsStatus(client, args),\n    signAuthorization: (args) => signAuthorization(client, args),\n    signMessage: (args) => signMessage(client, args),\n    signTransaction: (args) => signTransaction(client, args),\n    signTypedData: (args) => signTypedData(client, args),\n    switchChain: (args) => switchChain(client, args),\n    waitForCallsStatus: (args) => waitForCallsStatus(client, args),\n    watchAsset: (args) => watchAsset(client, args),\n    writeContract: (args) => writeContract(client, args as any),\n  }\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { EIP1193RequestFn } from '../../types/eip1193.js'\nimport type { OneOf } from '../../types/utils.js'\nimport { buildRequest } from '../../utils/buildRequest.js'\nimport { uid as uid_ } from '../../utils/uid.js'\nimport type { ClientConfig } from '../createClient.js'\n\nexport type TransportConfig<\n  type extends string = string,\n  eip1193RequestFn extends EIP1193RequestFn = EIP1193RequestFn,\n> = {\n  /** The name of the transport. */\n  name: string\n  /** The key of the transport. */\n  key: string\n  /** Methods to include or exclude from executing RPC requests. */\n  methods?:\n    | OneOf<\n        | {\n            include?: string[] | undefined\n          }\n        | {\n            exclude?: string[] | undefined\n          }\n      >\n    | undefined\n  /** The JSON-RPC request function that matches the EIP-1193 request spec. */\n  request: eip1193RequestFn\n  /** The base delay (in ms) between retries. */\n  retryDelay?: number | undefined\n  /** The max number of times to retry. */\n  retryCount?: number | undefined\n  /** The timeout (in ms) for requests. */\n  timeout?: number | undefined\n  /** The type of the transport. */\n  type: type\n}\n\nexport type Transport<\n  type extends string = string,\n  rpcAttributes = Record<string, any>,\n  eip1193RequestFn extends EIP1193RequestFn = EIP1193RequestFn,\n> = <chain extends Chain | undefined = Chain>({\n  chain,\n}: {\n  chain?: chain | undefined\n  pollingInterval?: ClientConfig['pollingInterval'] | undefined\n  retryCount?: TransportConfig['retryCount'] | undefined\n  timeout?: TransportConfig['timeout'] | undefined\n}) => {\n  config: TransportConfig<type>\n  request: eip1193RequestFn\n  value?: rpcAttributes | undefined\n}\n\nexport type CreateTransportErrorType = ErrorType\n\n/**\n * @description Creates an transport intended to be used with a client.\n */\nexport function createTransport<\n  type extends string,\n  rpcAttributes extends Record<string, any>,\n>(\n  {\n    key,\n    methods,\n    name,\n    request,\n    retryCount = 3,\n    retryDelay = 150,\n    timeout,\n    type,\n  }: TransportConfig<type>,\n  value?: rpcAttributes | undefined,\n): ReturnType<Transport<type, rpcAttributes>> {\n  const uid = uid_()\n  return {\n    config: {\n      key,\n      methods,\n      name,\n      request,\n      retryCount,\n      retryDelay,\n      timeout,\n      type,\n    },\n    request: buildRequest(request, { methods, retryCount, retryDelay, uid }),\n    value,\n  }\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport {\n  type CreateTransportErrorType,\n  type Transport,\n  type TransportConfig,\n  createTransport,\n} from './createTransport.js'\n\ntype EthereumProvider = { request(...args: any): Promise<any> }\n\nexport type CustomTransportConfig = {\n  /** The key of the transport. */\n  key?: TransportConfig['key'] | undefined\n  /** Methods to include or exclude from executing RPC requests. */\n  methods?: TransportConfig['methods'] | undefined\n  /** The name of the transport. */\n  name?: TransportConfig['name'] | undefined\n  /** The max number of times to retry. */\n  retryCount?: TransportConfig['retryCount'] | undefined\n  /** The base delay (in ms) between retries. */\n  retryDelay?: TransportConfig['retryDelay'] | undefined\n}\n\nexport type CustomTransport = Transport<\n  'custom',\n  {},\n  EthereumProvider['request']\n>\n\nexport type CustomTransportErrorType = CreateTransportErrorType | ErrorType\n\n/**\n * @description Creates a custom transport given an EIP-1193 compliant `request` attribute.\n */\nexport function custom<provider extends EthereumProvider>(\n  provider: provider,\n  config: CustomTransportConfig = {},\n): CustomTransport {\n  const {\n    key = 'custom',\n    methods,\n    name = 'Custom Provider',\n    retryDelay,\n  } = config\n  return ({ retryCount: defaultRetryCount }) =>\n    createTransport({\n      key,\n      methods,\n      name,\n      request: provider.request.bind(provider),\n      retryCount: config.retryCount ?? defaultRetryCount,\n      retryDelay,\n      type: 'custom',\n    })\n}\n","import { ExecutionRevertedError } from '../../errors/node.js'\nimport {\n  TransactionRejectedRpcError,\n  UserRejectedRequestError,\n} from '../../errors/rpc.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport { wait } from '../../utils/wait.js'\n\nimport {\n  type CreateTransportErrorType,\n  type Transport,\n  type TransportConfig,\n  createTransport,\n} from './createTransport.js'\n// TODO: Narrow `method` & `params` types.\nexport type OnResponseFn = (\n  args: {\n    method: string\n    params: unknown[]\n    transport: ReturnType<Transport>\n  } & (\n    | {\n        error?: undefined\n        response: unknown\n        status: 'success'\n      }\n    | {\n        error: Error\n        response?: undefined\n        status: 'error'\n      }\n  ),\n) => void\n\ntype RankOptions = {\n  /**\n   * The polling interval (in ms) at which the ranker should ping the RPC URL.\n   * @default client.pollingInterval\n   */\n  interval?: number | undefined\n  /**\n   * Ping method to determine latency.\n   */\n  ping?: (parameters: { transport: ReturnType<Transport> }) =>\n    | Promise<unknown>\n    | undefined\n  /**\n   * The number of previous samples to perform ranking on.\n   * @default 10\n   */\n  sampleCount?: number | undefined\n  /**\n   * Timeout when sampling transports.\n   * @default 1_000\n   */\n  timeout?: number | undefined\n  /**\n   * Weights to apply to the scores. Weight values are proportional.\n   */\n  weights?:\n    | {\n        /**\n         * The weight to apply to the latency score.\n         * @default 0.3\n         */\n        latency?: number | undefined\n        /**\n         * The weight to apply to the stability score.\n         * @default 0.7\n         */\n        stability?: number | undefined\n      }\n    | undefined\n}\n\nexport type FallbackTransportConfig = {\n  /** The key of the Fallback transport. */\n  key?: TransportConfig['key'] | undefined\n  /** The name of the Fallback transport. */\n  name?: TransportConfig['name'] | undefined\n  /** Toggle to enable ranking, or rank options. */\n  rank?: boolean | RankOptions | undefined\n  /** The max number of times to retry. */\n  retryCount?: TransportConfig['retryCount'] | undefined\n  /** The base delay (in ms) between retries. */\n  retryDelay?: TransportConfig['retryDelay'] | undefined\n  /** Callback on whether an error should throw or try the next transport in the fallback. */\n  shouldThrow?: (error: Error) => boolean | undefined\n}\n\nexport type FallbackTransport<\n  transports extends readonly Transport[] = readonly Transport[],\n> = Transport<\n  'fallback',\n  {\n    onResponse: (fn: OnResponseFn) => void\n    transports: {\n      [key in keyof transports]: ReturnType<transports[key]>\n    }\n  }\n>\n\nexport type FallbackTransportErrorType = CreateTransportErrorType | ErrorType\n\nexport function fallback<const transports extends readonly Transport[]>(\n  transports_: transports,\n  config: FallbackTransportConfig = {},\n): FallbackTransport<transports> {\n  const {\n    key = 'fallback',\n    name = 'Fallback',\n    rank = false,\n    shouldThrow: shouldThrow_ = shouldThrow,\n    retryCount,\n    retryDelay,\n  } = config\n  return (({ chain, pollingInterval = 4_000, timeout, ...rest }) => {\n    let transports = transports_\n\n    let onResponse: OnResponseFn = () => {}\n\n    const transport = createTransport(\n      {\n        key,\n        name,\n        async request({ method, params }) {\n          let includes: boolean | undefined\n\n          const fetch = async (i = 0): Promise<any> => {\n            const transport = transports[i]({\n              ...rest,\n              chain,\n              retryCount: 0,\n              timeout,\n            })\n            try {\n              const response = await transport.request({\n                method,\n                params,\n              } as any)\n\n              onResponse({\n                method,\n                params: params as unknown[],\n                response,\n                transport,\n                status: 'success',\n              })\n\n              return response\n            } catch (err) {\n              onResponse({\n                error: err as Error,\n                method,\n                params: params as unknown[],\n                transport,\n                status: 'error',\n              })\n\n              if (shouldThrow_(err as Error)) throw err\n\n              // If we've reached the end of the fallbacks, throw the error.\n              if (i === transports.length - 1) throw err\n\n              // Check if at least one other transport includes the method\n              includes ??= transports.slice(i + 1).some((transport) => {\n                const { include, exclude } =\n                  transport({ chain }).config.methods || {}\n                if (include) return include.includes(method)\n                if (exclude) return !exclude.includes(method)\n                return true\n              })\n              if (!includes) throw err\n\n              // Otherwise, try the next fallback.\n              return fetch(i + 1)\n            }\n          }\n          return fetch()\n        },\n        retryCount,\n        retryDelay,\n        type: 'fallback',\n      },\n      {\n        onResponse: (fn: OnResponseFn) => (onResponse = fn),\n        transports: transports.map((fn) => fn({ chain, retryCount: 0 })),\n      },\n    )\n\n    if (rank) {\n      const rankOptions = (typeof rank === 'object' ? rank : {}) as RankOptions\n      rankTransports({\n        chain,\n        interval: rankOptions.interval ?? pollingInterval,\n        onTransports: (transports_) => (transports = transports_ as transports),\n        ping: rankOptions.ping,\n        sampleCount: rankOptions.sampleCount,\n        timeout: rankOptions.timeout,\n        transports,\n        weights: rankOptions.weights,\n      })\n    }\n    return transport\n  }) as FallbackTransport<transports>\n}\n\nexport function shouldThrow(error: Error) {\n  if ('code' in error && typeof error.code === 'number') {\n    if (\n      error.code === TransactionRejectedRpcError.code ||\n      error.code === UserRejectedRequestError.code ||\n      ExecutionRevertedError.nodeMessage.test(error.message) ||\n      error.code === 5000 // CAIP UserRejectedRequestError\n    )\n      return true\n  }\n  return false\n}\n\n/** @internal */\nexport function rankTransports({\n  chain,\n  interval = 4_000,\n  onTransports,\n  ping,\n  sampleCount = 10,\n  timeout = 1_000,\n  transports,\n  weights = {},\n}: {\n  chain?: Chain | undefined\n  interval: RankOptions['interval']\n  onTransports: (transports: readonly Transport[]) => void\n  ping?: RankOptions['ping'] | undefined\n  sampleCount?: RankOptions['sampleCount'] | undefined\n  timeout?: RankOptions['timeout'] | undefined\n  transports: readonly Transport[]\n  weights?: RankOptions['weights'] | undefined\n}) {\n  const { stability: stabilityWeight = 0.7, latency: latencyWeight = 0.3 } =\n    weights\n\n  type SampleData = { latency: number; success: number }\n  type Sample = SampleData[]\n  const samples: Sample[] = []\n\n  const rankTransports_ = async () => {\n    // 1. Take a sample from each Transport.\n    const sample: Sample = await Promise.all(\n      transports.map(async (transport) => {\n        const transport_ = transport({ chain, retryCount: 0, timeout })\n\n        const start = Date.now()\n        let end: number\n        let success: number\n        try {\n          await (ping\n            ? ping({ transport: transport_ })\n            : transport_.request({ method: 'net_listening' }))\n          success = 1\n        } catch {\n          success = 0\n        } finally {\n          end = Date.now()\n        }\n        const latency = end - start\n        return { latency, success }\n      }),\n    )\n\n    // 2. Store the sample. If we have more than `sampleCount` samples, remove\n    // the oldest sample.\n    samples.push(sample)\n    if (samples.length > sampleCount) samples.shift()\n\n    // 3. Calculate the max latency from samples.\n    const maxLatency = Math.max(\n      ...samples.map((sample) =>\n        Math.max(...sample.map(({ latency }) => latency)),\n      ),\n    )\n\n    // 4. Calculate the score for each Transport.\n    const scores = transports\n      .map((_, i) => {\n        const latencies = samples.map((sample) => sample[i].latency)\n        const meanLatency =\n          latencies.reduce((acc, latency) => acc + latency, 0) /\n          latencies.length\n        const latencyScore = 1 - meanLatency / maxLatency\n\n        const successes = samples.map((sample) => sample[i].success)\n        const stabilityScore =\n          successes.reduce((acc, success) => acc + success, 0) /\n          successes.length\n\n        if (stabilityScore === 0) return [0, i]\n        return [\n          latencyWeight * latencyScore + stabilityWeight * stabilityScore,\n          i,\n        ]\n      })\n      .sort((a, b) => b[0] - a[0])\n\n    // 5. Sort the Transports by score.\n    onTransports(scores.map(([, i]) => transports[i]))\n\n    // 6. Wait, and then rank again.\n    await wait(interval)\n    rankTransports_()\n  }\n  rankTransports_()\n}\n","import { RpcRequestError } from '../../errors/request.js'\nimport {\n  UrlRequiredError,\n  type UrlRequiredErrorType,\n} from '../../errors/transport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { EIP1193RequestFn, RpcSchema } from '../../types/eip1193.js'\nimport type { RpcRequest } from '../../types/rpc.js'\nimport { createBatchScheduler } from '../../utils/promise/createBatchScheduler.js'\nimport {\n  type HttpRpcClientOptions,\n  getHttpRpcClient,\n} from '../../utils/rpc/http.js'\n\nimport {\n  type CreateTransportErrorType,\n  type Transport,\n  type TransportConfig,\n  createTransport,\n} from './createTransport.js'\n\nexport type HttpTransportConfig<\n  rpcSchema extends RpcSchema | undefined = undefined,\n  raw extends boolean = false,\n> = {\n  /**\n   * Whether to enable Batch JSON-RPC.\n   * @link https://www.jsonrpc.org/specification#batch\n   */\n  batch?:\n    | boolean\n    | {\n        /** The maximum number of JSON-RPC requests to send in a batch. @default 1_000 */\n        batchSize?: number | undefined\n        /** The maximum number of milliseconds to wait before sending a batch. @default 0 */\n        wait?: number | undefined\n      }\n    | undefined\n  /**\n   * Request configuration to pass to `fetch`.\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/fetch\n   */\n  fetchOptions?: HttpRpcClientOptions['fetchOptions'] | undefined\n  /** A callback to handle the response from `fetch`. */\n  onFetchRequest?: HttpRpcClientOptions['onRequest'] | undefined\n  /** A callback to handle the response from `fetch`. */\n  onFetchResponse?: HttpRpcClientOptions['onResponse'] | undefined\n  /** The key of the HTTP transport. */\n  key?: TransportConfig['key'] | undefined\n  /** Methods to include or exclude from executing RPC requests. */\n  methods?: TransportConfig['methods'] | undefined\n  /** The name of the HTTP transport. */\n  name?: TransportConfig['name'] | undefined\n  /** Whether to return JSON RPC errors as responses instead of throwing. */\n  raw?: raw | boolean | undefined\n  /** The max number of times to retry. */\n  retryCount?: TransportConfig['retryCount'] | undefined\n  /** The base delay (in ms) between retries. */\n  retryDelay?: TransportConfig['retryDelay'] | undefined\n  /** Typed JSON-RPC schema for the transport. */\n  rpcSchema?: rpcSchema | RpcSchema | undefined\n  /** The timeout (in ms) for the HTTP request. Default: 10_000 */\n  timeout?: TransportConfig['timeout'] | undefined\n}\n\nexport type HttpTransport<\n  rpcSchema extends RpcSchema | undefined = undefined,\n  raw extends boolean = false,\n> = Transport<\n  'http',\n  {\n    fetchOptions?: HttpTransportConfig['fetchOptions'] | undefined\n    url?: string | undefined\n  },\n  EIP1193RequestFn<rpcSchema, raw>\n>\n\nexport type HttpTransportErrorType =\n  | CreateTransportErrorType\n  | UrlRequiredErrorType\n  | ErrorType\n\n/**\n * @description Creates a HTTP transport that connects to a JSON-RPC API.\n */\nexport function http<\n  rpcSchema extends RpcSchema | undefined = undefined,\n  raw extends boolean = false,\n>(\n  /** URL of the JSON-RPC API. Defaults to the chain's public RPC URL. */\n  url?: string | undefined,\n  config: HttpTransportConfig<rpcSchema, raw> = {},\n): HttpTransport<rpcSchema, raw> {\n  const {\n    batch,\n    fetchOptions,\n    key = 'http',\n    methods,\n    name = 'HTTP JSON-RPC',\n    onFetchRequest,\n    onFetchResponse,\n    retryDelay,\n    raw,\n  } = config\n  return ({ chain, retryCount: retryCount_, timeout: timeout_ }) => {\n    const { batchSize = 1000, wait = 0 } =\n      typeof batch === 'object' ? batch : {}\n    const retryCount = config.retryCount ?? retryCount_\n    const timeout = timeout_ ?? config.timeout ?? 10_000\n    const url_ = url || chain?.rpcUrls.default.http[0]\n    if (!url_) throw new UrlRequiredError()\n\n    const rpcClient = getHttpRpcClient(url_, {\n      fetchOptions,\n      onRequest: onFetchRequest,\n      onResponse: onFetchResponse,\n      timeout,\n    })\n\n    return createTransport(\n      {\n        key,\n        methods,\n        name,\n        async request({ method, params }) {\n          const body = { method, params }\n\n          const { schedule } = createBatchScheduler({\n            id: url_,\n            wait,\n            shouldSplitBatch(requests) {\n              return requests.length > batchSize\n            },\n            fn: (body: RpcRequest[]) =>\n              rpcClient.request({\n                body,\n              }),\n            sort: (a, b) => a.id - b.id,\n          })\n\n          const fn = async (body: RpcRequest) =>\n            batch\n              ? schedule(body)\n              : [\n                  await rpcClient.request({\n                    body,\n                  }),\n                ]\n\n          const [{ error, result }] = await fn(body)\n\n          if (raw) return { error, result }\n          if (error)\n            throw new RpcRequestError({\n              body,\n              error,\n              url: url_,\n            })\n          return result\n        },\n        retryCount,\n        retryDelay,\n        timeout,\n        type: 'http',\n      },\n      {\n        fetchOptions,\n        url: url_,\n      },\n    )\n  }\n}\n","import { RpcRequestError } from '../../errors/request.js'\nimport {\n  UrlRequiredError,\n  type UrlRequiredErrorType,\n} from '../../errors/transport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RpcResponse } from '../../types/rpc.js'\nimport { getSocket } from '../../utils/rpc/compat.js'\nimport type { SocketRpcClient } from '../../utils/rpc/socket.js'\nimport {\n  type GetWebSocketRpcClientOptions,\n  getWebSocketRpcClient,\n} from '../../utils/rpc/webSocket.js'\nimport {\n  type CreateTransportErrorType,\n  type Transport,\n  type TransportConfig,\n  createTransport,\n} from './createTransport.js'\n\ntype WebSocketTransportSubscribeParameters = {\n  onData: (data: RpcResponse) => void\n  onError?: ((error: any) => void) | undefined\n}\n\ntype WebSocketTransportSubscribeReturnType = {\n  subscriptionId: Hash\n  unsubscribe: () => Promise<RpcResponse<boolean>>\n}\n\ntype WebSocketTransportSubscribe = {\n  subscribe(\n    args: WebSocketTransportSubscribeParameters & {\n      /**\n       * @description Add information about compiled contracts\n       * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_addcompilationresult\n       */\n      params: ['newHeads']\n    },\n  ): Promise<WebSocketTransportSubscribeReturnType>\n}\n\nexport type WebSocketTransportConfig = {\n  /**\n   * Whether or not to send keep-alive ping messages.\n   * @default true\n   */\n  keepAlive?: GetWebSocketRpcClientOptions['keepAlive'] | undefined\n  /** The key of the WebSocket transport. */\n  key?: TransportConfig['key'] | undefined\n  /** Methods to include or exclude from executing RPC requests. */\n  methods?: TransportConfig['methods'] | undefined\n  /** The name of the WebSocket transport. */\n  name?: TransportConfig['name'] | undefined\n  /**\n   * Whether or not to attempt to reconnect on socket failure.\n   * @default true\n   */\n  reconnect?: GetWebSocketRpcClientOptions['reconnect'] | undefined\n  /** The max number of times to retry. */\n  retryCount?: TransportConfig['retryCount'] | undefined\n  /** The base delay (in ms) between retries. */\n  retryDelay?: TransportConfig['retryDelay'] | undefined\n  /** The timeout (in ms) for async WebSocket requests. Default: 10_000 */\n  timeout?: TransportConfig['timeout'] | undefined\n}\n\nexport type WebSocketTransport = Transport<\n  'webSocket',\n  {\n    /**\n     * @deprecated use `getRpcClient` instead.\n     */\n    getSocket(): Promise<WebSocket>\n    getRpcClient(): Promise<SocketRpcClient<WebSocket>>\n    subscribe: WebSocketTransportSubscribe['subscribe']\n  }\n>\n\nexport type WebSocketTransportErrorType =\n  | CreateTransportErrorType\n  | UrlRequiredErrorType\n  | ErrorType\n\n/**\n * @description Creates a WebSocket transport that connects to a JSON-RPC API.\n */\nexport function webSocket(\n  /** URL of the JSON-RPC API. Defaults to the chain's public RPC URL. */\n  url?: string,\n  config: WebSocketTransportConfig = {},\n): WebSocketTransport {\n  const {\n    keepAlive,\n    key = 'webSocket',\n    methods,\n    name = 'WebSocket JSON-RPC',\n    reconnect,\n    retryDelay,\n  } = config\n  return ({ chain, retryCount: retryCount_, timeout: timeout_ }) => {\n    const retryCount = config.retryCount ?? retryCount_\n    const timeout = timeout_ ?? config.timeout ?? 10_000\n    const url_ = url || chain?.rpcUrls.default.webSocket?.[0]\n    const wsRpcClientOpts = { keepAlive, reconnect }\n    if (!url_) throw new UrlRequiredError()\n    return createTransport(\n      {\n        key,\n        methods,\n        name,\n        async request({ method, params }) {\n          const body = { method, params }\n          const rpcClient = await getWebSocketRpcClient(url_, wsRpcClientOpts)\n          const { error, result } = await rpcClient.requestAsync({\n            body,\n            timeout,\n          })\n          if (error)\n            throw new RpcRequestError({\n              body,\n              error,\n              url: url_,\n            })\n          return result\n        },\n        retryCount,\n        retryDelay,\n        timeout,\n        type: 'webSocket',\n      },\n      {\n        getSocket() {\n          return getSocket(url_)\n        },\n        getRpcClient() {\n          return getWebSocketRpcClient(url_, wsRpcClientOpts)\n        },\n        async subscribe({ params, onData, onError }: any) {\n          const rpcClient = await getWebSocketRpcClient(url_, wsRpcClientOpts)\n          const { result: subscriptionId } = await new Promise<any>(\n            (resolve, reject) =>\n              rpcClient.request({\n                body: {\n                  method: 'eth_subscribe',\n                  params,\n                },\n                onError(error) {\n                  reject(error)\n                  onError?.(error)\n                  return\n                },\n                onResponse(response) {\n                  if (response.error) {\n                    reject(response.error)\n                    onError?.(response.error)\n                    return\n                  }\n\n                  if (typeof response.id === 'number') {\n                    resolve(response)\n                    return\n                  }\n                  if (response.method !== 'eth_subscription') return\n                  onData(response.params)\n                },\n              }),\n          )\n          return {\n            subscriptionId,\n            async unsubscribe() {\n              return new Promise<any>((resolve) =>\n                rpcClient.request({\n                  body: {\n                    method: 'eth_unsubscribe',\n                    params: [subscriptionId],\n                  },\n                  onResponse: resolve,\n                }),\n              )\n            },\n          }\n        },\n      },\n    )\n  }\n}\n","/* [Multicall3](https://github.com/mds1/multicall) */\nexport const multicall3Abi = [\n  {\n    inputs: [\n      {\n        components: [\n          {\n            name: 'target',\n            type: 'address',\n          },\n          {\n            name: 'allowFailure',\n            type: 'bool',\n          },\n          {\n            name: 'callData',\n            type: 'bytes',\n          },\n        ],\n        name: 'calls',\n        type: 'tuple[]',\n      },\n    ],\n    name: 'aggregate3',\n    outputs: [\n      {\n        components: [\n          {\n            name: 'success',\n            type: 'bool',\n          },\n          {\n            name: 'returnData',\n            type: 'bytes',\n          },\n        ],\n        name: 'returnData',\n        type: 'tuple[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n] as const\n\nexport const batchGatewayAbi = [\n  {\n    name: 'query',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      {\n        type: 'tuple[]',\n        name: 'queries',\n        components: [\n          {\n            type: 'address',\n            name: 'sender',\n          },\n          {\n            type: 'string[]',\n            name: 'urls',\n          },\n          {\n            type: 'bytes',\n            name: 'data',\n          },\n        ],\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool[]',\n        name: 'failures',\n      },\n      {\n        type: 'bytes[]',\n        name: 'responses',\n      },\n    ],\n  },\n  {\n    name: 'HttpError',\n    type: 'error',\n    inputs: [\n      {\n        type: 'uint16',\n        name: 'status',\n      },\n      {\n        type: 'string',\n        name: 'message',\n      },\n    ],\n  },\n] as const\n\nconst universalResolverErrors = [\n  {\n    inputs: [],\n    name: 'ResolverNotFound',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'ResolverWildcardNotSupported',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'ResolverNotContract',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        name: 'returnData',\n        type: 'bytes',\n      },\n    ],\n    name: 'ResolverError',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            name: 'status',\n            type: 'uint16',\n          },\n          {\n            name: 'message',\n            type: 'string',\n          },\n        ],\n        name: 'errors',\n        type: 'tuple[]',\n      },\n    ],\n    name: 'HttpError',\n    type: 'error',\n  },\n] as const\n\nexport const universalResolverResolveAbi = [\n  ...universalResolverErrors,\n  {\n    name: 'resolve',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'name', type: 'bytes' },\n      { name: 'data', type: 'bytes' },\n    ],\n    outputs: [\n      { name: '', type: 'bytes' },\n      { name: 'address', type: 'address' },\n    ],\n  },\n  {\n    name: 'resolve',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'name', type: 'bytes' },\n      { name: 'data', type: 'bytes' },\n      { name: 'gateways', type: 'string[]' },\n    ],\n    outputs: [\n      { name: '', type: 'bytes' },\n      { name: 'address', type: 'address' },\n    ],\n  },\n] as const\n\nexport const universalResolverReverseAbi = [\n  ...universalResolverErrors,\n  {\n    name: 'reverse',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [{ type: 'bytes', name: 'reverseName' }],\n    outputs: [\n      { type: 'string', name: 'resolvedName' },\n      { type: 'address', name: 'resolvedAddress' },\n      { type: 'address', name: 'reverseResolver' },\n      { type: 'address', name: 'resolver' },\n    ],\n  },\n  {\n    name: 'reverse',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { type: 'bytes', name: 'reverseName' },\n      { type: 'string[]', name: 'gateways' },\n    ],\n    outputs: [\n      { type: 'string', name: 'resolvedName' },\n      { type: 'address', name: 'resolvedAddress' },\n      { type: 'address', name: 'reverseResolver' },\n      { type: 'address', name: 'resolver' },\n    ],\n  },\n] as const\n\nexport const textResolverAbi = [\n  {\n    name: 'text',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'name', type: 'bytes32' },\n      { name: 'key', type: 'string' },\n    ],\n    outputs: [{ name: '', type: 'string' }],\n  },\n] as const\n\nexport const addressResolverAbi = [\n  {\n    name: 'addr',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [{ name: 'name', type: 'bytes32' }],\n    outputs: [{ name: '', type: 'address' }],\n  },\n  {\n    name: 'addr',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'name', type: 'bytes32' },\n      { name: 'coinType', type: 'uint256' },\n    ],\n    outputs: [{ name: '', type: 'bytes' }],\n  },\n] as const\n\n// ERC-1271\n// isValidSignature(bytes32 hash, bytes signature) → bytes4 magicValue\n/** @internal */\nexport const smartAccountAbi = [\n  {\n    name: 'isValidSignature',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'hash', type: 'bytes32' },\n      { name: 'signature', type: 'bytes' },\n    ],\n    outputs: [{ name: '', type: 'bytes4' }],\n  },\n] as const\n\n// ERC-6492 - universal deployless signature validator contract\n// constructor(address _signer, bytes32 _hash, bytes _signature) → bytes4 returnValue\n// returnValue is either 0x1 (valid) or 0x0 (invalid)\nexport const universalSignatureValidatorAbi = [\n  {\n    inputs: [\n      {\n        name: '_signer',\n        type: 'address',\n      },\n      {\n        name: '_hash',\n        type: 'bytes32',\n      },\n      {\n        name: '_signature',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    inputs: [\n      {\n        name: '_signer',\n        type: 'address',\n      },\n      {\n        name: '_hash',\n        type: 'bytes32',\n      },\n      {\n        name: '_signature',\n        type: 'bytes',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n    name: 'isValidSig',\n  },\n] as const\n\n/** [ERC-20 Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-20) */\nexport const erc20Abi = [\n  {\n    type: 'event',\n    name: 'Approval',\n    inputs: [\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'event',\n    name: 'Transfer',\n    inputs: [\n      {\n        indexed: true,\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'allowance',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        name: 'spender',\n        type: 'address',\n      },\n    ],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'approve',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'balanceOf',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'decimals',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'uint8',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'name',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'string',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'symbol',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'string',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'totalSupply',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'transfer',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'recipient',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'transferFrom',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        name: 'recipient',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n  },\n] as const\n\n/**\n * [bytes32-flavored ERC-20](https://docs.makerdao.com/smart-contract-modules/mkr-module#4.-gotchas-potential-source-of-user-error)\n * for tokens (ie. Maker) that use bytes32 instead of string.\n */\nexport const erc20Abi_bytes32 = [\n  {\n    type: 'event',\n    name: 'Approval',\n    inputs: [\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'event',\n    name: 'Transfer',\n    inputs: [\n      {\n        indexed: true,\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'allowance',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        name: 'spender',\n        type: 'address',\n      },\n    ],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'approve',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'balanceOf',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'decimals',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'uint8',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'name',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'bytes32',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'symbol',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'bytes32',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'totalSupply',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'transfer',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'recipient',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'transferFrom',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        name: 'recipient',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n  },\n] as const\n\n/** [ERC-1155 Multi Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-1155) */\nexport const erc1155Abi = [\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'balance',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'needed',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'ERC1155InsufficientBalance',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'approver',\n        type: 'address',\n      },\n    ],\n    name: 'ERC1155InvalidApprover',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'idsLength',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'valuesLength',\n        type: 'uint256',\n      },\n    ],\n    name: 'ERC1155InvalidArrayLength',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n    ],\n    name: 'ERC1155InvalidOperator',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'receiver',\n        type: 'address',\n      },\n    ],\n    name: 'ERC1155InvalidReceiver',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'sender',\n        type: 'address',\n      },\n    ],\n    name: 'ERC1155InvalidSender',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'ERC1155MissingApprovalForAll',\n    type: 'error',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'ApprovalForAll',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256[]',\n        name: 'ids',\n        type: 'uint256[]',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256[]',\n        name: 'values',\n        type: 'uint256[]',\n      },\n    ],\n    name: 'TransferBatch',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'id',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'TransferSingle',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'string',\n        name: 'value',\n        type: 'string',\n      },\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'id',\n        type: 'uint256',\n      },\n    ],\n    name: 'URI',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'id',\n        type: 'uint256',\n      },\n    ],\n    name: 'balanceOf',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address[]',\n        name: 'accounts',\n        type: 'address[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'ids',\n        type: 'uint256[]',\n      },\n    ],\n    name: 'balanceOfBatch',\n    outputs: [\n      {\n        internalType: 'uint256[]',\n        name: '',\n        type: 'uint256[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n    ],\n    name: 'isApprovedForAll',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'ids',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'values',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'bytes',\n        name: 'data',\n        type: 'bytes',\n      },\n    ],\n    name: 'safeBatchTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'id',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'value',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: 'data',\n        type: 'bytes',\n      },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes4',\n        name: 'interfaceId',\n        type: 'bytes4',\n      },\n    ],\n    name: 'supportsInterface',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    name: 'uri',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n] as const\n\n/** [ERC-721 Non-Fungible Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-721) */\nexport const erc721Abi = [\n  {\n    type: 'event',\n    name: 'Approval',\n    inputs: [\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'event',\n    name: 'ApprovalForAll',\n    inputs: [\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n  },\n  {\n    type: 'event',\n    name: 'Transfer',\n    inputs: [\n      {\n        indexed: true,\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'approve',\n    stateMutability: 'payable',\n    inputs: [\n      {\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    outputs: [],\n  },\n  {\n    type: 'function',\n    name: 'balanceOf',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'getApproved',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'address',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'isApprovedForAll',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        name: 'operator',\n        type: 'address',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'name',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'string',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'ownerOf',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'safeTransferFrom',\n    stateMutability: 'payable',\n    inputs: [\n      {\n        name: 'from',\n        type: 'address',\n      },\n      {\n        name: 'to',\n        type: 'address',\n      },\n      {\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    outputs: [],\n  },\n  {\n    type: 'function',\n    name: 'safeTransferFrom',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'from',\n        type: 'address',\n      },\n      {\n        name: 'to',\n        type: 'address',\n      },\n      {\n        name: 'id',\n        type: 'uint256',\n      },\n      {\n        name: 'data',\n        type: 'bytes',\n      },\n    ],\n    outputs: [],\n  },\n  {\n    type: 'function',\n    name: 'setApprovalForAll',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    outputs: [],\n  },\n  {\n    type: 'function',\n    name: 'symbol',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'string',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'tokenByIndex',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'index',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'tokenByIndex',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        name: 'index',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'tokenURI',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'string',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'totalSupply',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'transferFrom',\n    stateMutability: 'payable',\n    inputs: [\n      {\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        name: 'recipient',\n        type: 'address',\n      },\n      {\n        name: 'tokeId',\n        type: 'uint256',\n      },\n    ],\n    outputs: [],\n  },\n] as const\n\n/** [ERC-4626 Tokenized Vaults Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-4626) */\nexport const erc4626Abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'Approval',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'receiver',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'assets',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    name: 'Deposit',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'receiver',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'assets',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    name: 'Withdraw',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        name: 'spender',\n        type: 'address',\n      },\n    ],\n    name: 'allowance',\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'approve',\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'asset',\n    outputs: [\n      {\n        name: 'assetTokenAddress',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'balanceOf',\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    name: 'convertToAssets',\n    outputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    name: 'convertToShares',\n    outputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n      {\n        name: 'receiver',\n        type: 'address',\n      },\n    ],\n    name: 'deposit',\n    outputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'caller',\n        type: 'address',\n      },\n    ],\n    name: 'maxDeposit',\n    outputs: [\n      {\n        name: 'maxAssets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'caller',\n        type: 'address',\n      },\n    ],\n    name: 'maxMint',\n    outputs: [\n      {\n        name: 'maxShares',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'maxRedeem',\n    outputs: [\n      {\n        name: 'maxShares',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'maxWithdraw',\n    outputs: [\n      {\n        name: 'maxAssets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n      {\n        name: 'receiver',\n        type: 'address',\n      },\n    ],\n    name: 'mint',\n    outputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    name: 'previewDeposit',\n    outputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    name: 'previewMint',\n    outputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    name: 'previewRedeem',\n    outputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    name: 'previewWithdraw',\n    outputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n      {\n        name: 'receiver',\n        type: 'address',\n      },\n      {\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'redeem',\n    outputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'totalAssets',\n    outputs: [\n      {\n        name: 'totalManagedAssets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'to',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'transfer',\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'from',\n        type: 'address',\n      },\n      {\n        name: 'to',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'transferFrom',\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n      {\n        name: 'receiver',\n        type: 'address',\n      },\n      {\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'withdraw',\n    outputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n] as const\n","export const entryPoint06Address =\n  '0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789' as const\nexport const entryPoint07Address =\n  '0x0000000071727De22E5E9d8BAf0edAc6f37da032' as const\nexport const entryPoint08Address =\n  '0x4337084D9E255Ff0702461CF8895CE9E3b5Ff108' as const\n\nexport const ethAddress = '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee' as const\n\nexport const zeroAddress = '0x0000000000000000000000000000000000000000' as const\n","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n\n/** Blob limit per transaction. */\nconst blobsPerTransaction = 6\n\n/** The number of bytes in a BLS scalar field element. */\nexport const bytesPerFieldElement = 32\n\n/** The number of field elements in a blob. */\nexport const fieldElementsPerBlob = 4096\n\n/** The number of bytes in a blob. */\nexport const bytesPerBlob = bytesPerFieldElement * fieldElementsPerBlob\n\n/** Blob bytes limit per transaction. */\nexport const maxBytesPerTransaction =\n  bytesPerBlob * blobsPerTransaction -\n  // terminator byte (0x80).\n  1 -\n  // zero byte (0x00) appended to each field element.\n  1 * fieldElementsPerBlob * blobsPerTransaction\n","export const erc6492MagicBytes =\n  '0x6492649264926492649264926492649264926492649264926492649264926492' as const\n\nexport const zeroHash =\n  '0x0000000000000000000000000000000000000000000000000000000000000000' as const\n","export const aggregate3Signature = '0x82ad56cb'\n","export const deploylessCallViaBytecodeBytecode =\n  '0x608060405234801561001057600080fd5b5060405161018e38038061018e83398101604081905261002f91610124565b6000808351602085016000f59050803b61004857600080fd5b6000808351602085016000855af16040513d6000823e81610067573d81fd5b3d81f35b634e487b7160e01b600052604160045260246000fd5b600082601f83011261009257600080fd5b81516001600160401b038111156100ab576100ab61006b565b604051601f8201601f19908116603f011681016001600160401b03811182821017156100d9576100d961006b565b6040528181528382016020018510156100f157600080fd5b60005b82811015610110576020818601810151838301820152016100f4565b506000918101602001919091529392505050565b6000806040838503121561013757600080fd5b82516001600160401b0381111561014d57600080fd5b61015985828601610081565b602085015190935090506001600160401b0381111561017757600080fd5b61018385828601610081565b915050925092905056fe'\n\nexport const deploylessCallViaFactoryBytecode =\n  '0x608060405234801561001057600080fd5b506040516102c03803806102c083398101604081905261002f916101e6565b836001600160a01b03163b6000036100e457600080836001600160a01b03168360405161005c9190610270565b6000604051808303816000865af19150503d8060008114610099576040519150601f19603f3d011682016040523d82523d6000602084013e61009e565b606091505b50915091508115806100b857506001600160a01b0386163b155b156100e1578060405163101bb98d60e01b81526004016100d8919061028c565b60405180910390fd5b50505b6000808451602086016000885af16040513d6000823e81610103573d81fd5b3d81f35b80516001600160a01b038116811461011e57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561015457818101518382015260200161013c565b50506000910152565b600082601f83011261016e57600080fd5b81516001600160401b0381111561018757610187610123565b604051601f8201601f19908116603f011681016001600160401b03811182821017156101b5576101b5610123565b6040528181528382016020018510156101cd57600080fd5b6101de826020830160208701610139565b949350505050565b600080600080608085870312156101fc57600080fd5b61020585610107565b60208601519094506001600160401b0381111561022157600080fd5b61022d8782880161015d565b93505061023c60408601610107565b60608601519092506001600160401b0381111561025857600080fd5b6102648782880161015d565b91505092959194509250565b60008251610282818460208701610139565b9190910192915050565b60208152600082518060208401526102ab816040850160208701610139565b601f01601f1916919091016040019291505056fe'\n\nexport const universalSignatureValidatorByteCode =\n  '0x608060405234801561001057600080fd5b5060405161069438038061069483398101604081905261002f9161051e565b600061003c848484610048565b9050806000526001601ff35b60007f64926492649264926492649264926492649264926492649264926492649264926100748361040c565b036101e7576000606080848060200190518101906100929190610577565b60405192955090935091506000906001600160a01b038516906100b69085906105dd565b6000604051808303816000865af19150503d80600081146100f3576040519150601f19603f3d011682016040523d82523d6000602084013e6100f8565b606091505b50509050876001600160a01b03163b60000361016057806101605760405162461bcd60e51b815260206004820152601e60248201527f5369676e617475726556616c696461746f723a206465706c6f796d656e74000060448201526064015b60405180910390fd5b604051630b135d3f60e11b808252906001600160a01b038a1690631626ba7e90610190908b9087906004016105f9565b602060405180830381865afa1580156101ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d19190610633565b6001600160e01b03191614945050505050610405565b6001600160a01b0384163b1561027a57604051630b135d3f60e11b808252906001600160a01b03861690631626ba7e9061022790879087906004016105f9565b602060405180830381865afa158015610244573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102689190610633565b6001600160e01b031916149050610405565b81516041146102df5760405162461bcd60e51b815260206004820152603a602482015260008051602061067483398151915260448201527f3a20696e76616c6964207369676e6174757265206c656e6774680000000000006064820152608401610157565b6102e7610425565b5060208201516040808401518451859392600091859190811061030c5761030c61065d565b016020015160f81c9050601b811480159061032b57508060ff16601c14155b1561038c5760405162461bcd60e51b815260206004820152603b602482015260008051602061067483398151915260448201527f3a20696e76616c6964207369676e617475726520762076616c756500000000006064820152608401610157565b60408051600081526020810180835289905260ff83169181019190915260608101849052608081018390526001600160a01b0389169060019060a0016020604051602081039080840390855afa1580156103ea573d6000803e3d6000fd5b505050602060405103516001600160a01b0316149450505050505b9392505050565b600060208251101561041d57600080fd5b508051015190565b60405180606001604052806003906020820280368337509192915050565b6001600160a01b038116811461045857600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561048c578181015183820152602001610474565b50506000910152565b600082601f8301126104a657600080fd5b81516001600160401b038111156104bf576104bf61045b565b604051601f8201601f19908116603f011681016001600160401b03811182821017156104ed576104ed61045b565b60405281815283820160200185101561050557600080fd5b610516826020830160208701610471565b949350505050565b60008060006060848603121561053357600080fd5b835161053e81610443565b6020850151604086015191945092506001600160401b0381111561056157600080fd5b61056d86828701610495565b9150509250925092565b60008060006060848603121561058c57600080fd5b835161059781610443565b60208501519093506001600160401b038111156105b357600080fd5b6105bf86828701610495565b604086015190935090506001600160401b0381111561056157600080fd5b600082516105ef818460208701610471565b9190910192915050565b828152604060208201526000825180604084015261061e816060850160208701610471565b601f01601f1916919091016060019392505050565b60006020828403121561064557600080fd5b81516001600160e01b03198116811461040557600080fd5b634e487b7160e01b600052603260045260246000fdfe5369676e617475726556616c696461746f72237265636f7665725369676e6572'\n","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n\nexport const versionedHashVersionKzg = 1\n","export const maxInt8 = 2n ** (8n - 1n) - 1n\nexport const maxInt16 = 2n ** (16n - 1n) - 1n\nexport const maxInt24 = 2n ** (24n - 1n) - 1n\nexport const maxInt32 = 2n ** (32n - 1n) - 1n\nexport const maxInt40 = 2n ** (40n - 1n) - 1n\nexport const maxInt48 = 2n ** (48n - 1n) - 1n\nexport const maxInt56 = 2n ** (56n - 1n) - 1n\nexport const maxInt64 = 2n ** (64n - 1n) - 1n\nexport const maxInt72 = 2n ** (72n - 1n) - 1n\nexport const maxInt80 = 2n ** (80n - 1n) - 1n\nexport const maxInt88 = 2n ** (88n - 1n) - 1n\nexport const maxInt96 = 2n ** (96n - 1n) - 1n\nexport const maxInt104 = 2n ** (104n - 1n) - 1n\nexport const maxInt112 = 2n ** (112n - 1n) - 1n\nexport const maxInt120 = 2n ** (120n - 1n) - 1n\nexport const maxInt128 = 2n ** (128n - 1n) - 1n\nexport const maxInt136 = 2n ** (136n - 1n) - 1n\nexport const maxInt144 = 2n ** (144n - 1n) - 1n\nexport const maxInt152 = 2n ** (152n - 1n) - 1n\nexport const maxInt160 = 2n ** (160n - 1n) - 1n\nexport const maxInt168 = 2n ** (168n - 1n) - 1n\nexport const maxInt176 = 2n ** (176n - 1n) - 1n\nexport const maxInt184 = 2n ** (184n - 1n) - 1n\nexport const maxInt192 = 2n ** (192n - 1n) - 1n\nexport const maxInt200 = 2n ** (200n - 1n) - 1n\nexport const maxInt208 = 2n ** (208n - 1n) - 1n\nexport const maxInt216 = 2n ** (216n - 1n) - 1n\nexport const maxInt224 = 2n ** (224n - 1n) - 1n\nexport const maxInt232 = 2n ** (232n - 1n) - 1n\nexport const maxInt240 = 2n ** (240n - 1n) - 1n\nexport const maxInt248 = 2n ** (248n - 1n) - 1n\nexport const maxInt256 = 2n ** (256n - 1n) - 1n\n\nexport const minInt8 = -(2n ** (8n - 1n))\nexport const minInt16 = -(2n ** (16n - 1n))\nexport const minInt24 = -(2n ** (24n - 1n))\nexport const minInt32 = -(2n ** (32n - 1n))\nexport const minInt40 = -(2n ** (40n - 1n))\nexport const minInt48 = -(2n ** (48n - 1n))\nexport const minInt56 = -(2n ** (56n - 1n))\nexport const minInt64 = -(2n ** (64n - 1n))\nexport const minInt72 = -(2n ** (72n - 1n))\nexport const minInt80 = -(2n ** (80n - 1n))\nexport const minInt88 = -(2n ** (88n - 1n))\nexport const minInt96 = -(2n ** (96n - 1n))\nexport const minInt104 = -(2n ** (104n - 1n))\nexport const minInt112 = -(2n ** (112n - 1n))\nexport const minInt120 = -(2n ** (120n - 1n))\nexport const minInt128 = -(2n ** (128n - 1n))\nexport const minInt136 = -(2n ** (136n - 1n))\nexport const minInt144 = -(2n ** (144n - 1n))\nexport const minInt152 = -(2n ** (152n - 1n))\nexport const minInt160 = -(2n ** (160n - 1n))\nexport const minInt168 = -(2n ** (168n - 1n))\nexport const minInt176 = -(2n ** (176n - 1n))\nexport const minInt184 = -(2n ** (184n - 1n))\nexport const minInt192 = -(2n ** (192n - 1n))\nexport const minInt200 = -(2n ** (200n - 1n))\nexport const minInt208 = -(2n ** (208n - 1n))\nexport const minInt216 = -(2n ** (216n - 1n))\nexport const minInt224 = -(2n ** (224n - 1n))\nexport const minInt232 = -(2n ** (232n - 1n))\nexport const minInt240 = -(2n ** (240n - 1n))\nexport const minInt248 = -(2n ** (248n - 1n))\nexport const minInt256 = -(2n ** (256n - 1n))\n\nexport const maxUint8 = 2n ** 8n - 1n\nexport const maxUint16 = 2n ** 16n - 1n\nexport const maxUint24 = 2n ** 24n - 1n\nexport const maxUint32 = 2n ** 32n - 1n\nexport const maxUint40 = 2n ** 40n - 1n\nexport const maxUint48 = 2n ** 48n - 1n\nexport const maxUint56 = 2n ** 56n - 1n\nexport const maxUint64 = 2n ** 64n - 1n\nexport const maxUint72 = 2n ** 72n - 1n\nexport const maxUint80 = 2n ** 80n - 1n\nexport const maxUint88 = 2n ** 88n - 1n\nexport const maxUint96 = 2n ** 96n - 1n\nexport const maxUint104 = 2n ** 104n - 1n\nexport const maxUint112 = 2n ** 112n - 1n\nexport const maxUint120 = 2n ** 120n - 1n\nexport const maxUint128 = 2n ** 128n - 1n\nexport const maxUint136 = 2n ** 136n - 1n\nexport const maxUint144 = 2n ** 144n - 1n\nexport const maxUint152 = 2n ** 152n - 1n\nexport const maxUint160 = 2n ** 160n - 1n\nexport const maxUint168 = 2n ** 168n - 1n\nexport const maxUint176 = 2n ** 176n - 1n\nexport const maxUint184 = 2n ** 184n - 1n\nexport const maxUint192 = 2n ** 192n - 1n\nexport const maxUint200 = 2n ** 200n - 1n\nexport const maxUint208 = 2n ** 208n - 1n\nexport const maxUint216 = 2n ** 216n - 1n\nexport const maxUint224 = 2n ** 224n - 1n\nexport const maxUint232 = 2n ** 232n - 1n\nexport const maxUint240 = 2n ** 240n - 1n\nexport const maxUint248 = 2n ** 248n - 1n\nexport const maxUint256 = 2n ** 256n - 1n\n","import type { AbiError } from 'abitype'\n\n// https://docs.soliditylang.org/en/v0.8.16/control-structures.html#panic-via-assert-and-error-via-require\nexport const panicReasons = {\n  1: 'An `assert` condition failed.',\n  17: 'Arithmetic operation resulted in underflow or overflow.',\n  18: 'Division or modulo by zero (e.g. `5 / 0` or `23 % 0`).',\n  33: 'Attempted to convert to an invalid type.',\n  34: 'Attempted to access a storage byte array that is incorrectly encoded.',\n  49: 'Performed `.pop()` on an empty array',\n  50: 'Array index is out of bounds.',\n  65: 'Allocated too much memory or created an array which is too large.',\n  81: 'Attempted to call a zero-initialized variable of internal function type.',\n} as const\n\nexport const solidityError: AbiError = {\n  inputs: [\n    {\n      name: 'message',\n      type: 'string',\n    },\n  ],\n  name: 'Error',\n  type: 'error',\n}\nexport const solidityPanic: AbiError = {\n  inputs: [\n    {\n      name: 'reason',\n      type: 'uint256',\n    },\n  ],\n  name: 'Panic',\n  type: 'error',\n}\n","export const presignMessagePrefix = '\\x19Ethereum Signed Message:\\n'\n","export const etherUnits = {\n  gwei: 9,\n  wei: 18,\n}\nexport const gweiUnits = {\n  ether: -9,\n  wei: 9,\n}\nexport const weiUnits = {\n  ether: -18,\n  gwei: -9,\n}\n","import type { Abi, AbiEvent, AbiParameter } from 'abitype'\n\nimport type { Hex } from '../types/misc.js'\nimport { formatAbiItem, formatAbiParams } from '../utils/abi/formatAbiItem.js'\nimport { size } from '../utils/data/size.js'\n\nimport { BaseError } from './base.js'\n\nexport type AbiConstructorNotFoundErrorType = AbiConstructorNotFoundError & {\n  name: 'AbiConstructorNotFoundError'\n}\nexport class AbiConstructorNotFoundError extends BaseError {\n  constructor({ docsPath }: { docsPath: string }) {\n    super(\n      [\n        'A constructor was not found on the ABI.',\n        'Make sure you are using the correct ABI and that the constructor exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiConstructorNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiConstructorParamsNotFoundErrorType =\n  AbiConstructorParamsNotFoundError & {\n    name: 'AbiConstructorParamsNotFoundError'\n  }\n\nexport class AbiConstructorParamsNotFoundError extends BaseError {\n  constructor({ docsPath }: { docsPath: string }) {\n    super(\n      [\n        'Constructor arguments were provided (`args`), but a constructor parameters (`inputs`) were not found on the ABI.',\n        'Make sure you are using the correct ABI, and that the `inputs` attribute on the constructor exists.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiConstructorParamsNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiDecodingDataSizeInvalidErrorType =\n  AbiDecodingDataSizeInvalidError & {\n    name: 'AbiDecodingDataSizeInvalidError'\n  }\nexport class AbiDecodingDataSizeInvalidError extends BaseError {\n  constructor({ data, size }: { data: Hex; size: number }) {\n    super(\n      [\n        `Data size of ${size} bytes is invalid.`,\n        'Size must be in increments of 32 bytes (size % 32 === 0).',\n      ].join('\\n'),\n      {\n        metaMessages: [`Data: ${data} (${size} bytes)`],\n        name: 'AbiDecodingDataSizeInvalidError',\n      },\n    )\n  }\n}\n\nexport type AbiDecodingDataSizeTooSmallErrorType =\n  AbiDecodingDataSizeTooSmallError & {\n    name: 'AbiDecodingDataSizeTooSmallError'\n  }\nexport class AbiDecodingDataSizeTooSmallError extends BaseError {\n  data: Hex\n  params: readonly AbiParameter[]\n  size: number\n\n  constructor({\n    data,\n    params,\n    size,\n  }: { data: Hex; params: readonly AbiParameter[]; size: number }) {\n    super(\n      [`Data size of ${size} bytes is too small for given parameters.`].join(\n        '\\n',\n      ),\n      {\n        metaMessages: [\n          `Params: (${formatAbiParams(params, { includeName: true })})`,\n          `Data:   ${data} (${size} bytes)`,\n        ],\n        name: 'AbiDecodingDataSizeTooSmallError',\n      },\n    )\n\n    this.data = data\n    this.params = params\n    this.size = size\n  }\n}\n\nexport type AbiDecodingZeroDataErrorType = AbiDecodingZeroDataError & {\n  name: 'AbiDecodingZeroDataError'\n}\nexport class AbiDecodingZeroDataError extends BaseError {\n  constructor() {\n    super('Cannot decode zero data (\"0x\") with ABI parameters.', {\n      name: 'AbiDecodingZeroDataError',\n    })\n  }\n}\n\nexport type AbiEncodingArrayLengthMismatchErrorType =\n  AbiEncodingArrayLengthMismatchError & {\n    name: 'AbiEncodingArrayLengthMismatchError'\n  }\nexport class AbiEncodingArrayLengthMismatchError extends BaseError {\n  constructor({\n    expectedLength,\n    givenLength,\n    type,\n  }: { expectedLength: number; givenLength: number; type: string }) {\n    super(\n      [\n        `ABI encoding array length mismatch for type ${type}.`,\n        `Expected length: ${expectedLength}`,\n        `Given length: ${givenLength}`,\n      ].join('\\n'),\n      { name: 'AbiEncodingArrayLengthMismatchError' },\n    )\n  }\n}\n\nexport type AbiEncodingBytesSizeMismatchErrorType =\n  AbiEncodingBytesSizeMismatchError & {\n    name: 'AbiEncodingBytesSizeMismatchError'\n  }\nexport class AbiEncodingBytesSizeMismatchError extends BaseError {\n  constructor({ expectedSize, value }: { expectedSize: number; value: Hex }) {\n    super(\n      `Size of bytes \"${value}\" (bytes${size(\n        value,\n      )}) does not match expected size (bytes${expectedSize}).`,\n      { name: 'AbiEncodingBytesSizeMismatchError' },\n    )\n  }\n}\n\nexport type AbiEncodingLengthMismatchErrorType =\n  AbiEncodingLengthMismatchError & {\n    name: 'AbiEncodingLengthMismatchError'\n  }\nexport class AbiEncodingLengthMismatchError extends BaseError {\n  constructor({\n    expectedLength,\n    givenLength,\n  }: { expectedLength: number; givenLength: number }) {\n    super(\n      [\n        'ABI encoding params/values length mismatch.',\n        `Expected length (params): ${expectedLength}`,\n        `Given length (values): ${givenLength}`,\n      ].join('\\n'),\n      { name: 'AbiEncodingLengthMismatchError' },\n    )\n  }\n}\n\nexport type AbiErrorInputsNotFoundErrorType = AbiErrorInputsNotFoundError & {\n  name: 'AbiErrorInputsNotFoundError'\n}\nexport class AbiErrorInputsNotFoundError extends BaseError {\n  constructor(errorName: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Arguments (\\`args\\`) were provided to \"${errorName}\", but \"${errorName}\" on the ABI does not contain any parameters (\\`inputs\\`).`,\n        'Cannot encode error result without knowing what the parameter types are.',\n        'Make sure you are using the correct ABI and that the inputs exist on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiErrorInputsNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiErrorNotFoundErrorType = AbiErrorNotFoundError & {\n  name: 'AbiErrorNotFoundError'\n}\nexport class AbiErrorNotFoundError extends BaseError {\n  constructor(\n    errorName?: string | undefined,\n    { docsPath }: { docsPath?: string | undefined } = {},\n  ) {\n    super(\n      [\n        `Error ${errorName ? `\"${errorName}\" ` : ''}not found on ABI.`,\n        'Make sure you are using the correct ABI and that the error exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiErrorNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiErrorSignatureNotFoundErrorType =\n  AbiErrorSignatureNotFoundError & {\n    name: 'AbiErrorSignatureNotFoundError'\n  }\nexport class AbiErrorSignatureNotFoundError extends BaseError {\n  signature: Hex\n\n  constructor(signature: Hex, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Encoded error signature \"${signature}\" not found on ABI.`,\n        'Make sure you are using the correct ABI and that the error exists on it.',\n        `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiErrorSignatureNotFoundError',\n      },\n    )\n    this.signature = signature\n  }\n}\n\nexport type AbiEventSignatureEmptyTopicsErrorType =\n  AbiEventSignatureEmptyTopicsError & {\n    name: 'AbiEventSignatureEmptyTopicsError'\n  }\nexport class AbiEventSignatureEmptyTopicsError extends BaseError {\n  constructor({ docsPath }: { docsPath: string }) {\n    super('Cannot extract event signature from empty topics.', {\n      docsPath,\n      name: 'AbiEventSignatureEmptyTopicsError',\n    })\n  }\n}\n\nexport type AbiEventSignatureNotFoundErrorType =\n  AbiEventSignatureNotFoundError & {\n    name: 'AbiEventSignatureNotFoundError'\n  }\nexport class AbiEventSignatureNotFoundError extends BaseError {\n  constructor(signature: Hex, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Encoded event signature \"${signature}\" not found on ABI.`,\n        'Make sure you are using the correct ABI and that the event exists on it.',\n        `You can look up the signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiEventSignatureNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiEventNotFoundErrorType = AbiEventNotFoundError & {\n  name: 'AbiEventNotFoundError'\n}\nexport class AbiEventNotFoundError extends BaseError {\n  constructor(\n    eventName?: string | undefined,\n    { docsPath }: { docsPath?: string | undefined } = {},\n  ) {\n    super(\n      [\n        `Event ${eventName ? `\"${eventName}\" ` : ''}not found on ABI.`,\n        'Make sure you are using the correct ABI and that the event exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiEventNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiFunctionNotFoundErrorType = AbiFunctionNotFoundError & {\n  name: 'AbiFunctionNotFoundError'\n}\nexport class AbiFunctionNotFoundError extends BaseError {\n  constructor(\n    functionName?: string | undefined,\n    { docsPath }: { docsPath?: string | undefined } = {},\n  ) {\n    super(\n      [\n        `Function ${functionName ? `\"${functionName}\" ` : ''}not found on ABI.`,\n        'Make sure you are using the correct ABI and that the function exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiFunctionNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiFunctionOutputsNotFoundErrorType =\n  AbiFunctionOutputsNotFoundError & {\n    name: 'AbiFunctionOutputsNotFoundError'\n  }\nexport class AbiFunctionOutputsNotFoundError extends BaseError {\n  constructor(functionName: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Function \"${functionName}\" does not contain any \\`outputs\\` on ABI.`,\n        'Cannot decode function result without knowing what the parameter types are.',\n        'Make sure you are using the correct ABI and that the function exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiFunctionOutputsNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiFunctionSignatureNotFoundErrorType =\n  AbiFunctionSignatureNotFoundError & {\n    name: 'AbiFunctionSignatureNotFoundError'\n  }\nexport class AbiFunctionSignatureNotFoundError extends BaseError {\n  constructor(signature: Hex, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Encoded function signature \"${signature}\" not found on ABI.`,\n        'Make sure you are using the correct ABI and that the function exists on it.',\n        `You can look up the signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiFunctionSignatureNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiItemAmbiguityErrorType = AbiItemAmbiguityError & {\n  name: 'AbiItemAmbiguityError'\n}\nexport class AbiItemAmbiguityError extends BaseError {\n  constructor(\n    x: { abiItem: Abi[number]; type: string },\n    y: { abiItem: Abi[number]; type: string },\n  ) {\n    super('Found ambiguous types in overloaded ABI items.', {\n      metaMessages: [\n        `\\`${x.type}\\` in \\`${formatAbiItem(x.abiItem)}\\`, and`,\n        `\\`${y.type}\\` in \\`${formatAbiItem(y.abiItem)}\\``,\n        '',\n        'These types encode differently and cannot be distinguished at runtime.',\n        'Remove one of the ambiguous items in the ABI.',\n      ],\n      name: 'AbiItemAmbiguityError',\n    })\n  }\n}\n\nexport type BytesSizeMismatchErrorType = BytesSizeMismatchError & {\n  name: 'BytesSizeMismatchError'\n}\nexport class BytesSizeMismatchError extends BaseError {\n  constructor({\n    expectedSize,\n    givenSize,\n  }: { expectedSize: number; givenSize: number }) {\n    super(`Expected bytes${expectedSize}, got bytes${givenSize}.`, {\n      name: 'BytesSizeMismatchError',\n    })\n  }\n}\n\nexport type DecodeLogDataMismatchErrorType = DecodeLogDataMismatch & {\n  name: 'DecodeLogDataMismatch'\n}\nexport class DecodeLogDataMismatch extends BaseError {\n  abiItem: AbiEvent\n  data: Hex\n  params: readonly AbiParameter[]\n  size: number\n\n  constructor({\n    abiItem,\n    data,\n    params,\n    size,\n  }: {\n    abiItem: AbiEvent\n    data: Hex\n    params: readonly AbiParameter[]\n    size: number\n  }) {\n    super(\n      [\n        `Data size of ${size} bytes is too small for non-indexed event parameters.`,\n      ].join('\\n'),\n      {\n        metaMessages: [\n          `Params: (${formatAbiParams(params, { includeName: true })})`,\n          `Data:   ${data} (${size} bytes)`,\n        ],\n        name: 'DecodeLogDataMismatch',\n      },\n    )\n\n    this.abiItem = abiItem\n    this.data = data\n    this.params = params\n    this.size = size\n  }\n}\n\nexport type DecodeLogTopicsMismatchErrorType = DecodeLogTopicsMismatch & {\n  name: 'DecodeLogTopicsMismatch'\n}\nexport class DecodeLogTopicsMismatch extends BaseError {\n  abiItem: AbiEvent\n\n  constructor({\n    abiItem,\n    param,\n  }: {\n    abiItem: AbiEvent\n    param: AbiParameter & { indexed: boolean }\n  }) {\n    super(\n      [\n        `Expected a topic for indexed event parameter${\n          param.name ? ` \"${param.name}\"` : ''\n        } on event \"${formatAbiItem(abiItem, { includeName: true })}\".`,\n      ].join('\\n'),\n      { name: 'DecodeLogTopicsMismatch' },\n    )\n\n    this.abiItem = abiItem\n  }\n}\n\nexport type InvalidAbiEncodingTypeErrorType = InvalidAbiEncodingTypeError & {\n  name: 'InvalidAbiEncodingTypeError'\n}\nexport class InvalidAbiEncodingTypeError extends BaseError {\n  constructor(type: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Type \"${type}\" is not a valid encoding type.`,\n        'Please provide a valid ABI type.',\n      ].join('\\n'),\n      { docsPath, name: 'InvalidAbiEncodingType' },\n    )\n  }\n}\n\nexport type InvalidAbiDecodingTypeErrorType = InvalidAbiDecodingTypeError & {\n  name: 'InvalidAbiDecodingTypeError'\n}\nexport class InvalidAbiDecodingTypeError extends BaseError {\n  constructor(type: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Type \"${type}\" is not a valid decoding type.`,\n        'Please provide a valid ABI type.',\n      ].join('\\n'),\n      { docsPath, name: 'InvalidAbiDecodingType' },\n    )\n  }\n}\n\nexport type InvalidArrayErrorType = InvalidArrayError & {\n  name: 'InvalidArrayError'\n}\nexport class InvalidArrayError extends BaseError {\n  constructor(value: unknown) {\n    super([`Value \"${value}\" is not a valid array.`].join('\\n'), {\n      name: 'InvalidArrayError',\n    })\n  }\n}\n\nexport type InvalidDefinitionTypeErrorType = InvalidDefinitionTypeError & {\n  name: 'InvalidDefinitionTypeError'\n}\nexport class InvalidDefinitionTypeError extends BaseError {\n  constructor(type: string) {\n    super(\n      [\n        `\"${type}\" is not a valid definition type.`,\n        'Valid types: \"function\", \"event\", \"error\"',\n      ].join('\\n'),\n      { name: 'InvalidDefinitionTypeError' },\n    )\n  }\n}\n\nexport type UnsupportedPackedAbiTypeErrorType = UnsupportedPackedAbiType & {\n  name: 'UnsupportedPackedAbiType'\n}\nexport class UnsupportedPackedAbiType extends BaseError {\n  constructor(type: unknown) {\n    super(`Type \"${type}\" is not supported for packed encoding.`, {\n      name: 'UnsupportedPackedAbiType',\n    })\n  }\n}\n","import { BaseError } from './base.js'\n\nexport type AccountNotFoundErrorType = AccountNotFoundError & {\n  name: 'AccountNotFoundError'\n}\nexport class AccountNotFoundError extends BaseError {\n  constructor({ docsPath }: { docsPath?: string | undefined } = {}) {\n    super(\n      [\n        'Could not find an Account to execute with this Action.',\n        'Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the Client.',\n      ].join('\\n'),\n      {\n        docsPath,\n        docsSlug: 'account',\n        name: 'AccountNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AccountTypeNotSupportedErrorType = AccountTypeNotSupportedError & {\n  name: 'AccountTypeNotSupportedError'\n}\nexport class AccountTypeNotSupportedError extends BaseError {\n  constructor({\n    docsPath,\n    metaMessages,\n    type,\n  }: {\n    docsPath?: string | undefined\n    metaMessages?: string[] | undefined\n    type: string\n  }) {\n    super(`Account type \"${type}\" is not supported.`, {\n      docsPath,\n      metaMessages,\n      name: 'AccountTypeNotSupportedError',\n    })\n  }\n}\n","import { BaseError } from './base.js'\n\nexport type InvalidAddressErrorType = InvalidAddressError & {\n  name: 'InvalidAddressError'\n}\nexport class InvalidAddressError extends BaseError {\n  constructor({ address }: { address: string }) {\n    super(`Address \"${address}\" is invalid.`, {\n      metaMessages: [\n        '- Address must be a hex value of 20 bytes (40 hex characters).',\n        '- Address must match its checksum counterpart.',\n      ],\n      name: 'InvalidAddressError',\n    })\n  }\n}\n","import { version } from './version.js'\n\ntype ErrorConfig = {\n  getDocsUrl?: ((args: BaseErrorParameters) => string | undefined) | undefined\n  version?: string | undefined\n}\n\nlet errorConfig: ErrorConfig = {\n  getDocsUrl: ({\n    docsBaseUrl,\n    docsPath = '',\n    docsSlug,\n  }: BaseErrorParameters) =>\n    docsPath\n      ? `${docsBaseUrl ?? 'https://viem.sh'}${docsPath}${\n          docsSlug ? `#${docsSlug}` : ''\n        }`\n      : undefined,\n  version: `viem@${version}`,\n}\n\nexport function setErrorConfig(config: ErrorConfig) {\n  errorConfig = config\n}\n\ntype BaseErrorParameters = {\n  cause?: BaseError | Error | undefined\n  details?: string | undefined\n  docsBaseUrl?: string | undefined\n  docsPath?: string | undefined\n  docsSlug?: string | undefined\n  metaMessages?: string[] | undefined\n  name?: string | undefined\n}\n\nexport type BaseErrorType = BaseError & { name: 'BaseError' }\nexport class BaseError extends Error {\n  details: string\n  docsPath?: string | undefined\n  metaMessages?: string[] | undefined\n  shortMessage: string\n  version: string\n\n  override name = 'BaseError'\n\n  constructor(shortMessage: string, args: BaseErrorParameters = {}) {\n    const details = (() => {\n      if (args.cause instanceof BaseError) return args.cause.details\n      if (args.cause?.message) return args.cause.message\n      return args.details!\n    })()\n    const docsPath = (() => {\n      if (args.cause instanceof BaseError)\n        return args.cause.docsPath || args.docsPath\n      return args.docsPath\n    })()\n    const docsUrl = errorConfig.getDocsUrl?.({ ...args, docsPath })\n\n    const message = [\n      shortMessage || 'An error occurred.',\n      '',\n      ...(args.metaMessages ? [...args.metaMessages, ''] : []),\n      ...(docsUrl ? [`Docs: ${docsUrl}`] : []),\n      ...(details ? [`Details: ${details}`] : []),\n      ...(errorConfig.version ? [`Version: ${errorConfig.version}`] : []),\n    ].join('\\n')\n\n    super(message, args.cause ? { cause: args.cause } : undefined)\n\n    this.details = details\n    this.docsPath = docsPath\n    this.metaMessages = args.metaMessages\n    this.name = args.name ?? this.name\n    this.shortMessage = shortMessage\n    this.version = version\n  }\n\n  walk(): Error\n  walk(fn: (err: unknown) => boolean): Error | null\n  walk(fn?: any): any {\n    return walk(this, fn)\n  }\n}\n\nfunction walk(\n  err: unknown,\n  fn?: ((err: unknown) => boolean) | undefined,\n): unknown {\n  if (fn?.(err)) return err\n  if (\n    err &&\n    typeof err === 'object' &&\n    'cause' in err &&\n    err.cause !== undefined\n  )\n    return walk(err.cause, fn)\n  return fn ? null : err\n}\n","import { versionedHashVersionKzg } from '../constants/kzg.js'\nimport type { Hash } from '../types/misc.js'\n\nimport { BaseError } from './base.js'\n\nexport type BlobSizeTooLargeErrorType = BlobSizeTooLargeError & {\n  name: 'BlobSizeTooLargeError'\n}\nexport class BlobSizeTooLargeError extends BaseError {\n  constructor({ maxSize, size }: { maxSize: number; size: number }) {\n    super('Blob size is too large.', {\n      metaMessages: [`Max: ${maxSize} bytes`, `Given: ${size} bytes`],\n      name: 'BlobSizeTooLargeError',\n    })\n  }\n}\n\nexport type EmptyBlobErrorType = EmptyBlobError & {\n  name: 'EmptyBlobError'\n}\nexport class EmptyBlobError extends BaseError {\n  constructor() {\n    super('Blob data must not be empty.', { name: 'EmptyBlobError' })\n  }\n}\n\nexport type InvalidVersionedHashSizeErrorType =\n  InvalidVersionedHashSizeError & {\n    name: 'InvalidVersionedHashSizeError'\n  }\nexport class InvalidVersionedHashSizeError extends BaseError {\n  constructor({\n    hash,\n    size,\n  }: {\n    hash: Hash\n    size: number\n  }) {\n    super(`Versioned hash \"${hash}\" size is invalid.`, {\n      metaMessages: ['Expected: 32', `Received: ${size}`],\n      name: 'InvalidVersionedHashSizeError',\n    })\n  }\n}\n\nexport type InvalidVersionedHashVersionErrorType =\n  InvalidVersionedHashVersionError & {\n    name: 'InvalidVersionedHashVersionError'\n  }\nexport class InvalidVersionedHashVersionError extends BaseError {\n  constructor({\n    hash,\n    version,\n  }: {\n    hash: Hash\n    version: number\n  }) {\n    super(`Versioned hash \"${hash}\" version is invalid.`, {\n      metaMessages: [\n        `Expected: ${versionedHashVersionKzg}`,\n        `Received: ${version}`,\n      ],\n      name: 'InvalidVersionedHashVersionError',\n    })\n  }\n}\n","import type { Hash } from '../types/misc.js'\n\nimport { BaseError } from './base.js'\n\nexport type BlockNotFoundErrorType = BlockNotFoundError & {\n  name: 'BlockNotFoundError'\n}\nexport class BlockNotFoundError extends BaseError {\n  constructor({\n    blockHash,\n    blockNumber,\n  }: {\n    blockHash?: Hash | undefined\n    blockNumber?: bigint | undefined\n  }) {\n    let identifier = 'Block'\n    if (blockHash) identifier = `Block at hash \"${blockHash}\"`\n    if (blockNumber) identifier = `Block at number \"${blockNumber}\"`\n    super(`${identifier} could not be found.`, { name: 'BlockNotFoundError' })\n  }\n}\n","import type { Address } from 'abitype'\n\nimport type { Hex } from '../types/misc.js'\nimport { stringify } from '../utils/stringify.js'\n\nimport { BaseError } from './base.js'\nimport { getUrl } from './utils.js'\n\nexport type OffchainLookupErrorType = OffchainLookupError & {\n  name: 'OffchainLookupError'\n}\nexport class OffchainLookupError extends BaseError {\n  constructor({\n    callbackSelector,\n    cause,\n    data,\n    extraData,\n    sender,\n    urls,\n  }: {\n    callbackSelector: Hex\n    cause: BaseError\n    data: Hex\n    extraData: Hex\n    sender: Address\n    urls: readonly string[]\n  }) {\n    super(\n      cause.shortMessage ||\n        'An error occurred while fetching for an offchain result.',\n      {\n        cause,\n        metaMessages: [\n          ...(cause.metaMessages || []),\n          cause.metaMessages?.length ? '' : [],\n          'Offchain Gateway Call:',\n          urls && [\n            '  Gateway URL(s):',\n            ...urls.map((url) => `    ${getUrl(url)}`),\n          ],\n          `  Sender: ${sender}`,\n          `  Data: ${data}`,\n          `  Callback selector: ${callbackSelector}`,\n          `  Extra data: ${extraData}`,\n        ].flat(),\n        name: 'OffchainLookupError',\n      },\n    )\n  }\n}\n\nexport type OffchainLookupResponseMalformedErrorType =\n  OffchainLookupResponseMalformedError & {\n    name: 'OffchainLookupResponseMalformedError'\n  }\nexport class OffchainLookupResponseMalformedError extends BaseError {\n  constructor({ result, url }: { result: any; url: string }) {\n    super(\n      'Offchain gateway response is malformed. Response data must be a hex value.',\n      {\n        metaMessages: [\n          `Gateway URL: ${getUrl(url)}`,\n          `Response: ${stringify(result)}`,\n        ],\n        name: 'OffchainLookupResponseMalformedError',\n      },\n    )\n  }\n}\n\n/** @internal */\nexport type OffchainLookupSenderMismatchErrorType =\n  OffchainLookupSenderMismatchError & {\n    name: 'OffchainLookupSenderMismatchError'\n  }\nexport class OffchainLookupSenderMismatchError extends BaseError {\n  constructor({ sender, to }: { sender: Address; to: Address }) {\n    super(\n      'Reverted sender address does not match target contract address (`to`).',\n      {\n        metaMessages: [\n          `Contract address: ${to}`,\n          `OffchainLookup sender address: ${sender}`,\n        ],\n        name: 'OffchainLookupSenderMismatchError',\n      },\n    )\n  }\n}\n","import type { Chain } from '../types/chain.js'\n\nimport { BaseError } from './base.js'\n\nexport type ChainDoesNotSupportContractErrorType =\n  ChainDoesNotSupportContract & {\n    name: 'ChainDoesNotSupportContract'\n  }\nexport class ChainDoesNotSupportContract extends BaseError {\n  constructor({\n    blockNumber,\n    chain,\n    contract,\n  }: {\n    blockNumber?: bigint | undefined\n    chain: Chain\n    contract: { name: string; blockCreated?: number | undefined }\n  }) {\n    super(\n      `Chain \"${chain.name}\" does not support contract \"${contract.name}\".`,\n      {\n        metaMessages: [\n          'This could be due to any of the following:',\n          ...(blockNumber &&\n          contract.blockCreated &&\n          contract.blockCreated > blockNumber\n            ? [\n                `- The contract \"${contract.name}\" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`,\n              ]\n            : [\n                `- The chain does not have the contract \"${contract.name}\" configured.`,\n              ]),\n        ],\n        name: 'ChainDoesNotSupportContract',\n      },\n    )\n  }\n}\n\nexport type ChainMismatchErrorType = ChainMismatchError & {\n  name: 'ChainMismatchError'\n}\nexport class ChainMismatchError extends BaseError {\n  constructor({\n    chain,\n    currentChainId,\n  }: {\n    chain: Chain\n    currentChainId: number\n  }) {\n    super(\n      `The current chain of the wallet (id: ${currentChainId}) does not match the target chain for the transaction (id: ${chain.id} – ${chain.name}).`,\n      {\n        metaMessages: [\n          `Current Chain ID:  ${currentChainId}`,\n          `Expected Chain ID: ${chain.id} – ${chain.name}`,\n        ],\n        name: 'ChainMismatchError',\n      },\n    )\n  }\n}\n\nexport type ChainNotFoundErrorType = ChainNotFoundError & {\n  name: 'ChainNotFoundError'\n}\nexport class ChainNotFoundError extends BaseError {\n  constructor() {\n    super(\n      [\n        'No chain was provided to the request.',\n        'Please provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.',\n      ].join('\\n'),\n      {\n        name: 'ChainNotFoundError',\n      },\n    )\n  }\n}\n\nexport type ClientChainNotConfiguredErrorType =\n  ClientChainNotConfiguredError & {\n    name: 'ClientChainNotConfiguredError'\n  }\nexport class ClientChainNotConfiguredError extends BaseError {\n  constructor() {\n    super('No chain was provided to the Client.', {\n      name: 'ClientChainNotConfiguredError',\n    })\n  }\n}\n\nexport type InvalidChainIdErrorType = InvalidChainIdError & {\n  name: 'InvalidChainIdError'\n}\nexport class InvalidChainIdError extends BaseError {\n  constructor({ chainId }: { chainId?: number | undefined }) {\n    super(\n      typeof chainId === 'number'\n        ? `Chain ID \"${chainId}\" is invalid.`\n        : 'Chain ID is invalid.',\n      { name: 'InvalidChainIdError' },\n    )\n  }\n}\n","import type { Abi, Address } from 'abitype'\n\nimport { parseAccount } from '../accounts/utils/parseAccount.js'\nimport type { CallParameters } from '../actions/public/call.js'\nimport { panicReasons } from '../constants/solidity.js'\nimport type { Chain } from '../types/chain.js'\nimport type { Hex } from '../types/misc.js'\nimport {\n  type DecodeErrorResultReturnType,\n  decodeErrorResult,\n} from '../utils/abi/decodeErrorResult.js'\nimport { formatAbiItem } from '../utils/abi/formatAbiItem.js'\nimport { formatAbiItemWithArgs } from '../utils/abi/formatAbiItemWithArgs.js'\nimport { getAbiItem } from '../utils/abi/getAbiItem.js'\nimport { formatEther } from '../utils/unit/formatEther.js'\nimport { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { AbiErrorSignatureNotFoundError } from './abi.js'\nimport { BaseError } from './base.js'\nimport { prettyStateOverride } from './stateOverride.js'\nimport { prettyPrint } from './transaction.js'\nimport { getContractAddress } from './utils.js'\n\nexport type CallExecutionErrorType = CallExecutionError & {\n  name: 'CallExecutionError'\n}\nexport class CallExecutionError extends BaseError {\n  override cause: BaseError\n\n  constructor(\n    cause: BaseError,\n    {\n      account: account_,\n      docsPath,\n      chain,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n      stateOverride,\n    }: CallParameters & {\n      chain?: Chain | undefined\n      docsPath?: string | undefined\n    },\n  ) {\n    const account = account_ ? parseAccount(account_) : undefined\n    let prettyArgs = prettyPrint({\n      from: account?.address,\n      to,\n      value:\n        typeof value !== 'undefined' &&\n        `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n      data,\n      gas,\n      gasPrice:\n        typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n      maxFeePerGas:\n        typeof maxFeePerGas !== 'undefined' &&\n        `${formatGwei(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas:\n        typeof maxPriorityFeePerGas !== 'undefined' &&\n        `${formatGwei(maxPriorityFeePerGas)} gwei`,\n      nonce,\n    })\n\n    if (stateOverride) {\n      prettyArgs += `\\n${prettyStateOverride(stateOverride)}`\n    }\n\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [\n        ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n        'Raw Call Arguments:',\n        prettyArgs,\n      ].filter(Boolean) as string[],\n      name: 'CallExecutionError',\n    })\n    this.cause = cause\n  }\n}\n\nexport type ContractFunctionExecutionErrorType =\n  ContractFunctionExecutionError & {\n    name: 'ContractFunctionExecutionError'\n  }\nexport class ContractFunctionExecutionError extends BaseError {\n  abi: Abi\n  args?: unknown[] | undefined\n  override cause: BaseError\n  contractAddress?: Address | undefined\n  formattedArgs?: string | undefined\n  functionName: string\n  sender?: Address | undefined\n\n  constructor(\n    cause: BaseError,\n    {\n      abi,\n      args,\n      contractAddress,\n      docsPath,\n      functionName,\n      sender,\n    }: {\n      abi: Abi\n      args?: any | undefined\n      contractAddress?: Address | undefined\n      docsPath?: string | undefined\n      functionName: string\n      sender?: Address | undefined\n    },\n  ) {\n    const abiItem = getAbiItem({ abi, args, name: functionName })\n    const formattedArgs = abiItem\n      ? formatAbiItemWithArgs({\n          abiItem,\n          args,\n          includeFunctionName: false,\n          includeName: false,\n        })\n      : undefined\n    const functionWithParams = abiItem\n      ? formatAbiItem(abiItem, { includeName: true })\n      : undefined\n\n    const prettyArgs = prettyPrint({\n      address: contractAddress && getContractAddress(contractAddress),\n      function: functionWithParams,\n      args:\n        formattedArgs &&\n        formattedArgs !== '()' &&\n        `${[...Array(functionName?.length ?? 0).keys()]\n          .map(() => ' ')\n          .join('')}${formattedArgs}`,\n      sender,\n    })\n\n    super(\n      cause.shortMessage ||\n        `An unknown error occurred while executing the contract function \"${functionName}\".`,\n      {\n        cause,\n        docsPath,\n        metaMessages: [\n          ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n          prettyArgs && 'Contract Call:',\n          prettyArgs,\n        ].filter(Boolean) as string[],\n        name: 'ContractFunctionExecutionError',\n      },\n    )\n    this.abi = abi\n    this.args = args\n    this.cause = cause\n    this.contractAddress = contractAddress\n    this.functionName = functionName\n    this.sender = sender\n  }\n}\n\nexport type ContractFunctionRevertedErrorType =\n  ContractFunctionRevertedError & {\n    name: 'ContractFunctionRevertedError'\n  }\nexport class ContractFunctionRevertedError extends BaseError {\n  data?: DecodeErrorResultReturnType | undefined\n  raw?: Hex | undefined\n  reason?: string | undefined\n  signature?: Hex | undefined\n\n  constructor({\n    abi,\n    data,\n    functionName,\n    message,\n  }: {\n    abi: Abi\n    data?: Hex | undefined\n    functionName: string\n    message?: string | undefined\n  }) {\n    let cause: Error | undefined\n    let decodedData: DecodeErrorResultReturnType | undefined = undefined\n    let metaMessages: string[] | undefined\n    let reason: string | undefined\n    if (data && data !== '0x') {\n      try {\n        decodedData = decodeErrorResult({ abi, data })\n        const { abiItem, errorName, args: errorArgs } = decodedData\n        if (errorName === 'Error') {\n          reason = (errorArgs as [string])[0]\n        } else if (errorName === 'Panic') {\n          const [firstArg] = errorArgs as [number]\n          reason = panicReasons[firstArg as keyof typeof panicReasons]\n        } else {\n          const errorWithParams = abiItem\n            ? formatAbiItem(abiItem, { includeName: true })\n            : undefined\n          const formattedArgs =\n            abiItem && errorArgs\n              ? formatAbiItemWithArgs({\n                  abiItem,\n                  args: errorArgs,\n                  includeFunctionName: false,\n                  includeName: false,\n                })\n              : undefined\n\n          metaMessages = [\n            errorWithParams ? `Error: ${errorWithParams}` : '',\n            formattedArgs && formattedArgs !== '()'\n              ? `       ${[...Array(errorName?.length ?? 0).keys()]\n                  .map(() => ' ')\n                  .join('')}${formattedArgs}`\n              : '',\n          ]\n        }\n      } catch (err) {\n        cause = err as Error\n      }\n    } else if (message) reason = message\n\n    let signature: Hex | undefined\n    if (cause instanceof AbiErrorSignatureNotFoundError) {\n      signature = cause.signature\n      metaMessages = [\n        `Unable to decode signature \"${signature}\" as it was not found on the provided ABI.`,\n        'Make sure you are using the correct ABI and that the error exists on it.',\n        `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ]\n    }\n\n    super(\n      (reason && reason !== 'execution reverted') || signature\n        ? [\n            `The contract function \"${functionName}\" reverted with the following ${\n              signature ? 'signature' : 'reason'\n            }:`,\n            reason || signature,\n          ].join('\\n')\n        : `The contract function \"${functionName}\" reverted.`,\n      {\n        cause,\n        metaMessages,\n        name: 'ContractFunctionRevertedError',\n      },\n    )\n\n    this.data = decodedData\n    this.raw = data\n    this.reason = reason\n    this.signature = signature\n  }\n}\n\nexport type ContractFunctionZeroDataErrorType =\n  ContractFunctionZeroDataError & {\n    name: 'ContractFunctionZeroDataError'\n  }\nexport class ContractFunctionZeroDataError extends BaseError {\n  constructor({ functionName }: { functionName: string }) {\n    super(`The contract function \"${functionName}\" returned no data (\"0x\").`, {\n      metaMessages: [\n        'This could be due to any of the following:',\n        `  - The contract does not have the function \"${functionName}\",`,\n        '  - The parameters passed to the contract function may be invalid, or',\n        '  - The address is not a contract.',\n      ],\n      name: 'ContractFunctionZeroDataError',\n    })\n  }\n}\n\nexport type CounterfactualDeploymentFailedErrorType =\n  CounterfactualDeploymentFailedError & {\n    name: 'CounterfactualDeploymentFailedError'\n  }\nexport class CounterfactualDeploymentFailedError extends BaseError {\n  constructor({ factory }: { factory?: Address | undefined }) {\n    super(\n      `Deployment for counterfactual contract call failed${\n        factory ? ` for factory \"${factory}\".` : ''\n      }`,\n      {\n        metaMessages: [\n          'Please ensure:',\n          '- The `factory` is a valid contract deployment factory (ie. Create2 Factory, ERC-4337 Factory, etc).',\n          '- The `factoryData` is a valid encoded function call for contract deployment function on the factory.',\n        ],\n        name: 'CounterfactualDeploymentFailedError',\n      },\n    )\n  }\n}\n\nexport type RawContractErrorType = RawContractError & {\n  name: 'RawContractError'\n}\nexport class RawContractError extends BaseError {\n  code = 3\n\n  data?: Hex | { data?: Hex | undefined } | undefined\n\n  constructor({\n    data,\n    message,\n  }: {\n    data?: Hex | { data?: Hex | undefined } | undefined\n    message?: string | undefined\n  }) {\n    super(message || '', { name: 'RawContractError' })\n    this.data = data\n  }\n}\n","import { BaseError } from './base.js'\n\nexport type NegativeOffsetErrorType = NegativeOffsetError & {\n  name: 'NegativeOffsetError'\n}\nexport class NegativeOffsetError extends BaseError {\n  constructor({ offset }: { offset: number }) {\n    super(`Offset \\`${offset}\\` cannot be negative.`, {\n      name: 'NegativeOffsetError',\n    })\n  }\n}\n\nexport type PositionOutOfBoundsErrorType = PositionOutOfBoundsError & {\n  name: 'PositionOutOfBoundsError'\n}\nexport class PositionOutOfBoundsError extends BaseError {\n  constructor({ length, position }: { length: number; position: number }) {\n    super(\n      `Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`,\n      { name: 'PositionOutOfBoundsError' },\n    )\n  }\n}\n\nexport type RecursiveReadLimitExceededErrorType =\n  RecursiveReadLimitExceededError & {\n    name: 'RecursiveReadLimitExceededError'\n  }\nexport class RecursiveReadLimitExceededError extends BaseError {\n  constructor({ count, limit }: { count: number; limit: number }) {\n    super(\n      `Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`,\n      { name: 'RecursiveReadLimitExceededError' },\n    )\n  }\n}\n","import { BaseError } from './base.js'\n\nexport type SliceOffsetOutOfBoundsErrorType = SliceOffsetOutOfBoundsError & {\n  name: 'SliceOffsetOutOfBoundsError'\n}\nexport class SliceOffsetOutOfBoundsError extends BaseError {\n  constructor({\n    offset,\n    position,\n    size,\n  }: { offset: number; position: 'start' | 'end'; size: number }) {\n    super(\n      `Slice ${\n        position === 'start' ? 'starting' : 'ending'\n      } at offset \"${offset}\" is out-of-bounds (size: ${size}).`,\n      { name: 'SliceOffsetOutOfBoundsError' },\n    )\n  }\n}\n\nexport type SizeExceedsPaddingSizeErrorType = SizeExceedsPaddingSizeError & {\n  name: 'SizeExceedsPaddingSizeError'\n}\nexport class SizeExceedsPaddingSizeError extends BaseError {\n  constructor({\n    size,\n    targetSize,\n    type,\n  }: {\n    size: number\n    targetSize: number\n    type: 'hex' | 'bytes'\n  }) {\n    super(\n      `${type.charAt(0).toUpperCase()}${type\n        .slice(1)\n        .toLowerCase()} size (${size}) exceeds padding size (${targetSize}).`,\n      { name: 'SizeExceedsPaddingSizeError' },\n    )\n  }\n}\n\nexport type InvalidBytesLengthErrorType = InvalidBytesLengthError & {\n  name: 'InvalidBytesLengthError'\n}\nexport class InvalidBytesLengthError extends BaseError {\n  constructor({\n    size,\n    targetSize,\n    type,\n  }: {\n    size: number\n    targetSize: number\n    type: 'hex' | 'bytes'\n  }) {\n    super(\n      `${type.charAt(0).toUpperCase()}${type\n        .slice(1)\n        .toLowerCase()} is expected to be ${targetSize} ${type} long, but is ${size} ${type} long.`,\n      { name: 'InvalidBytesLengthError' },\n    )\n  }\n}\n","import type { Address } from 'abitype'\nimport { BaseError } from './base.js'\n\nexport type Eip712DomainNotFoundErrorType = Eip712DomainNotFoundError & {\n  name: 'Eip712DomainNotFoundError'\n}\nexport class Eip712DomainNotFoundError extends BaseError {\n  constructor({ address }: { address: Address }) {\n    super(`No EIP-712 domain found on contract \"${address}\".`, {\n      metaMessages: [\n        'Ensure that:',\n        `- The contract is deployed at the address \"${address}\".`,\n        '- `eip712Domain()` function exists on the contract.',\n        '- `eip712Domain()` function matches signature to ERC-5267 specification.',\n      ],\n      name: 'Eip712DomainNotFoundError',\n    })\n  }\n}\n","import type { ByteArray, Hex } from '../types/misc.js'\n\nimport { BaseError } from './base.js'\n\nexport type IntegerOutOfRangeErrorType = IntegerOutOfRangeError & {\n  name: 'IntegerOutOfRangeError'\n}\nexport class IntegerOutOfRangeError extends BaseError {\n  constructor({\n    max,\n    min,\n    signed,\n    size,\n    value,\n  }: {\n    max?: string | undefined\n    min: string\n    signed?: boolean | undefined\n    size?: number | undefined\n    value: string\n  }) {\n    super(\n      `Number \"${value}\" is not in safe ${\n        size ? `${size * 8}-bit ${signed ? 'signed' : 'unsigned'} ` : ''\n      }integer range ${max ? `(${min} to ${max})` : `(above ${min})`}`,\n      { name: 'IntegerOutOfRangeError' },\n    )\n  }\n}\n\nexport type InvalidBytesBooleanErrorType = InvalidBytesBooleanError & {\n  name: 'InvalidBytesBooleanError'\n}\nexport class InvalidBytesBooleanError extends BaseError {\n  constructor(bytes: ByteArray) {\n    super(\n      `Bytes value \"${bytes}\" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`,\n      {\n        name: 'InvalidBytesBooleanError',\n      },\n    )\n  }\n}\n\nexport type InvalidHexBooleanErrorType = InvalidHexBooleanError & {\n  name: 'InvalidHexBooleanError'\n}\nexport class InvalidHexBooleanError extends BaseError {\n  constructor(hex: Hex) {\n    super(\n      `Hex value \"${hex}\" is not a valid boolean. The hex value must be \"0x0\" (false) or \"0x1\" (true).`,\n      { name: 'InvalidHexBooleanError' },\n    )\n  }\n}\n\nexport type InvalidHexValueErrorType = InvalidHexValueError & {\n  name: 'InvalidHexValueError'\n}\nexport class InvalidHexValueError extends BaseError {\n  constructor(value: Hex) {\n    super(\n      `Hex value \"${value}\" is an odd length (${value.length}). It must be an even length.`,\n      { name: 'InvalidHexValueError' },\n    )\n  }\n}\n\nexport type SizeOverflowErrorType = SizeOverflowError & {\n  name: 'SizeOverflowError'\n}\nexport class SizeOverflowError extends BaseError {\n  constructor({ givenSize, maxSize }: { givenSize: number; maxSize: number }) {\n    super(\n      `Size cannot exceed ${maxSize} bytes. Given size: ${givenSize} bytes.`,\n      { name: 'SizeOverflowError' },\n    )\n  }\n}\n","import { BaseError } from './base.js'\n\nexport type EnsAvatarInvalidMetadataErrorType =\n  EnsAvatarInvalidMetadataError & {\n    name: 'EnsAvatarInvalidMetadataError'\n  }\nexport class EnsAvatarInvalidMetadataError extends BaseError {\n  constructor({ data }: { data: any }) {\n    super(\n      'Unable to extract image from metadata. The metadata may be malformed or invalid.',\n      {\n        metaMessages: [\n          '- Metadata must be a JSON object with at least an `image`, `image_url` or `image_data` property.',\n          '',\n          `Provided data: ${JSON.stringify(data)}`,\n        ],\n        name: 'EnsAvatarInvalidMetadataError',\n      },\n    )\n  }\n}\n\nexport type EnsAvatarInvalidNftUriErrorType = EnsAvatarInvalidNftUriError & {\n  name: 'EnsAvatarInvalidNftUriError'\n}\nexport class EnsAvatarInvalidNftUriError extends BaseError {\n  constructor({ reason }: { reason: string }) {\n    super(`ENS NFT avatar URI is invalid. ${reason}`, {\n      name: 'EnsAvatarInvalidNftUriError',\n    })\n  }\n}\n\nexport type EnsAvatarUriResolutionErrorType = EnsAvatarUriResolutionError & {\n  name: 'EnsAvatarUriResolutionError'\n}\nexport class EnsAvatarUriResolutionError extends BaseError {\n  constructor({ uri }: { uri: string }) {\n    super(\n      `Unable to resolve ENS avatar URI \"${uri}\". The URI may be malformed, invalid, or does not respond with a valid image.`,\n      { name: 'EnsAvatarUriResolutionError' },\n    )\n  }\n}\n\nexport type EnsAvatarUnsupportedNamespaceErrorType =\n  EnsAvatarUnsupportedNamespaceError & {\n    name: 'EnsAvatarUnsupportedNamespaceError'\n  }\nexport class EnsAvatarUnsupportedNamespaceError extends BaseError {\n  constructor({ namespace }: { namespace: string }) {\n    super(\n      `ENS NFT avatar namespace \"${namespace}\" is not supported. Must be \"erc721\" or \"erc1155\".`,\n      { name: 'EnsAvatarUnsupportedNamespaceError' },\n    )\n  }\n}\n","import type { Account } from '../accounts/types.js'\nimport type { EstimateGasParameters } from '../actions/public/estimateGas.js'\nimport type { Chain } from '../types/chain.js'\nimport { formatEther } from '../utils/unit/formatEther.js'\nimport { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { BaseError } from './base.js'\nimport { prettyPrint } from './transaction.js'\n\nexport type EstimateGasExecutionErrorType = EstimateGasExecutionError & {\n  name: 'EstimateGasExecutionError'\n}\nexport class EstimateGasExecutionError extends BaseError {\n  override cause: BaseError\n\n  constructor(\n    cause: BaseError,\n    {\n      account,\n      docsPath,\n      chain,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    }: Omit<EstimateGasParameters<any>, 'account'> & {\n      account?: Account | undefined\n      chain?: Chain | undefined\n      docsPath?: string | undefined\n    },\n  ) {\n    const prettyArgs = prettyPrint({\n      from: account?.address,\n      to,\n      value:\n        typeof value !== 'undefined' &&\n        `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n      data,\n      gas,\n      gasPrice:\n        typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n      maxFeePerGas:\n        typeof maxFeePerGas !== 'undefined' &&\n        `${formatGwei(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas:\n        typeof maxPriorityFeePerGas !== 'undefined' &&\n        `${formatGwei(maxPriorityFeePerGas)} gwei`,\n      nonce,\n    })\n\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [\n        ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n        'Estimate Gas Arguments:',\n        prettyArgs,\n      ].filter(Boolean) as string[],\n      name: 'EstimateGasExecutionError',\n    })\n    this.cause = cause\n  }\n}\n","import { formatGwei } from '../utils/unit/formatGwei.js'\nimport { BaseError } from './base.js'\n\nexport type BaseFeeScalarErrorType = BaseFeeScalarError & {\n  name: 'BaseFeeScalarError'\n}\nexport class BaseFeeScalarError extends BaseError {\n  constructor() {\n    super('`baseFeeMultiplier` must be greater than 1.', {\n      name: 'BaseFeeScalarError',\n    })\n  }\n}\n\nexport type Eip1559FeesNotSupportedErrorType = Eip1559FeesNotSupportedError & {\n  name: 'Eip1559FeesNotSupportedError'\n}\nexport class Eip1559FeesNotSupportedError extends BaseError {\n  constructor() {\n    super('Chain does not support EIP-1559 fees.', {\n      name: 'Eip1559FeesNotSupportedError',\n    })\n  }\n}\n\nexport type MaxFeePerGasTooLowErrorType = MaxFeePerGasTooLowError & {\n  name: 'MaxFeePerGasTooLowError'\n}\nexport class MaxFeePerGasTooLowError extends BaseError {\n  constructor({ maxPriorityFeePerGas }: { maxPriorityFeePerGas: bigint }) {\n    super(\n      `\\`maxFeePerGas\\` cannot be less than the \\`maxPriorityFeePerGas\\` (${formatGwei(\n        maxPriorityFeePerGas,\n      )} gwei).`,\n      { name: 'MaxFeePerGasTooLowError' },\n    )\n  }\n}\n","import { BaseError } from './base.js'\n\nexport type FilterTypeNotSupportedErrorType = FilterTypeNotSupportedError & {\n  name: 'FilterTypeNotSupportedError'\n}\nexport class FilterTypeNotSupportedError extends BaseError {\n  constructor(type: string) {\n    super(`Filter type \"${type}\" is not supported.`, {\n      name: 'FilterTypeNotSupportedError',\n    })\n  }\n}\n","import { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { BaseError } from './base.js'\n\n/**\n * geth:    https://github.com/ethereum/go-ethereum/blob/master/core/error.go\n *          https://github.com/ethereum/go-ethereum/blob/master/core/types/transaction.go#L34-L41\n *\n * erigon:  https://github.com/ledgerwatch/erigon/blob/master/core/error.go\n *          https://github.com/ledgerwatch/erigon/blob/master/core/types/transaction.go#L41-L46\n *\n * anvil:   https://github.com/foundry-rs/foundry/blob/master/anvil/src/eth/error.rs#L108\n */\nexport type ExecutionRevertedErrorType = ExecutionRevertedError & {\n  code: 3\n  name: 'ExecutionRevertedError'\n}\nexport class ExecutionRevertedError extends BaseError {\n  static code = 3\n  static nodeMessage = /execution reverted/\n\n  constructor({\n    cause,\n    message,\n  }: { cause?: BaseError | undefined; message?: string | undefined } = {}) {\n    const reason = message\n      ?.replace('execution reverted: ', '')\n      ?.replace('execution reverted', '')\n    super(\n      `Execution reverted ${\n        reason ? `with reason: ${reason}` : 'for an unknown reason'\n      }.`,\n      {\n        cause,\n        name: 'ExecutionRevertedError',\n      },\n    )\n  }\n}\n\nexport type FeeCapTooHighErrorType = FeeCapTooHighError & {\n  name: 'FeeCapTooHighError'\n}\nexport class FeeCapTooHighError extends BaseError {\n  static nodeMessage =\n    /max fee per gas higher than 2\\^256-1|fee cap higher than 2\\^256-1/\n  constructor({\n    cause,\n    maxFeePerGas,\n  }: {\n    cause?: BaseError | undefined\n    maxFeePerGas?: bigint | undefined\n  } = {}) {\n    super(\n      `The fee cap (\\`maxFeePerGas\\`${\n        maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''\n      }) cannot be higher than the maximum allowed value (2^256-1).`,\n      {\n        cause,\n        name: 'FeeCapTooHighError',\n      },\n    )\n  }\n}\n\nexport type FeeCapTooLowErrorType = FeeCapTooLowError & {\n  name: 'FeeCapTooLowError'\n}\nexport class FeeCapTooLowError extends BaseError {\n  static nodeMessage =\n    /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/\n  constructor({\n    cause,\n    maxFeePerGas,\n  }: {\n    cause?: BaseError | undefined\n    maxFeePerGas?: bigint | undefined\n  } = {}) {\n    super(\n      `The fee cap (\\`maxFeePerGas\\`${\n        maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)}` : ''\n      } gwei) cannot be lower than the block base fee.`,\n      {\n        cause,\n        name: 'FeeCapTooLowError',\n      },\n    )\n  }\n}\n\nexport type NonceTooHighErrorType = NonceTooHighError & {\n  name: 'NonceTooHighError'\n}\nexport class NonceTooHighError extends BaseError {\n  static nodeMessage = /nonce too high/\n  constructor({\n    cause,\n    nonce,\n  }: { cause?: BaseError | undefined; nonce?: number | undefined } = {}) {\n    super(\n      `Nonce provided for the transaction ${\n        nonce ? `(${nonce}) ` : ''\n      }is higher than the next one expected.`,\n      { cause, name: 'NonceTooHighError' },\n    )\n  }\n}\n\nexport type NonceTooLowErrorType = NonceTooLowError & {\n  name: 'NonceTooLowError'\n}\nexport class NonceTooLowError extends BaseError {\n  static nodeMessage =\n    /nonce too low|transaction already imported|already known/\n  constructor({\n    cause,\n    nonce,\n  }: { cause?: BaseError | undefined; nonce?: number | undefined } = {}) {\n    super(\n      [\n        `Nonce provided for the transaction ${\n          nonce ? `(${nonce}) ` : ''\n        }is lower than the current nonce of the account.`,\n        'Try increasing the nonce or find the latest nonce with `getTransactionCount`.',\n      ].join('\\n'),\n      { cause, name: 'NonceTooLowError' },\n    )\n  }\n}\n\nexport type NonceMaxValueErrorType = NonceMaxValueError & {\n  name: 'NonceMaxValueError'\n}\nexport class NonceMaxValueError extends BaseError {\n  static nodeMessage = /nonce has max value/\n  constructor({\n    cause,\n    nonce,\n  }: { cause?: BaseError | undefined; nonce?: number | undefined } = {}) {\n    super(\n      `Nonce provided for the transaction ${\n        nonce ? `(${nonce}) ` : ''\n      }exceeds the maximum allowed nonce.`,\n      { cause, name: 'NonceMaxValueError' },\n    )\n  }\n}\n\nexport type InsufficientFundsErrorType = InsufficientFundsError & {\n  name: 'InsufficientFundsError'\n}\nexport class InsufficientFundsError extends BaseError {\n  static nodeMessage =\n    /insufficient funds|exceeds transaction sender account balance/\n  constructor({ cause }: { cause?: BaseError | undefined } = {}) {\n    super(\n      [\n        'The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.',\n      ].join('\\n'),\n      {\n        cause,\n        metaMessages: [\n          'This error could arise when the account does not have enough funds to:',\n          ' - pay for the total gas fee,',\n          ' - pay for the value to send.',\n          ' ',\n          'The cost of the transaction is calculated as `gas * gas fee + value`, where:',\n          ' - `gas` is the amount of gas needed for transaction to execute,',\n          ' - `gas fee` is the gas fee,',\n          ' - `value` is the amount of ether to send to the recipient.',\n        ],\n        name: 'InsufficientFundsError',\n      },\n    )\n  }\n}\n\nexport type IntrinsicGasTooHighErrorType = IntrinsicGasTooHighError & {\n  name: 'IntrinsicGasTooHighError'\n}\nexport class IntrinsicGasTooHighError extends BaseError {\n  static nodeMessage = /intrinsic gas too high|gas limit reached/\n  constructor({\n    cause,\n    gas,\n  }: { cause?: BaseError | undefined; gas?: bigint | undefined } = {}) {\n    super(\n      `The amount of gas ${\n        gas ? `(${gas}) ` : ''\n      }provided for the transaction exceeds the limit allowed for the block.`,\n      {\n        cause,\n        name: 'IntrinsicGasTooHighError',\n      },\n    )\n  }\n}\n\nexport type IntrinsicGasTooLowErrorType = IntrinsicGasTooLowError & {\n  name: 'IntrinsicGasTooLowError'\n}\nexport class IntrinsicGasTooLowError extends BaseError {\n  static nodeMessage = /intrinsic gas too low/\n  constructor({\n    cause,\n    gas,\n  }: { cause?: BaseError | undefined; gas?: bigint | undefined } = {}) {\n    super(\n      `The amount of gas ${\n        gas ? `(${gas}) ` : ''\n      }provided for the transaction is too low.`,\n      {\n        cause,\n        name: 'IntrinsicGasTooLowError',\n      },\n    )\n  }\n}\n\nexport type TransactionTypeNotSupportedErrorType =\n  TransactionTypeNotSupportedError & {\n    name: 'TransactionTypeNotSupportedError'\n  }\nexport class TransactionTypeNotSupportedError extends BaseError {\n  static nodeMessage = /transaction type not valid/\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super('The transaction type is not supported for this chain.', {\n      cause,\n      name: 'TransactionTypeNotSupportedError',\n    })\n  }\n}\n\nexport type TipAboveFeeCapErrorType = TipAboveFeeCapError & {\n  name: 'TipAboveFeeCapError'\n}\nexport class TipAboveFeeCapError extends BaseError {\n  static nodeMessage =\n    /max priority fee per gas higher than max fee per gas|tip higher than fee cap/\n  constructor({\n    cause,\n    maxPriorityFeePerGas,\n    maxFeePerGas,\n  }: {\n    cause?: BaseError | undefined\n    maxPriorityFeePerGas?: bigint | undefined\n    maxFeePerGas?: bigint | undefined\n  } = {}) {\n    super(\n      [\n        `The provided tip (\\`maxPriorityFeePerGas\\`${\n          maxPriorityFeePerGas\n            ? ` = ${formatGwei(maxPriorityFeePerGas)} gwei`\n            : ''\n        }) cannot be higher than the fee cap (\\`maxFeePerGas\\`${\n          maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''\n        }).`,\n      ].join('\\n'),\n      {\n        cause,\n        name: 'TipAboveFeeCapError',\n      },\n    )\n  }\n}\n\nexport type UnknownNodeErrorType = UnknownNodeError & {\n  name: 'UnknownNodeError'\n}\nexport class UnknownNodeError extends BaseError {\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super(`An error occurred while executing: ${cause?.shortMessage}`, {\n      cause,\n      name: 'UnknownNodeError',\n    })\n  }\n}\n","import { stringify } from '../utils/stringify.js'\n\nimport { BaseError } from './base.js'\nimport { getUrl } from './utils.js'\n\nexport type HttpRequestErrorType = HttpRequestError & {\n  name: 'HttpRequestError'\n}\nexport class HttpRequestError extends BaseError {\n  body?: { [x: string]: unknown } | { [y: string]: unknown }[] | undefined\n  headers?: Headers | undefined\n  status?: number | undefined\n  url: string\n\n  constructor({\n    body,\n    cause,\n    details,\n    headers,\n    status,\n    url,\n  }: {\n    body?: { [x: string]: unknown } | { [y: string]: unknown }[] | undefined\n    cause?: Error | undefined\n    details?: string | undefined\n    headers?: Headers | undefined\n    status?: number | undefined\n    url: string\n  }) {\n    super('HTTP request failed.', {\n      cause,\n      details,\n      metaMessages: [\n        status && `Status: ${status}`,\n        `URL: ${getUrl(url)}`,\n        body && `Request body: ${stringify(body)}`,\n      ].filter(Boolean) as string[],\n      name: 'HttpRequestError',\n    })\n    this.body = body\n    this.headers = headers\n    this.status = status\n    this.url = url\n  }\n}\n\nexport type WebSocketRequestErrorType = WebSocketRequestError & {\n  name: 'WebSocketRequestError'\n}\nexport class WebSocketRequestError extends BaseError {\n  constructor({\n    body,\n    cause,\n    details,\n    url,\n  }: {\n    body?: { [key: string]: unknown } | undefined\n    cause?: Error | undefined\n    details?: string | undefined\n    url: string\n  }) {\n    super('WebSocket request failed.', {\n      cause,\n      details,\n      metaMessages: [\n        `URL: ${getUrl(url)}`,\n        body && `Request body: ${stringify(body)}`,\n      ].filter(Boolean) as string[],\n      name: 'WebSocketRequestError',\n    })\n  }\n}\n\nexport type RpcRequestErrorType = RpcRequestError & {\n  name: 'RpcRequestError'\n}\nexport class RpcRequestError extends BaseError {\n  code: number\n  data?: unknown\n\n  constructor({\n    body,\n    error,\n    url,\n  }: {\n    body: { [x: string]: unknown } | { [y: string]: unknown }[]\n    error: { code: number; data?: unknown; message: string }\n    url: string\n  }) {\n    super('RPC Request failed.', {\n      cause: error as any,\n      details: error.message,\n      metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`],\n      name: 'RpcRequestError',\n    })\n    this.code = error.code\n    this.data = error.data\n  }\n}\n\nexport type SocketClosedErrorType = SocketClosedError & {\n  name: 'SocketClosedError'\n}\nexport class SocketClosedError extends BaseError {\n  constructor({\n    url,\n  }: {\n    url?: string | undefined\n  } = {}) {\n    super('The socket has been closed.', {\n      metaMessages: [url && `URL: ${getUrl(url)}`].filter(Boolean) as string[],\n      name: 'SocketClosedError',\n    })\n  }\n}\n\nexport type TimeoutErrorType = TimeoutError & {\n  name: 'TimeoutError'\n}\nexport class TimeoutError extends BaseError {\n  constructor({\n    body,\n    url,\n  }: {\n    body: { [x: string]: unknown } | { [y: string]: unknown }[]\n    url: string\n  }) {\n    super('The request took too long to respond.', {\n      details: 'The request timed out.',\n      metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`],\n      name: 'TimeoutError',\n    })\n  }\n}\n","import type { Prettify } from '../types/utils.js'\nimport { BaseError } from './base.js'\nimport { RpcRequestError } from './request.js'\n\nconst unknownErrorCode = -1\n\nexport type RpcErrorCode =\n  | -1\n  | -32700 // Parse error\n  | -32600 // Invalid request\n  | -32601 // Method not found\n  | -32602 // Invalid params\n  | -32603 // Internal error\n  | -32000 // Invalid input\n  | -32001 // Resource not found\n  | -32002 // Resource unavailable\n  | -32003 // Transaction rejected\n  | -32004 // Method not supported\n  | -32005 // Limit exceeded\n  | -32006 // JSON-RPC version not supported\n  | -32042 // Method not found\n\ntype RpcErrorOptions<code extends number = RpcErrorCode> = {\n  code?: code | (number & {}) | undefined\n  docsPath?: string | undefined\n  metaMessages?: string[] | undefined\n  name?: string | undefined\n  shortMessage: string\n}\n\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors per EIP-1474.\n *\n * - EIP https://eips.ethereum.org/EIPS/eip-1474\n */\nexport type RpcErrorType = RpcError & { name: 'RpcError' }\nexport class RpcError<code_ extends number = RpcErrorCode> extends BaseError {\n  code: code_ | (number & {})\n\n  constructor(\n    cause: Error,\n    {\n      code,\n      docsPath,\n      metaMessages,\n      name,\n      shortMessage,\n    }: RpcErrorOptions<code_>,\n  ) {\n    super(shortMessage, {\n      cause,\n      docsPath,\n      metaMessages:\n        metaMessages || (cause as { metaMessages?: string[] })?.metaMessages,\n      name: name || 'RpcError',\n    })\n    this.name = name || cause.name\n    this.code = (\n      cause instanceof RpcRequestError ? cause.code : (code ?? unknownErrorCode)\n    ) as code_\n  }\n}\n\nexport type ProviderRpcErrorCode =\n  | 4001 // User Rejected Request\n  | 4100 // Unauthorized\n  | 4200 // Unsupported Method\n  | 4900 // Disconnected\n  | 4901 // Chain Disconnected\n  | 4902 // Chain Not Recognized\n  | 5700 // Unsupported non-optional capability\n  | 5710 // Unsupported chain id\n  | 5720 // Duplicate ID\n  | 5730 // Unknown bundle id\n  | 5740 // Bundle too large\n  | 5750 // Atomic-ready wallet rejected upgrade\n  | 5760 // Atomicity not supported\n\n/**\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n *\n * - EIP https://eips.ethereum.org/EIPS/eip-1193\n */\nexport type ProviderRpcErrorType = ProviderRpcError & {\n  name: 'ProviderRpcError'\n}\nexport class ProviderRpcError<\n  T = undefined,\n> extends RpcError<ProviderRpcErrorCode> {\n  data?: T | undefined\n\n  constructor(\n    cause: Error,\n    options: Prettify<\n      RpcErrorOptions<ProviderRpcErrorCode> & {\n        data?: T | undefined\n      }\n    >,\n  ) {\n    super(cause, options)\n\n    this.data = options.data\n  }\n}\n\n/**\n * Subclass for a \"Parse error\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type ParseRpcErrorType = ParseRpcError & {\n  code: -32700\n  name: 'ParseRpcError'\n}\nexport class ParseRpcError extends RpcError {\n  static code = -32700 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ParseRpcError.code,\n      name: 'ParseRpcError',\n      shortMessage:\n        'Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Invalid request\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type InvalidRequestRpcErrorType = InvalidRequestRpcError & {\n  code: -32600\n  name: 'InvalidRequestRpcError'\n}\nexport class InvalidRequestRpcError extends RpcError {\n  static code = -32600 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: InvalidRequestRpcError.code,\n      name: 'InvalidRequestRpcError',\n      shortMessage: 'JSON is not a valid request object.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Method not found\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type MethodNotFoundRpcErrorType = MethodNotFoundRpcError & {\n  code: -32601\n  name: 'MethodNotFoundRpcError'\n}\nexport class MethodNotFoundRpcError extends RpcError {\n  static code = -32601 as const\n\n  constructor(cause: Error, { method }: { method?: string } = {}) {\n    super(cause, {\n      code: MethodNotFoundRpcError.code,\n      name: 'MethodNotFoundRpcError',\n      shortMessage: `The method${method ? ` \"${method}\"` : ''} does not exist / is not available.`,\n    })\n  }\n}\n\n/**\n * Subclass for an \"Invalid params\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type InvalidParamsRpcErrorType = InvalidParamsRpcError & {\n  code: -32602\n  name: 'InvalidParamsRpcError'\n}\nexport class InvalidParamsRpcError extends RpcError {\n  static code = -32602 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: InvalidParamsRpcError.code,\n      name: 'InvalidParamsRpcError',\n      shortMessage: [\n        'Invalid parameters were provided to the RPC method.',\n        'Double check you have provided the correct parameters.',\n      ].join('\\n'),\n    })\n  }\n}\n\n/**\n * Subclass for an \"Internal error\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type InternalRpcErrorType = InternalRpcError & {\n  code: -32603\n  name: 'InternalRpcError'\n}\nexport class InternalRpcError extends RpcError {\n  static code = -32603 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: InternalRpcError.code,\n      name: 'InternalRpcError',\n      shortMessage: 'An internal error was received.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Invalid input\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type InvalidInputRpcErrorType = InvalidInputRpcError & {\n  code: -32000\n  name: 'InvalidInputRpcError'\n}\nexport class InvalidInputRpcError extends RpcError {\n  static code = -32000 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: InvalidInputRpcError.code,\n      name: 'InvalidInputRpcError',\n      shortMessage: [\n        'Missing or invalid parameters.',\n        'Double check you have provided the correct parameters.',\n      ].join('\\n'),\n    })\n  }\n}\n\n/**\n * Subclass for a \"Resource not found\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type ResourceNotFoundRpcErrorType = ResourceNotFoundRpcError & {\n  code: -32001\n  name: 'ResourceNotFoundRpcError'\n}\nexport class ResourceNotFoundRpcError extends RpcError {\n  override name = 'ResourceNotFoundRpcError'\n  static code = -32001 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ResourceNotFoundRpcError.code,\n      name: 'ResourceNotFoundRpcError',\n      shortMessage: 'Requested resource not found.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Resource unavailable\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type ResourceUnavailableRpcErrorType = ResourceUnavailableRpcError & {\n  code: -32002\n  name: 'ResourceUnavailableRpcError'\n}\nexport class ResourceUnavailableRpcError extends RpcError {\n  static code = -32002 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ResourceUnavailableRpcError.code,\n      name: 'ResourceUnavailableRpcError',\n      shortMessage: 'Requested resource not available.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Transaction rejected\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type TransactionRejectedRpcErrorType = TransactionRejectedRpcError & {\n  code: -32003\n  name: 'TransactionRejectedRpcError'\n}\nexport class TransactionRejectedRpcError extends RpcError {\n  static code = -32003 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: TransactionRejectedRpcError.code,\n      name: 'TransactionRejectedRpcError',\n      shortMessage: 'Transaction creation failed.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Method not supported\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type MethodNotSupportedRpcErrorType = MethodNotSupportedRpcError & {\n  code: -32004\n  name: 'MethodNotSupportedRpcError'\n}\nexport class MethodNotSupportedRpcError extends RpcError {\n  static code = -32004 as const\n\n  constructor(cause: Error, { method }: { method?: string } = {}) {\n    super(cause, {\n      code: MethodNotSupportedRpcError.code,\n      name: 'MethodNotSupportedRpcError',\n      shortMessage: `Method${method ? ` \"${method}\"` : ''} is not supported.`,\n    })\n  }\n}\n\n/**\n * Subclass for a \"Limit exceeded\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type LimitExceededRpcErrorType = LimitExceededRpcError & {\n  code: -32005\n  name: 'LimitExceededRpcError'\n}\nexport class LimitExceededRpcError extends RpcError {\n  static code = -32005 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: LimitExceededRpcError.code,\n      name: 'LimitExceededRpcError',\n      shortMessage: 'Request exceeds defined limit.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"JSON-RPC version not supported\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type JsonRpcVersionUnsupportedErrorType =\n  JsonRpcVersionUnsupportedError & {\n    code: -32006\n    name: 'JsonRpcVersionUnsupportedError'\n  }\nexport class JsonRpcVersionUnsupportedError extends RpcError {\n  static code = -32006 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: JsonRpcVersionUnsupportedError.code,\n      name: 'JsonRpcVersionUnsupportedError',\n      shortMessage: 'Version of JSON-RPC protocol is not supported.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"User Rejected Request\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type UserRejectedRequestErrorType = UserRejectedRequestError & {\n  code: 4001\n  name: 'UserRejectedRequestError'\n}\nexport class UserRejectedRequestError extends ProviderRpcError {\n  static code = 4001 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: UserRejectedRequestError.code,\n      name: 'UserRejectedRequestError',\n      shortMessage: 'User rejected the request.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Unauthorized\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type UnauthorizedProviderErrorType = UnauthorizedProviderError & {\n  code: 4100\n  name: 'UnauthorizedProviderError'\n}\nexport class UnauthorizedProviderError extends ProviderRpcError {\n  static code = 4100 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: UnauthorizedProviderError.code,\n      name: 'UnauthorizedProviderError',\n      shortMessage:\n        'The requested method and/or account has not been authorized by the user.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Unsupported Method\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type UnsupportedProviderMethodErrorType =\n  UnsupportedProviderMethodError & {\n    code: 4200\n    name: 'UnsupportedProviderMethodError'\n  }\nexport class UnsupportedProviderMethodError extends ProviderRpcError {\n  static code = 4200 as const\n\n  constructor(cause: Error, { method }: { method?: string } = {}) {\n    super(cause, {\n      code: UnsupportedProviderMethodError.code,\n      name: 'UnsupportedProviderMethodError',\n      shortMessage: `The Provider does not support the requested method${method ? ` \" ${method}\"` : ''}.`,\n    })\n  }\n}\n\n/**\n * Subclass for an \"Disconnected\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type ProviderDisconnectedErrorType = ProviderDisconnectedError & {\n  code: 4900\n  name: 'ProviderDisconnectedError'\n}\nexport class ProviderDisconnectedError extends ProviderRpcError {\n  static code = 4900 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ProviderDisconnectedError.code,\n      name: 'ProviderDisconnectedError',\n      shortMessage: 'The Provider is disconnected from all chains.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Chain Disconnected\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type ChainDisconnectedErrorType = ChainDisconnectedError & {\n  code: 4901\n  name: 'ChainDisconnectedError'\n}\nexport class ChainDisconnectedError extends ProviderRpcError {\n  static code = 4901 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ChainDisconnectedError.code,\n      name: 'ChainDisconnectedError',\n      shortMessage: 'The Provider is not connected to the requested chain.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Switch Chain\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type SwitchChainErrorType = SwitchChainError & {\n  code: 4902\n  name: 'SwitchChainError'\n}\nexport class SwitchChainError extends ProviderRpcError {\n  static code = 4902 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: SwitchChainError.code,\n      name: 'SwitchChainError',\n      shortMessage: 'An error occurred when attempting to switch chain.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Unsupported non-optional capability\" EIP-5792 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-5792#error-codes\n */\nexport type UnsupportedNonOptionalCapabilityErrorType =\n  UnsupportedNonOptionalCapabilityError & {\n    code: 5700\n    name: 'UnsupportedNonOptionalCapabilityError'\n  }\nexport class UnsupportedNonOptionalCapabilityError extends ProviderRpcError {\n  static code = 5700 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: UnsupportedNonOptionalCapabilityError.code,\n      name: 'UnsupportedNonOptionalCapabilityError',\n      shortMessage:\n        'This Wallet does not support a capability that was not marked as optional.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Unsupported chain id\" EIP-5792 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-5792#error-codes\n */\nexport type UnsupportedChainIdErrorType = UnsupportedChainIdError & {\n  code: 5710\n  name: 'UnsupportedChainIdError'\n}\nexport class UnsupportedChainIdError extends ProviderRpcError {\n  static code = 5710 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: UnsupportedChainIdError.code,\n      name: 'UnsupportedChainIdError',\n      shortMessage: 'This Wallet does not support the requested chain ID.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Duplicate ID\" EIP-5792 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-5792#error-codes\n */\nexport type DuplicateIdErrorType = DuplicateIdError & {\n  code: 5720\n  name: 'DuplicateIdError'\n}\nexport class DuplicateIdError extends ProviderRpcError {\n  static code = 5720 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: DuplicateIdError.code,\n      name: 'DuplicateIdError',\n      shortMessage: 'There is already a bundle submitted with this ID.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Unknown bundle ID\" EIP-5792 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-5792#error-codes\n */\nexport type UnknownBundleIdErrorType = UnknownBundleIdError & {\n  code: 5730\n  name: 'UnknownBundleIdError'\n}\nexport class UnknownBundleIdError extends ProviderRpcError {\n  static code = 5730 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: UnknownBundleIdError.code,\n      name: 'UnknownBundleIdError',\n      shortMessage: 'This bundle id is unknown / has not been submitted',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Bundle too large\" EIP-5792 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-5792#error-codes\n */\nexport type BundleTooLargeErrorType = BundleTooLargeError & {\n  code: 5740\n  name: 'BundleTooLargeError'\n}\nexport class BundleTooLargeError extends ProviderRpcError {\n  static code = 5740 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: BundleTooLargeError.code,\n      name: 'BundleTooLargeError',\n      shortMessage: 'The call bundle is too large for the Wallet to process.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Atomic-ready wallet rejected upgrade\" EIP-5792 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-5792#error-codes\n */\nexport type AtomicReadyWalletRejectedUpgradeErrorType =\n  AtomicReadyWalletRejectedUpgradeError & {\n    code: 5750\n    name: 'AtomicReadyWalletRejectedUpgradeError'\n  }\nexport class AtomicReadyWalletRejectedUpgradeError extends ProviderRpcError {\n  static code = 5750 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: AtomicReadyWalletRejectedUpgradeError.code,\n      name: 'AtomicReadyWalletRejectedUpgradeError',\n      shortMessage:\n        'The Wallet can support atomicity after an upgrade, but the user rejected the upgrade.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Atomicity not supported\" EIP-5792 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-5792#error-codes\n */\nexport type AtomicityNotSupportedErrorType = AtomicityNotSupportedError & {\n  code: 5760\n  name: 'AtomicityNotSupportedError'\n}\nexport class AtomicityNotSupportedError extends ProviderRpcError {\n  static code = 5760 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: AtomicityNotSupportedError.code,\n      name: 'AtomicityNotSupportedError',\n      shortMessage:\n        'The wallet does not support atomic execution but the request requires it.',\n    })\n  }\n}\n\n/**\n * Subclass for an unknown RPC error.\n */\nexport type UnknownRpcErrorType = UnknownRpcError & {\n  name: 'UnknownRpcError'\n}\nexport class UnknownRpcError extends RpcError {\n  constructor(cause: Error) {\n    super(cause, {\n      name: 'UnknownRpcError',\n      shortMessage: 'An unknown RPC error occurred.',\n    })\n  }\n}\n","import type { StateMapping, StateOverride } from '../types/stateOverride.js'\nimport { BaseError } from './base.js'\n\nexport type AccountStateConflictErrorType = AccountStateConflictError & {\n  name: 'AccountStateConflictError'\n}\n\nexport class AccountStateConflictError extends BaseError {\n  constructor({ address }: { address: string }) {\n    super(`State for account \"${address}\" is set multiple times.`, {\n      name: 'AccountStateConflictError',\n    })\n  }\n}\n\nexport type StateAssignmentConflictErrorType = StateAssignmentConflictError & {\n  name: 'StateAssignmentConflictError'\n}\n\nexport class StateAssignmentConflictError extends BaseError {\n  constructor() {\n    super('state and stateDiff are set on the same account.', {\n      name: 'StateAssignmentConflictError',\n    })\n  }\n}\n\n/** @internal */\nexport function prettyStateMapping(stateMapping: StateMapping) {\n  return stateMapping.reduce((pretty, { slot, value }) => {\n    return `${pretty}        ${slot}: ${value}\\n`\n  }, '')\n}\n\nexport function prettyStateOverride(stateOverride: StateOverride) {\n  return stateOverride\n    .reduce((pretty, { address, ...state }) => {\n      let val = `${pretty}    ${address}:\\n`\n      if (state.nonce) val += `      nonce: ${state.nonce}\\n`\n      if (state.balance) val += `      balance: ${state.balance}\\n`\n      if (state.code) val += `      code: ${state.code}\\n`\n      if (state.state) {\n        val += '      state:\\n'\n        val += prettyStateMapping(state.state)\n      }\n      if (state.stateDiff) {\n        val += '      stateDiff:\\n'\n        val += prettyStateMapping(state.stateDiff)\n      }\n      return val\n    }, '  State Override:\\n')\n    .slice(0, -1)\n}\n","import type { Account } from '../accounts/types.js'\nimport type { SendTransactionParameters } from '../actions/wallet/sendTransaction.js'\nimport type { BlockTag } from '../types/block.js'\nimport type { Chain } from '../types/chain.js'\nimport type { Hash, Hex } from '../types/misc.js'\nimport type { TransactionType } from '../types/transaction.js'\nimport { formatEther } from '../utils/unit/formatEther.js'\nimport { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { BaseError } from './base.js'\n\nexport function prettyPrint(\n  args: Record<string, bigint | number | string | undefined | false | unknown>,\n) {\n  const entries = Object.entries(args)\n    .map(([key, value]) => {\n      if (value === undefined || value === false) return null\n      return [key, value]\n    })\n    .filter(Boolean) as [string, string][]\n  const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0)\n  return entries\n    .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n    .join('\\n')\n}\n\nexport type FeeConflictErrorType = FeeConflictError & {\n  name: 'FeeConflictError'\n}\nexport class FeeConflictError extends BaseError {\n  constructor() {\n    super(\n      [\n        'Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.',\n        'Use `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.',\n      ].join('\\n'),\n      { name: 'FeeConflictError' },\n    )\n  }\n}\n\nexport type InvalidLegacyVErrorType = InvalidLegacyVError & {\n  name: 'InvalidLegacyVError'\n}\nexport class InvalidLegacyVError extends BaseError {\n  constructor({ v }: { v: bigint }) {\n    super(`Invalid \\`v\\` value \"${v}\". Expected 27 or 28.`, {\n      name: 'InvalidLegacyVError',\n    })\n  }\n}\n\nexport type InvalidSerializableTransactionErrorType =\n  InvalidSerializableTransactionError & {\n    name: 'InvalidSerializableTransactionError'\n  }\nexport class InvalidSerializableTransactionError extends BaseError {\n  constructor({ transaction }: { transaction: Record<string, unknown> }) {\n    super('Cannot infer a transaction type from provided transaction.', {\n      metaMessages: [\n        'Provided Transaction:',\n        '{',\n        prettyPrint(transaction),\n        '}',\n        '',\n        'To infer the type, either provide:',\n        '- a `type` to the Transaction, or',\n        '- an EIP-1559 Transaction with `maxFeePerGas`, or',\n        '- an EIP-2930 Transaction with `gasPrice` & `accessList`, or',\n        '- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or',\n        '- an EIP-7702 Transaction with `authorizationList`, or',\n        '- a Legacy Transaction with `gasPrice`',\n      ],\n      name: 'InvalidSerializableTransactionError',\n    })\n  }\n}\n\nexport type InvalidSerializedTransactionTypeErrorType =\n  InvalidSerializedTransactionTypeError & {\n    name: 'InvalidSerializedTransactionTypeError'\n  }\nexport class InvalidSerializedTransactionTypeError extends BaseError {\n  serializedType: Hex\n\n  constructor({ serializedType }: { serializedType: Hex }) {\n    super(`Serialized transaction type \"${serializedType}\" is invalid.`, {\n      name: 'InvalidSerializedTransactionType',\n    })\n\n    this.serializedType = serializedType\n  }\n}\n\nexport type InvalidSerializedTransactionErrorType =\n  InvalidSerializedTransactionError & {\n    name: 'InvalidSerializedTransactionError'\n  }\nexport class InvalidSerializedTransactionError extends BaseError {\n  serializedTransaction: Hex\n  type: TransactionType\n\n  constructor({\n    attributes,\n    serializedTransaction,\n    type,\n  }: {\n    attributes: Record<string, unknown>\n    serializedTransaction: Hex\n    type: TransactionType\n  }) {\n    const missing = Object.entries(attributes)\n      .map(([key, value]) => (typeof value === 'undefined' ? key : undefined))\n      .filter(Boolean)\n    super(`Invalid serialized transaction of type \"${type}\" was provided.`, {\n      metaMessages: [\n        `Serialized Transaction: \"${serializedTransaction}\"`,\n        missing.length > 0 ? `Missing Attributes: ${missing.join(', ')}` : '',\n      ].filter(Boolean),\n      name: 'InvalidSerializedTransactionError',\n    })\n\n    this.serializedTransaction = serializedTransaction\n    this.type = type\n  }\n}\n\nexport type InvalidStorageKeySizeErrorType = InvalidStorageKeySizeError & {\n  name: 'InvalidStorageKeySizeError'\n}\nexport class InvalidStorageKeySizeError extends BaseError {\n  constructor({ storageKey }: { storageKey: Hex }) {\n    super(\n      `Size for storage key \"${storageKey}\" is invalid. Expected 32 bytes. Got ${Math.floor(\n        (storageKey.length - 2) / 2,\n      )} bytes.`,\n      { name: 'InvalidStorageKeySizeError' },\n    )\n  }\n}\n\nexport type TransactionExecutionErrorType = TransactionExecutionError & {\n  name: 'TransactionExecutionError'\n}\nexport class TransactionExecutionError extends BaseError {\n  override cause: BaseError\n\n  constructor(\n    cause: BaseError,\n    {\n      account,\n      docsPath,\n      chain,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    }: Omit<SendTransactionParameters, 'account' | 'chain'> & {\n      account: Account | null\n      chain?: Chain | undefined\n      docsPath?: string | undefined\n    },\n  ) {\n    const prettyArgs = prettyPrint({\n      chain: chain && `${chain?.name} (id: ${chain?.id})`,\n      from: account?.address,\n      to,\n      value:\n        typeof value !== 'undefined' &&\n        `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n      data,\n      gas,\n      gasPrice:\n        typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n      maxFeePerGas:\n        typeof maxFeePerGas !== 'undefined' &&\n        `${formatGwei(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas:\n        typeof maxPriorityFeePerGas !== 'undefined' &&\n        `${formatGwei(maxPriorityFeePerGas)} gwei`,\n      nonce,\n    })\n\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [\n        ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n        'Request Arguments:',\n        prettyArgs,\n      ].filter(Boolean) as string[],\n      name: 'TransactionExecutionError',\n    })\n    this.cause = cause\n  }\n}\n\nexport type TransactionNotFoundErrorType = TransactionNotFoundError & {\n  name: 'TransactionNotFoundError'\n}\nexport class TransactionNotFoundError extends BaseError {\n  constructor({\n    blockHash,\n    blockNumber,\n    blockTag,\n    hash,\n    index,\n  }: {\n    blockHash?: Hash | undefined\n    blockNumber?: bigint | undefined\n    blockTag?: BlockTag | undefined\n    hash?: Hash | undefined\n    index?: number | undefined\n  }) {\n    let identifier = 'Transaction'\n    if (blockTag && index !== undefined)\n      identifier = `Transaction at block time \"${blockTag}\" at index \"${index}\"`\n    if (blockHash && index !== undefined)\n      identifier = `Transaction at block hash \"${blockHash}\" at index \"${index}\"`\n    if (blockNumber && index !== undefined)\n      identifier = `Transaction at block number \"${blockNumber}\" at index \"${index}\"`\n    if (hash) identifier = `Transaction with hash \"${hash}\"`\n    super(`${identifier} could not be found.`, {\n      name: 'TransactionNotFoundError',\n    })\n  }\n}\n\nexport type TransactionReceiptNotFoundErrorType =\n  TransactionReceiptNotFoundError & {\n    name: 'TransactionReceiptNotFoundError'\n  }\nexport class TransactionReceiptNotFoundError extends BaseError {\n  constructor({ hash }: { hash: Hash }) {\n    super(\n      `Transaction receipt with hash \"${hash}\" could not be found. The Transaction may not be processed on a block yet.`,\n      {\n        name: 'TransactionReceiptNotFoundError',\n      },\n    )\n  }\n}\n\nexport type WaitForTransactionReceiptTimeoutErrorType =\n  WaitForTransactionReceiptTimeoutError & {\n    name: 'WaitForTransactionReceiptTimeoutError'\n  }\nexport class WaitForTransactionReceiptTimeoutError extends BaseError {\n  constructor({ hash }: { hash: Hash }) {\n    super(\n      `Timed out while waiting for transaction with hash \"${hash}\" to be confirmed.`,\n      { name: 'WaitForTransactionReceiptTimeoutError' },\n    )\n  }\n}\n","import { BaseError } from './base.js'\n\nexport type UrlRequiredErrorType = UrlRequiredError & {\n  name: 'UrlRequiredError'\n}\nexport class UrlRequiredError extends BaseError {\n  constructor() {\n    super(\n      'No URL was provided to the Transport. Please provide a valid RPC URL to the Transport.',\n      {\n        docsPath: '/docs/clients/intro',\n        name: 'UrlRequiredError',\n      },\n    )\n  }\n}\n","import type { TypedData } from 'abitype'\n\nimport { stringify } from '../utils/stringify.js'\nimport { BaseError } from './base.js'\n\nexport type InvalidDomainErrorType = InvalidDomainError & {\n  name: 'InvalidDomainError'\n}\nexport class InvalidDomainError extends BaseError {\n  constructor({ domain }: { domain: unknown }) {\n    super(`Invalid domain \"${stringify(domain)}\".`, {\n      metaMessages: ['Must be a valid EIP-712 domain.'],\n    })\n  }\n}\n\nexport type InvalidPrimaryTypeErrorType = InvalidPrimaryTypeError & {\n  name: 'InvalidPrimaryTypeError'\n}\nexport class InvalidPrimaryTypeError extends BaseError {\n  constructor({\n    primaryType,\n    types,\n  }: { primaryType: string; types: TypedData | Record<string, unknown> }) {\n    super(\n      `Invalid primary type \\`${primaryType}\\` must be one of \\`${JSON.stringify(Object.keys(types))}\\`.`,\n      {\n        docsPath: '/api/glossary/Errors#typeddatainvalidprimarytypeerror',\n        metaMessages: ['Check that the primary type is a key in `types`.'],\n      },\n    )\n  }\n}\n\nexport type InvalidStructTypeErrorType = InvalidStructTypeError & {\n  name: 'InvalidStructTypeError'\n}\nexport class InvalidStructTypeError extends BaseError {\n  constructor({ type }: { type: string }) {\n    super(`Struct type \"${type}\" is invalid.`, {\n      metaMessages: ['Struct type must not be a Solidity type.'],\n      name: 'InvalidStructTypeError',\n    })\n  }\n}\n","import { BaseError } from './base.js'\n\nexport type InvalidDecimalNumberErrorType = InvalidDecimalNumberError & {\n  name: 'InvalidDecimalNumberError'\n}\nexport class InvalidDecimalNumberError extends BaseError {\n  constructor({ value }: { value: string }) {\n    super(`Number \\`${value}\\` is not a valid decimal number.`, {\n      name: 'InvalidDecimalNumberError',\n    })\n  }\n}\n","import type { Address } from 'abitype'\n\nexport type ErrorType<name extends string = 'Error'> = Error & { name: name }\n\nexport const getContractAddress = (address: Address) => address\nexport const getUrl = (url: string) => url\n","export const version = '2.29.2'\n","// biome-ignore lint/performance/noBarrelFile: entrypoint module\nexport {\n  type Abi,\n  type AbiFunction,\n  type AbiParameter,\n  type AbiEvent,\n  type AbiStateMutability,\n  type AbiParameterKind,\n  type AbiParameterToPrimitiveType,\n  type Address,\n  type Narrow,\n  type ParseAbi,\n  type ParseAbiItem,\n  type ParseAbiParameter,\n  type ParseAbiParameters,\n  type TypedData,\n  type TypedDataDomain,\n  type TypedDataParameter,\n  CircularReferenceError,\n  InvalidAbiParameterError,\n  InvalidAbiParametersError,\n  InvalidAbiItemError,\n  InvalidAbiTypeParameterError,\n  InvalidFunctionModifierError,\n  InvalidModifierError,\n  InvalidParameterError,\n  InvalidParenthesisError,\n  InvalidSignatureError,\n  InvalidStructSignatureError,\n  SolidityProtectedKeywordError,\n  UnknownTypeError,\n  UnknownSignatureError,\n  parseAbi,\n  parseAbiItem,\n  parseAbiParameter,\n  parseAbiParameters,\n} from 'abitype'\nexport type {\n  BlockOverrides,\n  Rpc as RpcBlockOverrides,\n} from 'ox/BlockOverrides'\n\nexport {\n  getContract,\n  type GetContractErrorType,\n  type GetContractParameters,\n  type GetContractReturnType,\n} from './actions/getContract.js'\nexport type {\n  GetContractEventsErrorType,\n  GetContractEventsParameters,\n  GetContractEventsReturnType,\n} from './actions/public/getContractEvents.js'\nexport type {\n  GetEip712DomainErrorType,\n  GetEip712DomainParameters,\n  GetEip712DomainReturnType,\n} from './actions/public/getEip712Domain.js'\nexport type {\n  AddChainErrorType,\n  AddChainParameters,\n} from './actions/wallet/addChain.js'\nexport type {\n  CallErrorType,\n  CallParameters,\n  CallReturnType,\n} from './actions/public/call.js'\nexport type {\n  CreateAccessListParameters,\n  CreateAccessListReturnType,\n  CreateAccessListErrorType,\n} from './actions/public/createAccessList.js'\nexport type {\n  CreateBlockFilterErrorType,\n  CreateBlockFilterReturnType,\n} from './actions/public/createBlockFilter.js'\nexport type {\n  CreateContractEventFilterErrorType,\n  CreateContractEventFilterParameters,\n  CreateContractEventFilterReturnType,\n} from './actions/public/createContractEventFilter.js'\nexport type {\n  CreateEventFilterErrorType,\n  CreateEventFilterParameters,\n  CreateEventFilterReturnType,\n} from './actions/public/createEventFilter.js'\nexport type {\n  CreatePendingTransactionFilterErrorType,\n  CreatePendingTransactionFilterReturnType,\n} from './actions/public/createPendingTransactionFilter.js'\nexport type {\n  DeployContractErrorType,\n  DeployContractParameters,\n  DeployContractReturnType,\n} from './actions/wallet/deployContract.js'\nexport type {\n  DropTransactionErrorType,\n  DropTransactionParameters,\n} from './actions/test/dropTransaction.js'\nexport type {\n  DumpStateErrorType,\n  DumpStateReturnType,\n} from './actions/test/dumpState.js'\nexport type {\n  GetAutomineErrorType,\n  GetAutomineReturnType,\n} from './actions/test/getAutomine.js'\nexport type {\n  EstimateContractGasErrorType,\n  EstimateContractGasParameters,\n  EstimateContractGasReturnType,\n} from './actions/public/estimateContractGas.js'\nexport type {\n  EstimateGasErrorType,\n  EstimateGasParameters,\n  EstimateGasReturnType,\n} from './actions/public/estimateGas.js'\nexport type {\n  EstimateFeesPerGasErrorType,\n  EstimateFeesPerGasParameters,\n  EstimateFeesPerGasReturnType,\n} from './actions/public/estimateFeesPerGas.js'\nexport type {\n  EstimateMaxPriorityFeePerGasErrorType,\n  EstimateMaxPriorityFeePerGasParameters,\n  EstimateMaxPriorityFeePerGasReturnType,\n} from './actions/public/estimateMaxPriorityFeePerGas.js'\nexport type {\n  GetAddressesErrorType,\n  GetAddressesReturnType,\n} from './actions/wallet/getAddresses.js'\nexport type {\n  GetBalanceErrorType,\n  GetBalanceParameters,\n  GetBalanceReturnType,\n} from './actions/public/getBalance.js'\nexport type {\n  GetBlobBaseFeeErrorType,\n  GetBlobBaseFeeReturnType,\n} from './actions/public/getBlobBaseFee.js'\nexport type {\n  GetBlockNumberErrorType,\n  GetBlockNumberParameters,\n  GetBlockNumberReturnType,\n} from './actions/public/getBlockNumber.js'\nexport type {\n  GetBlockErrorType,\n  GetBlockParameters,\n  GetBlockReturnType,\n} from './actions/public/getBlock.js'\nexport type {\n  GetBlockTransactionCountErrorType,\n  GetBlockTransactionCountParameters,\n  GetBlockTransactionCountReturnType,\n} from './actions/public/getBlockTransactionCount.js'\nexport type {\n  /** @deprecated Use `GetCodeErrorType` instead */\n  GetCodeErrorType as GetBytecodeErrorType,\n  /** @deprecated Use `GetCodeParameters` instead */\n  GetCodeParameters as GetBytecodeParameters,\n  /** @deprecated Use `GetCodeReturnType` instead  */\n  GetCodeReturnType as GetBytecodeReturnType,\n  GetCodeErrorType,\n  GetCodeParameters,\n  GetCodeReturnType,\n} from './actions/public/getCode.js'\nexport type {\n  GetChainIdErrorType,\n  GetChainIdReturnType,\n} from './actions/public/getChainId.js'\nexport type {\n  GetEnsAddressErrorType,\n  GetEnsAddressParameters,\n  GetEnsAddressReturnType,\n} from './actions/ens/getEnsAddress.js'\nexport type {\n  GetEnsAvatarErrorType,\n  GetEnsAvatarParameters,\n  GetEnsAvatarReturnType,\n} from './actions/ens/getEnsAvatar.js'\nexport type {\n  GetEnsNameErrorType,\n  GetEnsNameParameters,\n  GetEnsNameReturnType,\n} from './actions/ens/getEnsName.js'\nexport type {\n  GetEnsResolverErrorType,\n  GetEnsResolverParameters,\n  GetEnsResolverReturnType,\n} from './actions/ens/getEnsResolver.js'\nexport type {\n  GetEnsTextErrorType,\n  GetEnsTextParameters,\n  GetEnsTextReturnType,\n} from './actions/ens/getEnsText.js'\nexport type {\n  GetFeeHistoryErrorType,\n  GetFeeHistoryParameters,\n  GetFeeHistoryReturnType,\n} from './actions/public/getFeeHistory.js'\nexport type {\n  GetFilterChangesErrorType,\n  GetFilterChangesParameters,\n  GetFilterChangesReturnType,\n} from './actions/public/getFilterChanges.js'\nexport type {\n  GetFilterLogsErrorType,\n  GetFilterLogsParameters,\n  GetFilterLogsReturnType,\n} from './actions/public/getFilterLogs.js'\nexport type {\n  GetGasPriceErrorType,\n  GetGasPriceReturnType,\n} from './actions/public/getGasPrice.js'\nexport type {\n  GetLogsErrorType,\n  GetLogsParameters,\n  GetLogsReturnType,\n} from './actions/public/getLogs.js'\nexport type {\n  GetPermissionsErrorType,\n  GetPermissionsReturnType,\n} from './actions/wallet/getPermissions.js'\nexport type {\n  GetProofErrorType,\n  GetProofParameters,\n  GetProofReturnType,\n} from './actions/public/getProof.js'\nexport type {\n  GetStorageAtErrorType,\n  GetStorageAtParameters,\n  GetStorageAtReturnType,\n} from './actions/public/getStorageAt.js'\nexport type {\n  GetTransactionConfirmationsErrorType,\n  GetTransactionConfirmationsParameters,\n  GetTransactionConfirmationsReturnType,\n} from './actions/public/getTransactionConfirmations.js'\nexport type {\n  GetTransactionCountErrorType,\n  GetTransactionCountParameters,\n  GetTransactionCountReturnType,\n} from './actions/public/getTransactionCount.js'\nexport type {\n  GetTransactionErrorType,\n  GetTransactionParameters,\n  GetTransactionReturnType,\n} from './actions/public/getTransaction.js'\nexport type {\n  GetTransactionReceiptErrorType,\n  GetTransactionReceiptParameters,\n  GetTransactionReceiptReturnType,\n} from './actions/public/getTransactionReceipt.js'\nexport type {\n  ImpersonateAccountErrorType,\n  ImpersonateAccountParameters,\n} from './actions/test/impersonateAccount.js'\nexport type {\n  IncreaseTimeErrorType,\n  IncreaseTimeParameters,\n} from './actions/test/increaseTime.js'\nexport type {\n  LoadStateErrorType,\n  LoadStateParameters,\n  LoadStateReturnType,\n} from './actions/test/loadState.js'\nexport type { MineErrorType, MineParameters } from './actions/test/mine.js'\nexport type {\n  MulticallErrorType,\n  MulticallParameters,\n  MulticallReturnType,\n} from './actions/public/multicall.js'\nexport type { SnapshotErrorType } from './actions/test/snapshot.js'\nexport type {\n  SimulateBlocksParameters,\n  SimulateBlocksReturnType,\n  SimulateBlocksErrorType,\n} from './actions/public/simulateBlocks.js'\nexport type {\n  SimulateCallsParameters,\n  SimulateCallsReturnType,\n  SimulateCallsErrorType,\n} from './actions/public/simulateCalls.js'\nexport type {\n  GetMutabilityAwareValue,\n  SimulateContractParameters,\n  SimulateContractReturnType,\n  SimulateContractErrorType,\n} from './actions/public/simulateContract.js'\nexport type {\n  OnBlock,\n  OnBlockParameter,\n  WatchBlocksErrorType,\n  WatchBlocksParameters,\n  WatchBlocksReturnType,\n} from './actions/public/watchBlocks.js'\nexport type {\n  OnBlockNumberFn,\n  OnBlockNumberParameter,\n  WatchBlockNumberErrorType,\n  WatchBlockNumberParameters,\n  WatchBlockNumberReturnType,\n} from './actions/public/watchBlockNumber.js'\nexport type {\n  WatchEventOnLogsFn,\n  WatchEventOnLogsParameter,\n  WatchEventErrorType,\n  WatchEventParameters,\n  WatchEventReturnType,\n} from './actions/public/watchEvent.js'\nexport type {\n  OnTransactionsFn,\n  OnTransactionsParameter,\n  WatchPendingTransactionsErrorType,\n  WatchPendingTransactionsParameters,\n  WatchPendingTransactionsReturnType,\n} from './actions/public/watchPendingTransactions.js'\nexport type {\n  ReadContractErrorType,\n  ReadContractParameters,\n  ReadContractReturnType,\n} from './actions/public/readContract.js'\nexport type {\n  ReplacementReason,\n  ReplacementReturnType,\n  WaitForTransactionReceiptErrorType,\n  WaitForTransactionReceiptParameters,\n  WaitForTransactionReceiptReturnType,\n} from './actions/public/waitForTransactionReceipt.js'\nexport type {\n  RequestAddressesErrorType,\n  RequestAddressesReturnType,\n} from './actions/wallet/requestAddresses.js'\nexport type {\n  RequestPermissionsErrorType,\n  RequestPermissionsReturnType,\n  RequestPermissionsParameters,\n} from './actions/wallet/requestPermissions.js'\nexport type {\n  GetTxpoolContentErrorType,\n  GetTxpoolContentReturnType,\n} from './actions/test/getTxpoolContent.js'\nexport type {\n  GetTxpoolStatusErrorType,\n  GetTxpoolStatusReturnType,\n} from './actions/test/getTxpoolStatus.js'\nexport type {\n  InspectTxpoolErrorType,\n  InspectTxpoolReturnType,\n} from './actions/test/inspectTxpool.js'\nexport type { RemoveBlockTimestampIntervalErrorType } from './actions/test/removeBlockTimestampInterval.js'\nexport type { ResetErrorType, ResetParameters } from './actions/test/reset.js'\nexport type {\n  RevertErrorType,\n  RevertParameters,\n} from './actions/test/revert.js'\nexport type {\n  SendRawTransactionErrorType,\n  SendRawTransactionParameters,\n  SendRawTransactionReturnType,\n} from './actions/wallet/sendRawTransaction.js'\nexport type {\n  SendTransactionErrorType,\n  SendTransactionParameters,\n  SendTransactionRequest,\n  SendTransactionReturnType,\n} from './actions/wallet/sendTransaction.js'\nexport type {\n  SignTransactionErrorType,\n  SignTransactionParameters,\n  SignTransactionReturnType,\n} from './actions/wallet/signTransaction.js'\nexport type {\n  PrepareTransactionRequestErrorType,\n  PrepareTransactionRequestParameters,\n  PrepareTransactionRequestParameterType,\n  PrepareTransactionRequestRequest,\n  PrepareTransactionRequestReturnType,\n} from './actions/wallet/prepareTransactionRequest.js'\nexport type {\n  GetCapabilitiesParameters,\n  GetCapabilitiesErrorType,\n  GetCapabilitiesReturnType,\n} from './actions/wallet/getCapabilities.js'\nexport type {\n  SendCallsErrorType,\n  SendCallsParameters,\n  SendCallsReturnType,\n} from './actions/wallet/sendCalls.js'\nexport type {\n  GetCallsStatusErrorType,\n  GetCallsStatusParameters,\n  GetCallsStatusReturnType,\n} from './actions/wallet/getCallsStatus.js'\nexport type {\n  ShowCallsStatusErrorType,\n  ShowCallsStatusParameters,\n  ShowCallsStatusReturnType,\n} from './actions/wallet/showCallsStatus.js'\nexport { WaitForCallsStatusTimeoutError } from './actions/wallet/waitForCallsStatus.js'\nexport type {\n  WaitForCallsStatusErrorType,\n  WaitForCallsStatusParameters,\n  WaitForCallsStatusReturnType,\n  WaitForCallsStatusTimeoutErrorType,\n} from './actions/wallet/waitForCallsStatus.js'\nexport type {\n  SendUnsignedTransactionErrorType,\n  SendUnsignedTransactionParameters,\n  SendUnsignedTransactionReturnType,\n} from './actions/test/sendUnsignedTransaction.js'\nexport type { SetAutomineErrorType } from './actions/test/setAutomine.js'\nexport type {\n  SetBalanceErrorType,\n  SetBalanceParameters,\n} from './actions/test/setBalance.js'\nexport type {\n  SetBlockGasLimitErrorType,\n  SetBlockGasLimitParameters,\n} from './actions/test/setBlockGasLimit.js'\nexport type {\n  SetBlockTimestampIntervalErrorType,\n  SetBlockTimestampIntervalParameters,\n} from './actions/test/setBlockTimestampInterval.js'\nexport type {\n  SetCodeErrorType,\n  SetCodeParameters,\n} from './actions/test/setCode.js'\nexport type {\n  SetCoinbaseErrorType,\n  SetCoinbaseParameters,\n} from './actions/test/setCoinbase.js'\nexport type {\n  SetIntervalMiningErrorType,\n  SetIntervalMiningParameters,\n} from './actions/test/setIntervalMining.js'\nexport type { SetLoggingEnabledErrorType } from './actions/test/setLoggingEnabled.js'\nexport type {\n  SetMinGasPriceErrorType,\n  SetMinGasPriceParameters,\n} from './actions/test/setMinGasPrice.js'\nexport type {\n  SetNextBlockBaseFeePerGasErrorType,\n  SetNextBlockBaseFeePerGasParameters,\n} from './actions/test/setNextBlockBaseFeePerGas.js'\nexport type {\n  SetNextBlockTimestampErrorType,\n  SetNextBlockTimestampParameters,\n} from './actions/test/setNextBlockTimestamp.js'\nexport type {\n  SetNonceErrorType,\n  SetNonceParameters,\n} from './actions/test/setNonce.js'\nexport type { SetRpcUrlErrorType } from './actions/test/setRpcUrl.js'\nexport type {\n  SetStorageAtErrorType,\n  SetStorageAtParameters,\n} from './actions/test/setStorageAt.js'\nexport type {\n  SignMessageErrorType,\n  SignMessageParameters,\n  SignMessageReturnType,\n} from './actions/wallet/signMessage.js'\nexport type {\n  SignTypedDataErrorType,\n  SignTypedDataParameters,\n  SignTypedDataReturnType,\n} from './actions/wallet/signTypedData.js'\nexport type {\n  StopImpersonatingAccountErrorType,\n  StopImpersonatingAccountParameters,\n} from './actions/test/stopImpersonatingAccount.js'\nexport type {\n  SwitchChainErrorType,\n  SwitchChainParameters,\n} from './actions/wallet/switchChain.js'\nexport type {\n  UninstallFilterErrorType,\n  UninstallFilterParameters,\n  UninstallFilterReturnType,\n} from './actions/public/uninstallFilter.js'\nexport type {\n  WatchAssetErrorType,\n  WatchAssetParameters,\n  WatchAssetReturnType,\n} from './actions/wallet/watchAsset.js'\nexport type {\n  VerifyHashErrorType as VerifyHashActionErrorType,\n  VerifyHashParameters as VerifyHashActionParameters,\n  VerifyHashReturnType as VerifyHashActionReturnType,\n} from './actions/public/verifyHash.js'\nexport type {\n  VerifyTypedDataErrorType as VerifyTypedDataActionErrorType,\n  VerifyTypedDataParameters as VerifyTypedDataActionParameters,\n  VerifyTypedDataReturnType as VerifyTypedDataActionReturnType,\n} from './actions/public/verifyTypedData.js'\nexport type {\n  VerifyMessageErrorType as VerifyMessageActionErrorType,\n  VerifyMessageParameters as VerifyMessageActionParameters,\n  VerifyMessageReturnType as VerifyMessageActionReturnType,\n} from './actions/public/verifyMessage.js'\nexport type {\n  WatchContractEventOnLogsFn,\n  WatchContractEventOnLogsParameter,\n  WatchContractEventErrorType,\n  WatchContractEventParameters,\n  WatchContractEventReturnType,\n} from './actions/public/watchContractEvent.js'\nexport type {\n  WriteContractErrorType,\n  WriteContractParameters,\n  WriteContractReturnType,\n} from './actions/wallet/writeContract.js'\nexport type { Call, Calls } from './types/calls.js'\nexport type {\n  Chain,\n  ChainConfig,\n  ChainContract,\n  ChainEstimateFeesPerGasFn,\n  ChainFees,\n  ChainFeesFnParameters,\n  ChainFormatter,\n  ChainEstimateFeesPerGasFnParameters,\n  ChainMaxPriorityFeePerGasFn,\n  DeriveChain,\n  GetChainParameter,\n  ChainFormatters,\n  ChainSerializers,\n  ExtractChainFormatterExclude,\n  ExtractChainFormatterParameters,\n  ExtractChainFormatterReturnType,\n} from './types/chain.js'\nexport type { GetTransactionRequestKzgParameter, Kzg } from './types/kzg.js'\nexport {\n  type Client,\n  type ClientConfig,\n  type CreateClientErrorType,\n  type MulticallBatchOptions,\n  createClient,\n  rpcSchema,\n} from './clients/createClient.js'\nexport {\n  type CustomTransport,\n  type CustomTransportConfig,\n  type CustomTransportErrorType,\n  custom,\n} from './clients/transports/custom.js'\nexport {\n  type FallbackTransport,\n  type FallbackTransportConfig,\n  type FallbackTransportErrorType,\n  fallback,\n  shouldThrow,\n} from './clients/transports/fallback.js'\nexport {\n  type HttpTransport,\n  type HttpTransportConfig,\n  type HttpTransportErrorType,\n  http,\n} from './clients/transports/http.js'\nexport {\n  type PublicClient,\n  type PublicClientConfig,\n  type CreatePublicClientErrorType,\n  createPublicClient,\n} from './clients/createPublicClient.js'\nexport {\n  type TestClient,\n  type TestClientConfig,\n  type CreateTestClientErrorType,\n  createTestClient,\n} from './clients/createTestClient.js'\nexport {\n  type PublicActions,\n  publicActions,\n} from './clients/decorators/public.js'\nexport {\n  type TestActions,\n  testActions,\n} from './clients/decorators/test.js'\nexport {\n  type WalletActions,\n  walletActions,\n} from './clients/decorators/wallet.js'\nexport {\n  type Transport,\n  type TransportConfig,\n  type CreateTransportErrorType,\n  createTransport,\n} from './clients/transports/createTransport.js'\nexport {\n  type WalletClient,\n  type WalletClientConfig,\n  type CreateWalletClientErrorType,\n  createWalletClient,\n} from './clients/createWalletClient.js'\nexport {\n  type WebSocketTransport,\n  type WebSocketTransportConfig,\n  type WebSocketTransportErrorType,\n  webSocket,\n} from './clients/transports/webSocket.js'\nexport {\n  multicall3Abi,\n  erc20Abi,\n  erc20Abi_bytes32,\n  erc721Abi,\n  erc1155Abi,\n  erc4626Abi,\n  universalSignatureValidatorAbi,\n} from './constants/abis.js'\nexport { ethAddress, zeroAddress } from './constants/address.js'\nexport {\n  deploylessCallViaBytecodeBytecode,\n  deploylessCallViaFactoryBytecode,\n  universalSignatureValidatorByteCode,\n} from './constants/contracts.js'\nexport { etherUnits, gweiUnits, weiUnits } from './constants/unit.js'\nexport {\n  maxInt8,\n  maxInt16,\n  maxInt24,\n  maxInt32,\n  maxInt40,\n  maxInt48,\n  maxInt56,\n  maxInt64,\n  maxInt72,\n  maxInt80,\n  maxInt88,\n  maxInt96,\n  maxInt104,\n  maxInt112,\n  maxInt120,\n  maxInt128,\n  maxInt136,\n  maxInt144,\n  maxInt152,\n  maxInt160,\n  maxInt168,\n  maxInt176,\n  maxInt184,\n  maxInt192,\n  maxInt200,\n  maxInt208,\n  maxInt216,\n  maxInt224,\n  maxInt232,\n  maxInt240,\n  maxInt248,\n  maxInt256,\n  maxUint8,\n  maxUint16,\n  maxUint24,\n  maxUint32,\n  maxUint40,\n  maxUint48,\n  maxUint56,\n  maxUint64,\n  maxUint72,\n  maxUint80,\n  maxUint88,\n  maxUint96,\n  maxUint104,\n  maxUint112,\n  maxUint120,\n  maxUint128,\n  maxUint136,\n  maxUint144,\n  maxUint152,\n  maxUint160,\n  maxUint168,\n  maxUint176,\n  maxUint184,\n  maxUint192,\n  maxUint200,\n  maxUint208,\n  maxUint216,\n  maxUint224,\n  maxUint232,\n  maxUint240,\n  maxUint248,\n  maxUint256,\n  minInt8,\n  minInt16,\n  minInt24,\n  minInt32,\n  minInt40,\n  minInt48,\n  minInt56,\n  minInt64,\n  minInt72,\n  minInt80,\n  minInt88,\n  minInt96,\n  minInt104,\n  minInt112,\n  minInt120,\n  minInt128,\n  minInt136,\n  minInt144,\n  minInt152,\n  minInt160,\n  minInt168,\n  minInt176,\n  minInt184,\n  minInt192,\n  minInt200,\n  minInt208,\n  minInt216,\n  minInt224,\n  minInt232,\n  minInt240,\n  minInt248,\n  minInt256,\n} from './constants/number.js'\nexport { zeroHash } from './constants/bytes.js'\nexport { presignMessagePrefix } from './constants/strings.js'\nexport {\n  AbiConstructorNotFoundError,\n  type AbiConstructorNotFoundErrorType,\n  AbiConstructorParamsNotFoundError,\n  type AbiConstructorParamsNotFoundErrorType,\n  AbiDecodingDataSizeInvalidError,\n  type AbiDecodingDataSizeInvalidErrorType,\n  AbiDecodingDataSizeTooSmallError,\n  type AbiDecodingDataSizeTooSmallErrorType,\n  AbiDecodingZeroDataError,\n  type AbiDecodingZeroDataErrorType,\n  AbiEncodingArrayLengthMismatchError,\n  type AbiEncodingArrayLengthMismatchErrorType,\n  AbiEncodingLengthMismatchError,\n  type AbiEncodingLengthMismatchErrorType,\n  AbiEncodingBytesSizeMismatchError,\n  type AbiEncodingBytesSizeMismatchErrorType,\n  AbiErrorInputsNotFoundError,\n  type AbiErrorInputsNotFoundErrorType,\n  AbiErrorNotFoundError,\n  type AbiErrorNotFoundErrorType,\n  AbiErrorSignatureNotFoundError,\n  type AbiErrorSignatureNotFoundErrorType,\n  AbiEventNotFoundError,\n  type AbiEventNotFoundErrorType,\n  AbiEventSignatureEmptyTopicsError,\n  type AbiEventSignatureEmptyTopicsErrorType,\n  AbiEventSignatureNotFoundError,\n  type AbiEventSignatureNotFoundErrorType,\n  AbiFunctionNotFoundError,\n  type AbiFunctionNotFoundErrorType,\n  AbiFunctionOutputsNotFoundError,\n  type AbiFunctionOutputsNotFoundErrorType,\n  AbiFunctionSignatureNotFoundError,\n  type AbiFunctionSignatureNotFoundErrorType,\n  BytesSizeMismatchError,\n  type BytesSizeMismatchErrorType,\n  DecodeLogDataMismatch,\n  type DecodeLogDataMismatchErrorType,\n  DecodeLogTopicsMismatch,\n  type DecodeLogTopicsMismatchErrorType,\n  InvalidAbiDecodingTypeError,\n  type InvalidAbiDecodingTypeErrorType,\n  InvalidAbiEncodingTypeError,\n  type InvalidAbiEncodingTypeErrorType,\n  InvalidArrayError,\n  type InvalidArrayErrorType,\n  InvalidDefinitionTypeError,\n  type InvalidDefinitionTypeErrorType,\n  UnsupportedPackedAbiType,\n  type UnsupportedPackedAbiTypeErrorType,\n} from './errors/abi.js'\nexport { BaseError, type BaseErrorType, setErrorConfig } from './errors/base.js'\nexport {\n  BlockNotFoundError,\n  type BlockNotFoundErrorType,\n} from './errors/block.js'\nexport {\n  CallExecutionError,\n  type CallExecutionErrorType,\n  ContractFunctionExecutionError,\n  type ContractFunctionExecutionErrorType,\n  ContractFunctionRevertedError,\n  type ContractFunctionRevertedErrorType,\n  ContractFunctionZeroDataError,\n  type ContractFunctionZeroDataErrorType,\n  RawContractError,\n  type RawContractErrorType,\n  CounterfactualDeploymentFailedError,\n  type CounterfactualDeploymentFailedErrorType,\n} from './errors/contract.js'\nexport {\n  BaseFeeScalarError,\n  type BaseFeeScalarErrorType,\n  Eip1559FeesNotSupportedError,\n  type Eip1559FeesNotSupportedErrorType,\n  MaxFeePerGasTooLowError,\n  type MaxFeePerGasTooLowErrorType,\n} from './errors/fee.js'\nexport {\n  AtomicReadyWalletRejectedUpgradeError,\n  type AtomicReadyWalletRejectedUpgradeErrorType,\n  AtomicityNotSupportedError,\n  type AtomicityNotSupportedErrorType,\n  BundleTooLargeError,\n  type BundleTooLargeErrorType,\n  ChainDisconnectedError,\n  type ChainDisconnectedErrorType,\n  DuplicateIdError,\n  type DuplicateIdErrorType,\n  InternalRpcError,\n  type InternalRpcErrorType,\n  InvalidInputRpcError,\n  type InvalidInputRpcErrorType,\n  InvalidParamsRpcError,\n  type InvalidParamsRpcErrorType,\n  InvalidRequestRpcError,\n  type InvalidRequestRpcErrorType,\n  JsonRpcVersionUnsupportedError,\n  type JsonRpcVersionUnsupportedErrorType,\n  LimitExceededRpcError,\n  type LimitExceededRpcErrorType,\n  MethodNotFoundRpcError,\n  type MethodNotFoundRpcErrorType,\n  MethodNotSupportedRpcError,\n  type MethodNotSupportedRpcErrorType,\n  ParseRpcError,\n  type ParseRpcErrorType,\n  ProviderDisconnectedError,\n  type ProviderDisconnectedErrorType,\n  ProviderRpcError,\n  type ProviderRpcErrorCode,\n  type ProviderRpcErrorType,\n  ResourceNotFoundRpcError,\n  type ResourceNotFoundRpcErrorType,\n  ResourceUnavailableRpcError,\n  type ResourceUnavailableRpcErrorType,\n  RpcError,\n  type RpcErrorType,\n  type RpcErrorCode,\n  SwitchChainError,\n  TransactionRejectedRpcError,\n  type TransactionRejectedRpcErrorType,\n  UnauthorizedProviderError,\n  type UnauthorizedProviderErrorType,\n  UnknownBundleIdError,\n  type UnknownBundleIdErrorType,\n  UnknownRpcError,\n  type UnknownRpcErrorType,\n  UnsupportedChainIdError,\n  type UnsupportedChainIdErrorType,\n  UnsupportedNonOptionalCapabilityError,\n  type UnsupportedNonOptionalCapabilityErrorType,\n  UnsupportedProviderMethodError,\n  type UnsupportedProviderMethodErrorType,\n  UserRejectedRequestError,\n  type UserRejectedRequestErrorType,\n} from './errors/rpc.js'\nexport {\n  ChainDoesNotSupportContract,\n  type ChainDoesNotSupportContractErrorType,\n  ChainMismatchError,\n  type ChainMismatchErrorType,\n  ChainNotFoundError,\n  type ChainNotFoundErrorType,\n  ClientChainNotConfiguredError,\n  type ClientChainNotConfiguredErrorType,\n  InvalidChainIdError,\n  type InvalidChainIdErrorType,\n} from './errors/chain.js'\nexport {\n  InvalidBytesBooleanError,\n  type InvalidBytesBooleanErrorType,\n  IntegerOutOfRangeError,\n  type IntegerOutOfRangeErrorType,\n  InvalidHexBooleanError,\n  type InvalidHexBooleanErrorType,\n  InvalidHexValueError,\n  type InvalidHexValueErrorType,\n  SizeOverflowError,\n  type SizeOverflowErrorType,\n} from './errors/encoding.js'\nexport {\n  type EnsAvatarInvalidMetadataError,\n  EnsAvatarUriResolutionError,\n  type EnsAvatarInvalidMetadataErrorType,\n  EnsAvatarInvalidNftUriError,\n  type EnsAvatarInvalidNftUriErrorType,\n  EnsAvatarUnsupportedNamespaceError,\n  type EnsAvatarUnsupportedNamespaceErrorType,\n  type EnsAvatarUriResolutionErrorType,\n} from './errors/ens.js'\nexport {\n  type InvalidDecimalNumberErrorType,\n  InvalidDecimalNumberError,\n} from './errors/unit.js'\nexport {\n  EstimateGasExecutionError,\n  type EstimateGasExecutionErrorType,\n} from './errors/estimateGas.js'\nexport {\n  ExecutionRevertedError,\n  type ExecutionRevertedErrorType,\n  FeeCapTooHighError,\n  type FeeCapTooHighErrorType,\n  FeeCapTooLowError,\n  type FeeCapTooLowErrorType,\n  InsufficientFundsError,\n  type InsufficientFundsErrorType,\n  IntrinsicGasTooHighError,\n  type IntrinsicGasTooHighErrorType,\n  IntrinsicGasTooLowError,\n  type IntrinsicGasTooLowErrorType,\n  NonceMaxValueError,\n  type NonceMaxValueErrorType,\n  NonceTooHighError,\n  type NonceTooHighErrorType,\n  NonceTooLowError,\n  type NonceTooLowErrorType,\n  TipAboveFeeCapError,\n  type TipAboveFeeCapErrorType,\n  TransactionTypeNotSupportedError,\n  type TransactionTypeNotSupportedErrorType,\n  UnknownNodeError,\n  type UnknownNodeErrorType,\n} from './errors/node.js'\nexport {\n  FilterTypeNotSupportedError,\n  type FilterTypeNotSupportedErrorType,\n} from './errors/log.js'\nexport {\n  HttpRequestError,\n  type HttpRequestErrorType,\n  RpcRequestError,\n  type RpcRequestErrorType,\n  TimeoutError,\n  type TimeoutErrorType,\n  SocketClosedError,\n  type SocketClosedErrorType,\n  WebSocketRequestError,\n  type WebSocketRequestErrorType,\n} from './errors/request.js'\nexport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from './errors/address.js'\nexport {\n  FeeConflictError,\n  type FeeConflictErrorType,\n  InvalidLegacyVError,\n  type InvalidLegacyVErrorType,\n  InvalidSerializableTransactionError,\n  type InvalidSerializableTransactionErrorType,\n  InvalidSerializedTransactionError,\n  type InvalidSerializedTransactionErrorType,\n  InvalidSerializedTransactionTypeError,\n  type InvalidSerializedTransactionTypeErrorType,\n  InvalidStorageKeySizeError,\n  type InvalidStorageKeySizeErrorType,\n  TransactionExecutionError,\n  type TransactionExecutionErrorType,\n  TransactionNotFoundError,\n  type TransactionNotFoundErrorType,\n  TransactionReceiptNotFoundError,\n  type TransactionReceiptNotFoundErrorType,\n  WaitForTransactionReceiptTimeoutError,\n  type WaitForTransactionReceiptTimeoutErrorType,\n} from './errors/transaction.js'\nexport {\n  SizeExceedsPaddingSizeError,\n  type SizeExceedsPaddingSizeErrorType,\n  SliceOffsetOutOfBoundsError,\n  type SliceOffsetOutOfBoundsErrorType,\n} from './errors/data.js'\nexport {\n  UrlRequiredError,\n  type UrlRequiredErrorType,\n} from './errors/transport.js'\nexport {\n  AccountStateConflictError,\n  type AccountStateConflictErrorType,\n  StateAssignmentConflictError,\n  type StateAssignmentConflictErrorType,\n} from './errors/stateOverride.js'\nexport {\n  InvalidDomainError,\n  type InvalidDomainErrorType,\n  InvalidPrimaryTypeError,\n  type InvalidPrimaryTypeErrorType,\n  InvalidStructTypeError,\n  type InvalidStructTypeErrorType,\n} from './errors/typedData.js'\nexport type {\n  AbiEventParameterToPrimitiveType,\n  AbiEventParametersToPrimitiveTypes,\n  AbiEventTopicToPrimitiveType,\n  AbiItem,\n  AbiItemArgs,\n  AbiItemName,\n  ContractConstructorArgs,\n  ContractEventArgsFromTopics,\n  EventDefinition,\n  ExtractAbiFunctionForArgs,\n  ExtractAbiItem,\n  ExtractAbiItemForArgs,\n  ExtractAbiItemNames,\n  ContractErrorArgs,\n  ContractErrorName,\n  ContractEventArgs,\n  ContractEventName,\n  ContractFunctionParameters,\n  ContractFunctionReturnType,\n  ContractFunctionArgs,\n  ContractFunctionName,\n  GetEventArgs,\n  GetValue,\n  LogTopicType,\n  MaybeAbiEventName,\n  MaybeExtractEventArgsFromAbi,\n  UnionWiden,\n  Widen,\n} from './types/contract.js'\nexport type {\n  AccessList,\n  Transaction,\n  TransactionBase,\n  TransactionEIP1559,\n  TransactionEIP2930,\n  TransactionEIP4844,\n  TransactionEIP7702,\n  TransactionLegacy,\n  TransactionReceipt,\n  TransactionRequest,\n  TransactionRequestBase,\n  TransactionRequestEIP1559,\n  TransactionRequestEIP2930,\n  TransactionRequestEIP4844,\n  TransactionRequestEIP7702,\n  TransactionRequestGeneric,\n  TransactionRequestLegacy,\n  TransactionSerializable,\n  TransactionSerializableBase,\n  TransactionSerializableEIP1559,\n  TransactionSerializableEIP2930,\n  TransactionSerializableEIP4844,\n  TransactionSerializableEIP7702,\n  TransactionSerializableGeneric,\n  TransactionSerializableLegacy,\n  TransactionSerialized,\n  TransactionSerializedEIP1559,\n  TransactionSerializedEIP2930,\n  TransactionSerializedEIP4844,\n  TransactionSerializedEIP7702,\n  TransactionSerializedGeneric,\n  TransactionSerializedLegacy,\n  TransactionType,\n} from './types/transaction.js'\nexport type {\n  Assign,\n  Branded,\n  Evaluate,\n  IsNarrowable,\n  IsUndefined,\n  IsUnion,\n  LooseOmit,\n  MaybePartial,\n  MaybePromise,\n  MaybeRequired,\n  Mutable,\n  NoInfer,\n  NoUndefined,\n  Omit,\n  Or,\n  PartialBy,\n  RequiredBy,\n  Some,\n  UnionEvaluate,\n  UnionLooseOmit,\n  ValueOf,\n  Prettify,\n  ExactPartial,\n  ExactRequired,\n  IsNever,\n  OneOf,\n  UnionOmit,\n  UnionPartialBy,\n  UnionPick,\n  UnionRequiredBy,\n  UnionToTuple,\n} from './types/utils.js'\nexport type {\n  Account,\n  AccountSource,\n  CustomSource,\n  HDAccount,\n  HDOptions,\n  JsonRpcAccount,\n  LocalAccount,\n  PrivateKeyAccount,\n} from './accounts/types.js'\nexport type { AssetGateway, AssetGatewayUrls } from './types/ens.js'\nexport type {\n  Block,\n  BlockIdentifier,\n  BlockNumber,\n  BlockTag,\n  Uncle,\n} from './types/block.js'\nexport type {\n  Capabilities,\n  /** @deprecated Use `Capabilities` instead. */\n  Capabilities as WalletCapabilities,\n  CapabilitiesSchema,\n  /** @deprecated Use `ChainIdToCapabilities` instead. */\n  ChainIdToCapabilities as WalletCapabilitiesRecord,\n  ChainIdToCapabilities,\n  ExtractCapabilities,\n} from './types/capabilities.js'\nexport type {\n  ByteArray,\n  Hash,\n  Hex,\n  LogTopic,\n  Signature,\n  CompactSignature,\n  SignableMessage,\n} from './types/misc.js'\nexport type {\n  AddEthereumChainParameter,\n  BundlerRpcSchema,\n  DebugBundlerRpcSchema,\n  EIP1193EventMap,\n  EIP1193Events,\n  EIP1193Parameters,\n  EIP1193Provider,\n  EIP1193RequestFn,\n  EIP1474Methods,\n  ProviderRpcErrorType as EIP1193ProviderRpcErrorType,\n  ProviderConnectInfo,\n  ProviderMessage,\n  PublicRpcSchema,\n  PaymasterRpcSchema,\n  NetworkSync,\n  RpcSchema,\n  RpcSchemaOverride,\n  TestRpcSchema,\n  WalletCallReceipt,\n  WalletGetCallsStatusReturnType,\n  WalletGrantPermissionsParameters,\n  WalletGrantPermissionsReturnType,\n  WalletSendCallsParameters,\n  WalletSendCallsReturnType,\n  WalletPermissionCaveat,\n  WalletPermission,\n  WalletRpcSchema,\n  WatchAssetParams,\n} from './types/eip1193.js'\nexport { ProviderRpcError as EIP1193ProviderRpcError } from './types/eip1193.js'\nexport type { BlobSidecar, BlobSidecars } from './types/eip4844.js'\nexport type {\n  FeeHistory,\n  FeeValues,\n  FeeValuesEIP1559,\n  FeeValuesEIP4844,\n  FeeValuesLegacy,\n  FeeValuesType,\n} from './types/fee.js'\nexport type { Filter, FilterType } from './types/filter.js'\nexport type { TypedDataDefinition } from './types/typedData.js'\nexport type { GetTransportConfig, GetPollOptions } from './types/transport.js'\nexport type { Log } from './types/log.js'\nexport type {\n  MulticallContracts,\n  MulticallResponse,\n  MulticallResults,\n} from './types/multicall.js'\nexport type {\n  ParseAccount,\n  DeriveAccount,\n  HDKey,\n} from './types/account.js'\nexport type {\n  Authorization,\n  AuthorizationList,\n  SerializedAuthorization,\n  SerializedAuthorizationList,\n  SignedAuthorization,\n  SignedAuthorizationList,\n} from './types/authorization.js'\nexport type { Register, ResolvedRegister } from './types/register.js'\nexport type {\n  Index,\n  Quantity,\n  RpcAuthorization,\n  RpcAuthorizationList,\n  RpcBlock,\n  RpcBlockIdentifier,\n  RpcBlockNumber,\n  RpcFeeHistory,\n  RpcFeeValues,\n  RpcLog,\n  RpcTransaction,\n  RpcTransactionReceipt,\n  RpcTransactionRequest,\n  RpcUncle,\n  Status,\n  RpcProof,\n  RpcAccountStateOverride,\n  RpcStateOverride,\n  RpcStateMapping,\n} from './types/rpc.js'\nexport type { Withdrawal } from './types/withdrawal.js'\nexport type {\n  StateMapping,\n  StateOverride,\n} from './types/stateOverride.js'\nexport { labelhash, type LabelhashErrorType } from './utils/ens/labelhash.js'\nexport { namehash, type NamehashErrorType } from './utils/ens/namehash.js'\nexport {\n  type FormattedBlock,\n  defineBlock,\n  type DefineBlockErrorType,\n  formatBlock,\n  type FormatBlockErrorType,\n} from './utils/formatters/block.js'\nexport { formatLog, type FormatLogErrorType } from './utils/formatters/log.js'\nexport {\n  type DecodeAbiParametersErrorType,\n  type DecodeAbiParametersReturnType,\n  decodeAbiParameters,\n} from './utils/abi/decodeAbiParameters.js'\nexport {\n  type DecodeDeployDataErrorType,\n  type DecodeDeployDataParameters,\n  type DecodeDeployDataReturnType,\n  decodeDeployData,\n} from './utils/abi/decodeDeployData.js'\nexport {\n  type DecodeErrorResultErrorType,\n  type DecodeErrorResultParameters,\n  type DecodeErrorResultReturnType,\n  decodeErrorResult,\n} from './utils/abi/decodeErrorResult.js'\nexport {\n  type DecodeEventLogErrorType,\n  type DecodeEventLogParameters,\n  type DecodeEventLogReturnType,\n  decodeEventLog,\n} from './utils/abi/decodeEventLog.js'\nexport {\n  type DecodeFunctionDataErrorType,\n  type DecodeFunctionDataParameters,\n  type DecodeFunctionDataReturnType,\n  decodeFunctionData,\n} from './utils/abi/decodeFunctionData.js'\nexport {\n  type DecodeFunctionResultErrorType,\n  type DecodeFunctionResultParameters,\n  type DecodeFunctionResultReturnType,\n  decodeFunctionResult,\n} from './utils/abi/decodeFunctionResult.js'\nexport {\n  type EncodeAbiParametersErrorType,\n  type EncodeAbiParametersReturnType,\n  encodeAbiParameters,\n} from './utils/abi/encodeAbiParameters.js'\nexport {\n  type EncodeDeployDataErrorType,\n  type EncodeDeployDataParameters,\n  type EncodeDeployDataReturnType,\n  encodeDeployData,\n} from './utils/abi/encodeDeployData.js'\nexport {\n  type EncodeErrorResultErrorType,\n  type EncodeErrorResultParameters,\n  type EncodeErrorResultReturnType,\n  encodeErrorResult,\n} from './utils/abi/encodeErrorResult.js'\nexport {\n  type EncodeEventTopicsErrorType,\n  type EncodeEventTopicsParameters,\n  type EncodeEventTopicsReturnType,\n  encodeEventTopics,\n} from './utils/abi/encodeEventTopics.js'\nexport {\n  type EncodeFunctionDataErrorType,\n  type EncodeFunctionDataParameters,\n  type EncodeFunctionDataReturnType,\n  encodeFunctionData,\n} from './utils/abi/encodeFunctionData.js'\nexport {\n  type PrepareEncodeFunctionDataErrorType,\n  type PrepareEncodeFunctionDataParameters,\n  type PrepareEncodeFunctionDataReturnType,\n  prepareEncodeFunctionData,\n} from './utils/abi/prepareEncodeFunctionData.js'\nexport {\n  type EncodeFunctionResultErrorType,\n  type EncodeFunctionResultParameters,\n  type EncodeFunctionResultReturnType,\n  encodeFunctionResult,\n} from './utils/abi/encodeFunctionResult.js'\nexport {\n  type ParseEventLogsErrorType,\n  type ParseEventLogsParameters,\n  type ParseEventLogsReturnType,\n  parseEventLogs,\n} from './utils/abi/parseEventLogs.js'\nexport {\n  type FormattedTransaction,\n  defineTransaction,\n  type DefineTransactionErrorType,\n  formatTransaction,\n  type FormatTransactionErrorType,\n  transactionType,\n} from './utils/formatters/transaction.js'\nexport {\n  type FormattedTransactionReceipt,\n  defineTransactionReceipt,\n  type DefineTransactionReceiptErrorType,\n  formatTransactionReceipt,\n  type FormatTransactionReceiptErrorType,\n} from './utils/formatters/transactionReceipt.js'\nexport {\n  type FormattedTransactionRequest,\n  defineTransactionRequest,\n  type DefineTransactionRequestErrorType,\n  formatTransactionRequest,\n  type FormatTransactionRequestErrorType,\n  rpcTransactionType,\n} from './utils/formatters/transactionRequest.js'\nexport {\n  type GetAbiItemErrorType,\n  type GetAbiItemParameters,\n  type GetAbiItemReturnType,\n  getAbiItem,\n} from './utils/abi/getAbiItem.js'\nexport {\n  type GetContractAddressOptions,\n  type GetCreate2AddressOptions,\n  type GetCreate2AddressErrorType,\n  type GetCreateAddressOptions,\n  type GetCreateAddressErrorType,\n  getContractAddress,\n  getCreate2Address,\n  getCreateAddress,\n} from './utils/address/getContractAddress.js'\nexport {\n  type GetSerializedTransactionType,\n  type GetSerializedTransactionTypeErrorType,\n  getSerializedTransactionType,\n} from './utils/transaction/getSerializedTransactionType.js'\nexport {\n  type GetTransactionType,\n  type GetTransactionTypeErrorType,\n  getTransactionType,\n} from './utils/transaction/getTransactionType.js'\nexport {\n  type HashDomainErrorType,\n  type HashStructErrorType,\n  type HashTypedDataErrorType,\n  type HashTypedDataParameters,\n  type HashTypedDataReturnType,\n  hashDomain,\n  hashStruct,\n  hashTypedData,\n} from './utils/signature/hashTypedData.js'\nexport {\n  type CompactSignatureToSignatureErrorType,\n  compactSignatureToSignature,\n} from './utils/signature/compactSignatureToSignature.js'\nexport {\n  /** @deprecated Use `ParseCompactSignatureErrorType`. */\n  type ParseCompactSignatureErrorType as HexToCompactSignatureErrorType,\n  /** @deprecated Use `parseCompactSignature`. */\n  parseCompactSignature as hexToCompactSignature,\n  type ParseCompactSignatureErrorType,\n  parseCompactSignature,\n} from './utils/signature/parseCompactSignature.js'\nexport {\n  /** @deprecated Use `ParseSignatureErrorType`. */\n  type ParseSignatureErrorType as HexToSignatureErrorType,\n  /** @deprecated Use `parseSignature`. */\n  parseSignature as hexToSignature,\n  type ParseSignatureErrorType,\n  parseSignature,\n} from './utils/signature/parseSignature.js'\nexport {\n  type RecoverAddressErrorType,\n  type RecoverAddressParameters,\n  type RecoverAddressReturnType,\n  recoverAddress,\n} from './utils/signature/recoverAddress.js'\nexport {\n  type RecoverMessageAddressErrorType,\n  type RecoverMessageAddressParameters,\n  type RecoverMessageAddressReturnType,\n  recoverMessageAddress,\n} from './utils/signature/recoverMessageAddress.js'\nexport {\n  type RecoverPublicKeyErrorType,\n  type RecoverPublicKeyParameters,\n  type RecoverPublicKeyReturnType,\n  recoverPublicKey,\n} from './utils/signature/recoverPublicKey.js'\nexport {\n  type RecoverTransactionAddressErrorType,\n  type RecoverTransactionAddressParameters,\n  type RecoverTransactionAddressReturnType,\n  recoverTransactionAddress,\n} from './utils/signature/recoverTransactionAddress.js'\nexport {\n  type RecoverTypedDataAddressErrorType,\n  type RecoverTypedDataAddressParameters,\n  type RecoverTypedDataAddressReturnType,\n  recoverTypedDataAddress,\n} from './utils/signature/recoverTypedDataAddress.js'\nexport {\n  type SignatureToCompactSignatureErrorType,\n  signatureToCompactSignature,\n} from './utils/signature/signatureToCompactSignature.js'\nexport {\n  /** @deprecated Use `SignatureToHexErrorType` instead. */\n  type SerializeCompactSignatureErrorType as CompactSignatureToHexErrorType,\n  /** @deprecated Use `serializeCompactSignature` instead. */\n  serializeCompactSignature as compactSignatureToHex,\n  type SerializeCompactSignatureErrorType,\n  serializeCompactSignature,\n} from './utils/signature/serializeCompactSignature.js'\nexport {\n  /** @deprecated Use `SignatureToHexErrorType` instead. */\n  type SerializeSignatureErrorType as SignatureToHexErrorType,\n  /** @deprecated Use `serializeSignature` instead. */\n  serializeSignature as signatureToHex,\n  type SerializeSignatureParameters,\n  type SerializeSignatureReturnType,\n  type SerializeSignatureErrorType,\n  serializeSignature,\n} from './utils/signature/serializeSignature.js'\nexport {\n  bytesToRlp,\n  type BytesToRlpErrorType,\n  hexToRlp,\n  type HexToRlpErrorType,\n  toRlp,\n  type ToRlpErrorType,\n  type ToRlpReturnType,\n} from './utils/encoding/toRlp.js'\nexport {\n  type VerifyHashErrorType,\n  type VerifyHashParameters,\n  type VerifyHashReturnType,\n  verifyHash,\n} from './utils/signature/verifyHash.js'\nexport {\n  type VerifyMessageErrorType,\n  type VerifyMessageParameters,\n  type VerifyMessageReturnType,\n  verifyMessage,\n} from './utils/signature/verifyMessage.js'\nexport {\n  type VerifyTypedDataErrorType,\n  type VerifyTypedDataParameters,\n  type VerifyTypedDataReturnType,\n  verifyTypedData,\n} from './utils/signature/verifyTypedData.js'\nexport {\n  type ParseErc6492SignatureErrorType,\n  type ParseErc6492SignatureParameters,\n  type ParseErc6492SignatureReturnType,\n  parseErc6492Signature,\n} from './utils/signature/parseErc6492Signature.js'\nexport {\n  type IsErc6492SignatureErrorType,\n  type IsErc6492SignatureParameters,\n  type IsErc6492SignatureReturnType,\n  isErc6492Signature,\n} from './utils/signature/isErc6492Signature.js'\nexport {\n  type SerializeErc6492SignatureErrorType,\n  type SerializeErc6492SignatureParameters,\n  type SerializeErc6492SignatureReturnType,\n  serializeErc6492Signature,\n} from './utils/signature/serializeErc6492Signature.js'\nexport {\n  type AssertRequestErrorType,\n  assertRequest,\n} from './utils/transaction/assertRequest.js'\nexport {\n  type AssertTransactionEIP1559ErrorType,\n  assertTransactionEIP1559,\n  type AssertTransactionEIP2930ErrorType,\n  assertTransactionEIP2930,\n  type AssertTransactionLegacyErrorType,\n  assertTransactionLegacy,\n} from './utils/transaction/assertTransaction.js'\nexport {\n  type BoolToBytesErrorType,\n  type BoolToBytesOpts,\n  boolToBytes,\n  type HexToBytesErrorType,\n  type HexToBytesOpts,\n  hexToBytes,\n  type NumberToBytesErrorType,\n  numberToBytes,\n  type StringToBytesErrorType,\n  type StringToBytesOpts,\n  stringToBytes,\n  type ToBytesErrorType,\n  type ToBytesParameters,\n  toBytes,\n} from './utils/encoding/toBytes.js'\nexport {\n  type BoolToHexErrorType,\n  type BoolToHexOpts,\n  boolToHex,\n  type BytesToHexErrorType,\n  type BytesToHexOpts,\n  bytesToHex,\n  type NumberToHexErrorType,\n  type NumberToHexOpts,\n  numberToHex,\n  type StringToHexErrorType,\n  type StringToHexOpts,\n  stringToHex,\n  type ToHexErrorType,\n  type ToHexParameters,\n  toHex,\n} from './utils/encoding/toHex.js'\nexport {\n  type BytesToBigIntErrorType,\n  type BytesToBigIntOpts,\n  bytesToBigInt,\n  type BytesToBoolErrorType,\n  type BytesToBoolOpts,\n  bytesToBool,\n  type BytesToNumberErrorType,\n  type BytesToNumberOpts,\n  bytesToNumber,\n  type BytesToStringErrorType,\n  type BytesToStringOpts,\n  bytesToString,\n  type FromBytesErrorType,\n  type FromBytesParameters,\n  fromBytes,\n} from './utils/encoding/fromBytes.js'\nexport {\n  type CcipRequestParameters,\n  type CcipRequestErrorType,\n  ccipRequest,\n  /** @deprecated Use `ccipRequest`. */\n  ccipRequest as ccipFetch,\n  type OffchainLookupErrorType,\n  offchainLookup,\n  offchainLookupAbiItem,\n  offchainLookupSignature,\n} from './utils/ccip.js'\nexport {\n  type BlobsToCommitmentsErrorType,\n  type BlobsToCommitmentsParameters,\n  type BlobsToCommitmentsReturnType,\n  blobsToCommitments,\n} from './utils/blob/blobsToCommitments.js'\nexport {\n  type CommitmentToVersionedHashErrorType,\n  type CommitmentToVersionedHashParameters,\n  type CommitmentToVersionedHashReturnType,\n  commitmentToVersionedHash,\n} from './utils/blob/commitmentToVersionedHash.js'\nexport {\n  type CommitmentsToVersionedHashesErrorType,\n  type CommitmentsToVersionedHashesParameters,\n  type CommitmentsToVersionedHashesReturnType,\n  commitmentsToVersionedHashes,\n} from './utils/blob/commitmentsToVersionedHashes.js'\nexport {\n  type SidecarsToVersionedHashesErrorType,\n  type SidecarsToVersionedHashesParameters,\n  type SidecarsToVersionedHashesReturnType,\n  sidecarsToVersionedHashes,\n} from './utils/blob/sidecarsToVersionedHashes.js'\nexport {\n  type blobsToProofsErrorType,\n  type blobsToProofsParameters,\n  type blobsToProofsReturnType,\n  blobsToProofs,\n} from './utils/blob/blobsToProofs.js'\nexport {\n  type FromBlobsErrorType,\n  type FromBlobsParameters,\n  type FromBlobsReturnType,\n  fromBlobs,\n} from './utils/blob/fromBlobs.js'\nexport {\n  type ToBlobSidecarsErrorType,\n  type ToBlobSidecarsParameters,\n  type ToBlobSidecarsReturnType,\n  toBlobSidecars,\n} from './utils/blob/toBlobSidecars.js'\nexport {\n  type ToBlobsErrorType,\n  type ToBlobsParameters,\n  type ToBlobsReturnType,\n  toBlobs,\n} from './utils/blob/toBlobs.js'\nexport {\n  type DefineKzgErrorType,\n  type DefineKzgParameters,\n  type DefineKzgReturnType,\n  defineKzg,\n} from './utils/kzg/defineKzg.js'\nexport {\n  type SetupKzgErrorType,\n  type SetupKzgParameters,\n  type SetupKzgReturnType,\n  setupKzg,\n} from './utils/kzg/setupKzg.js'\nexport {\n  type ConcatBytesErrorType,\n  type ConcatErrorType,\n  type ConcatHexErrorType,\n  type ConcatReturnType,\n  concat,\n  concatBytes,\n  concatHex,\n} from './utils/data/concat.js'\nexport {\n  type AssertCurrentChainErrorType,\n  type AssertCurrentChainParameters,\n  assertCurrentChain,\n} from './utils/chain/assertCurrentChain.js'\nexport { defineChain } from './utils/chain/defineChain.js'\nexport {\n  type ExtractChainErrorType,\n  type ExtractChainParameters,\n  type ExtractChainReturnType,\n  extractChain,\n} from './utils/chain/extractChain.js'\nexport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from './utils/chain/getChainContractAddress.js'\nexport {\n  type EncodePackedErrorType,\n  encodePacked,\n} from './utils/abi/encodePacked.js'\nexport { withCache } from './utils/promise/withCache.js'\nexport {\n  type WithRetryErrorType,\n  withRetry,\n} from './utils/promise/withRetry.js'\nexport {\n  type WithTimeoutErrorType,\n  withTimeout,\n} from './utils/promise/withTimeout.js'\nexport {\n  type FormatEtherErrorType,\n  formatEther,\n} from './utils/unit/formatEther.js'\nexport {\n  type FormatGweiErrorType,\n  formatGwei,\n} from './utils/unit/formatGwei.js'\nexport {\n  type FormatUnitsErrorType,\n  formatUnits,\n} from './utils/unit/formatUnits.js'\nexport {\n  type FromHexErrorType,\n  fromHex,\n  type HexToBigIntErrorType,\n  hexToBigInt,\n  type HexToBoolErrorType,\n  hexToBool,\n  type HexToNumberErrorType,\n  hexToNumber,\n  type HexToStringErrorType,\n  hexToString,\n} from './utils/encoding/fromHex.js'\nexport {\n  type FromRlpErrorType,\n  type FromRlpReturnType,\n  fromRlp,\n} from './utils/encoding/fromRlp.js'\nexport {\n  type ChecksumAddressErrorType,\n  type GetAddressErrorType,\n  checksumAddress,\n  getAddress,\n} from './utils/address/getAddress.js'\nexport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from './utils/errors/getContractError.js'\nexport {\n  type ToEventSelectorErrorType,\n  toEventSelector,\n  /** @deprecated use `ToEventSelectorErrorType`. */\n  type ToEventSelectorErrorType as GetEventSelectorErrorType,\n  /** @deprecated use `toEventSelector`. */\n  toEventSelector as getEventSelector,\n} from './utils/hash/toEventSelector.js'\nexport {\n  type ToFunctionSelectorErrorType,\n  toFunctionSelector,\n  /** @deprecated use `ToFunctionSelectorErrorType`. */\n  type ToFunctionSelectorErrorType as GetFunctionSelectorErrorType,\n  /** @deprecated use `toFunctionSelector`. */\n  toFunctionSelector as getFunctionSelector,\n} from './utils/hash/toFunctionSelector.js'\nexport {\n  type ToEventSignatureErrorType,\n  toEventSignature,\n  /** @deprecated use `ToEventSignatureErrorType`. */\n  type ToEventSignatureErrorType as GetEventSignatureErrorType,\n  /** @deprecated use `toEventSignature`. */\n  toEventSignature as getEventSignature,\n} from './utils/hash/toEventSignature.js'\nexport {\n  type ToFunctionSignatureErrorType,\n  toFunctionSignature,\n  /** @deprecated use `ToFunctionSignatureErrorType`. */\n  type ToFunctionSignatureErrorType as GetFunctionSignatureErrorType,\n  /** @deprecated use `toFunctionSignature`. */\n  toFunctionSignature as getFunctionSignature,\n} from './utils/hash/toFunctionSignature.js'\nexport {\n  type ToEventHashErrorType,\n  toEventHash,\n} from './utils/hash/toEventHash.js'\nexport {\n  type ToFunctionHashErrorType,\n  toFunctionHash,\n} from './utils/hash/toFunctionHash.js'\nexport {\n  type HashMessageErrorType,\n  hashMessage,\n} from './utils/signature/hashMessage.js'\nexport {\n  type ToPrefixedMessageErrorType,\n  toPrefixedMessage,\n} from './utils/signature/toPrefixedMessage.js'\nexport {\n  type IsAddressOptions,\n  type IsAddressErrorType,\n  isAddress,\n} from './utils/address/isAddress.js'\nexport {\n  type IsAddressEqualReturnType,\n  type IsAddressEqualErrorType,\n  isAddressEqual,\n} from './utils/address/isAddressEqual.js'\nexport { type IsBytesErrorType, isBytes } from './utils/data/isBytes.js'\nexport { type IsHashErrorType, isHash } from './utils/hash/isHash.js'\nexport { type IsHexErrorType, isHex } from './utils/data/isHex.js'\nexport {\n  type Keccak256Hash,\n  type Keccak256ErrorType,\n  keccak256,\n} from './utils/hash/keccak256.js'\nexport {\n  type Sha256Hash,\n  type Sha256ErrorType,\n  sha256,\n} from './utils/hash/sha256.js'\nexport {\n  type Ripemd160Hash,\n  type Ripemd160ErrorType,\n  ripemd160,\n} from './utils/hash/ripemd160.js'\nexport {\n  type PadBytesErrorType,\n  type PadErrorType,\n  type PadHexErrorType,\n  type PadReturnType,\n  pad,\n  padBytes,\n  padHex,\n} from './utils/data/pad.js'\nexport {\n  type ParseEtherErrorType,\n  parseEther,\n} from './utils/unit/parseEther.js'\nexport { type ParseGweiErrorType, parseGwei } from './utils/unit/parseGwei.js'\nexport {\n  type ParseTransactionErrorType,\n  type ParseTransactionReturnType,\n  parseTransaction,\n} from './utils/transaction/parseTransaction.js'\nexport {\n  type ParseUnitsErrorType,\n  parseUnits,\n} from './utils/unit/parseUnits.js'\nexport {\n  type SerializeAccessListErrorType,\n  serializeAccessList,\n} from './utils/transaction/serializeAccessList.js'\nexport {\n  serializeTransaction,\n  type SerializeTransactionErrorType,\n  type SerializedTransactionReturnType,\n  type SerializeTransactionFn,\n} from './utils/transaction/serializeTransaction.js'\nexport { type SizeErrorType, size } from './utils/data/size.js'\nexport {\n  type SliceBytesErrorType,\n  type SliceErrorType,\n  type SliceHexErrorType,\n  slice,\n  sliceBytes,\n  sliceHex,\n} from './utils/data/slice.js'\nexport { type StringifyErrorType, stringify } from './utils/stringify.js'\nexport {\n  type TrimErrorType,\n  type TrimReturnType,\n  trim,\n} from './utils/data/trim.js'\nexport {\n  type DomainSeparatorErrorType,\n  type GetTypesForEIP712DomainErrorType,\n  type SerializeTypedDataErrorType,\n  type ValidateTypedDataErrorType,\n  serializeTypedData,\n  validateTypedData,\n  domainSeparator,\n  getTypesForEIP712Domain,\n} from './utils/typedData.js'\nexport {\n  type CreateNonceManagerParameters,\n  type NonceManager,\n  type NonceManagerSource,\n  createNonceManager,\n  nonceManager,\n} from './utils/nonceManager.js'\nexport type {\n  RpcEstimateUserOperationGasReturnType,\n  RpcGetUserOperationByHashReturnType,\n  RpcUserOperation,\n  RpcUserOperationReceipt,\n  RpcUserOperationRequest,\n} from './account-abstraction/types/rpc.js'\n","import type { Address } from 'abitype'\n\nimport type * as BlockOverrides from 'ox/BlockOverrides'\nimport type * as Rpc from 'ox/RpcResponse'\nimport type {\n  RpcEstimateUserOperationGasReturnType,\n  RpcGetUserOperationByHashReturnType,\n  RpcUserOperation,\n  RpcUserOperationReceipt,\n} from '../account-abstraction/types/rpc.js'\nimport type { BlockTag } from './block.js'\nimport type { Capabilities, ChainIdToCapabilities } from './capabilities.js'\nimport type { Hash, Hex, LogTopic } from './misc.js'\nimport type { RpcStateOverride } from './rpc.js'\nimport type {\n  RpcBlock as Block,\n  RpcBlockIdentifier as BlockIdentifier,\n  RpcBlockNumber as BlockNumber,\n  RpcFeeHistory as FeeHistory,\n  RpcLog as Log,\n  RpcProof as Proof,\n  Quantity,\n  RpcTransaction as Transaction,\n  RpcTransactionReceipt as TransactionReceipt,\n  RpcTransactionRequest as TransactionRequest,\n  RpcUncle as Uncle,\n} from './rpc.js'\nimport type { AccessList } from './transaction.js'\nimport type { ExactPartial, OneOf, PartialBy, Prettify } from './utils.js'\n\n//////////////////////////////////////////////////\n// Provider\n\nexport type EIP1474Methods = [\n  ...PublicRpcSchema,\n  ...WalletRpcSchema,\n  ...BundlerRpcSchema,\n  ...PaymasterRpcSchema,\n]\n\nexport type EIP1193Provider = Prettify<\n  EIP1193Events & {\n    request: EIP1193RequestFn<EIP1474Methods>\n  }\n>\n\n//////////////////////////////////////////////////\n// Errors\n\nexport type ProviderRpcErrorType = ProviderRpcError & {\n  name: 'ProviderRpcError'\n}\nexport class ProviderRpcError extends Error {\n  code: number\n  details: string\n\n  constructor(code: number, message: string) {\n    super(message)\n    this.code = code\n    this.details = message\n  }\n}\n\n//////////////////////////////////////////////////\n// Provider Events\n\nexport type ProviderConnectInfo = {\n  chainId: string\n}\n\nexport type ProviderMessage = {\n  type: string\n  data: unknown\n}\n\nexport type EIP1193EventMap = {\n  accountsChanged(accounts: Address[]): void\n  chainChanged(chainId: string): void\n  connect(connectInfo: ProviderConnectInfo): void\n  disconnect(error: ProviderRpcError): void\n  message(message: ProviderMessage): void\n}\n\nexport type EIP1193Events = {\n  on<event extends keyof EIP1193EventMap>(\n    event: event,\n    listener: EIP1193EventMap[event],\n  ): void\n  removeListener<event extends keyof EIP1193EventMap>(\n    event: event,\n    listener: EIP1193EventMap[event],\n  ): void\n}\n\n//////////////////////////////////////////////////\n// Provider Requests\n\nexport type AddEthereumChainParameter = {\n  /** A 0x-prefixed hexadecimal string */\n  chainId: string\n  /** The chain name. */\n  chainName: string\n  /** Native currency for the chain. */\n  nativeCurrency?:\n    | {\n        name: string\n        symbol: string\n        decimals: number\n      }\n    | undefined\n  rpcUrls: readonly string[]\n  blockExplorerUrls?: string[] | undefined\n  iconUrls?: string[] | undefined\n}\n\nexport type NetworkSync = {\n  /** The current block number */\n  currentBlock: Quantity\n  /** Number of latest block on the network */\n  highestBlock: Quantity\n  /** Block number at which syncing started */\n  startingBlock: Quantity\n}\n\nexport type WalletCallReceipt<quantity = Hex, status = Hex> = {\n  logs: {\n    address: Hex\n    data: Hex\n    topics: Hex[]\n  }[]\n  status: status\n  blockHash: Hex\n  blockNumber: quantity\n  gasUsed: quantity\n  transactionHash: Hex\n}\n\nexport type WalletGrantPermissionsParameters = {\n  signer?:\n    | {\n        type: string\n        data?: unknown | undefined\n      }\n    | undefined\n  permissions: readonly {\n    data: unknown\n    policies: readonly {\n      data: unknown\n      type: string\n    }[]\n    required?: boolean | undefined\n    type: string\n  }[]\n  expiry: number\n}\n\nexport type WalletGrantPermissionsReturnType = {\n  expiry: number\n  factory?: `0x${string}` | undefined\n  factoryData?: string | undefined\n  grantedPermissions: readonly {\n    data: unknown\n    policies: readonly {\n      data: unknown\n      type: string\n    }[]\n    required?: boolean | undefined\n    type: string\n  }[]\n  permissionsContext: string\n  signerData?:\n    | {\n        userOpBuilder?: `0x${string}` | undefined\n        submitToAddress?: `0x${string}` | undefined\n      }\n    | undefined\n}\n\nexport type WalletGetCallsStatusReturnType<\n  capabilities extends Capabilities = Capabilities,\n  numberType = Hex,\n  bigintType = Hex,\n  receiptStatus = Hex,\n> = {\n  atomic: boolean\n  capabilities?: capabilities | Capabilities | undefined\n  chainId: numberType\n  id: string\n  receipts?: WalletCallReceipt<bigintType, receiptStatus>[] | undefined\n  status: number\n  version: string\n}\n\nexport type WalletPermissionCaveat = {\n  type: string\n  value: any\n}\n\nexport type WalletPermission = {\n  caveats: WalletPermissionCaveat[]\n  date: number\n  id: string\n  invoker: `http://${string}` | `https://${string}`\n  parentCapability: 'eth_accounts' | string\n}\n\nexport type WalletSendCallsParameters<\n  capabilities extends Capabilities = Capabilities,\n  chainId extends Hex | number = Hex,\n  quantity extends Quantity | bigint = Quantity,\n> = [\n  {\n    atomicRequired: boolean\n    calls: readonly {\n      capabilities?: capabilities | Capabilities | undefined\n      to?: Address | undefined\n      data?: Hex | undefined\n      value?: quantity | undefined\n    }[]\n    capabilities?: capabilities | Capabilities | undefined\n    chainId?: chainId | undefined\n    id?: string | undefined\n    from?: Address | undefined\n    version: string\n  },\n]\n\nexport type WalletSendCallsReturnType<\n  capabilities extends Capabilities = Capabilities,\n> = {\n  capabilities?: capabilities | undefined\n  id: string\n}\n\nexport type WatchAssetParams = {\n  /** Token type. */\n  type: 'ERC20'\n  options: {\n    /** The address of the token contract */\n    address: string\n    /** A ticker symbol or shorthand, up to 11 characters */\n    symbol: string\n    /** The number of token decimals */\n    decimals: number\n    /** A string url of the token logo */\n    image?: string | undefined\n  }\n}\n\nexport type BundlerRpcSchema = [\n  /**\n   * @description Returns the chain ID associated with the current network\n   *\n   * @link https://eips.ethereum.org/EIPS/eip-4337#-eth_chainid\n   */\n  {\n    Method: 'eth_chainId'\n    Parameters?: undefined\n    ReturnType: Hex\n  },\n  /**\n   * @description Estimate the gas values for a UserOperation.\n   *\n   * @link https://eips.ethereum.org/EIPS/eip-4337#-eth_estimateuseroperationgas\n   *\n   * @example\n   * provider.request({\n   *  method: 'eth_estimateUserOperationGas',\n   *  params: [{ ... }]\n   * })\n   * // => { ... }\n   */\n  {\n    Method: 'eth_estimateUserOperationGas'\n    Parameters:\n      | [userOperation: RpcUserOperation, entrypoint: Address]\n      | [\n          userOperation: RpcUserOperation,\n          entrypoint: Address,\n          stateOverrideSet: RpcStateOverride,\n        ]\n    ReturnType: RpcEstimateUserOperationGasReturnType\n  },\n  /**\n   * @description Return a UserOperation based on a hash.\n   *\n   * @link https://eips.ethereum.org/EIPS/eip-4337#-eth_getuseroperationbyhash\n   *\n   * @example\n   * provider.request({\n   *  method: 'eth_getUserOperationByHash',\n   *  params: ['0x...']\n   * })\n   * // => { ... }\n   */\n  {\n    Method: 'eth_getUserOperationByHash'\n    Parameters: [hash: Hash]\n    ReturnType: RpcGetUserOperationByHashReturnType | null\n  },\n  /**\n   * @description Return a UserOperation receipt based on a hash.\n   *\n   * @link https://eips.ethereum.org/EIPS/eip-4337#-eth_getuseroperationreceipt\n   *\n   * @example\n   * provider.request({\n   *  method: 'eth_getUserOperationReceipt',\n   *  params: ['0x...']\n   * })\n   * // => { ... }\n   */\n  {\n    Method: 'eth_getUserOperationReceipt'\n    Parameters: [hash: Hash]\n    ReturnType: RpcUserOperationReceipt | null\n  },\n  /**\n   * @description Submits a User Operation object to the User Operation pool of the client.\n   *\n   * @link https://eips.ethereum.org/EIPS/eip-4337#-eth_senduseroperation\n   *\n   * @example\n   * provider.request({\n   *  method: 'eth_sendUserOperation',\n   *  params: [{ ... }]\n   * })\n   * // => '0x...'\n   */\n  {\n    Method: 'eth_sendUserOperation'\n    Parameters: [userOperation: RpcUserOperation, entrypoint: Address]\n    ReturnType: Hash\n  },\n  /**\n   * @description Return the list of supported entry points by the client.\n   *\n   * @link https://eips.ethereum.org/EIPS/eip-4337#-eth_supportedentrypoints\n   */\n  {\n    Method: 'eth_supportedEntryPoints'\n    Parameters?: undefined\n    ReturnType: readonly Address[]\n  },\n]\n\nexport type DebugBundlerRpcSchema = [\n  /**\n   * @description Clears the bundler mempool and reputation data of paymasters/accounts/factories/aggregators.\n   *\n   * @link https://github.com/eth-infinitism/bundler-spec/blob/a247b5de59a702063ea5b09d6136f119a061642b/src/debug/debug.yaml#L1\n   */\n  {\n    Method: 'debug_bundler_clearState'\n    Parameters?: undefined\n    ReturnType: undefined\n  },\n  /**\n   * @description Returns the current mempool\n   *\n   * @link https://github.com/eth-infinitism/bundler-spec/blob/a247b5de59a702063ea5b09d6136f119a061642b/src/debug/debug.yaml#L8\n   */\n  {\n    Method: 'debug_bundler_dumpMempool'\n    Parameters: [entryPoint: Address]\n    ReturnType: readonly { userOp: RpcUserOperation }[]\n  },\n  /**\n   * @description Forces the bundler to execute the entire current mempool.\n   *\n   * @link https://github.com/eth-infinitism/bundler-spec/blob/a247b5de59a702063ea5b09d6136f119a061642b/src/debug/debug.yaml#L19\n   */\n  {\n    Method: 'debug_bundler_sendBundleNow'\n    Parameters?: undefined\n    ReturnType: Hash\n  },\n  /**\n   * @description Toggles bundling mode between 'auto' and 'manual'\n   *\n   * @link https://github.com/eth-infinitism/bundler-spec/blob/a247b5de59a702063ea5b09d6136f119a061642b/src/debug/debug.yaml#L26\n   */\n  {\n    Method: 'debug_bundler_setBundlingMode'\n    Parameters: [mode: 'auto' | 'manual']\n    ReturnType: undefined\n  },\n  /**\n   * @description Sets reputation of given addresses.\n   *\n   * @link https://github.com/eth-infinitism/bundler-spec/blob/a247b5de59a702063ea5b09d6136f119a061642b/src/debug/debug.yaml#L37\n   */\n  {\n    Method: 'debug_bundler_setReputation'\n    Parameters: [\n      reputations: readonly {\n        address: Address\n        opsSeen: Hex\n        opsIncluded: Hex\n      }[],\n      entryPoint: Address,\n    ]\n    ReturnType: undefined\n  },\n  /**\n   * @description Returns the reputation data of all observed addresses.\n   *\n   * @link https://github.com/eth-infinitism/bundler-spec/blob/a247b5de59a702063ea5b09d6136f119a061642b/src/debug/debug.yaml#L52\n   */\n  {\n    Method: 'debug_bundler_dumpReputation'\n    Parameters: [entryPoint: Address]\n    ReturnType: readonly {\n      address: Address\n      opsSeen: Hex\n      opsIncluded: Hex\n    }[]\n  },\n  /**\n   * @description Add a bulk of UserOps into the mempool\n   *\n   * @link https://github.com/eth-infinitism/bundler-spec/blob/a247b5de59a702063ea5b09d6136f119a061642b/src/debug/debug.yaml#L64\n   */\n  {\n    Method: 'debug_bundler_addUserOps'\n    Parameters: [userOps: readonly RpcUserOperation[], entryPoint: Address]\n    ReturnType: undefined\n  },\n]\n\nexport type PaymasterRpcSchema = [\n  /**\n   * @description Returns the chain ID associated with the current network\n   *\n   * @link https://eips.ethereum.org/EIPS/eip-4337#-eth_chainid\n   */\n  {\n    Method: 'pm_getPaymasterStubData'\n    Parameters?: [\n      userOperation: OneOf<\n        | PartialBy<\n            Pick<\n              RpcUserOperation<'0.6'>,\n              | 'callData'\n              | 'callGasLimit'\n              | 'initCode'\n              | 'maxFeePerGas'\n              | 'maxPriorityFeePerGas'\n              | 'nonce'\n              | 'sender'\n              | 'preVerificationGas'\n              | 'verificationGasLimit'\n            >,\n            | 'callGasLimit'\n            | 'initCode'\n            | 'maxFeePerGas'\n            | 'maxPriorityFeePerGas'\n            | 'preVerificationGas'\n            | 'verificationGasLimit'\n          >\n        | PartialBy<\n            Pick<\n              RpcUserOperation<'0.7'>,\n              | 'callData'\n              | 'callGasLimit'\n              | 'factory'\n              | 'factoryData'\n              | 'maxFeePerGas'\n              | 'maxPriorityFeePerGas'\n              | 'nonce'\n              | 'sender'\n              | 'preVerificationGas'\n              | 'verificationGasLimit'\n            >,\n            | 'callGasLimit'\n            | 'factory'\n            | 'factoryData'\n            | 'maxFeePerGas'\n            | 'maxPriorityFeePerGas'\n            | 'preVerificationGas'\n            | 'verificationGasLimit'\n          >\n      >,\n      entrypoint: Address,\n      chainId: Hex,\n      context: unknown,\n    ]\n    ReturnType: OneOf<\n      | { paymasterAndData: Hex }\n      | {\n          paymaster: Address\n          paymasterData: Hex\n          paymasterVerificationGasLimit: Hex\n          paymasterPostOpGasLimit: Hex\n        }\n    > & {\n      sponsor?: { name: string; icon?: string | undefined } | undefined\n      isFinal?: boolean | undefined\n    }\n  },\n  /**\n   * @description Returns values to be used in paymaster-related fields of a signed user operation.\n   *\n   * @link https://github.com/ethereum/ERCs/blob/master/ERCS/erc-7677.md#pm_getpaymasterdata\n   */\n  {\n    Method: 'pm_getPaymasterData'\n    Parameters?: [\n      userOperation:\n        | Pick<\n            RpcUserOperation<'0.6'>,\n            | 'callData'\n            | 'callGasLimit'\n            | 'initCode'\n            | 'maxFeePerGas'\n            | 'maxPriorityFeePerGas'\n            | 'nonce'\n            | 'sender'\n            | 'preVerificationGas'\n            | 'verificationGasLimit'\n          >\n        | Pick<\n            RpcUserOperation<'0.7'>,\n            | 'callData'\n            | 'callGasLimit'\n            | 'factory'\n            | 'factoryData'\n            | 'maxFeePerGas'\n            | 'maxPriorityFeePerGas'\n            | 'nonce'\n            | 'sender'\n            | 'preVerificationGas'\n            | 'verificationGasLimit'\n          >,\n      entrypoint: Address,\n      chainId: Hex,\n      context: unknown,\n    ]\n    ReturnType: OneOf<\n      | { paymasterAndData: Hex }\n      | {\n          paymaster: Address\n          paymasterData: Hex\n          paymasterVerificationGasLimit: Hex\n          paymasterPostOpGasLimit: Hex\n        }\n    >\n  },\n]\n\nexport type PublicRpcSchema = [\n  /**\n   * @description Returns the version of the current client\n   *\n   * @example\n   * provider.request({ method: 'web3_clientVersion' })\n   * // => 'MetaMask/v1.0.0'\n   */\n  {\n    Method: 'web3_clientVersion'\n    Parameters?: undefined\n    ReturnType: string\n  },\n  /**\n   * @description Hashes data using the Keccak-256 algorithm\n   *\n   * @example\n   * provider.request({ method: 'web3_sha3', params: ['0x68656c6c6f20776f726c64'] })\n   * // => '0xc94770007dda54cF92009BFF0dE90c06F603a09f'\n   */\n  {\n    Method: 'web3_sha3'\n    Parameters: [data: Hash]\n    ReturnType: string\n  },\n  /**\n   * @description Determines if this client is listening for new network connections\n   *\n   * @example\n   * provider.request({ method: 'net_listening' })\n   * // => true\n   */\n  {\n    Method: 'net_listening'\n    Parameters?: undefined\n    ReturnType: boolean\n  },\n  /**\n   * @description Returns the number of peers currently connected to this client\n   *\n   * @example\n   * provider.request({ method: 'net_peerCount' })\n   * // => '0x1'\n   */\n  {\n    Method: 'net_peerCount'\n    Parameters?: undefined\n    ReturnType: Quantity\n  },\n  /**\n   * @description Returns the chain ID associated with the current network\n   *\n   * @example\n   * provider.request({ method: 'net_version' })\n   * // => '1'\n   */\n  {\n    Method: 'net_version'\n    Parameters?: undefined\n    ReturnType: Quantity\n  },\n  /**\n   * @description Returns the base fee per blob gas in wei.\n   *\n   * @example\n   * provider.request({ method: 'eth_blobBaseFee' })\n   * // => '0x09184e72a000'\n   */\n  {\n    Method: 'eth_blobBaseFee'\n    Parameters?: undefined\n    ReturnType: Quantity\n  },\n  /**\n   * @description Returns the number of the most recent block seen by this client\n   *\n   * @example\n   * provider.request({ method: 'eth_blockNumber' })\n   * // => '0x1b4'\n   */\n  {\n    Method: 'eth_blockNumber'\n    Parameters?: undefined\n    ReturnType: Quantity\n  },\n  /**\n   * @description Executes a new message call immediately without submitting a transaction to the network\n   *\n   * @example\n   * provider.request({ method: 'eth_call', params: [{ to: '0x...', data: '0x...' }] })\n   * // => '0x...'\n   */\n  {\n    Method: 'eth_call'\n    Parameters:\n      | readonly [transaction: ExactPartial<TransactionRequest>]\n      | readonly [\n          transaction: ExactPartial<TransactionRequest>,\n          block: BlockNumber | BlockTag | BlockIdentifier,\n        ]\n      | readonly [\n          transaction: ExactPartial<TransactionRequest>,\n          block: BlockNumber | BlockTag | BlockIdentifier,\n          stateOverrideSet: RpcStateOverride,\n        ]\n      | readonly [\n          transaction: ExactPartial<TransactionRequest>,\n          block: BlockNumber | BlockTag | BlockIdentifier,\n          stateOverrideSet: RpcStateOverride,\n          blockOverrides: BlockOverrides.Rpc,\n        ]\n    ReturnType: Hex\n  },\n  /**\n   * @description Executes a new message call immediately without submitting a transaction to the network\n   *\n   * @example\n   * provider.request({ method: 'eth_call', params: [{ to: '0x...', data: '0x...' }] })\n   * // => '0x...'\n   */\n  {\n    Method: 'eth_createAccessList'\n    Parameters:\n      | [transaction: ExactPartial<TransactionRequest>]\n      | [\n          transaction: ExactPartial<TransactionRequest>,\n          block: BlockNumber | BlockTag | BlockIdentifier,\n        ]\n    ReturnType: {\n      accessList: AccessList\n      gasUsed: Quantity\n    }\n  },\n  /**\n   * @description Returns the chain ID associated with the current network\n   * @example\n   * provider.request({ method: 'eth_chainId' })\n   * // => '1'\n   */\n  {\n    Method: 'eth_chainId'\n    Parameters?: undefined\n    ReturnType: Quantity\n  },\n  /**\n   * @description Returns the client coinbase address.\n   * @example\n   * provider.request({ method: 'eth_coinbase' })\n   * // => '0x...'\n   */\n  {\n    Method: 'eth_coinbase'\n    Parameters?: undefined\n    ReturnType: Address\n  },\n  /**\n   * @description Estimates the gas necessary to complete a transaction without submitting it to the network\n   *\n   * @example\n   * provider.request({\n   *  method: 'eth_estimateGas',\n   *  params: [{ from: '0x...', to: '0x...', value: '0x...' }]\n   * })\n   * // => '0x5208'\n   */\n  {\n    Method: 'eth_estimateGas'\n    Parameters:\n      | [transaction: TransactionRequest]\n      | [transaction: TransactionRequest, block: BlockNumber | BlockTag]\n      | [\n          transaction: TransactionRequest,\n          block: BlockNumber | BlockTag,\n          stateOverride: RpcStateOverride,\n        ]\n    ReturnType: Quantity\n  },\n  /**\n   * @description Returns a collection of historical gas information\n   *\n   * @example\n   * provider.request({\n   *  method: 'eth_feeHistory',\n   *  params: ['4', 'latest', ['25', '75']]\n   * })\n   * // => {\n   * //   oldestBlock: '0x1',\n   * //   baseFeePerGas: ['0x1', '0x2', '0x3', '0x4'],\n   * //   gasUsedRatio: ['0x1', '0x2', '0x3', '0x4'],\n   * //   reward: [['0x1', '0x2'], ['0x3', '0x4'], ['0x5', '0x6'], ['0x7', '0x8']]\n   * // }\n   * */\n  {\n    Method: 'eth_feeHistory'\n    Parameters: [\n      /** Number of blocks in the requested range. Between 1 and 1024 blocks can be requested in a single query. Less than requested may be returned if not all blocks are available. */\n      blockCount: Quantity,\n      /** Highest number block of the requested range. */\n      newestBlock: BlockNumber | BlockTag,\n      /** A monotonically increasing list of percentile values to sample from each block's effective priority fees per gas in ascending order, weighted by gas used. */\n      rewardPercentiles: number[] | undefined,\n    ]\n    ReturnType: FeeHistory\n  },\n  /**\n   * @description Returns the current price of gas expressed in wei\n   *\n   * @example\n   * provider.request({ method: 'eth_gasPrice' })\n   * // => '0x09184e72a000'\n   */\n  {\n    Method: 'eth_gasPrice'\n    Parameters?: undefined\n    ReturnType: Quantity\n  },\n  /**\n   * @description Returns the balance of an address in wei\n   *\n   * @example\n   * provider.request({ method: 'eth_getBalance', params: ['0x...', 'latest'] })\n   * // => '0x12a05...'\n   */\n  {\n    Method: 'eth_getBalance'\n    Parameters: [\n      address: Address,\n      block: BlockNumber | BlockTag | BlockIdentifier,\n    ]\n    ReturnType: Quantity\n  },\n  /**\n   * @description Returns information about a block specified by hash\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getBlockByHash', params: ['0x...', true] })\n   * // => {\n   * //   number: '0x1b4',\n   * //   hash: '0x...',\n   * //   parentHash: '0x...',\n   * //   ...\n   * // }\n   */\n  {\n    Method: 'eth_getBlockByHash'\n    Parameters: [\n      /** hash of a block */\n      hash: Hash,\n      /** true will pull full transaction objects, false will pull transaction hashes */\n      includeTransactionObjects: boolean,\n    ]\n    ReturnType: Block | null\n  },\n  /**\n   * @description Returns information about a block specified by number\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getBlockByNumber', params: ['0x1b4', true] })\n   * // => {\n   * //   number: '0x1b4',\n   * //   hash: '0x...',\n   * //   parentHash: '0x...',\n   * //   ...\n   * // }\n   */\n  {\n    Method: 'eth_getBlockByNumber'\n    Parameters: [\n      /** block number, or one of \"latest\", \"safe\", \"finalized\", \"earliest\" or \"pending\" */\n      block: BlockNumber | BlockTag,\n      /** true will pull full transaction objects, false will pull transaction hashes */\n      includeTransactionObjects: boolean,\n    ]\n    ReturnType: Block | null\n  },\n  /**\n   * @description Returns the number of transactions in a block specified by block hash\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getBlockTransactionCountByHash', params: ['0x...'] })\n   * // => '0x1'\n   */\n  {\n    Method: 'eth_getBlockTransactionCountByHash'\n    Parameters: [hash: Hash]\n    ReturnType: Quantity\n  },\n  /**\n   * @description Returns the number of transactions in a block specified by block number\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getBlockTransactionCountByNumber', params: ['0x1b4'] })\n   * // => '0x1'\n   */\n  {\n    Method: 'eth_getBlockTransactionCountByNumber'\n    Parameters: [block: BlockNumber | BlockTag]\n    ReturnType: Quantity\n  },\n  /**\n   * @description Returns the contract code stored at a given address\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getCode', params: ['0x...', 'latest'] })\n   * // => '0x...'\n   */\n  {\n    Method: 'eth_getCode'\n    Parameters: [\n      address: Address,\n      block: BlockNumber | BlockTag | BlockIdentifier,\n    ]\n    ReturnType: Hex\n  },\n  /**\n   * @description Returns a list of all logs based on filter ID since the last log retrieval\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getFilterChanges', params: ['0x...'] })\n   * // => [{ ... }, { ... }]\n   */\n  {\n    Method: 'eth_getFilterChanges'\n    Parameters: [filterId: Quantity]\n    ReturnType: Log[] | Hex[]\n  },\n  /**\n   * @description Returns a list of all logs based on filter ID\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getFilterLogs', params: ['0x...'] })\n   * // => [{ ... }, { ... }]\n   */\n  {\n    Method: 'eth_getFilterLogs'\n    Parameters: [filterId: Quantity]\n    ReturnType: Log[]\n  },\n  /**\n   * @description Returns a list of all logs based on a filter object\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getLogs', params: [{ fromBlock: '0x...', toBlock: '0x...', address: '0x...', topics: ['0x...'] }] })\n   * // => [{ ... }, { ... }]\n   */\n  {\n    Method: 'eth_getLogs'\n    Parameters: [\n      {\n        address?: Address | Address[] | undefined\n        topics?: LogTopic[] | undefined\n      } & (\n        | {\n            fromBlock?: BlockNumber | BlockTag | undefined\n            toBlock?: BlockNumber | BlockTag | undefined\n            blockHash?: undefined\n          }\n        | {\n            fromBlock?: undefined\n            toBlock?: undefined\n            blockHash?: Hash | undefined\n          }\n      ),\n    ]\n    ReturnType: Log[]\n  },\n  /**\n   * @description Returns the account and storage values of the specified account including the Merkle-proof.\n   * @link https://eips.ethereum.org/EIPS/eip-1186\n   * @example\n   * provider.request({ method: 'eth_getProof', params: ['0x...', ['0x...'], 'latest'] })\n   * // => {\n   * //   ...\n   * // }\n   */\n  {\n    Method: 'eth_getProof'\n    Parameters: [\n      /** Address of the account. */\n      address: Address,\n      /** An array of storage-keys that should be proofed and included. */\n      storageKeys: Hash[],\n      block: BlockNumber | BlockTag,\n    ]\n    ReturnType: Proof\n  },\n  /**\n   * @description Returns the value from a storage position at an address\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getStorageAt', params: ['0x...', '0x...', 'latest'] })\n   * // => '0x...'\n   */\n  {\n    Method: 'eth_getStorageAt'\n    Parameters: [\n      address: Address,\n      index: Quantity,\n      block: BlockNumber | BlockTag | BlockIdentifier,\n    ]\n    ReturnType: Hex\n  },\n  /**\n   * @description Returns information about a transaction specified by block hash and transaction index\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getTransactionByBlockHashAndIndex', params: ['0x...', '0x...'] })\n   * // => { ... }\n   */\n  {\n    Method: 'eth_getTransactionByBlockHashAndIndex'\n    Parameters: [hash: Hash, index: Quantity]\n    ReturnType: Transaction | null\n  },\n  /**\n   * @description Returns information about a transaction specified by block number and transaction index\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getTransactionByBlockNumberAndIndex', params: ['0x...', '0x...'] })\n   * // => { ... }\n   */\n  {\n    Method: 'eth_getTransactionByBlockNumberAndIndex'\n    Parameters: [block: BlockNumber | BlockTag, index: Quantity]\n    ReturnType: Transaction | null\n  },\n  /**\n   * @description Returns information about a transaction specified by hash\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getTransactionByHash', params: ['0x...'] })\n   * // => { ... }\n   */\n  {\n    Method: 'eth_getTransactionByHash'\n    Parameters: [hash: Hash]\n    ReturnType: Transaction | null\n  },\n  /**\n   * @description Returns the number of transactions sent from an address\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getTransactionCount', params: ['0x...', 'latest'] })\n   * // => '0x1'\n   */\n  {\n    Method: 'eth_getTransactionCount'\n    Parameters: [\n      address: Address,\n      block: BlockNumber | BlockTag | BlockIdentifier,\n    ]\n    ReturnType: Quantity\n  },\n  /**\n   * @description Returns the receipt of a transaction specified by hash\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getTransactionReceipt', params: ['0x...'] })\n   * // => { ... }\n   */\n  {\n    Method: 'eth_getTransactionReceipt'\n    Parameters: [hash: Hash]\n    ReturnType: TransactionReceipt | null\n  },\n  /**\n   * @description Returns information about an uncle specified by block hash and uncle index position\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getUncleByBlockHashAndIndex', params: ['0x...', '0x...'] })\n   * // => { ... }\n   */\n  {\n    Method: 'eth_getUncleByBlockHashAndIndex'\n    Parameters: [hash: Hash, index: Quantity]\n    ReturnType: Uncle | null\n  },\n  /**\n   * @description Returns information about an uncle specified by block number and uncle index position\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getUncleByBlockNumberAndIndex', params: ['0x...', '0x...'] })\n   * // => { ... }\n   */\n  {\n    Method: 'eth_getUncleByBlockNumberAndIndex'\n    Parameters: [block: BlockNumber | BlockTag, index: Quantity]\n    ReturnType: Uncle | null\n  },\n  /**\n   * @description Returns the number of uncles in a block specified by block hash\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getUncleCountByBlockHash', params: ['0x...'] })\n   * // => '0x1'\n   */\n  {\n    Method: 'eth_getUncleCountByBlockHash'\n    Parameters: [hash: Hash]\n    ReturnType: Quantity\n  },\n  /**\n   * @description Returns the number of uncles in a block specified by block number\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getUncleCountByBlockNumber', params: ['0x...'] })\n   * // => '0x1'\n   */\n  {\n    Method: 'eth_getUncleCountByBlockNumber'\n    Parameters: [block: BlockNumber | BlockTag]\n    ReturnType: Quantity\n  },\n  /**\n   * @description Returns the current maxPriorityFeePerGas in wei.\n   * @link https://ethereum.github.io/execution-apis/api-documentation/\n   * @example\n   * provider.request({ method: 'eth_maxPriorityFeePerGas' })\n   * // => '0x5f5e100'\n   */\n  {\n    Method: 'eth_maxPriorityFeePerGas'\n    Parameters?: undefined\n    ReturnType: Quantity\n  },\n  /**\n   * @description Creates a filter to listen for new blocks that can be used with `eth_getFilterChanges`\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_newBlockFilter' })\n   * // => '0x1'\n   */\n  {\n    Method: 'eth_newBlockFilter'\n    Parameters?: undefined\n    ReturnType: Quantity\n  },\n  /**\n   * @description Creates a filter to listen for specific state changes that can then be used with `eth_getFilterChanges`\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_newFilter', params: [{ fromBlock: '0x...', toBlock: '0x...', address: '0x...', topics: ['0x...'] }] })\n   * // => '0x1'\n   */\n  {\n    Method: 'eth_newFilter'\n    Parameters: [\n      filter: {\n        fromBlock?: BlockNumber | BlockTag | undefined\n        toBlock?: BlockNumber | BlockTag | undefined\n        address?: Address | Address[] | undefined\n        topics?: LogTopic[] | undefined\n      },\n    ]\n    ReturnType: Quantity\n  },\n  /**\n   * @description Creates a filter to listen for new pending transactions that can be used with `eth_getFilterChanges`\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_newPendingTransactionFilter' })\n   * // => '0x1'\n   */\n  {\n    Method: 'eth_newPendingTransactionFilter'\n    Parameters?: undefined\n    ReturnType: Quantity\n  },\n  /**\n   * @description Returns the current Ethereum protocol version\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_protocolVersion' })\n   * // => '54'\n   */\n  {\n    Method: 'eth_protocolVersion'\n    Parameters?: undefined\n    ReturnType: string\n  },\n  /**\n   * @description Sends a **signed** transaction to the network\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_sendRawTransaction', params: ['0x...'] })\n   * // => '0x...'\n   */\n  {\n    Method: 'eth_sendRawTransaction'\n    Parameters: [signedTransaction: Hex]\n    ReturnType: Hash\n  },\n  /**\n   * @description Simulates execution of a set of calls with optional block and state overrides.\n   * @example\n   * provider.request({ method: 'eth_simulateV1', params: [{ blockStateCalls: [{ calls: [{ from: '0x...', to: '0x...', value: '0x...', data: '0x...' }] }] }, 'latest'] })\n   * // => { ... }\n   */\n  {\n    Method: 'eth_simulateV1'\n    Parameters: [\n      {\n        blockStateCalls: readonly {\n          blockOverrides?: BlockOverrides.Rpc | undefined\n          calls?: readonly ExactPartial<TransactionRequest>[] | undefined\n          stateOverrides?: RpcStateOverride | undefined\n        }[]\n        returnFullTransactions?: boolean | undefined\n        traceTransfers?: boolean | undefined\n        validation?: boolean | undefined\n      },\n      BlockNumber | BlockTag,\n    ]\n    ReturnType: readonly (Block & {\n      calls: readonly {\n        error?:\n          | {\n              data?: Hex | undefined\n              code: number\n              message: string\n            }\n          | undefined\n        logs?: readonly Log[] | undefined\n        gasUsed: Hex\n        returnData: Hex\n        status: Hex\n      }[]\n    })[]\n  },\n  /**\n   * @description Destroys a filter based on filter ID\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_uninstallFilter', params: ['0x1'] })\n   * // => true\n   */\n  {\n    Method: 'eth_uninstallFilter'\n    Parameters: [filterId: Quantity]\n    ReturnType: boolean\n  },\n]\n\nexport type TestRpcSchema<mode extends string> = [\n  /**\n   * @description Add information about compiled contracts\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_addcompilationresult\n   */\n  {\n    Method: `${mode}_addCompilationResult`\n    Parameters: any[]\n    ReturnType: any\n  },\n  /**\n   * @description Remove a transaction from the mempool\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_droptransaction\n   */\n  {\n    Method: `${mode}_dropTransaction`\n    Parameters: [hash: Hash]\n    ReturnType: void\n  },\n  /**\n   * @description Serializes the current state (including contracts code, contract's storage, accounts properties, etc.) into a savable data blob.\n   */\n  {\n    Method: `${mode}_dumpState`\n    Parameters?: undefined\n    ReturnType: Hex\n  },\n  /**\n   * @description Turn on call traces for transactions that are returned to the user when they execute a transaction (instead of just txhash/receipt).\n   */\n  {\n    Method: `${mode}_enableTraces`\n    Parameters?: undefined\n    ReturnType: void\n  },\n  /**\n   * @description Impersonate an account or contract address.\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_impersonateaccount\n   */\n  {\n    Method: `${mode}_impersonateAccount`\n    Parameters: [address: Address]\n    ReturnType: void\n  },\n  /**\n   * @description Returns true if automatic mining is enabled, and false otherwise. See [Mining Modes](https://hardhat.org/hardhat-network/explanation/mining-modes) to learn more.\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_getautomine\n   */\n  {\n    Method: `${mode}_getAutomine`\n    Parameters?: undefined\n    ReturnType: boolean\n  },\n  /**\n   * @description Adds state previously dumped with `dumpState` to the current chain.\n   */\n  {\n    Method: `${mode}_loadState`\n    Parameters?: [Hex] | undefined\n    ReturnType: void\n  },\n  /**\n   * @description Advance the block number of the network by a certain number of blocks\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_mine\n   */\n  {\n    Method: `${mode}_mine`\n    Parameters: [\n      /** Number of blocks to mine. */\n      count: Hex,\n      /** Interval between each block in seconds. */\n      interval: Hex | undefined,\n    ]\n    ReturnType: void\n  },\n  /**\n   * @description Resets the fork.\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_reset\n   */\n  {\n    Method: `${mode}_reset`\n    Parameters: any[]\n    ReturnType: void\n  },\n  /**\n   * @description Modifies the balance of an account.\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_setbalance\n   */\n  {\n    Method: `${mode}_setBalance`\n    Parameters: [\n      /** The address of the target account. */\n      address: Address,\n      /** Amount to send in wei. */\n      balance: Quantity,\n    ]\n    ReturnType: void\n  },\n  /**\n   * @description Modifies the bytecode stored at an account's address.\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_setcode\n   */\n  {\n    Method: `${mode}_setCode`\n    Parameters: [\n      /** The address of the contract. */\n      address: Address,\n      /** Data bytecode. */\n      data: string,\n    ]\n    ReturnType: void\n  },\n  /**\n   * @description Sets the coinbase address to be used in new blocks.\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_setcoinbase\n   */\n  {\n    Method: `${mode}_setCoinbase`\n    Parameters: [\n      /** The address to set as the coinbase address. */\n      address: Address,\n    ]\n    ReturnType: void\n  },\n  /**\n   * @description Enable or disable logging on the test node network.\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_setcoinbase\n   */\n  {\n    Method: `${mode}_setLoggingEnabled`\n    Parameters: [enabled: boolean]\n    ReturnType: void\n  },\n  /**\n   * @description Change the minimum gas price accepted by the network (in wei).\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_setmingasprice\n   */\n  {\n    Method: `${mode}_setMinGasPrice`\n    Parameters: [gasPrice: Quantity]\n    ReturnType: void\n  },\n  /**\n   * @description Sets the base fee of the next block.\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_setnextblockbasefeepergas\n   */\n  {\n    Method: `${mode}_setNextBlockBaseFeePerGas`\n    Parameters: [baseFeePerGas: Quantity]\n    ReturnType: void\n  },\n  /**\n   * @description Modifies an account's nonce by overwriting it.\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_setnonce\n   */\n  {\n    Method: `${mode}_setNonce`\n    Parameters: [\n      /** The account address. */\n      address: Address,\n      /** The new nonce. */\n      nonce: Quantity,\n    ]\n    ReturnType: void\n  },\n  /**\n   * @description Sets the backend RPC URL.\n   */\n  {\n    Method: `${mode}_setRpcUrl`\n    Parameters: [url: string]\n    ReturnType: void\n  },\n  /**\n   * @description Writes a single position of an account's storage.\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_setstorageat\n   */\n  {\n    Method: `${mode}_setStorageAt`\n    Parameters: [\n      /** The account address. */\n      address: Address,\n      /** The storage position index. */\n      index: Quantity,\n      /** The storage value. */\n      value: Quantity,\n    ]\n    ReturnType: void\n  },\n  /**\n   * @description Use this method to stop impersonating an account after having previously used impersonateAccount.\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_stopimpersonatingaccount\n   */\n  {\n    Method: `${mode}_stopImpersonatingAccount`\n    Parameters: [\n      /** The address to stop impersonating. */\n      address: Address,\n    ]\n    ReturnType: void\n  },\n  /**\n   * @description Jump forward in time by the given amount of time, in seconds.\n   * @link https://github.com/trufflesuite/ganache/blob/ef1858d5d6f27e4baeb75cccd57fb3dc77a45ae8/src/chains/ethereum/ethereum/RPC-METHODS.md#evm_increasetime\n   */\n  {\n    Method: `${mode}_increaseTime`\n    Parameters: [seconds: number]\n    ReturnType: Quantity\n  },\n  /**\n   * @description Modifies the balance of an account.\n   * @link https://ganache.dev/#evm_setAccountBalance\n   */\n  {\n    Method: 'evm_setAccountBalance'\n    Parameters: [\n      /** The address of the target account. */\n      address: Address,\n      /** Amount to send in wei. */\n      value: Quantity,\n    ]\n    ReturnType: void\n  },\n  /**\n   * @description Modifies the bytecode stored at an account's address.\n   * @link https://ganache.dev/#evm_setAccountCode\n   */\n  {\n    Method: 'evm_setAccountCode'\n    Parameters: [\n      /** The address of the contract. */\n      address: Address,\n      /** Data bytecode. */\n      data: string,\n    ]\n    ReturnType: void\n  },\n  /**\n   * @description Enables or disables, based on the single boolean argument, the automatic mining of new blocks with each new transaction submitted to the network.\n   * @link https://hardhat.org/hardhat-network/docs/reference#evm_setautomine\n   */\n  {\n    Method: 'evm_setAutomine'\n    Parameters: [boolean]\n    ReturnType: void\n  },\n  /**\n   * @description Sets the block's gas limit.\n   * @link https://hardhat.org/hardhat-network/docs/reference#evm_setblockgaslimit\n   */\n  {\n    Method: 'evm_setBlockGasLimit'\n    Parameters: [gasLimit: Quantity]\n    ReturnType: void\n  },\n  /**\n   * @description Jump forward in time by the given amount of time, in seconds.\n   * @link https://github.com/trufflesuite/ganache/blob/ef1858d5d6f27e4baeb75cccd57fb3dc77a45ae8/src/chains/ethereum/ethereum/RPC-METHODS.md#evm_increasetime\n   */\n  {\n    Method: 'evm_increaseTime'\n    Parameters: [seconds: Quantity]\n    ReturnType: Quantity\n  },\n  /**\n   * @description Similar to `evm_increaseTime` but sets a block timestamp `interval`.\n   * The timestamp of the next block will be computed as `lastBlock_timestamp` + `interval`\n   */\n  {\n    Method: `${mode}_setBlockTimestampInterval`\n    Parameters: [seconds: number]\n    ReturnType: void\n  },\n  /**\n   * @description Removes `setBlockTimestampInterval` if it exists\n   */\n  {\n    Method: `${mode}_removeBlockTimestampInterval`\n    Parameters?: undefined\n    ReturnType: void\n  },\n  /**\n   * @description Enables (with a numeric argument greater than 0) or disables (with a numeric argument equal to 0), the automatic mining of blocks at a regular interval of milliseconds, each of which will include all pending transactions.\n   * @link https://hardhat.org/hardhat-network/docs/reference#evm_setintervalmining\n   */\n  {\n    Method: 'evm_setIntervalMining'\n    Parameters: [number]\n    ReturnType: void\n  },\n  /**\n   * @description Set the timestamp of the next block.\n   * @link https://hardhat.org/hardhat-network/docs/reference#evm_setnextblocktimestamp\n   */\n  {\n    Method: 'evm_setNextBlockTimestamp'\n    Parameters: [Quantity]\n    ReturnType: void\n  },\n  /**\n   * @description Snapshot the state of the blockchain at the current block. Takes no parameters. Returns the id of the snapshot that was created.\n   * @link https://hardhat.org/hardhat-network/docs/reference#evm_snapshot\n   */\n  {\n    Method: 'evm_snapshot'\n    Parameters?: undefined\n    ReturnType: Quantity\n  },\n  /**\n   * @description Revert the state of the blockchain to a previous snapshot. Takes a single parameter, which is the snapshot id to revert to.\n   */\n  {\n    Method: 'evm_revert'\n    Parameters?: [id: Quantity] | undefined\n    ReturnType: void\n  },\n  /**\n   * @description Enables the automatic mining of new blocks with each new transaction submitted to the network.\n   * @link https://ganache.dev/#miner_start\n   */\n  {\n    Method: 'miner_start'\n    Parameters?: undefined\n    ReturnType: void\n  },\n  /**\n   * @description Disables the automatic mining of new blocks with each new transaction submitted to the network.\n   * @link https://ganache.dev/#miner_stop\n   */\n  {\n    Method: 'miner_stop'\n    Parameters?: undefined\n    ReturnType: void\n  },\n  /**\n   * @link https://geth.ethereum.org/docs/interacting-with-geth/rpc/ns-txpool#txpool-content\n   */\n  {\n    Method: 'txpool_content'\n    Parameters?: undefined\n    ReturnType: {\n      pending: Record<Address, Record<string, Transaction>>\n      queued: Record<Address, Record<string, Transaction>>\n    }\n  },\n  /**\n   * @link https://geth.ethereum.org/docs/interacting-with-geth/rpc/ns-txpool#txpool-inspect\n   */\n  {\n    Method: 'txpool_inspect'\n    Parameters?: undefined\n    ReturnType: {\n      pending: Record<Address, Record<string, string>>\n      queued: Record<Address, Record<string, string>>\n    }\n  },\n  /**\n   * @link https://geth.ethereum.org/docs/interacting-with-geth/rpc/ns-txpool#txpool-inspect\n   */\n  {\n    Method: 'txpool_status'\n    Parameters?: undefined\n    ReturnType: {\n      pending: Quantity\n      queued: Quantity\n    }\n  },\n  /**\n   * @description Returns whether the client is actively mining new blocks.\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_mining' })\n   * // => true\n   */\n  {\n    Method: 'eth_mining'\n    Parameters?: undefined\n    ReturnType: boolean\n  },\n  /**\n   * @description Advance the block number of the network by a certain number of blocks.\n   * @link https://ganache.dev/#evm_mine\n   */\n  {\n    Method: 'evm_mine'\n    Parameters?:\n      | [\n          {\n            /** Number of blocks to mine. */\n            blocks: Hex\n          },\n        ]\n      | undefined\n    ReturnType: void\n  },\n  /**\n   * @description Creates, signs, and sends a new transaction to the network regardless of the signature.\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_sendTransaction', params: [{ from: '0x...', to: '0x...', value: '0x...' }] })\n   * // => '0x...'\n   */\n  {\n    Method: 'eth_sendUnsignedTransaction'\n    Parameters: [transaction: TransactionRequest]\n    ReturnType: Hash\n  },\n]\n\nexport type WalletRpcSchema = [\n  /**\n   * @description Returns a list of addresses owned by this client\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_accounts' })\n   * // => ['0x0fB69...']\n   */\n  {\n    Method: 'eth_accounts'\n    Parameters?: undefined\n    ReturnType: Address[]\n  },\n  /**\n   * @description Returns the current chain ID associated with the wallet.\n   * @example\n   * provider.request({ method: 'eth_chainId' })\n   * // => '1'\n   */\n  {\n    Method: 'eth_chainId'\n    Parameters?: undefined\n    ReturnType: Quantity\n  },\n  /**\n   * @description Estimates the gas necessary to complete a transaction without submitting it to the network\n   *\n   * @example\n   * provider.request({\n   *  method: 'eth_estimateGas',\n   *  params: [{ from: '0x...', to: '0x...', value: '0x...' }]\n   * })\n   * // => '0x5208'\n   */\n  {\n    Method: 'eth_estimateGas'\n    Parameters:\n      | [transaction: TransactionRequest]\n      | [transaction: TransactionRequest, block: BlockNumber | BlockTag]\n      | [\n          transaction: TransactionRequest,\n          block: BlockNumber | BlockTag,\n          stateOverride: RpcStateOverride,\n        ]\n    ReturnType: Quantity\n  },\n  /**\n   * @description Requests that the user provides an Ethereum address to be identified by. Typically causes a browser extension popup to appear.\n   * @link https://eips.ethereum.org/EIPS/eip-1102\n   * @example\n   * provider.request({ method: 'eth_requestAccounts' }] })\n   * // => ['0x...', '0x...']\n   */\n  {\n    Method: 'eth_requestAccounts'\n    Parameters?: undefined\n    ReturnType: Address[]\n  },\n  /**\n   * @description Creates, signs, and sends a new transaction to the network\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_sendTransaction', params: [{ from: '0x...', to: '0x...', value: '0x...' }] })\n   * // => '0x...'\n   */\n  {\n    Method: 'eth_sendTransaction'\n    Parameters: [transaction: TransactionRequest]\n    ReturnType: Hash\n  },\n  /**\n   * @description Sends and already-signed transaction to the network\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_sendRawTransaction', params: ['0x...'] })\n   * // => '0x...'\n   */\n  {\n    Method: 'eth_sendRawTransaction'\n    Parameters: [signedTransaction: Hex]\n    ReturnType: Hash\n  },\n  /**\n   * @description Calculates an Ethereum-specific signature in the form of `keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message))`\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_sign', params: ['0x...', '0x...'] })\n   * // => '0x...'\n   */\n  {\n    Method: 'eth_sign'\n    Parameters: [\n      /** Address to use for signing */\n      address: Address,\n      /** Data to sign */\n      data: Hex,\n    ]\n    ReturnType: Hex\n  },\n  /**\n   * @description Signs a transaction that can be submitted to the network at a later time using with `eth_sendRawTransaction`\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_signTransaction', params: [{ from: '0x...', to: '0x...', value: '0x...' }] })\n   * // => '0x...'\n   */\n  {\n    Method: 'eth_signTransaction'\n    Parameters: [request: TransactionRequest]\n    ReturnType: Hex\n  },\n  /**\n   * @description Calculates an Ethereum-specific signature in the form of `keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message))`\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_signTypedData_v4', params: [{ from: '0x...', data: [{ type: 'string', name: 'message', value: 'hello world' }] }] })\n   * // => '0x...'\n   */\n  {\n    Method: 'eth_signTypedData_v4'\n    Parameters: [\n      /** Address to use for signing */\n      address: Address,\n      /** Message to sign containing type information, a domain separator, and data */\n      message: string,\n    ]\n    ReturnType: Hex\n  },\n  /**\n   * @description Returns information about the status of this client’s network synchronization\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_syncing' })\n   * // => { startingBlock: '0x...', currentBlock: '0x...', highestBlock: '0x...' }\n   */\n  {\n    Method: 'eth_syncing'\n    Parameters?: undefined\n    ReturnType: NetworkSync | false\n  },\n  /**\n   * @description Calculates an Ethereum-specific signature in the form of `keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message))`\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'personal_sign', params: ['0x...', '0x...'] })\n   * // => '0x...'\n   */\n  {\n    Method: 'personal_sign'\n    Parameters: [\n      /** Data to sign */\n      data: Hex,\n      /** Address to use for signing */\n      address: Address,\n    ]\n    ReturnType: Hex\n  },\n  /**\n   * @description Add an Ethereum chain to the wallet.\n   * @link https://eips.ethereum.org/EIPS/eip-3085\n   * @example\n   * provider.request({ method: 'wallet_addEthereumChain', params: [{ chainId: 1, rpcUrl: 'https://mainnet.infura.io/v3/...' }] })\n   * // => { ... }\n   */\n  {\n    Method: 'wallet_addEthereumChain'\n    Parameters: [chain: AddEthereumChainParameter]\n    ReturnType: null\n  },\n  /**\n   *\n   */\n  {\n    Method: 'wallet_addSubAccount'\n    Parameters: [\n      {\n        account: OneOf<\n          | {\n              keys: readonly {\n                publicKey: Hex\n                type: 'address' | 'p256' | 'webcrypto-p256' | 'webauthn-p256'\n              }[]\n              type: 'create'\n            }\n          | {\n              address: Address\n              chainId?: number | undefined\n              type: 'deployed'\n            }\n          | {\n              address: Address\n              chainId?: number | undefined\n              factory: Address\n              factoryData: Hex\n              type: 'undeployed'\n            }\n        >\n        version: string\n      },\n    ]\n    ReturnType: {\n      address: Address\n      factory?: Address | undefined\n      factoryData?: Hex | undefined\n    }\n  },\n  /**\n   * @description Requests to connect account(s).\n   * @link https://github.com/ethereum/ERCs/blob/abd1c9f4eda2d6ad06ade0e3af314637a27d1ee7/ERCS/erc-7846.md\n   * @example\n   * provider.request({ method: 'wallet_connect' })\n   * // => { ... }\n   */\n  {\n    Method: 'wallet_connect'\n    Parameters: [\n      {\n        capabilities?: Capabilities | undefined\n        version: string\n      },\n    ]\n    ReturnType: {\n      accounts: readonly {\n        address: Address\n        capabilities?: Capabilities | undefined\n      }[]\n    }\n  },\n  /**\n   * @description Disconnects connected account(s).\n   * @link https://github.com/ethereum/ERCs/blob/abd1c9f4eda2d6ad06ade0e3af314637a27d1ee7/ERCS/erc-7846.md\n   * @example\n   * provider.request({ method: 'wallet_disconnect' })\n   */\n  {\n    Method: 'wallet_disconnect'\n    Parameters?: undefined\n    ReturnType: void\n  },\n  /**\n   * @description Returns the status of a call batch that was sent via `wallet_sendCalls`.\n   * @link https://eips.ethereum.org/EIPS/eip-5792\n   * @example\n   * provider.request({ method: 'wallet_getCallsStatus' })\n   * // => { ... }\n   */\n  {\n    Method: 'wallet_getCallsStatus'\n    Parameters?: [string]\n    ReturnType: WalletGetCallsStatusReturnType\n  },\n  /**\n   * @description Gets the connected wallet's capabilities.\n   * @link https://eips.ethereum.org/EIPS/eip-5792\n   * @example\n   * provider.request({ method: 'wallet_getCapabilities' })\n   * // => { ... }\n   */\n  {\n    Method: 'wallet_getCapabilities'\n    Parameters?:\n      | readonly []\n      | readonly [Address | undefined]\n      | readonly [Address | undefined, readonly Hex[] | undefined]\n      | undefined\n    ReturnType: Prettify<ChainIdToCapabilities>\n  },\n  /**\n   * @description Gets the wallets current permissions.\n   * @link https://eips.ethereum.org/EIPS/eip-2255\n   * @example\n   * provider.request({ method: 'wallet_getPermissions' })\n   * // => { ... }\n   */\n  {\n    Method: 'wallet_getPermissions'\n    Parameters?: undefined\n    ReturnType: WalletPermission[]\n  },\n  /**\n   * @description Requests permissions from a wallet\n   * @link https://eips.ethereum.org/EIPS/eip-7715\n   * @example\n   * provider.request({ method: 'wallet_grantPermissions', params: [{ ... }] })\n   * // => { ... }\n   */\n  {\n    Method: 'wallet_grantPermissions'\n    Parameters?: [WalletGrantPermissionsParameters]\n    ReturnType: Prettify<WalletGrantPermissionsReturnType>\n  },\n  /**\n   * @description Requests the given permissions from the user.\n   * @link https://eips.ethereum.org/EIPS/eip-2255\n   * @example\n   * provider.request({ method: 'wallet_requestPermissions', params: [{ eth_accounts: {} }] })\n   * // => { ... }\n   */\n  {\n    Method: 'wallet_requestPermissions'\n    Parameters: [permissions: { eth_accounts: Record<string, any> }]\n    ReturnType: WalletPermission[]\n  },\n  /**\n   * @description Revokes the given permissions from the user.\n   * @link https://github.com/MetaMask/metamask-improvement-proposals/blob/main/MIPs/mip-2.md\n   * @example\n   * provider.request({ method: 'wallet_revokePermissions', params: [{ eth_accounts: {} }] })\n   * // => { ... }\n   */\n  {\n    Method: 'wallet_revokePermissions'\n    Parameters: [permissions: { eth_accounts: Record<string, any> }]\n    ReturnType: null\n  },\n  /**\n   * @description Requests the connected wallet to send a batch of calls.\n   * @link https://eips.ethereum.org/EIPS/eip-5792\n   * @example\n   * provider.request({ method: 'wallet_sendCalls' })\n   * // => { ... }\n   */\n  {\n    Method: 'wallet_sendCalls'\n    Parameters?: WalletSendCallsParameters\n    ReturnType: WalletSendCallsReturnType\n  },\n  /**\n   * @description Creates, signs, and sends a new transaction to the network\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'wallet_sendTransaction', params: [{ from: '0x...', to: '0x...', value: '0x...' }] })\n   * // => '0x...'\n   */\n  {\n    Method: 'wallet_sendTransaction'\n    Parameters: [transaction: TransactionRequest]\n    ReturnType: Hash\n  },\n  /**\n   * @description Requests for the wallet to show information about a call batch\n   * that was sent via `wallet_sendCalls`.\n   * @link https://eips.ethereum.org/EIPS/eip-5792\n   * @example\n   * provider.request({ method: 'wallet_showCallsStatus', params: ['...'] })\n   */\n  {\n    Method: 'wallet_showCallsStatus'\n    Parameters?: [string]\n    ReturnType: void\n  },\n  /**\n   * @description Switch the wallet to the given Ethereum chain.\n   * @link https://eips.ethereum.org/EIPS/eip-3326\n   * @example\n   * provider.request({ method: 'wallet_switchEthereumChain', params: [{ chainId: '0xf00' }] })\n   * // => { ... }\n   */\n  {\n    Method: 'wallet_switchEthereumChain'\n    Parameters: [chain: { chainId: string }]\n    ReturnType: null\n  },\n  /**\n   * @description Requests that the user tracks the token in their wallet. Returns a boolean indicating if the token was successfully added.\n   * @link https://eips.ethereum.org/EIPS/eip-747\n   * @example\n   * provider.request({ method: 'wallet_watchAsset' }] })\n   * // => true\n   */\n  {\n    Method: 'wallet_watchAsset'\n    Parameters: WatchAssetParams\n    ReturnType: boolean\n  },\n]\n\n///////////////////////////////////////////////////////////////////////////\n// Utils\n\nexport type RpcSchema = readonly {\n  Method: string\n  Parameters?: unknown | undefined\n  ReturnType: unknown\n}[]\n\nexport type RpcSchemaOverride = Omit<RpcSchema[number], 'Method'>\n\nexport type EIP1193Parameters<\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = rpcSchema extends RpcSchema\n  ? {\n      [K in keyof rpcSchema]: Prettify<\n        {\n          method: rpcSchema[K] extends rpcSchema[number]\n            ? rpcSchema[K]['Method']\n            : never\n        } & (rpcSchema[K] extends rpcSchema[number]\n          ? rpcSchema[K]['Parameters'] extends undefined\n            ? { params?: undefined }\n            : { params: rpcSchema[K]['Parameters'] }\n          : never)\n      >\n    }[number]\n  : {\n      method: string\n      params?: unknown | undefined\n    }\n\nexport type EIP1193RequestOptions = {\n  /** Deduplicate in-flight requests. */\n  dedupe?: boolean | undefined\n  /** Methods to include or exclude from executing RPC requests. */\n  methods?:\n    | OneOf<\n        | {\n            include?: string[] | undefined\n          }\n        | {\n            exclude?: string[] | undefined\n          }\n      >\n    | undefined\n  /** The base delay (in ms) between retries. */\n  retryDelay?: number | undefined\n  /** The max number of times to retry. */\n  retryCount?: number | undefined\n  /** Unique identifier for the request. */\n  uid?: string | undefined\n}\n\ntype DerivedRpcSchema<\n  rpcSchema extends RpcSchema | undefined,\n  rpcSchemaOverride extends RpcSchemaOverride | undefined,\n> = rpcSchemaOverride extends RpcSchemaOverride\n  ? [rpcSchemaOverride & { Method: string }]\n  : rpcSchema\n\nexport type EIP1193RequestFn<\n  rpcSchema extends RpcSchema | undefined = undefined,\n  raw extends boolean = false,\n> = <\n  rpcSchemaOverride extends RpcSchemaOverride | undefined = undefined,\n  _parameters extends EIP1193Parameters<\n    DerivedRpcSchema<rpcSchema, rpcSchemaOverride>\n  > = EIP1193Parameters<DerivedRpcSchema<rpcSchema, rpcSchemaOverride>>,\n  _returnType = DerivedRpcSchema<rpcSchema, rpcSchemaOverride> extends RpcSchema\n    ? raw extends true\n      ? OneOf<\n          | {\n              result: Extract<\n                DerivedRpcSchema<rpcSchema, rpcSchemaOverride>[number],\n                { Method: _parameters['method'] }\n              >['ReturnType']\n            }\n          | { error: Rpc.ErrorObject }\n        >\n      : Extract<\n          DerivedRpcSchema<rpcSchema, rpcSchemaOverride>[number],\n          { Method: _parameters['method'] }\n        >['ReturnType']\n    : raw extends true\n      ? OneOf<\n          | {\n              result: unknown\n            }\n          | {\n              error: Rpc.ErrorObject\n            }\n        >\n      : unknown,\n>(\n  args: _parameters,\n  options?: EIP1193RequestOptions | undefined,\n) => Promise<_returnType>\n","import type { AbiParameter, AbiParametersToPrimitiveTypes } from 'abitype'\n\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nimport {\n  AbiDecodingDataSizeTooSmallError,\n  AbiDecodingZeroDataError,\n  InvalidAbiDecodingTypeError,\n  type InvalidAbiDecodingTypeErrorType,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type ChecksumAddressErrorType,\n  checksumAddress,\n} from '../address/getAddress.js'\nimport {\n  type CreateCursorErrorType,\n  type Cursor,\n  createCursor,\n} from '../cursor.js'\nimport { type SizeErrorType, size } from '../data/size.js'\nimport { type SliceBytesErrorType, sliceBytes } from '../data/slice.js'\nimport { type TrimErrorType, trim } from '../data/trim.js'\nimport {\n  type BytesToBigIntErrorType,\n  type BytesToBoolErrorType,\n  type BytesToNumberErrorType,\n  type BytesToStringErrorType,\n  bytesToBigInt,\n  bytesToBool,\n  bytesToNumber,\n  bytesToString,\n} from '../encoding/fromBytes.js'\nimport { type HexToBytesErrorType, hexToBytes } from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\nimport { getArrayComponents } from './encodeAbiParameters.js'\n\nexport type DecodeAbiParametersReturnType<\n  params extends readonly AbiParameter[] = readonly AbiParameter[],\n> = AbiParametersToPrimitiveTypes<\n  params extends readonly AbiParameter[] ? params : AbiParameter[]\n>\n\nexport type DecodeAbiParametersErrorType =\n  | HexToBytesErrorType\n  | BytesToHexErrorType\n  | DecodeParameterErrorType\n  | SizeErrorType\n  | CreateCursorErrorType\n  | ErrorType\n\nexport function decodeAbiParameters<\n  const params extends readonly AbiParameter[],\n>(\n  params: params,\n  data: ByteArray | Hex,\n): DecodeAbiParametersReturnType<params> {\n  const bytes = typeof data === 'string' ? hexToBytes(data) : data\n  const cursor = createCursor(bytes)\n\n  if (size(bytes) === 0 && params.length > 0)\n    throw new AbiDecodingZeroDataError()\n  if (size(data) && size(data) < 32)\n    throw new AbiDecodingDataSizeTooSmallError({\n      data: typeof data === 'string' ? data : bytesToHex(data),\n      params: params as readonly AbiParameter[],\n      size: size(data),\n    })\n\n  let consumed = 0\n  const values = []\n  for (let i = 0; i < params.length; ++i) {\n    const param = params[i]\n    cursor.setPosition(consumed)\n    const [data, consumed_] = decodeParameter(cursor, param, {\n      staticPosition: 0,\n    })\n    consumed += consumed_\n    values.push(data)\n  }\n  return values as DecodeAbiParametersReturnType<params>\n}\n\ntype DecodeParameterErrorType =\n  | DecodeArrayErrorType\n  | DecodeTupleErrorType\n  | DecodeAddressErrorType\n  | DecodeBoolErrorType\n  | DecodeBytesErrorType\n  | DecodeNumberErrorType\n  | DecodeStringErrorType\n  | InvalidAbiDecodingTypeErrorType\n\nfunction decodeParameter(\n  cursor: Cursor,\n  param: AbiParameter,\n  { staticPosition }: { staticPosition: number },\n) {\n  const arrayComponents = getArrayComponents(param.type)\n  if (arrayComponents) {\n    const [length, type] = arrayComponents\n    return decodeArray(cursor, { ...param, type }, { length, staticPosition })\n  }\n  if (param.type === 'tuple')\n    return decodeTuple(cursor, param as TupleAbiParameter, { staticPosition })\n\n  if (param.type === 'address') return decodeAddress(cursor)\n  if (param.type === 'bool') return decodeBool(cursor)\n  if (param.type.startsWith('bytes'))\n    return decodeBytes(cursor, param, { staticPosition })\n  if (param.type.startsWith('uint') || param.type.startsWith('int'))\n    return decodeNumber(cursor, param)\n  if (param.type === 'string') return decodeString(cursor, { staticPosition })\n  throw new InvalidAbiDecodingTypeError(param.type, {\n    docsPath: '/docs/contract/decodeAbiParameters',\n  })\n}\n\n////////////////////////////////////////////////////////////////////\n// Type Decoders\n\nconst sizeOfLength = 32\nconst sizeOfOffset = 32\n\ntype DecodeAddressErrorType =\n  | ChecksumAddressErrorType\n  | BytesToHexErrorType\n  | SliceBytesErrorType\n  | ErrorType\n\nfunction decodeAddress(cursor: Cursor) {\n  const value = cursor.readBytes(32)\n  return [checksumAddress(bytesToHex(sliceBytes(value, -20))), 32]\n}\n\ntype DecodeArrayErrorType = BytesToNumberErrorType | ErrorType\n\nfunction decodeArray(\n  cursor: Cursor,\n  param: AbiParameter,\n  { length, staticPosition }: { length: number | null; staticPosition: number },\n) {\n  // If the length of the array is not known in advance (dynamic array),\n  // this means we will need to wonder off to the pointer and decode.\n  if (!length) {\n    // Dealing with a dynamic type, so get the offset of the array data.\n    const offset = bytesToNumber(cursor.readBytes(sizeOfOffset))\n\n    // Start is the static position of current slot + offset.\n    const start = staticPosition + offset\n    const startOfData = start + sizeOfLength\n\n    // Get the length of the array from the offset.\n    cursor.setPosition(start)\n    const length = bytesToNumber(cursor.readBytes(sizeOfLength))\n\n    // Check if the array has any dynamic children.\n    const dynamicChild = hasDynamicChild(param)\n\n    let consumed = 0\n    const value: unknown[] = []\n    for (let i = 0; i < length; ++i) {\n      // If any of the children is dynamic, then all elements will be offset pointer, thus size of one slot (32 bytes).\n      // Otherwise, elements will be the size of their encoding (consumed bytes).\n      cursor.setPosition(startOfData + (dynamicChild ? i * 32 : consumed))\n      const [data, consumed_] = decodeParameter(cursor, param, {\n        staticPosition: startOfData,\n      })\n      consumed += consumed_\n      value.push(data)\n    }\n\n    // As we have gone wondering, restore to the original position + next slot.\n    cursor.setPosition(staticPosition + 32)\n    return [value, 32]\n  }\n\n  // If the length of the array is known in advance,\n  // and the length of an element deeply nested in the array is not known,\n  // we need to decode the offset of the array data.\n  if (hasDynamicChild(param)) {\n    // Dealing with dynamic types, so get the offset of the array data.\n    const offset = bytesToNumber(cursor.readBytes(sizeOfOffset))\n\n    // Start is the static position of current slot + offset.\n    const start = staticPosition + offset\n\n    const value: unknown[] = []\n    for (let i = 0; i < length; ++i) {\n      // Move cursor along to the next slot (next offset pointer).\n      cursor.setPosition(start + i * 32)\n      const [data] = decodeParameter(cursor, param, {\n        staticPosition: start,\n      })\n      value.push(data)\n    }\n\n    // As we have gone wondering, restore to the original position + next slot.\n    cursor.setPosition(staticPosition + 32)\n    return [value, 32]\n  }\n\n  // If the length of the array is known in advance and the array is deeply static,\n  // then we can just decode each element in sequence.\n  let consumed = 0\n  const value: unknown[] = []\n  for (let i = 0; i < length; ++i) {\n    const [data, consumed_] = decodeParameter(cursor, param, {\n      staticPosition: staticPosition + consumed,\n    })\n    consumed += consumed_\n    value.push(data)\n  }\n  return [value, consumed]\n}\n\ntype DecodeBoolErrorType = BytesToBoolErrorType | ErrorType\n\nfunction decodeBool(cursor: Cursor) {\n  return [bytesToBool(cursor.readBytes(32), { size: 32 }), 32]\n}\n\ntype DecodeBytesErrorType =\n  | BytesToNumberErrorType\n  | BytesToHexErrorType\n  | ErrorType\n\nfunction decodeBytes(\n  cursor: Cursor,\n  param: AbiParameter,\n  { staticPosition }: { staticPosition: number },\n) {\n  const [_, size] = param.type.split('bytes')\n  if (!size) {\n    // Dealing with dynamic types, so get the offset of the bytes data.\n    const offset = bytesToNumber(cursor.readBytes(32))\n\n    // Set position of the cursor to start of bytes data.\n    cursor.setPosition(staticPosition + offset)\n\n    const length = bytesToNumber(cursor.readBytes(32))\n\n    // If there is no length, we have zero data.\n    if (length === 0) {\n      // As we have gone wondering, restore to the original position + next slot.\n      cursor.setPosition(staticPosition + 32)\n      return ['0x', 32]\n    }\n\n    const data = cursor.readBytes(length)\n\n    // As we have gone wondering, restore to the original position + next slot.\n    cursor.setPosition(staticPosition + 32)\n    return [bytesToHex(data), 32]\n  }\n\n  const value = bytesToHex(cursor.readBytes(Number.parseInt(size), 32))\n  return [value, 32]\n}\n\ntype DecodeNumberErrorType =\n  | BytesToNumberErrorType\n  | BytesToBigIntErrorType\n  | ErrorType\n\nfunction decodeNumber(cursor: Cursor, param: AbiParameter) {\n  const signed = param.type.startsWith('int')\n  const size = Number.parseInt(param.type.split('int')[1] || '256')\n  const value = cursor.readBytes(32)\n  return [\n    size > 48\n      ? bytesToBigInt(value, { signed })\n      : bytesToNumber(value, { signed }),\n    32,\n  ]\n}\n\ntype TupleAbiParameter = AbiParameter & { components: readonly AbiParameter[] }\n\ntype DecodeTupleErrorType = BytesToNumberErrorType | ErrorType\n\nfunction decodeTuple(\n  cursor: Cursor,\n  param: TupleAbiParameter,\n  { staticPosition }: { staticPosition: number },\n) {\n  // Tuples can have unnamed components (i.e. they are arrays), so we must\n  // determine whether the tuple is named or unnamed. In the case of a named\n  // tuple, the value will be an object where each property is the name of the\n  // component. In the case of an unnamed tuple, the value will be an array.\n  const hasUnnamedChild =\n    param.components.length === 0 || param.components.some(({ name }) => !name)\n\n  // Initialize the value to an object or an array, depending on whether the\n  // tuple is named or unnamed.\n  const value: any = hasUnnamedChild ? [] : {}\n  let consumed = 0\n\n  // If the tuple has a dynamic child, we must first decode the offset to the\n  // tuple data.\n  if (hasDynamicChild(param)) {\n    // Dealing with dynamic types, so get the offset of the tuple data.\n    const offset = bytesToNumber(cursor.readBytes(sizeOfOffset))\n\n    // Start is the static position of referencing slot + offset.\n    const start = staticPosition + offset\n\n    for (let i = 0; i < param.components.length; ++i) {\n      const component = param.components[i]\n      cursor.setPosition(start + consumed)\n      const [data, consumed_] = decodeParameter(cursor, component, {\n        staticPosition: start,\n      })\n      consumed += consumed_\n      value[hasUnnamedChild ? i : component?.name!] = data\n    }\n\n    // As we have gone wondering, restore to the original position + next slot.\n    cursor.setPosition(staticPosition + 32)\n    return [value, 32]\n  }\n\n  // If the tuple has static children, we can just decode each component\n  // in sequence.\n  for (let i = 0; i < param.components.length; ++i) {\n    const component = param.components[i]\n    const [data, consumed_] = decodeParameter(cursor, component, {\n      staticPosition,\n    })\n    value[hasUnnamedChild ? i : component?.name!] = data\n    consumed += consumed_\n  }\n  return [value, consumed]\n}\n\ntype DecodeStringErrorType =\n  | BytesToNumberErrorType\n  | BytesToStringErrorType\n  | TrimErrorType\n  | ErrorType\n\nfunction decodeString(\n  cursor: Cursor,\n  { staticPosition }: { staticPosition: number },\n) {\n  // Get offset to start of string data.\n  const offset = bytesToNumber(cursor.readBytes(32))\n\n  // Start is the static position of current slot + offset.\n  const start = staticPosition + offset\n  cursor.setPosition(start)\n\n  const length = bytesToNumber(cursor.readBytes(32))\n\n  // If there is no length, we have zero data (empty string).\n  if (length === 0) {\n    cursor.setPosition(staticPosition + 32)\n    return ['', 32]\n  }\n\n  const data = cursor.readBytes(length, 32)\n  const value = bytesToString(trim(data))\n\n  // As we have gone wondering, restore to the original position + next slot.\n  cursor.setPosition(staticPosition + 32)\n\n  return [value, 32]\n}\n\nfunction hasDynamicChild(param: AbiParameter) {\n  const { type } = param\n  if (type === 'string') return true\n  if (type === 'bytes') return true\n  if (type.endsWith('[]')) return true\n\n  if (type === 'tuple') return (param as any).components?.some(hasDynamicChild)\n\n  const arrayComponents = getArrayComponents(param.type)\n  if (\n    arrayComponents &&\n    hasDynamicChild({ ...param, type: arrayComponents[1] } as AbiParameter)\n  )\n    return true\n\n  return false\n}\n","import type { Abi } from 'abitype'\n\nimport {\n  AbiConstructorNotFoundError,\n  type AbiConstructorNotFoundErrorType,\n  AbiConstructorParamsNotFoundError,\n  type AbiConstructorParamsNotFoundErrorType,\n} from '../../errors/abi.js'\nimport type { ContractConstructorArgs } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type DecodeAbiParametersErrorType,\n  decodeAbiParameters,\n} from './decodeAbiParameters.js'\n\nconst docsPath = '/docs/contract/decodeDeployData'\n\nexport type DecodeDeployDataParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n> = {\n  abi: abi\n  bytecode: Hex\n  data: Hex\n}\n\nexport type DecodeDeployDataReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  ///\n  allArgs = ContractConstructorArgs<abi>,\n> = {\n  bytecode: Hex\n  args: allArgs\n}\n\nexport type DecodeDeployDataErrorType =\n  | AbiConstructorNotFoundErrorType\n  | AbiConstructorParamsNotFoundErrorType\n  | DecodeAbiParametersErrorType\n  | ErrorType\n\nexport function decodeDeployData<const abi extends Abi | readonly unknown[]>(\n  parameters: DecodeDeployDataParameters<abi>,\n): DecodeDeployDataReturnType<abi> {\n  const { abi, bytecode, data } = parameters as DecodeDeployDataParameters\n  if (data === bytecode) return { bytecode } as DecodeDeployDataReturnType<abi>\n\n  const description = abi.find((x) => 'type' in x && x.type === 'constructor')\n  if (!description) throw new AbiConstructorNotFoundError({ docsPath })\n  if (!('inputs' in description))\n    throw new AbiConstructorParamsNotFoundError({ docsPath })\n  if (!description.inputs || description.inputs.length === 0)\n    throw new AbiConstructorParamsNotFoundError({ docsPath })\n\n  const args = decodeAbiParameters(\n    description.inputs,\n    `0x${data.replace(bytecode, '')}`,\n  )\n  return { args, bytecode } as unknown as DecodeDeployDataReturnType<abi>\n}\n","import type { Abi, ExtractAbiError } from 'abitype'\n\nimport { solidityError, solidityPanic } from '../../constants/solidity.js'\nimport {\n  AbiDecodingZeroDataError,\n  type AbiDecodingZeroDataErrorType,\n  AbiErrorSignatureNotFoundError,\n  type AbiErrorSignatureNotFoundErrorType,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  AbiItem,\n  ContractErrorArgs,\n  ContractErrorName,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport { slice } from '../data/slice.js'\nimport {\n  type ToFunctionSelectorErrorType,\n  toFunctionSelector,\n} from '../hash/toFunctionSelector.js'\nimport {\n  type DecodeAbiParametersErrorType,\n  decodeAbiParameters,\n} from './decodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\n\nexport type DecodeErrorResultParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n> = { abi?: abi | undefined; data: Hex }\n\nexport type DecodeErrorResultReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  ///\n  allErrorNames extends ContractErrorName<abi> = ContractErrorName<abi>,\n> = IsNarrowable<abi, Abi> extends true\n  ? UnionEvaluate<\n      {\n        [errorName in allErrorNames]: {\n          abiItem: abi extends Abi\n            ? Abi extends abi\n              ? AbiItem\n              : ExtractAbiError<abi, errorName>\n            : AbiItem\n          args: ContractErrorArgs<abi, errorName>\n          errorName: errorName\n        }\n      }[allErrorNames]\n    >\n  : {\n      abiItem: AbiItem\n      args: readonly unknown[] | undefined\n      errorName: string\n    }\n\nexport type DecodeErrorResultErrorType =\n  | AbiDecodingZeroDataErrorType\n  | AbiErrorSignatureNotFoundErrorType\n  | DecodeAbiParametersErrorType\n  | FormatAbiItemErrorType\n  | ToFunctionSelectorErrorType\n  | ErrorType\n\nexport function decodeErrorResult<const abi extends Abi | readonly unknown[]>(\n  parameters: DecodeErrorResultParameters<abi>,\n): DecodeErrorResultReturnType<abi> {\n  const { abi, data } = parameters as DecodeErrorResultParameters\n\n  const signature = slice(data, 0, 4)\n  if (signature === '0x') throw new AbiDecodingZeroDataError()\n\n  const abi_ = [...(abi || []), solidityError, solidityPanic]\n  const abiItem = abi_.find(\n    (x) =>\n      x.type === 'error' && signature === toFunctionSelector(formatAbiItem(x)),\n  )\n  if (!abiItem)\n    throw new AbiErrorSignatureNotFoundError(signature, {\n      docsPath: '/docs/contract/decodeErrorResult',\n    })\n  return {\n    abiItem,\n    args:\n      'inputs' in abiItem && abiItem.inputs && abiItem.inputs.length > 0\n        ? decodeAbiParameters(abiItem.inputs, slice(data, 4))\n        : undefined,\n    errorName: (abiItem as { name: string }).name,\n  } as DecodeErrorResultReturnType<abi>\n}\n","import type { Abi, AbiParameter } from 'abitype'\n\nimport {\n  AbiDecodingDataSizeTooSmallError,\n  type AbiDecodingDataSizeTooSmallErrorType,\n  AbiEventSignatureEmptyTopicsError,\n  type AbiEventSignatureEmptyTopicsErrorType,\n  AbiEventSignatureNotFoundError,\n  type AbiEventSignatureNotFoundErrorType,\n  DecodeLogDataMismatch,\n  type DecodeLogDataMismatchErrorType,\n  DecodeLogTopicsMismatch,\n  type DecodeLogTopicsMismatchErrorType,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  ContractEventArgsFromTopics,\n  ContractEventName,\n  EventDefinition,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type {\n  IsNarrowable,\n  Prettify,\n  UnionEvaluate,\n} from '../../types/utils.js'\nimport { size } from '../data/size.js'\nimport {\n  type ToEventSelectorErrorType,\n  toEventSelector,\n} from '../hash/toEventSelector.js'\n\nimport { PositionOutOfBoundsError } from '../../errors/cursor.js'\nimport {\n  type DecodeAbiParametersErrorType,\n  decodeAbiParameters,\n} from './decodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\n\nexport type DecodeEventLogParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> | undefined = ContractEventName<abi>,\n  topics extends Hex[] = Hex[],\n  data extends Hex | undefined = undefined,\n  strict extends boolean = true,\n> = {\n  abi: abi\n  data?: data | undefined\n  eventName?: eventName | ContractEventName<abi> | undefined\n  strict?: strict | boolean | undefined\n  topics: [signature: Hex, ...args: topics] | []\n}\n\nexport type DecodeEventLogReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> | undefined = ContractEventName<abi>,\n  topics extends Hex[] = Hex[],\n  data extends Hex | undefined = undefined,\n  strict extends boolean = true,\n  ///\n  allEventNames extends\n    ContractEventName<abi> = eventName extends ContractEventName<abi>\n    ? eventName\n    : ContractEventName<abi>,\n> = IsNarrowable<abi, Abi> extends true\n  ? {\n      [name in allEventNames]: Prettify<\n        {\n          eventName: name\n        } & UnionEvaluate<\n          ContractEventArgsFromTopics<abi, name, strict> extends infer allArgs\n            ? topics extends readonly []\n              ? data extends undefined\n                ? { args?: undefined }\n                : { args?: allArgs | undefined }\n              : { args: allArgs }\n            : never\n        >\n      >\n    }[allEventNames]\n  : {\n      eventName: eventName\n      args: readonly unknown[] | undefined\n    }\n\nexport type DecodeEventLogErrorType =\n  | AbiDecodingDataSizeTooSmallErrorType\n  | AbiEventSignatureEmptyTopicsErrorType\n  | AbiEventSignatureNotFoundErrorType\n  | DecodeAbiParametersErrorType\n  | DecodeLogTopicsMismatchErrorType\n  | DecodeLogDataMismatchErrorType\n  | FormatAbiItemErrorType\n  | ToEventSelectorErrorType\n  | ErrorType\n\nconst docsPath = '/docs/contract/decodeEventLog'\n\nexport function decodeEventLog<\n  const abi extends Abi | readonly unknown[],\n  eventName extends ContractEventName<abi> | undefined = undefined,\n  topics extends Hex[] = Hex[],\n  data extends Hex | undefined = undefined,\n  strict extends boolean = true,\n>(\n  parameters: DecodeEventLogParameters<abi, eventName, topics, data, strict>,\n): DecodeEventLogReturnType<abi, eventName, topics, data, strict> {\n  const {\n    abi,\n    data,\n    strict: strict_,\n    topics,\n  } = parameters as DecodeEventLogParameters\n\n  const strict = strict_ ?? true\n  const [signature, ...argTopics] = topics\n  if (!signature) throw new AbiEventSignatureEmptyTopicsError({ docsPath })\n\n  const abiItem = (() => {\n    if (abi.length === 1) return abi[0]\n    return abi.find(\n      (x) =>\n        x.type === 'event' &&\n        signature === toEventSelector(formatAbiItem(x) as EventDefinition),\n    )\n  })()\n\n  if (!(abiItem && 'name' in abiItem) || abiItem.type !== 'event')\n    throw new AbiEventSignatureNotFoundError(signature, { docsPath })\n\n  const { name, inputs } = abiItem\n  const isUnnamed = inputs?.some((x) => !('name' in x && x.name))\n\n  let args: any = isUnnamed ? [] : {}\n\n  // Decode topics (indexed args).\n  const indexedInputs = inputs.filter((x) => 'indexed' in x && x.indexed)\n  for (let i = 0; i < indexedInputs.length; i++) {\n    const param = indexedInputs[i]\n    const topic = argTopics[i]\n    if (!topic)\n      throw new DecodeLogTopicsMismatch({\n        abiItem,\n        param: param as AbiParameter & { indexed: boolean },\n      })\n    args[isUnnamed ? i : param.name || i] = decodeTopic({ param, value: topic })\n  }\n\n  // Decode data (non-indexed args).\n  const nonIndexedInputs = inputs.filter((x) => !('indexed' in x && x.indexed))\n  if (nonIndexedInputs.length > 0) {\n    if (data && data !== '0x') {\n      try {\n        const decodedData = decodeAbiParameters(nonIndexedInputs, data)\n        if (decodedData) {\n          if (isUnnamed) args = [...args, ...decodedData]\n          else {\n            for (let i = 0; i < nonIndexedInputs.length; i++) {\n              args[nonIndexedInputs[i].name!] = decodedData[i]\n            }\n          }\n        }\n      } catch (err) {\n        if (strict) {\n          if (\n            err instanceof AbiDecodingDataSizeTooSmallError ||\n            err instanceof PositionOutOfBoundsError\n          )\n            throw new DecodeLogDataMismatch({\n              abiItem,\n              data: data,\n              params: nonIndexedInputs,\n              size: size(data),\n            })\n          throw err\n        }\n      }\n    } else if (strict) {\n      throw new DecodeLogDataMismatch({\n        abiItem,\n        data: '0x',\n        params: nonIndexedInputs,\n        size: 0,\n      })\n    }\n  }\n\n  return {\n    eventName: name,\n    args: Object.values(args).length > 0 ? args : undefined,\n  } as unknown as DecodeEventLogReturnType<abi, eventName, topics, data, strict>\n}\n\nfunction decodeTopic({ param, value }: { param: AbiParameter; value: Hex }) {\n  if (\n    param.type === 'string' ||\n    param.type === 'bytes' ||\n    param.type === 'tuple' ||\n    param.type.match(/^(.*)\\[(\\d+)?\\]$/)\n  )\n    return value\n  const decodedArg = decodeAbiParameters([param], value) || []\n  return decodedArg[0]\n}\n","import type { Abi, AbiStateMutability } from 'abitype'\n\nimport { AbiFunctionSignatureNotFoundError } from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport { type SliceErrorType, slice } from '../data/slice.js'\nimport {\n  type ToFunctionSelectorErrorType,\n  toFunctionSelector,\n} from '../hash/toFunctionSelector.js'\nimport {\n  type DecodeAbiParametersErrorType,\n  decodeAbiParameters,\n} from './decodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\n\nexport type DecodeFunctionDataParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n> = {\n  abi: abi\n  data: Hex\n}\n\nexport type DecodeFunctionDataReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  ///\n  allFunctionNames extends\n    ContractFunctionName<abi> = ContractFunctionName<abi>,\n> = IsNarrowable<abi, Abi> extends true\n  ? UnionEvaluate<\n      {\n        [functionName in allFunctionNames]: {\n          args: ContractFunctionArgs<abi, AbiStateMutability, functionName>\n          functionName: functionName\n        }\n      }[allFunctionNames]\n    >\n  : {\n      args: readonly unknown[] | undefined\n      functionName: string\n    }\n\nexport type DecodeFunctionDataErrorType =\n  | AbiFunctionSignatureNotFoundError\n  | DecodeAbiParametersErrorType\n  | FormatAbiItemErrorType\n  | ToFunctionSelectorErrorType\n  | SliceErrorType\n  | ErrorType\n\nexport function decodeFunctionData<const abi extends Abi | readonly unknown[]>(\n  parameters: DecodeFunctionDataParameters<abi>,\n) {\n  const { abi, data } = parameters as DecodeFunctionDataParameters\n  const signature = slice(data, 0, 4)\n  const description = abi.find(\n    (x) =>\n      x.type === 'function' &&\n      signature === toFunctionSelector(formatAbiItem(x)),\n  )\n  if (!description)\n    throw new AbiFunctionSignatureNotFoundError(signature, {\n      docsPath: '/docs/contract/decodeFunctionData',\n    })\n  return {\n    functionName: (description as { name: string }).name,\n    args: ('inputs' in description &&\n    description.inputs &&\n    description.inputs.length > 0\n      ? decodeAbiParameters(description.inputs, slice(data, 4))\n      : undefined) as readonly unknown[] | undefined,\n  } as DecodeFunctionDataReturnType<abi>\n}\n","import type { Abi, AbiStateMutability, ExtractAbiFunctions } from 'abitype'\n\nimport {\n  AbiFunctionNotFoundError,\n  type AbiFunctionNotFoundErrorType,\n  AbiFunctionOutputsNotFoundError,\n  type AbiFunctionOutputsNotFoundErrorType,\n} from '../../errors/abi.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n  ContractFunctionReturnType,\n  Widen,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport {\n  type DecodeAbiParametersErrorType,\n  decodeAbiParameters,\n} from './decodeAbiParameters.js'\nimport { type GetAbiItemErrorType, getAbiItem } from './getAbiItem.js'\n\nconst docsPath = '/docs/contract/decodeFunctionResult'\n\nexport type DecodeFunctionResultParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends\n    | ContractFunctionName<abi>\n    | undefined = ContractFunctionName<abi>,\n  args extends ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  > = ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  >,\n  ///\n  hasFunctions = abi extends Abi\n    ? Abi extends abi\n      ? true\n      : [ExtractAbiFunctions<abi>] extends [never]\n        ? false\n        : true\n    : true,\n  allArgs = ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  >,\n  allFunctionNames = ContractFunctionName<abi>,\n> = {\n  abi: abi\n  data: Hex\n} & UnionEvaluate<\n  IsNarrowable<abi, Abi> extends true\n    ? abi['length'] extends 1\n      ? { functionName?: functionName | allFunctionNames | undefined }\n      : { functionName: functionName | allFunctionNames }\n    : { functionName?: functionName | allFunctionNames | undefined }\n> &\n  UnionEvaluate<\n    readonly [] extends allArgs\n      ? {\n          args?:\n            | allArgs // show all options\n            // infer value, widen inferred value of `args` conditionally to match `allArgs`\n            | (abi extends Abi\n                ? args extends allArgs\n                  ? Widen<args>\n                  : never\n                : never)\n            | undefined\n        }\n      : {\n          args?:\n            | allArgs // show all options\n            | (Widen<args> & (args extends allArgs ? unknown : never)) // infer value, widen inferred value of `args` match `allArgs` (e.g. avoid union `args: readonly [123n] | readonly [bigint]`)\n            | undefined\n        }\n  > &\n  (hasFunctions extends true ? unknown : never)\n\nexport type DecodeFunctionResultReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends\n    | ContractFunctionName<abi>\n    | undefined = ContractFunctionName<abi>,\n  args extends ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  > = ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  >,\n> = ContractFunctionReturnType<\n  abi,\n  AbiStateMutability,\n  functionName extends ContractFunctionName<abi>\n    ? functionName\n    : ContractFunctionName<abi>,\n  args\n>\n\nexport type DecodeFunctionResultErrorType =\n  | AbiFunctionNotFoundErrorType\n  | AbiFunctionOutputsNotFoundErrorType\n  | DecodeAbiParametersErrorType\n  | GetAbiItemErrorType\n  | ErrorType\n\nexport function decodeFunctionResult<\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi> | undefined = undefined,\n  const args extends ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  > = ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  >,\n>(\n  parameters: DecodeFunctionResultParameters<abi, functionName, args>,\n): DecodeFunctionResultReturnType<abi, functionName, args> {\n  const { abi, args, functionName, data } =\n    parameters as DecodeFunctionResultParameters\n\n  let abiItem = abi[0]\n  if (functionName) {\n    const item = getAbiItem({ abi, args, name: functionName })\n    if (!item) throw new AbiFunctionNotFoundError(functionName, { docsPath })\n    abiItem = item\n  }\n\n  if (abiItem.type !== 'function')\n    throw new AbiFunctionNotFoundError(undefined, { docsPath })\n  if (!abiItem.outputs)\n    throw new AbiFunctionOutputsNotFoundError(abiItem.name, { docsPath })\n\n  const values = decodeAbiParameters(abiItem.outputs, data)\n  if (values && values.length > 1)\n    return values as DecodeFunctionResultReturnType<abi, functionName, args>\n  if (values && values.length === 1)\n    return values[0] as DecodeFunctionResultReturnType<abi, functionName, args>\n  return undefined as DecodeFunctionResultReturnType<abi, functionName, args>\n}\n","import type {\n  AbiParameter,\n  AbiParameterToPrimitiveType,\n  AbiParametersToPrimitiveTypes,\n} from 'abitype'\n\nimport {\n  AbiEncodingArrayLengthMismatchError,\n  type AbiEncodingArrayLengthMismatchErrorType,\n  AbiEncodingBytesSizeMismatchError,\n  type AbiEncodingBytesSizeMismatchErrorType,\n  AbiEncodingLengthMismatchError,\n  type AbiEncodingLengthMismatchErrorType,\n  InvalidAbiEncodingTypeError,\n  type InvalidAbiEncodingTypeErrorType,\n  InvalidArrayError,\n  type InvalidArrayErrorType,\n} from '../../errors/abi.js'\nimport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport { BaseError } from '../../errors/base.js'\nimport { IntegerOutOfRangeError } from '../../errors/encoding.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type IsAddressErrorType, isAddress } from '../address/isAddress.js'\nimport { type ConcatErrorType, concat } from '../data/concat.js'\nimport { type PadHexErrorType, padHex } from '../data/pad.js'\nimport { type SizeErrorType, size } from '../data/size.js'\nimport { type SliceErrorType, slice } from '../data/slice.js'\nimport {\n  type BoolToHexErrorType,\n  type NumberToHexErrorType,\n  type StringToHexErrorType,\n  boolToHex,\n  numberToHex,\n  stringToHex,\n} from '../encoding/toHex.js'\nimport { integerRegex } from '../regex.js'\n\nexport type EncodeAbiParametersReturnType = Hex\n\nexport type EncodeAbiParametersErrorType =\n  | AbiEncodingLengthMismatchErrorType\n  | PrepareParamsErrorType\n  | EncodeParamsErrorType\n  | ErrorType\n\n/**\n * @description Encodes a list of primitive values into an ABI-encoded hex value.\n *\n * - Docs: https://viem.sh/docs/abi/encodeAbiParameters#encodeabiparameters\n *\n *   Generates ABI encoded data using the [ABI specification](https://docs.soliditylang.org/en/latest/abi-spec), given a set of ABI parameters (inputs/outputs) and their corresponding values.\n *\n * @param params - a set of ABI Parameters (params), that can be in the shape of the inputs or outputs attribute of an ABI Item.\n * @param values - a set of values (values) that correspond to the given params.\n * @example\n * ```typescript\n * import { encodeAbiParameters } from 'viem'\n *\n * const encodedData = encodeAbiParameters(\n *   [\n *     { name: 'x', type: 'string' },\n *     { name: 'y', type: 'uint' },\n *     { name: 'z', type: 'bool' }\n *   ],\n *   ['wagmi', 420n, true]\n * )\n * ```\n *\n * You can also pass in Human Readable parameters with the parseAbiParameters utility.\n *\n * @example\n * ```typescript\n * import { encodeAbiParameters, parseAbiParameters } from 'viem'\n *\n * const encodedData = encodeAbiParameters(\n *   parseAbiParameters('string x, uint y, bool z'),\n *   ['wagmi', 420n, true]\n * )\n * ```\n */\nexport function encodeAbiParameters<\n  const params extends readonly AbiParameter[] | readonly unknown[],\n>(\n  params: params,\n  values: params extends readonly AbiParameter[]\n    ? AbiParametersToPrimitiveTypes<params>\n    : never,\n): EncodeAbiParametersReturnType {\n  if (params.length !== values.length)\n    throw new AbiEncodingLengthMismatchError({\n      expectedLength: params.length as number,\n      givenLength: values.length as any,\n    })\n  // Prepare the parameters to determine dynamic types to encode.\n  const preparedParams = prepareParams({\n    params: params as readonly AbiParameter[],\n    values: values as any,\n  })\n  const data = encodeParams(preparedParams)\n  if (data.length === 0) return '0x'\n  return data\n}\n\n/////////////////////////////////////////////////////////////////\n\ntype PreparedParam = { dynamic: boolean; encoded: Hex }\n\ntype TupleAbiParameter = AbiParameter & { components: readonly AbiParameter[] }\ntype Tuple = AbiParameterToPrimitiveType<TupleAbiParameter>\n\ntype PrepareParamsErrorType = PrepareParamErrorType | ErrorType\n\nfunction prepareParams<const params extends readonly AbiParameter[]>({\n  params,\n  values,\n}: {\n  params: params\n  values: AbiParametersToPrimitiveTypes<params>\n}) {\n  const preparedParams: PreparedParam[] = []\n  for (let i = 0; i < params.length; i++) {\n    preparedParams.push(prepareParam({ param: params[i], value: values[i] }))\n  }\n  return preparedParams\n}\n\ntype PrepareParamErrorType =\n  | EncodeAddressErrorType\n  | EncodeArrayErrorType\n  | EncodeBytesErrorType\n  | EncodeBoolErrorType\n  | EncodeNumberErrorType\n  | EncodeStringErrorType\n  | EncodeTupleErrorType\n  | GetArrayComponentsErrorType\n  | InvalidAbiEncodingTypeErrorType\n  | ErrorType\n\nfunction prepareParam<const param extends AbiParameter>({\n  param,\n  value,\n}: {\n  param: param\n  value: AbiParameterToPrimitiveType<param>\n}): PreparedParam {\n  const arrayComponents = getArrayComponents(param.type)\n  if (arrayComponents) {\n    const [length, type] = arrayComponents\n    return encodeArray(value, { length, param: { ...param, type } })\n  }\n  if (param.type === 'tuple') {\n    return encodeTuple(value as unknown as Tuple, {\n      param: param as TupleAbiParameter,\n    })\n  }\n  if (param.type === 'address') {\n    return encodeAddress(value as unknown as Hex)\n  }\n  if (param.type === 'bool') {\n    return encodeBool(value as unknown as boolean)\n  }\n  if (param.type.startsWith('uint') || param.type.startsWith('int')) {\n    const signed = param.type.startsWith('int')\n    const [, , size = '256'] = integerRegex.exec(param.type) ?? []\n    return encodeNumber(value as unknown as number, {\n      signed,\n      size: Number(size),\n    })\n  }\n  if (param.type.startsWith('bytes')) {\n    return encodeBytes(value as unknown as Hex, { param })\n  }\n  if (param.type === 'string') {\n    return encodeString(value as unknown as string)\n  }\n  throw new InvalidAbiEncodingTypeError(param.type, {\n    docsPath: '/docs/contract/encodeAbiParameters',\n  })\n}\n\n/////////////////////////////////////////////////////////////////\n\ntype EncodeParamsErrorType = NumberToHexErrorType | SizeErrorType | ErrorType\n\nfunction encodeParams(preparedParams: PreparedParam[]): Hex {\n  // 1. Compute the size of the static part of the parameters.\n  let staticSize = 0\n  for (let i = 0; i < preparedParams.length; i++) {\n    const { dynamic, encoded } = preparedParams[i]\n    if (dynamic) staticSize += 32\n    else staticSize += size(encoded)\n  }\n\n  // 2. Split the parameters into static and dynamic parts.\n  const staticParams: Hex[] = []\n  const dynamicParams: Hex[] = []\n  let dynamicSize = 0\n  for (let i = 0; i < preparedParams.length; i++) {\n    const { dynamic, encoded } = preparedParams[i]\n    if (dynamic) {\n      staticParams.push(numberToHex(staticSize + dynamicSize, { size: 32 }))\n      dynamicParams.push(encoded)\n      dynamicSize += size(encoded)\n    } else {\n      staticParams.push(encoded)\n    }\n  }\n\n  // 3. Concatenate static and dynamic parts.\n  return concat([...staticParams, ...dynamicParams])\n}\n\n/////////////////////////////////////////////////////////////////\n\ntype EncodeAddressErrorType =\n  | InvalidAddressErrorType\n  | IsAddressErrorType\n  | ErrorType\n\nfunction encodeAddress(value: Hex): PreparedParam {\n  if (!isAddress(value)) throw new InvalidAddressError({ address: value })\n  return { dynamic: false, encoded: padHex(value.toLowerCase() as Hex) }\n}\n\ntype EncodeArrayErrorType =\n  | AbiEncodingArrayLengthMismatchErrorType\n  | ConcatErrorType\n  | EncodeParamsErrorType\n  | InvalidArrayErrorType\n  | NumberToHexErrorType\n  // TODO: Add back once circular type reference is resolved\n  // | PrepareParamErrorType\n  | ErrorType\n\nfunction encodeArray<const param extends AbiParameter>(\n  value: AbiParameterToPrimitiveType<param>,\n  {\n    length,\n    param,\n  }: {\n    length: number | null\n    param: param\n  },\n): PreparedParam {\n  const dynamic = length === null\n\n  if (!Array.isArray(value)) throw new InvalidArrayError(value)\n  if (!dynamic && value.length !== length)\n    throw new AbiEncodingArrayLengthMismatchError({\n      expectedLength: length!,\n      givenLength: value.length,\n      type: `${param.type}[${length}]`,\n    })\n\n  let dynamicChild = false\n  const preparedParams: PreparedParam[] = []\n  for (let i = 0; i < value.length; i++) {\n    const preparedParam = prepareParam({ param, value: value[i] })\n    if (preparedParam.dynamic) dynamicChild = true\n    preparedParams.push(preparedParam)\n  }\n\n  if (dynamic || dynamicChild) {\n    const data = encodeParams(preparedParams)\n    if (dynamic) {\n      const length = numberToHex(preparedParams.length, { size: 32 })\n      return {\n        dynamic: true,\n        encoded: preparedParams.length > 0 ? concat([length, data]) : length,\n      }\n    }\n    if (dynamicChild) return { dynamic: true, encoded: data }\n  }\n  return {\n    dynamic: false,\n    encoded: concat(preparedParams.map(({ encoded }) => encoded)),\n  }\n}\n\ntype EncodeBytesErrorType =\n  | AbiEncodingBytesSizeMismatchErrorType\n  | ConcatErrorType\n  | PadHexErrorType\n  | NumberToHexErrorType\n  | SizeErrorType\n  | ErrorType\n\nfunction encodeBytes<const param extends AbiParameter>(\n  value: Hex,\n  { param }: { param: param },\n): PreparedParam {\n  const [, paramSize] = param.type.split('bytes')\n  const bytesSize = size(value)\n  if (!paramSize) {\n    let value_ = value\n    // If the size is not divisible by 32 bytes, pad the end\n    // with empty bytes to the ceiling 32 bytes.\n    if (bytesSize % 32 !== 0)\n      value_ = padHex(value_, {\n        dir: 'right',\n        size: Math.ceil((value.length - 2) / 2 / 32) * 32,\n      })\n    return {\n      dynamic: true,\n      encoded: concat([padHex(numberToHex(bytesSize, { size: 32 })), value_]),\n    }\n  }\n  if (bytesSize !== Number.parseInt(paramSize))\n    throw new AbiEncodingBytesSizeMismatchError({\n      expectedSize: Number.parseInt(paramSize),\n      value,\n    })\n  return { dynamic: false, encoded: padHex(value, { dir: 'right' }) }\n}\n\ntype EncodeBoolErrorType = PadHexErrorType | BoolToHexErrorType | ErrorType\n\nfunction encodeBool(value: boolean): PreparedParam {\n  if (typeof value !== 'boolean')\n    throw new BaseError(\n      `Invalid boolean value: \"${value}\" (type: ${typeof value}). Expected: \\`true\\` or \\`false\\`.`,\n    )\n  return { dynamic: false, encoded: padHex(boolToHex(value)) }\n}\n\ntype EncodeNumberErrorType = NumberToHexErrorType | ErrorType\n\nfunction encodeNumber(\n  value: number,\n  { signed, size = 256 }: { signed: boolean; size?: number | undefined },\n): PreparedParam {\n  if (typeof size === 'number') {\n    const max = 2n ** (BigInt(size) - (signed ? 1n : 0n)) - 1n\n    const min = signed ? -max - 1n : 0n\n    if (value > max || value < min)\n      throw new IntegerOutOfRangeError({\n        max: max.toString(),\n        min: min.toString(),\n        signed,\n        size: size / 8,\n        value: value.toString(),\n      })\n  }\n  return {\n    dynamic: false,\n    encoded: numberToHex(value, {\n      size: 32,\n      signed,\n    }),\n  }\n}\n\ntype EncodeStringErrorType =\n  | ConcatErrorType\n  | NumberToHexErrorType\n  | PadHexErrorType\n  | SizeErrorType\n  | SliceErrorType\n  | StringToHexErrorType\n  | ErrorType\n\nfunction encodeString(value: string): PreparedParam {\n  const hexValue = stringToHex(value)\n  const partsLength = Math.ceil(size(hexValue) / 32)\n  const parts: Hex[] = []\n  for (let i = 0; i < partsLength; i++) {\n    parts.push(\n      padHex(slice(hexValue, i * 32, (i + 1) * 32), {\n        dir: 'right',\n      }),\n    )\n  }\n  return {\n    dynamic: true,\n    encoded: concat([\n      padHex(numberToHex(size(hexValue), { size: 32 })),\n      ...parts,\n    ]),\n  }\n}\n\ntype EncodeTupleErrorType =\n  | ConcatErrorType\n  | EncodeParamsErrorType\n  // TODO: Add back once circular type reference is resolved\n  // | PrepareParamErrorType\n  | ErrorType\n\nfunction encodeTuple<\n  const param extends AbiParameter & { components: readonly AbiParameter[] },\n>(\n  value: AbiParameterToPrimitiveType<param>,\n  { param }: { param: param },\n): PreparedParam {\n  let dynamic = false\n  const preparedParams: PreparedParam[] = []\n  for (let i = 0; i < param.components.length; i++) {\n    const param_ = param.components[i]\n    const index = Array.isArray(value) ? i : param_.name\n    const preparedParam = prepareParam({\n      param: param_,\n      value: (value as any)[index!] as readonly unknown[],\n    })\n    preparedParams.push(preparedParam)\n    if (preparedParam.dynamic) dynamic = true\n  }\n  return {\n    dynamic,\n    encoded: dynamic\n      ? encodeParams(preparedParams)\n      : concat(preparedParams.map(({ encoded }) => encoded)),\n  }\n}\n\ntype GetArrayComponentsErrorType = ErrorType\n\nexport function getArrayComponents(\n  type: string,\n): [length: number | null, innerType: string] | undefined {\n  const matches = type.match(/^(.*)\\[(\\d+)?\\]$/)\n  return matches\n    ? // Return `null` if the array is dynamic.\n      [matches[2] ? Number(matches[2]) : null, matches[1]]\n    : undefined\n}\n","import type { Abi } from 'abitype'\n\nimport {\n  AbiConstructorNotFoundError,\n  type AbiConstructorNotFoundErrorType,\n  AbiConstructorParamsNotFoundError,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ContractConstructorArgs } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { UnionEvaluate } from '../../types/utils.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\n\nconst docsPath = '/docs/contract/encodeDeployData'\n\nexport type EncodeDeployDataParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  ///\n  hasConstructor = abi extends Abi\n    ? Abi extends abi\n      ? true\n      : [Extract<abi[number], { type: 'constructor' }>] extends [never]\n        ? false\n        : true\n    : true,\n  allArgs = ContractConstructorArgs<abi>,\n> = {\n  abi: abi\n  bytecode: Hex\n} & UnionEvaluate<\n  hasConstructor extends false\n    ? { args?: undefined }\n    : readonly [] extends allArgs\n      ? { args?: allArgs | undefined }\n      : { args: allArgs }\n>\n\nexport type EncodeDeployDataReturnType = Hex\n\nexport type EncodeDeployDataErrorType =\n  | AbiConstructorNotFoundErrorType\n  | ConcatHexErrorType\n  | EncodeAbiParametersErrorType\n  | ErrorType\n\nexport function encodeDeployData<const abi extends Abi | readonly unknown[]>(\n  parameters: EncodeDeployDataParameters<abi>,\n): EncodeDeployDataReturnType {\n  const { abi, args, bytecode } = parameters as EncodeDeployDataParameters\n  if (!args || args.length === 0) return bytecode\n\n  const description = abi.find((x) => 'type' in x && x.type === 'constructor')\n  if (!description) throw new AbiConstructorNotFoundError({ docsPath })\n  if (!('inputs' in description))\n    throw new AbiConstructorParamsNotFoundError({ docsPath })\n  if (!description.inputs || description.inputs.length === 0)\n    throw new AbiConstructorParamsNotFoundError({ docsPath })\n\n  const data = encodeAbiParameters(description.inputs, args)\n  return concatHex([bytecode, data!])\n}\n","import type { Abi, ExtractAbiErrors } from 'abitype'\n\nimport {\n  AbiErrorInputsNotFoundError,\n  AbiErrorNotFoundError,\n} from '../../errors/abi.js'\nimport type {\n  ContractErrorArgs,\n  ContractErrorName,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\nimport {\n  type ToFunctionSelectorErrorType,\n  toFunctionSelector,\n} from '../hash/toFunctionSelector.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\nimport { type GetAbiItemErrorType, getAbiItem } from './getAbiItem.js'\n\nconst docsPath = '/docs/contract/encodeErrorResult'\n\nexport type EncodeErrorResultParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  errorName extends ContractErrorName<abi> | undefined = ContractErrorName<abi>,\n  ///\n  hasErrors = abi extends Abi\n    ? Abi extends abi\n      ? true\n      : [ExtractAbiErrors<abi>] extends [never]\n        ? false\n        : true\n    : true,\n  allArgs = ContractErrorArgs<\n    abi,\n    errorName extends ContractErrorName<abi>\n      ? errorName\n      : ContractErrorName<abi>\n  >,\n  allErrorNames = ContractErrorName<abi>,\n> = {\n  abi: abi\n  args?: allArgs | undefined\n} & UnionEvaluate<\n  IsNarrowable<abi, Abi> extends true\n    ? abi['length'] extends 1\n      ? { errorName?: errorName | allErrorNames | undefined }\n      : { errorName: errorName | allErrorNames }\n    : { errorName?: errorName | allErrorNames | undefined }\n> &\n  (hasErrors extends true ? unknown : never)\n\nexport type EncodeErrorResultReturnType = Hex\n\nexport type EncodeErrorResultErrorType =\n  | GetAbiItemErrorType\n  | FormatAbiItemErrorType\n  | ToFunctionSelectorErrorType\n  | EncodeAbiParametersErrorType\n  | ConcatHexErrorType\n  | ErrorType\n\nexport function encodeErrorResult<\n  const abi extends Abi | readonly unknown[],\n  errorName extends ContractErrorName<abi> | undefined = undefined,\n>(\n  parameters: EncodeErrorResultParameters<abi, errorName>,\n): EncodeErrorResultReturnType {\n  const { abi, errorName, args } = parameters as EncodeErrorResultParameters\n\n  let abiItem = abi[0]\n  if (errorName) {\n    const item = getAbiItem({ abi, args, name: errorName })\n    if (!item) throw new AbiErrorNotFoundError(errorName, { docsPath })\n    abiItem = item\n  }\n\n  if (abiItem.type !== 'error')\n    throw new AbiErrorNotFoundError(undefined, { docsPath })\n\n  const definition = formatAbiItem(abiItem)\n  const signature = toFunctionSelector(definition)\n\n  let data: Hex = '0x'\n  if (args && args.length > 0) {\n    if (!abiItem.inputs)\n      throw new AbiErrorInputsNotFoundError(abiItem.name, { docsPath })\n    data = encodeAbiParameters(abiItem.inputs, args)\n  }\n  return concatHex([signature, data])\n}\n","import type {\n  Abi,\n  AbiParameter,\n  AbiParameterToPrimitiveType,\n  ExtractAbiEvents,\n} from 'abitype'\n\nimport {\n  AbiEventNotFoundError,\n  type AbiEventNotFoundErrorType,\n} from '../../errors/abi.js'\nimport {\n  FilterTypeNotSupportedError,\n  type FilterTypeNotSupportedErrorType,\n} from '../../errors/log.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  ContractEventArgs,\n  ContractEventName,\n  EventDefinition,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport {\n  type ToEventSelectorErrorType,\n  toEventSelector,\n} from '../hash/toEventSelector.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\nimport { type GetAbiItemErrorType, getAbiItem } from './getAbiItem.js'\n\nconst docsPath = '/docs/contract/encodeEventTopics'\n\nexport type EncodeEventTopicsParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> | undefined = ContractEventName<abi>,\n  ///\n  hasEvents = abi extends Abi\n    ? Abi extends abi\n      ? true\n      : [ExtractAbiEvents<abi>] extends [never]\n        ? false\n        : true\n    : true,\n  allArgs = ContractEventArgs<\n    abi,\n    eventName extends ContractEventName<abi>\n      ? eventName\n      : ContractEventName<abi>\n  >,\n  allErrorNames = ContractEventName<abi>,\n> = {\n  abi: abi\n  args?: allArgs | undefined\n} & UnionEvaluate<\n  IsNarrowable<abi, Abi> extends true\n    ? abi['length'] extends 1\n      ? { eventName?: eventName | allErrorNames | undefined }\n      : { eventName: eventName | allErrorNames }\n    : { eventName?: eventName | allErrorNames | undefined }\n> &\n  (hasEvents extends true ? unknown : never)\n\nexport type EncodeEventTopicsReturnType = [Hex, ...(Hex | Hex[] | null)[]]\n\nexport type EncodeEventTopicsErrorType =\n  | AbiEventNotFoundErrorType\n  | EncodeArgErrorType\n  | FormatAbiItemErrorType\n  | GetAbiItemErrorType\n  | ToEventSelectorErrorType\n  | ErrorType\n\nexport function encodeEventTopics<\n  const abi extends Abi | readonly unknown[],\n  eventName extends ContractEventName<abi> | undefined = undefined,\n>(\n  parameters: EncodeEventTopicsParameters<abi, eventName>,\n): EncodeEventTopicsReturnType {\n  const { abi, eventName, args } = parameters as EncodeEventTopicsParameters\n\n  let abiItem = abi[0]\n  if (eventName) {\n    const item = getAbiItem({ abi, name: eventName })\n    if (!item) throw new AbiEventNotFoundError(eventName, { docsPath })\n    abiItem = item\n  }\n\n  if (abiItem.type !== 'event')\n    throw new AbiEventNotFoundError(undefined, { docsPath })\n\n  const definition = formatAbiItem(abiItem)\n  const signature = toEventSelector(definition as EventDefinition)\n\n  let topics: (Hex | Hex[] | null)[] = []\n  if (args && 'inputs' in abiItem) {\n    const indexedInputs = abiItem.inputs?.filter(\n      (param) => 'indexed' in param && param.indexed,\n    )\n    const args_ = Array.isArray(args)\n      ? args\n      : Object.values(args).length > 0\n        ? (indexedInputs?.map((x: any) => (args as any)[x.name]) ?? [])\n        : []\n\n    if (args_.length > 0) {\n      topics =\n        indexedInputs?.map((param, i) => {\n          if (Array.isArray(args_[i]))\n            return args_[i].map((_: any, j: number) =>\n              encodeArg({ param, value: args_[i][j] }),\n            )\n          return typeof args_[i] !== 'undefined' && args_[i] !== null\n            ? encodeArg({ param, value: args_[i] })\n            : null\n        }) ?? []\n    }\n  }\n  return [signature, ...topics]\n}\n\nexport type EncodeArgErrorType =\n  | Keccak256ErrorType\n  | ToBytesErrorType\n  | EncodeAbiParametersErrorType\n  | FilterTypeNotSupportedErrorType\n  | ErrorType\n\nfunction encodeArg({\n  param,\n  value,\n}: { param: AbiParameter; value: AbiParameterToPrimitiveType<AbiParameter> }) {\n  if (param.type === 'string' || param.type === 'bytes')\n    return keccak256(toBytes(value as string))\n  if (param.type === 'tuple' || param.type.match(/^(.*)\\[(\\d+)?\\]$/))\n    throw new FilterTypeNotSupportedError(param.type)\n  return encodeAbiParameters([param], [value])\n}\n","import type { Abi, AbiStateMutability, ExtractAbiFunctions } from 'abitype'\n\nimport type { AbiFunctionNotFoundErrorType } from '../../errors/abi.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n} from '../../types/contract.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\nimport type { ToFunctionSelectorErrorType } from '../hash/toFunctionSelector.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\nimport type { FormatAbiItemErrorType } from './formatAbiItem.js'\nimport type { GetAbiItemErrorType } from './getAbiItem.js'\nimport { prepareEncodeFunctionData } from './prepareEncodeFunctionData.js'\n\nexport type EncodeFunctionDataParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends\n    | ContractFunctionName<abi>\n    | Hex\n    | undefined = ContractFunctionName<abi>,\n  ///\n  hasFunctions = abi extends Abi\n    ? Abi extends abi\n      ? true\n      : [ExtractAbiFunctions<abi>] extends [never]\n        ? false\n        : true\n    : true,\n  allArgs = ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  >,\n  allFunctionNames = ContractFunctionName<abi>,\n> = {\n  abi: abi\n} & UnionEvaluate<\n  IsNarrowable<abi, Abi> extends true\n    ? abi['length'] extends 1\n      ? { functionName?: functionName | allFunctionNames | Hex | undefined }\n      : { functionName: functionName | allFunctionNames | Hex }\n    : { functionName?: functionName | allFunctionNames | Hex | undefined }\n> &\n  UnionEvaluate<\n    readonly [] extends allArgs\n      ? { args?: allArgs | undefined }\n      : { args: allArgs }\n  > &\n  (hasFunctions extends true ? unknown : never)\n\nexport type EncodeFunctionDataReturnType = Hex\n\nexport type EncodeFunctionDataErrorType =\n  | AbiFunctionNotFoundErrorType\n  | ConcatHexErrorType\n  | EncodeAbiParametersErrorType\n  | FormatAbiItemErrorType\n  | GetAbiItemErrorType\n  | ToFunctionSelectorErrorType\n  | ErrorType\n\nexport function encodeFunctionData<\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi> | undefined = undefined,\n>(\n  parameters: EncodeFunctionDataParameters<abi, functionName>,\n): EncodeFunctionDataReturnType {\n  const { args } = parameters as EncodeFunctionDataParameters\n\n  const { abi, functionName } = (() => {\n    if (\n      parameters.abi.length === 1 &&\n      parameters.functionName?.startsWith('0x')\n    )\n      return parameters as { abi: Abi; functionName: Hex }\n    return prepareEncodeFunctionData(parameters)\n  })()\n\n  const abiItem = abi[0]\n  const signature = functionName\n\n  const data =\n    'inputs' in abiItem && abiItem.inputs\n      ? encodeAbiParameters(abiItem.inputs, args ?? [])\n      : undefined\n  return concatHex([signature, data ?? '0x'])\n}\n","import type { Abi, AbiStateMutability, ExtractAbiFunctions } from 'abitype'\n\nimport {\n  AbiFunctionNotFoundError,\n  AbiFunctionOutputsNotFoundError,\n  InvalidArrayError,\n} from '../../errors/abi.js'\nimport type {\n  ContractFunctionName,\n  ContractFunctionReturnType,\n} from '../../types/contract.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\nimport { type GetAbiItemErrorType, getAbiItem } from './getAbiItem.js'\n\nconst docsPath = '/docs/contract/encodeFunctionResult'\n\nexport type EncodeFunctionResultParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends\n    | ContractFunctionName<abi>\n    | undefined = ContractFunctionName<abi>,\n  ///\n  hasFunctions = abi extends Abi\n    ? Abi extends abi\n      ? true\n      : [ExtractAbiFunctions<abi>] extends [never]\n        ? false\n        : true\n    : true,\n  allFunctionNames = ContractFunctionName<abi>,\n> = {\n  abi: abi\n  result?:\n    | ContractFunctionReturnType<\n        abi,\n        AbiStateMutability,\n        functionName extends ContractFunctionName<abi>\n          ? functionName\n          : ContractFunctionName<abi>,\n        never // allow all args. required for overloads to work.\n      >\n    | undefined\n} & UnionEvaluate<\n  IsNarrowable<abi, Abi> extends true\n    ? abi['length'] extends 1\n      ? { functionName?: functionName | allFunctionNames | undefined }\n      : { functionName: functionName | allFunctionNames }\n    : { functionName?: functionName | allFunctionNames | undefined }\n> &\n  (hasFunctions extends true ? unknown : never)\n\nexport type EncodeFunctionResultReturnType = Hex\n\nexport type EncodeFunctionResultErrorType =\n  | AbiFunctionOutputsNotFoundError\n  | AbiFunctionNotFoundError\n  | EncodeAbiParametersErrorType\n  | GetAbiItemErrorType\n  | ErrorType\n\nexport function encodeFunctionResult<\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi> | undefined = undefined,\n>(\n  parameters: EncodeFunctionResultParameters<abi, functionName>,\n): EncodeFunctionResultReturnType {\n  const { abi, functionName, result } =\n    parameters as EncodeFunctionResultParameters\n\n  let abiItem = abi[0]\n  if (functionName) {\n    const item = getAbiItem({ abi, name: functionName })\n    if (!item) throw new AbiFunctionNotFoundError(functionName, { docsPath })\n    abiItem = item\n  }\n\n  if (abiItem.type !== 'function')\n    throw new AbiFunctionNotFoundError(undefined, { docsPath })\n\n  if (!abiItem.outputs)\n    throw new AbiFunctionOutputsNotFoundError(abiItem.name, { docsPath })\n\n  const values = (() => {\n    if (abiItem.outputs.length === 0) return []\n    if (abiItem.outputs.length === 1) return [result]\n    if (Array.isArray(result)) return result\n    throw new InvalidArrayError(result)\n  })()\n\n  return encodeAbiParameters(abiItem.outputs, values)\n}\n","import type {\n  AbiParameterToPrimitiveType,\n  AbiType,\n  Address,\n  SolidityAddress,\n  SolidityArrayWithoutTuple,\n  SolidityBool,\n  SolidityBytes,\n  SolidityInt,\n  SolidityString,\n} from 'abitype'\n\nimport {\n  AbiEncodingLengthMismatchError,\n  type AbiEncodingLengthMismatchErrorType,\n  BytesSizeMismatchError,\n  type BytesSizeMismatchErrorType,\n  UnsupportedPackedAbiType,\n} from '../../errors/abi.js'\nimport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type IsAddressErrorType, isAddress } from '../address/isAddress.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\nimport { type PadErrorType, pad } from '../data/pad.js'\nimport {\n  type BoolToHexErrorType,\n  type NumberToHexErrorType,\n  type StringToHexErrorType,\n  boolToHex,\n  numberToHex,\n  stringToHex,\n} from '../encoding/toHex.js'\nimport { arrayRegex, bytesRegex, integerRegex } from '../regex.js'\n\ntype PackedAbiType =\n  | SolidityAddress\n  | SolidityBool\n  | SolidityBytes\n  | SolidityInt\n  | SolidityString\n  | SolidityArrayWithoutTuple\n\ntype EncodePackedValues<\n  packedAbiTypes extends readonly PackedAbiType[] | readonly unknown[],\n> = {\n  [K in keyof packedAbiTypes]: packedAbiTypes[K] extends AbiType\n    ? AbiParameterToPrimitiveType<{ type: packedAbiTypes[K] }>\n    : unknown\n}\n\nexport type EncodePackedErrorType =\n  | AbiEncodingLengthMismatchErrorType\n  | ConcatHexErrorType\n  | EncodeErrorType\n  | ErrorType\n\nexport function encodePacked<\n  const packedAbiTypes extends readonly PackedAbiType[] | readonly unknown[],\n>(types: packedAbiTypes, values: EncodePackedValues<packedAbiTypes>): Hex {\n  if (types.length !== values.length)\n    throw new AbiEncodingLengthMismatchError({\n      expectedLength: types.length as number,\n      givenLength: values.length as number,\n    })\n\n  const data: Hex[] = []\n  for (let i = 0; i < (types as unknown[]).length; i++) {\n    const type = types[i]\n    const value = values[i]\n    data.push(encode(type, value))\n  }\n  return concatHex(data)\n}\n\ntype EncodeErrorType =\n  | BoolToHexErrorType\n  | BytesSizeMismatchErrorType\n  | InvalidAddressErrorType\n  | IsAddressErrorType\n  | NumberToHexErrorType\n  | PadErrorType\n  | StringToHexErrorType\n  | UnsupportedPackedAbiType\n  | ErrorType\n\nfunction encode<const packedAbiType extends PackedAbiType | unknown>(\n  type: packedAbiType,\n  value: EncodePackedValues<[packedAbiType]>[0],\n  isArray = false,\n): Hex {\n  if (type === 'address') {\n    const address = value as Address\n    if (!isAddress(address)) throw new InvalidAddressError({ address })\n    return pad(address.toLowerCase() as Hex, {\n      size: isArray ? 32 : null,\n    }) as Address\n  }\n  if (type === 'string') return stringToHex(value as string)\n  if (type === 'bytes') return value as Hex\n  if (type === 'bool')\n    return pad(boolToHex(value as boolean), { size: isArray ? 32 : 1 })\n\n  const intMatch = (type as string).match(integerRegex)\n  if (intMatch) {\n    const [_type, baseType, bits = '256'] = intMatch\n    const size = Number.parseInt(bits) / 8\n    return numberToHex(value as number, {\n      size: isArray ? 32 : size,\n      signed: baseType === 'int',\n    })\n  }\n\n  const bytesMatch = (type as string).match(bytesRegex)\n  if (bytesMatch) {\n    const [_type, size] = bytesMatch\n    if (Number.parseInt(size) !== ((value as Hex).length - 2) / 2)\n      throw new BytesSizeMismatchError({\n        expectedSize: Number.parseInt(size),\n        givenSize: ((value as Hex).length - 2) / 2,\n      })\n    return pad(value as Hex, { dir: 'right', size: isArray ? 32 : null }) as Hex\n  }\n\n  const arrayMatch = (type as string).match(arrayRegex)\n  if (arrayMatch && Array.isArray(value)) {\n    const [_type, childType] = arrayMatch\n    const data: Hex[] = []\n    for (let i = 0; i < value.length; i++) {\n      data.push(encode(childType, value[i], true))\n    }\n    if (data.length === 0) return '0x'\n    return concatHex(data)\n  }\n\n  throw new UnsupportedPackedAbiType(type)\n}\n","import type { AbiParameter } from 'abitype'\n\nimport {\n  InvalidDefinitionTypeError,\n  type InvalidDefinitionTypeErrorType,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { AbiItem } from '../../types/contract.js'\n\nexport type FormatAbiItemErrorType =\n  | FormatAbiParamsErrorType\n  | InvalidDefinitionTypeErrorType\n  | ErrorType\n\nexport function formatAbiItem(\n  abiItem: AbiItem,\n  { includeName = false }: { includeName?: boolean | undefined } = {},\n) {\n  if (\n    abiItem.type !== 'function' &&\n    abiItem.type !== 'event' &&\n    abiItem.type !== 'error'\n  )\n    throw new InvalidDefinitionTypeError(abiItem.type)\n\n  return `${abiItem.name}(${formatAbiParams(abiItem.inputs, { includeName })})`\n}\n\nexport type FormatAbiParamsErrorType = ErrorType\n\nexport function formatAbiParams(\n  params: readonly AbiParameter[] | undefined,\n  { includeName = false }: { includeName?: boolean | undefined } = {},\n): string {\n  if (!params) return ''\n  return params\n    .map((param) => formatAbiParam(param, { includeName }))\n    .join(includeName ? ', ' : ',')\n}\n\nexport type FormatAbiParamErrorType = ErrorType\n\nfunction formatAbiParam(\n  param: AbiParameter,\n  { includeName }: { includeName: boolean },\n): string {\n  if (param.type.startsWith('tuple')) {\n    return `(${formatAbiParams(\n      (param as unknown as { components: AbiParameter[] }).components,\n      { includeName },\n    )})${param.type.slice('tuple'.length)}`\n  }\n  return param.type + (includeName && param.name ? ` ${param.name}` : '')\n}\n","import type { AbiParameter } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { AbiItem } from '../../types/contract.js'\nimport { stringify } from '../stringify.js'\n\nexport type FormatAbiItemWithArgsErrorType = ErrorType\n\nexport function formatAbiItemWithArgs({\n  abiItem,\n  args,\n  includeFunctionName = true,\n  includeName = false,\n}: {\n  abiItem: AbiItem\n  args: readonly unknown[]\n  includeFunctionName?: boolean | undefined\n  includeName?: boolean | undefined\n}) {\n  if (!('name' in abiItem)) return\n  if (!('inputs' in abiItem)) return\n  if (!abiItem.inputs) return\n  return `${includeFunctionName ? abiItem.name : ''}(${abiItem.inputs\n    .map(\n      (input: AbiParameter, i: number) =>\n        `${includeName && input.name ? `${input.name}: ` : ''}${\n          typeof args[i] === 'object' ? stringify(args[i]) : args[i]\n        }`,\n    )\n    .join(', ')})`\n}\n","import type { Abi, AbiParameter, Address } from 'abitype'\n\nimport {\n  AbiItemAmbiguityError,\n  type AbiItemAmbiguityErrorType,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  AbiItem,\n  AbiItemArgs,\n  AbiItemName,\n  ExtractAbiItemForArgs,\n  Widen,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { UnionEvaluate } from '../../types/utils.js'\nimport { type IsHexErrorType, isHex } from '../../utils/data/isHex.js'\nimport { type IsAddressErrorType, isAddress } from '../address/isAddress.js'\nimport { toEventSelector } from '../hash/toEventSelector.js'\nimport {\n  type ToFunctionSelectorErrorType,\n  toFunctionSelector,\n} from '../hash/toFunctionSelector.js'\n\nexport type GetAbiItemParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  name extends AbiItemName<abi> = AbiItemName<abi>,\n  args extends AbiItemArgs<abi, name> | undefined = AbiItemArgs<abi, name>,\n  ///\n  allArgs = AbiItemArgs<abi, name>,\n  allNames = AbiItemName<abi>,\n> = {\n  abi: abi\n  name:\n    | allNames // show all options\n    | (name extends allNames ? name : never) // infer value\n    | Hex // function selector\n} & UnionEvaluate<\n  readonly [] extends allArgs\n    ? {\n        args?:\n          | allArgs // show all options\n          // infer value, widen inferred value of `args` conditionally to match `allArgs`\n          | (abi extends Abi\n              ? args extends allArgs\n                ? Widen<args>\n                : never\n              : never)\n          | undefined\n      }\n    : {\n        args?:\n          | allArgs // show all options\n          | (Widen<args> & (args extends allArgs ? unknown : never)) // infer value, widen inferred value of `args` match `allArgs` (e.g. avoid union `args: readonly [123n] | readonly [bigint]`)\n          | undefined\n      }\n>\n\nexport type GetAbiItemErrorType =\n  | IsArgOfTypeErrorType\n  | IsHexErrorType\n  | ToFunctionSelectorErrorType\n  | AbiItemAmbiguityErrorType\n  | ErrorType\n\nexport type GetAbiItemReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  name extends AbiItemName<abi> = AbiItemName<abi>,\n  args extends AbiItemArgs<abi, name> | undefined = AbiItemArgs<abi, name>,\n> = abi extends Abi\n  ? Abi extends abi\n    ? AbiItem | undefined\n    : ExtractAbiItemForArgs<\n        abi,\n        name,\n        args extends AbiItemArgs<abi, name> ? args : AbiItemArgs<abi, name>\n      >\n  : AbiItem | undefined\n\nexport function getAbiItem<\n  const abi extends Abi | readonly unknown[],\n  name extends AbiItemName<abi>,\n  const args extends AbiItemArgs<abi, name> | undefined = undefined,\n>(\n  parameters: GetAbiItemParameters<abi, name, args>,\n): GetAbiItemReturnType<abi, name, args> {\n  const { abi, args = [], name } = parameters as unknown as GetAbiItemParameters\n\n  const isSelector = isHex(name, { strict: false })\n  const abiItems = (abi as Abi).filter((abiItem) => {\n    if (isSelector) {\n      if (abiItem.type === 'function')\n        return toFunctionSelector(abiItem) === name\n      if (abiItem.type === 'event') return toEventSelector(abiItem) === name\n      return false\n    }\n    return 'name' in abiItem && abiItem.name === name\n  })\n\n  if (abiItems.length === 0)\n    return undefined as GetAbiItemReturnType<abi, name, args>\n  if (abiItems.length === 1)\n    return abiItems[0] as GetAbiItemReturnType<abi, name, args>\n\n  let matchedAbiItem: AbiItem | undefined = undefined\n  for (const abiItem of abiItems) {\n    if (!('inputs' in abiItem)) continue\n    if (!args || args.length === 0) {\n      if (!abiItem.inputs || abiItem.inputs.length === 0)\n        return abiItem as GetAbiItemReturnType<abi, name, args>\n      continue\n    }\n    if (!abiItem.inputs) continue\n    if (abiItem.inputs.length === 0) continue\n    if (abiItem.inputs.length !== args.length) continue\n    const matched = args.every((arg, index) => {\n      const abiParameter = 'inputs' in abiItem && abiItem.inputs![index]\n      if (!abiParameter) return false\n      return isArgOfType(arg, abiParameter)\n    })\n    if (matched) {\n      // Check for ambiguity against already matched parameters (e.g. `address` vs `bytes20`).\n      if (\n        matchedAbiItem &&\n        'inputs' in matchedAbiItem &&\n        matchedAbiItem.inputs\n      ) {\n        const ambiguousTypes = getAmbiguousTypes(\n          abiItem.inputs,\n          matchedAbiItem.inputs,\n          args as readonly unknown[],\n        )\n        if (ambiguousTypes)\n          throw new AbiItemAmbiguityError(\n            {\n              abiItem,\n              type: ambiguousTypes[0],\n            },\n            {\n              abiItem: matchedAbiItem,\n              type: ambiguousTypes[1],\n            },\n          )\n      }\n\n      matchedAbiItem = abiItem\n    }\n  }\n\n  if (matchedAbiItem)\n    return matchedAbiItem as GetAbiItemReturnType<abi, name, args>\n  return abiItems[0] as GetAbiItemReturnType<abi, name, args>\n}\n\ntype IsArgOfTypeErrorType = IsAddressErrorType | ErrorType\n\n/** @internal */\nexport function isArgOfType(arg: unknown, abiParameter: AbiParameter): boolean {\n  const argType = typeof arg\n  const abiParameterType = abiParameter.type\n  switch (abiParameterType) {\n    case 'address':\n      return isAddress(arg as Address, { strict: false })\n    case 'bool':\n      return argType === 'boolean'\n    case 'function':\n      return argType === 'string'\n    case 'string':\n      return argType === 'string'\n    default: {\n      if (abiParameterType === 'tuple' && 'components' in abiParameter)\n        return Object.values(abiParameter.components).every(\n          (component, index) => {\n            return isArgOfType(\n              Object.values(arg as unknown[] | Record<string, unknown>)[index],\n              component as AbiParameter,\n            )\n          },\n        )\n\n      // `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n      // https://regexr.com/6v8hp\n      if (\n        /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(\n          abiParameterType,\n        )\n      )\n        return argType === 'number' || argType === 'bigint'\n\n      // `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n      // https://regexr.com/6va55\n      if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(abiParameterType))\n        return argType === 'string' || arg instanceof Uint8Array\n\n      // fixed-length (`<type>[M]`) and dynamic (`<type>[]`) arrays\n      // https://regexr.com/6va6i\n      if (/[a-z]+[1-9]{0,3}(\\[[0-9]{0,}\\])+$/.test(abiParameterType)) {\n        return (\n          Array.isArray(arg) &&\n          arg.every((x: unknown) =>\n            isArgOfType(x, {\n              ...abiParameter,\n              // Pop off `[]` or `[M]` from end of type\n              type: abiParameterType.replace(/(\\[[0-9]{0,}\\])$/, ''),\n            } as AbiParameter),\n          )\n        )\n      }\n\n      return false\n    }\n  }\n}\n\n/** @internal */\nexport function getAmbiguousTypes(\n  sourceParameters: readonly AbiParameter[],\n  targetParameters: readonly AbiParameter[],\n  args: AbiItemArgs,\n): AbiParameter['type'][] | undefined {\n  for (const parameterIndex in sourceParameters) {\n    const sourceParameter = sourceParameters[parameterIndex]\n    const targetParameter = targetParameters[parameterIndex]\n\n    if (\n      sourceParameter.type === 'tuple' &&\n      targetParameter.type === 'tuple' &&\n      'components' in sourceParameter &&\n      'components' in targetParameter\n    )\n      return getAmbiguousTypes(\n        sourceParameter.components,\n        targetParameter.components,\n        (args as any)[parameterIndex],\n      )\n\n    const types = [sourceParameter.type, targetParameter.type]\n\n    const ambiguous = (() => {\n      if (types.includes('address') && types.includes('bytes20')) return true\n      if (types.includes('address') && types.includes('string'))\n        return isAddress(args[parameterIndex] as Address, { strict: false })\n      if (types.includes('address') && types.includes('bytes'))\n        return isAddress(args[parameterIndex] as Address, { strict: false })\n      return false\n    })()\n\n    if (ambiguous) return types\n  }\n\n  return\n}\n","// TODO(v3): checksum address.\n\nimport type { Abi, AbiEvent, AbiEventParameter, Address } from 'abitype'\nimport {\n  AbiEventSignatureNotFoundError,\n  DecodeLogDataMismatch,\n  DecodeLogTopicsMismatch,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ContractEventName, GetEventArgs } from '../../types/contract.js'\nimport type { Log } from '../../types/log.js'\nimport type { RpcLog } from '../../types/rpc.js'\nimport { isAddressEqual } from '../address/isAddressEqual.js'\nimport { toBytes } from '../encoding/toBytes.js'\nimport { keccak256 } from '../hash/keccak256.js'\nimport { toEventSelector } from '../hash/toEventSelector.js'\nimport {\n  type DecodeEventLogErrorType,\n  decodeEventLog,\n} from './decodeEventLog.js'\n\nexport type ParseEventLogsParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends\n    | ContractEventName<abi>\n    | ContractEventName<abi>[]\n    | undefined = ContractEventName<abi>,\n  strict extends boolean | undefined = boolean | undefined,\n  ///\n  allArgs = GetEventArgs<\n    abi,\n    eventName extends ContractEventName<abi>\n      ? eventName\n      : ContractEventName<abi>,\n    {\n      EnableUnion: true\n      IndexedOnly: false\n      Required: false\n    }\n  >,\n> = {\n  /** Contract ABI. */\n  abi: abi\n  /** Arguments for the event. */\n  args?: allArgs | undefined\n  /** Contract event. */\n  eventName?:\n    | eventName\n    | ContractEventName<abi>\n    | ContractEventName<abi>[]\n    | undefined\n  /** List of logs. */\n  logs: (Log | RpcLog)[]\n  strict?: strict | boolean | undefined\n}\n\nexport type ParseEventLogsReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends\n    | ContractEventName<abi>\n    | ContractEventName<abi>[]\n    | undefined = ContractEventName<abi>,\n  strict extends boolean | undefined = boolean | undefined,\n  ///\n  derivedEventName extends\n    | ContractEventName<abi>\n    | undefined = eventName extends ContractEventName<abi>[]\n    ? eventName[number]\n    : eventName,\n> = Log<bigint, number, false, undefined, strict, abi, derivedEventName>[]\n\nexport type ParseEventLogsErrorType = DecodeEventLogErrorType | ErrorType\n\n/**\n * Extracts & decodes logs matching the provided signature(s) (`abi` + optional `eventName`)\n * from a set of opaque logs.\n *\n * @param parameters - {@link ParseEventLogsParameters}\n * @returns The logs. {@link ParseEventLogsReturnType}\n *\n * @example\n * import { createClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { parseEventLogs } from 'viem/op-stack'\n *\n * const client = createClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const receipt = await getTransactionReceipt(client, {\n *   hash: '0xec23b2ba4bc59ba61554507c1b1bc91649e6586eb2dd00c728e8ed0db8bb37ea',\n * })\n *\n * const logs = parseEventLogs({ logs: receipt.logs })\n * // [{ args: { ... }, eventName: 'TransactionDeposited', ... }, ...]\n */\nexport function parseEventLogs<\n  abi extends Abi | readonly unknown[],\n  strict extends boolean | undefined = true,\n  eventName extends\n    | ContractEventName<abi>\n    | ContractEventName<abi>[]\n    | undefined = undefined,\n>(\n  parameters: ParseEventLogsParameters<abi, eventName, strict>,\n): ParseEventLogsReturnType<abi, eventName, strict> {\n  const { abi, args, logs, strict = true } = parameters\n\n  const eventName = (() => {\n    if (!parameters.eventName) return undefined\n    if (Array.isArray(parameters.eventName)) return parameters.eventName\n    return [parameters.eventName as string]\n  })()\n\n  return logs\n    .map((log) => {\n      try {\n        const abiItem = (abi as Abi).find(\n          (abiItem) =>\n            abiItem.type === 'event' &&\n            log.topics[0] === toEventSelector(abiItem),\n        ) as AbiEvent\n        if (!abiItem) return null\n\n        const event = decodeEventLog({\n          ...log,\n          abi: [abiItem],\n          strict,\n        })\n\n        // Check that the decoded event name matches the provided event name.\n        if (eventName && !eventName.includes(event.eventName)) return null\n\n        // Check that the decoded event args match the provided args.\n        if (\n          !includesArgs({\n            args: event.args,\n            inputs: abiItem.inputs,\n            matchArgs: args,\n          })\n        )\n          return null\n\n        return { ...event, ...log }\n      } catch (err) {\n        let eventName: string | undefined\n        let isUnnamed: boolean | undefined\n\n        if (err instanceof AbiEventSignatureNotFoundError) return null\n        if (\n          err instanceof DecodeLogDataMismatch ||\n          err instanceof DecodeLogTopicsMismatch\n        ) {\n          // If strict mode is on, and log data/topics do not match event definition, skip.\n          if (strict) return null\n          eventName = err.abiItem.name\n          isUnnamed = err.abiItem.inputs?.some((x) => !('name' in x && x.name))\n        }\n\n        // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n        return { ...log, args: isUnnamed ? [] : {}, eventName }\n      }\n    })\n    .filter(Boolean) as unknown as ParseEventLogsReturnType<\n    abi,\n    eventName,\n    strict\n  >\n}\n\nfunction includesArgs(parameters: {\n  args: unknown\n  inputs: AbiEvent['inputs']\n  matchArgs: unknown\n}) {\n  const { args, inputs, matchArgs } = parameters\n\n  if (!matchArgs) return true\n  if (!args) return false\n\n  function isEqual(input: AbiEventParameter, value: unknown, arg: unknown) {\n    try {\n      if (input.type === 'address')\n        return isAddressEqual(value as Address, arg as Address)\n      if (input.type === 'string' || input.type === 'bytes')\n        return keccak256(toBytes(value as string)) === arg\n      return value === arg\n    } catch {\n      return false\n    }\n  }\n\n  if (Array.isArray(args) && Array.isArray(matchArgs)) {\n    return matchArgs.every((value, index) => {\n      if (value === null || value === undefined) return true\n      const input = inputs[index]\n      if (!input) return false\n      const value_ = Array.isArray(value) ? value : [value]\n      return value_.some((value) => isEqual(input, value, args[index]))\n    })\n  }\n\n  if (\n    typeof args === 'object' &&\n    !Array.isArray(args) &&\n    typeof matchArgs === 'object' &&\n    !Array.isArray(matchArgs)\n  )\n    return Object.entries(matchArgs).every(([key, value]) => {\n      if (value === null || value === undefined) return true\n      const input = inputs.find((input) => input.name === key)\n      if (!input) return false\n      const value_ = Array.isArray(value) ? value : [value]\n      return value_.some((value) =>\n        isEqual(input, value, (args as Record<string, unknown>)[key]),\n      )\n    })\n\n  return false\n}\n","import type {\n  Abi,\n  AbiStateMutability,\n  ExtractAbiFunction,\n  ExtractAbiFunctions,\n} from 'abitype'\n\nimport {\n  AbiFunctionNotFoundError,\n  type AbiFunctionNotFoundErrorType,\n} from '../../errors/abi.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n} from '../../types/contract.js'\nimport type { ConcatHexErrorType } from '../data/concat.js'\nimport {\n  type ToFunctionSelectorErrorType,\n  toFunctionSelector,\n} from '../hash/toFunctionSelector.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\nimport { type GetAbiItemErrorType, getAbiItem } from './getAbiItem.js'\n\nconst docsPath = '/docs/contract/encodeFunctionData'\n\nexport type PrepareEncodeFunctionDataParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends\n    | ContractFunctionName<abi>\n    | undefined = ContractFunctionName<abi>,\n  ///\n  hasFunctions = abi extends Abi\n    ? Abi extends abi\n      ? true\n      : [ExtractAbiFunctions<abi>] extends [never]\n        ? false\n        : true\n    : true,\n  allArgs = ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  >,\n  allFunctionNames = ContractFunctionName<abi>,\n> = {\n  abi: abi\n} & UnionEvaluate<\n  IsNarrowable<abi, Abi> extends true\n    ? abi['length'] extends 1\n      ? { functionName?: functionName | allFunctionNames | Hex | undefined }\n      : { functionName: functionName | allFunctionNames | Hex }\n    : { functionName?: functionName | allFunctionNames | Hex | undefined }\n> &\n  UnionEvaluate<{ args?: allArgs | undefined }> &\n  (hasFunctions extends true ? unknown : never)\n\nexport type PrepareEncodeFunctionDataReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends\n    | ContractFunctionName<abi>\n    | undefined = ContractFunctionName<abi>,\n> = {\n  abi: abi extends Abi\n    ? functionName extends ContractFunctionName<abi>\n      ? [ExtractAbiFunction<abi, functionName>]\n      : abi\n    : Abi\n  functionName: Hex\n}\n\nexport type PrepareEncodeFunctionDataErrorType =\n  | AbiFunctionNotFoundErrorType\n  | ConcatHexErrorType\n  | FormatAbiItemErrorType\n  | GetAbiItemErrorType\n  | ToFunctionSelectorErrorType\n  | ErrorType\n\nexport function prepareEncodeFunctionData<\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi> | undefined = undefined,\n>(\n  parameters: PrepareEncodeFunctionDataParameters<abi, functionName>,\n): PrepareEncodeFunctionDataReturnType<abi, functionName> {\n  const { abi, args, functionName } =\n    parameters as PrepareEncodeFunctionDataParameters\n\n  let abiItem = abi[0]\n  if (functionName) {\n    const item = getAbiItem({\n      abi,\n      args,\n      name: functionName,\n    })\n    if (!item) throw new AbiFunctionNotFoundError(functionName, { docsPath })\n    abiItem = item\n  }\n\n  if (abiItem.type !== 'function')\n    throw new AbiFunctionNotFoundError(undefined, { docsPath })\n\n  return {\n    abi: [abiItem],\n    functionName: toFunctionSelector(formatAbiItem(abiItem)),\n  } as unknown as PrepareEncodeFunctionDataReturnType<abi, functionName>\n}\n","import type { Address } from 'abitype'\n\nimport { InvalidAddressError } from '../../errors/address.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type StringToBytesErrorType,\n  stringToBytes,\n} from '../encoding/toBytes.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport { LruMap } from '../lru.js'\nimport { type IsAddressErrorType, isAddress } from './isAddress.js'\n\nconst checksumAddressCache = /*#__PURE__*/ new LruMap<Address>(8192)\n\nexport type ChecksumAddressErrorType =\n  | Keccak256ErrorType\n  | StringToBytesErrorType\n  | ErrorType\n\nexport function checksumAddress(\n  address_: Address,\n  /**\n   * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n   * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n   * that relies on EIP-55 checksum encoding (checksum without chainId).\n   *\n   * It is highly recommended to not use this feature unless you\n   * know what you are doing.\n   *\n   * See more: https://github.com/ethereum/EIPs/issues/1121\n   */\n  chainId?: number | undefined,\n): Address {\n  if (checksumAddressCache.has(`${address_}.${chainId}`))\n    return checksumAddressCache.get(`${address_}.${chainId}`)!\n\n  const hexAddress = chainId\n    ? `${chainId}${address_.toLowerCase()}`\n    : address_.substring(2).toLowerCase()\n  const hash = keccak256(stringToBytes(hexAddress), 'bytes')\n\n  const address = (\n    chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress\n  ).split('')\n  for (let i = 0; i < 40; i += 2) {\n    if (hash[i >> 1] >> 4 >= 8 && address[i]) {\n      address[i] = address[i].toUpperCase()\n    }\n    if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {\n      address[i + 1] = address[i + 1].toUpperCase()\n    }\n  }\n\n  const result = `0x${address.join('')}` as const\n  checksumAddressCache.set(`${address_}.${chainId}`, result)\n  return result\n}\n\nexport type GetAddressErrorType =\n  | ChecksumAddressErrorType\n  | IsAddressErrorType\n  | ErrorType\n\nexport function getAddress(\n  address: string,\n  /**\n   * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n   * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n   * that relies on EIP-55 checksum encoding (checksum without chainId).\n   *\n   * It is highly recommended to not use this feature unless you\n   * know what you are doing.\n   *\n   * See more: https://github.com/ethereum/EIPs/issues/1121\n   */\n  chainId?: number,\n): Address {\n  if (!isAddress(address, { strict: false }))\n    throw new InvalidAddressError({ address })\n  return checksumAddress(address, chainId)\n}\n","import type { Address } from 'abitype'\n\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type ConcatErrorType, concat } from '../data/concat.js'\nimport { type IsBytesErrorType, isBytes } from '../data/isBytes.js'\nimport { type PadErrorType, pad } from '../data/pad.js'\nimport { type SliceErrorType, slice } from '../data/slice.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { type ToRlpErrorType, toRlp } from '../encoding/toRlp.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type GetAddressErrorType, getAddress } from './getAddress.js'\n\nexport type GetCreateAddressOptions = {\n  from: Address\n  nonce: bigint\n}\n\nexport type GetCreate2AddressOptions =\n  | {\n      bytecode: ByteArray | Hex\n      from: Address\n      salt: ByteArray | Hex\n    }\n  | {\n      bytecodeHash: ByteArray | Hex\n      from: Address\n      salt: ByteArray | Hex\n    }\n\nexport type GetContractAddressOptions =\n  | ({\n      opcode?: 'CREATE' | undefined\n    } & GetCreateAddressOptions)\n  | ({ opcode: 'CREATE2' } & GetCreate2AddressOptions)\n\nexport function getContractAddress(opts: GetContractAddressOptions) {\n  if (opts.opcode === 'CREATE2') return getCreate2Address(opts)\n  return getCreateAddress(opts)\n}\n\nexport type GetCreateAddressErrorType =\n  | Keccak256ErrorType\n  | GetAddressErrorType\n  | ToBytesErrorType\n  | ToRlpErrorType\n  | ErrorType\n\nexport function getCreateAddress(opts: GetCreateAddressOptions) {\n  const from = toBytes(getAddress(opts.from))\n\n  let nonce = toBytes(opts.nonce)\n  if (nonce[0] === 0) nonce = new Uint8Array([])\n\n  return getAddress(\n    `0x${keccak256(toRlp([from, nonce], 'bytes')).slice(26)}` as Address,\n  )\n}\n\nexport type GetCreate2AddressErrorType =\n  | ConcatErrorType\n  | Keccak256ErrorType\n  | GetAddressErrorType\n  | IsBytesErrorType\n  | PadErrorType\n  | SliceErrorType\n  | ToBytesErrorType\n  | ToRlpErrorType\n  | ErrorType\n\nexport function getCreate2Address(opts: GetCreate2AddressOptions) {\n  const from = toBytes(getAddress(opts.from))\n  const salt = pad(isBytes(opts.salt) ? opts.salt : toBytes(opts.salt), {\n    size: 32,\n  })\n\n  const bytecodeHash = (() => {\n    if ('bytecodeHash' in opts) {\n      if (isBytes(opts.bytecodeHash)) return opts.bytecodeHash\n      return toBytes(opts.bytecodeHash)\n    }\n    return keccak256(opts.bytecode, 'bytes')\n  })()\n\n  return getAddress(\n    slice(keccak256(concat([toBytes('0xff'), from, salt, bytecodeHash])), 12),\n  )\n}\n","import type { Address } from 'abitype'\nimport type { ErrorType } from '../../errors/utils.js'\nimport { LruMap } from '../lru.js'\nimport { checksumAddress } from './getAddress.js'\n\nconst addressRegex = /^0x[a-fA-F0-9]{40}$/\n\n/** @internal */\nexport const isAddressCache = /*#__PURE__*/ new LruMap<boolean>(8192)\n\nexport type IsAddressOptions = {\n  /**\n   * Enables strict mode. Whether or not to compare the address against its checksum.\n   *\n   * @default true\n   */\n  strict?: boolean | undefined\n}\n\nexport type IsAddressErrorType = ErrorType\n\nexport function isAddress(\n  address: string,\n  options?: IsAddressOptions | undefined,\n): address is Address {\n  const { strict = true } = options ?? {}\n  const cacheKey = `${address}.${strict}`\n\n  if (isAddressCache.has(cacheKey)) return isAddressCache.get(cacheKey)!\n\n  const result = (() => {\n    if (!addressRegex.test(address)) return false\n    if (address.toLowerCase() === address) return true\n    if (strict) return checksumAddress(address as Address) === address\n    return true\n  })()\n  isAddressCache.set(cacheKey, result)\n  return result\n}\n","import type { Address } from 'abitype'\n\nimport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport { isAddress } from './isAddress.js'\n\nexport type IsAddressEqualReturnType = boolean\nexport type IsAddressEqualErrorType = InvalidAddressErrorType | ErrorType\n\nexport function isAddressEqual(a: Address, b: Address) {\n  if (!isAddress(a, { strict: false }))\n    throw new InvalidAddressError({ address: a })\n  if (!isAddress(b, { strict: false }))\n    throw new InvalidAddressError({ address: b })\n  return a.toLowerCase() === b.toLowerCase()\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { AuthorizationRequest } from '../../types/authorization.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\nimport { type HexToBytesErrorType, hexToBytes } from '../encoding/toBytes.js'\nimport { type NumberToHexErrorType, numberToHex } from '../encoding/toHex.js'\nimport { type ToRlpErrorType, toRlp } from '../encoding/toRlp.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type HashAuthorizationParameters<to extends To> =\n  AuthorizationRequest & {\n    /** Output format. @default \"hex\" */\n    to?: to | To | undefined\n  }\n\nexport type HashAuthorizationReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type HashAuthorizationErrorType =\n  | Keccak256ErrorType\n  | ConcatHexErrorType\n  | ToRlpErrorType\n  | NumberToHexErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\n/**\n * Computes an Authorization hash in [EIP-7702 format](https://eips.ethereum.org/EIPS/eip-7702): `keccak256('0x05' || rlp([chain_id, address, nonce]))`.\n */\nexport function hashAuthorization<to extends To = 'hex'>(\n  parameters: HashAuthorizationParameters<to>,\n): HashAuthorizationReturnType<to> {\n  const { chainId, nonce, to } = parameters\n  const address = parameters.contractAddress ?? parameters.address\n  const hash = keccak256(\n    concatHex([\n      '0x05',\n      toRlp([\n        chainId ? numberToHex(chainId) : '0x',\n        address,\n        nonce ? numberToHex(nonce) : '0x',\n      ]),\n    ]),\n  )\n  if (to === 'bytes') return hexToBytes(hash) as HashAuthorizationReturnType<to>\n  return hash as HashAuthorizationReturnType<to>\n}\n","import type { Address } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  Authorization,\n  AuthorizationRequest,\n  SignedAuthorization,\n} from '../../types/authorization.js'\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\nimport type { OneOf } from '../../types/utils.js'\nimport {\n  type RecoverAddressErrorType,\n  recoverAddress,\n} from '../signature/recoverAddress.js'\nimport {\n  type HashAuthorizationErrorType,\n  hashAuthorization,\n} from './hashAuthorization.js'\n\nexport type RecoverAuthorizationAddressParameters<\n  authorization extends OneOf<\n    Authorization | AuthorizationRequest | SignedAuthorization\n  > = OneOf<Authorization | AuthorizationRequest | SignedAuthorization>,\n  //\n  _signature = Hex | ByteArray | OneOf<Signature | SignedAuthorization>,\n> = {\n  /**\n   * The Authorization object.\n   *\n   * - If an unsigned `authorization` is provided, the `signature` property is required.\n   * - If a signed `authorization` is provided, the `signature` property does not need to be provided.\n   */\n  authorization:\n    | authorization\n    | OneOf<Authorization | AuthorizationRequest | SignedAuthorization>\n} & (authorization extends SignedAuthorization\n  ? {\n      /** Signature of the Authorization. Not required if the `authorization` is signed. */\n      signature?: _signature | undefined\n    }\n  : {\n      /** Signature of the Authorization. Not required if the `authorization` is signed. */\n      signature: _signature\n    })\n\nexport type RecoverAuthorizationAddressReturnType = Address\n\nexport type RecoverAuthorizationAddressErrorType =\n  | HashAuthorizationErrorType\n  | RecoverAddressErrorType\n  | ErrorType\n\nexport async function recoverAuthorizationAddress<\n  const authorization extends OneOf<\n    Authorization | AuthorizationRequest | SignedAuthorization\n  >,\n>(\n  parameters: RecoverAuthorizationAddressParameters<authorization>,\n): Promise<RecoverAuthorizationAddressReturnType> {\n  const { authorization, signature } = parameters\n\n  return recoverAddress({\n    hash: hashAuthorization(authorization as AuthorizationRequest),\n    signature: (signature ?? authorization) as Signature,\n  })\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type {\n  AuthorizationList,\n  SerializedAuthorizationList,\n} from '../../types/authorization.js'\nimport { toHex } from '../encoding/toHex.js'\nimport { toYParitySignatureArray } from '../transaction/serializeTransaction.js'\n\nexport type SerializeAuthorizationListReturnType = SerializedAuthorizationList\n\nexport type SerializeAuthorizationListErrorType = ErrorType\n\n/*\n * Serializes an EIP-7702 authorization list.\n */\nexport function serializeAuthorizationList(\n  authorizationList?: AuthorizationList<number, true> | undefined,\n): SerializeAuthorizationListReturnType {\n  if (!authorizationList || authorizationList.length === 0) return []\n\n  const serializedAuthorizationList = []\n  for (const authorization of authorizationList) {\n    const { chainId, nonce, ...signature } = authorization\n    const contractAddress = authorization.address\n    serializedAuthorizationList.push([\n      chainId ? toHex(chainId) : '0x',\n      contractAddress,\n      nonce ? toHex(nonce) : '0x',\n      ...toYParitySignatureArray({}, signature),\n    ])\n  }\n\n  return serializedAuthorizationList as {} as SerializeAuthorizationListReturnType\n}\n","import type { Address } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type GetAddressErrorType, getAddress } from '../address/getAddress.js'\nimport {\n  type IsAddressEqualErrorType,\n  isAddressEqual,\n} from '../address/isAddressEqual.js'\nimport {\n  type RecoverAuthorizationAddressErrorType,\n  type RecoverAuthorizationAddressParameters,\n  recoverAuthorizationAddress,\n} from './recoverAuthorizationAddress.js'\n\nexport type VerifyAuthorizationParameters =\n  RecoverAuthorizationAddressParameters & {\n    /** The address that signed the Authorization object. */\n    address: Address\n  }\n\nexport type VerifyAuthorizationReturnType = boolean\n\nexport type VerifyAuthorizationErrorType =\n  | IsAddressEqualErrorType\n  | GetAddressErrorType\n  | RecoverAuthorizationAddressErrorType\n  | ErrorType\n\n/**\n * Verify that an Authorization object was signed by the provided address.\n *\n * - Docs {@link https://viem.sh/docs/utilities/verifyAuthorization}\n *\n * @param parameters - {@link VerifyAuthorizationParameters}\n * @returns Whether or not the signature is valid. {@link VerifyAuthorizationReturnType}\n */\nexport async function verifyAuthorization({\n  address,\n  authorization,\n  signature,\n}: VerifyAuthorizationParameters): Promise<VerifyAuthorizationReturnType> {\n  return isAddressEqual(\n    getAddress(address),\n    await recoverAuthorizationAddress({\n      authorization,\n      signature,\n    }),\n  )\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Kzg } from '../../types/kzg.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type HexToBytesErrorType, hexToBytes } from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type BlobsToCommitmentsParameters<\n  blobs extends readonly ByteArray[] | readonly Hex[] =\n    | readonly ByteArray[]\n    | readonly Hex[],\n  to extends To | undefined = undefined,\n> = {\n  /** Blobs to transform into commitments. */\n  blobs: blobs | readonly ByteArray[] | readonly Hex[]\n  /** KZG implementation. */\n  kzg: Pick<Kzg, 'blobToKzgCommitment'>\n  /** Return type. */\n  to?: to | To | undefined\n}\n\nexport type BlobsToCommitmentsReturnType<to extends To> =\n  | (to extends 'bytes' ? readonly ByteArray[] : never)\n  | (to extends 'hex' ? readonly Hex[] : never)\n\nexport type BlobsToCommitmentsErrorType =\n  | HexToBytesErrorType\n  | BytesToHexErrorType\n  | ErrorType\n\n/**\n * Compute commitments from a list of blobs.\n *\n * @example\n * ```ts\n * import { blobsToCommitments, toBlobs } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * ```\n */\nexport function blobsToCommitments<\n  const blobs extends readonly ByteArray[] | readonly Hex[],\n  to extends To =\n    | (blobs extends readonly Hex[] ? 'hex' : never)\n    | (blobs extends readonly ByteArray[] ? 'bytes' : never),\n>(\n  parameters: BlobsToCommitmentsParameters<blobs, to>,\n): BlobsToCommitmentsReturnType<to> {\n  const { kzg } = parameters\n\n  const to =\n    parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes')\n  const blobs = (\n    typeof parameters.blobs[0] === 'string'\n      ? parameters.blobs.map((x) => hexToBytes(x as any))\n      : parameters.blobs\n  ) as ByteArray[]\n\n  const commitments: ByteArray[] = []\n  for (const blob of blobs)\n    commitments.push(Uint8Array.from(kzg.blobToKzgCommitment(blob)))\n\n  return (to === 'bytes'\n    ? commitments\n    : commitments.map((x) =>\n        bytesToHex(x),\n      )) as {} as BlobsToCommitmentsReturnType<to>\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Kzg } from '../../types/kzg.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type HexToBytesErrorType, hexToBytes } from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type blobsToProofsParameters<\n  blobs extends readonly ByteArray[] | readonly Hex[],\n  commitments extends readonly ByteArray[] | readonly Hex[],\n  to extends To =\n    | (blobs extends readonly Hex[] ? 'hex' : never)\n    | (blobs extends readonly ByteArray[] ? 'bytes' : never),\n  ///\n  _blobsType =\n    | (blobs extends readonly Hex[] ? readonly Hex[] : never)\n    | (blobs extends readonly ByteArray[] ? readonly ByteArray[] : never),\n> = {\n  /** Blobs to transform into proofs. */\n  blobs: blobs\n  /** Commitments for the blobs. */\n  commitments: commitments &\n    (commitments extends _blobsType\n      ? {}\n      : `commitments must be the same type as blobs`)\n  /** KZG implementation. */\n  kzg: Pick<Kzg, 'computeBlobKzgProof'>\n  /** Return type. */\n  to?: to | To | undefined\n}\n\nexport type blobsToProofsReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray[] : never)\n  | (to extends 'hex' ? Hex[] : never)\n\nexport type blobsToProofsErrorType =\n  | BytesToHexErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\n/**\n * Compute the proofs for a list of blobs and their commitments.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n * ```\n */\nexport function blobsToProofs<\n  const blobs extends readonly ByteArray[] | readonly Hex[],\n  const commitments extends readonly ByteArray[] | readonly Hex[],\n  to extends To =\n    | (blobs extends readonly Hex[] ? 'hex' : never)\n    | (blobs extends readonly ByteArray[] ? 'bytes' : never),\n>(\n  parameters: blobsToProofsParameters<blobs, commitments, to>,\n): blobsToProofsReturnType<to> {\n  const { kzg } = parameters\n\n  const to =\n    parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes')\n\n  const blobs = (\n    typeof parameters.blobs[0] === 'string'\n      ? parameters.blobs.map((x) => hexToBytes(x as any))\n      : parameters.blobs\n  ) as ByteArray[]\n  const commitments = (\n    typeof parameters.commitments[0] === 'string'\n      ? parameters.commitments.map((x) => hexToBytes(x as any))\n      : parameters.commitments\n  ) as ByteArray[]\n\n  const proofs: ByteArray[] = []\n  for (let i = 0; i < blobs.length; i++) {\n    const blob = blobs[i]\n    const commitment = commitments[i]\n    proofs.push(Uint8Array.from(kzg.computeBlobKzgProof(blob, commitment)))\n  }\n\n  return (to === 'bytes'\n    ? proofs\n    : proofs.map((x) => bytesToHex(x))) as {} as blobsToProofsReturnType<to>\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\nimport { type Sha256ErrorType, sha256 } from '../hash/sha256.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type CommitmentToVersionedHashParameters<\n  commitment extends Uint8Array | Hex = Uint8Array | Hex,\n  to extends To | undefined = undefined,\n> = {\n  /** Commitment from blob. */\n  commitment: commitment | Uint8Array | Hex\n  /** Return type. */\n  to?: to | To | undefined\n  /** Version to tag onto the hash. */\n  version?: number | undefined\n}\n\nexport type CommitmentToVersionedHashReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type CommitmentToVersionedHashErrorType =\n  | Sha256ErrorType\n  | BytesToHexErrorType\n  | ErrorType\n\n/**\n * Transform a commitment to it's versioned hash.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentToVersionedHash,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const [commitment] = blobsToCommitments({ blobs, kzg })\n * const versionedHash = commitmentToVersionedHash({ commitment })\n * ```\n */\nexport function commitmentToVersionedHash<\n  const commitment extends Hex | ByteArray,\n  to extends To =\n    | (commitment extends Hex ? 'hex' : never)\n    | (commitment extends ByteArray ? 'bytes' : never),\n>(\n  parameters: CommitmentToVersionedHashParameters<commitment, to>,\n): CommitmentToVersionedHashReturnType<to> {\n  const { commitment, version = 1 } = parameters\n  const to = parameters.to ?? (typeof commitment === 'string' ? 'hex' : 'bytes')\n\n  const versionedHash = sha256(commitment, 'bytes')\n  versionedHash.set([version], 0)\n  return (\n    to === 'bytes' ? versionedHash : bytesToHex(versionedHash)\n  ) as CommitmentToVersionedHashReturnType<to>\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport {\n  type CommitmentToVersionedHashErrorType,\n  commitmentToVersionedHash,\n} from './commitmentToVersionedHash.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type CommitmentsToVersionedHashesParameters<\n  commitments extends readonly Uint8Array[] | readonly Hex[] =\n    | readonly Uint8Array[]\n    | readonly Hex[],\n  to extends To | undefined = undefined,\n> = {\n  /** Commitments from blobs. */\n  commitments: commitments | readonly Uint8Array[] | readonly Hex[]\n  /** Return type. */\n  to?: to | To | undefined\n  /** Version to tag onto the hashes. */\n  version?: number | undefined\n}\n\nexport type CommitmentsToVersionedHashesReturnType<to extends To> =\n  | (to extends 'bytes' ? readonly ByteArray[] : never)\n  | (to extends 'hex' ? readonly Hex[] : never)\n\nexport type CommitmentsToVersionedHashesErrorType =\n  | CommitmentToVersionedHashErrorType\n  | ErrorType\n\n/**\n * Transform a list of commitments to their versioned hashes.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentsToVersionedHashes,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const versionedHashes = commitmentsToVersionedHashes({ commitments })\n * ```\n */\nexport function commitmentsToVersionedHashes<\n  const commitments extends readonly Uint8Array[] | readonly Hex[],\n  to extends To =\n    | (commitments extends readonly Hex[] ? 'hex' : never)\n    | (commitments extends readonly ByteArray[] ? 'bytes' : never),\n>(\n  parameters: CommitmentsToVersionedHashesParameters<commitments, to>,\n): CommitmentsToVersionedHashesReturnType<to> {\n  const { commitments, version } = parameters\n\n  const to =\n    parameters.to ?? (typeof commitments[0] === 'string' ? 'hex' : 'bytes')\n\n  const hashes: Uint8Array[] | Hex[] = []\n  for (const commitment of commitments) {\n    hashes.push(\n      commitmentToVersionedHash({\n        commitment,\n        to,\n        version,\n      }) as any,\n    )\n  }\n  return hashes as any\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type CreateCursorErrorType, createCursor } from '../cursor.js'\nimport { type HexToBytesErrorType, hexToBytes } from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type FromBlobsParameters<\n  blobs extends readonly Hex[] | readonly ByteArray[] =\n    | readonly Hex[]\n    | readonly ByteArray[],\n  to extends To | undefined = undefined,\n> = {\n  /** Blobs to transform to data. */\n  blobs: blobs | readonly Hex[] | readonly ByteArray[]\n  to?: to | To | undefined\n}\n\nexport type FromBlobsReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type FromBlobsErrorType =\n  | BytesToHexErrorType\n  | CreateCursorErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\nexport function fromBlobs<\n  const blobs extends readonly Hex[] | readonly ByteArray[],\n  to extends To =\n    | (blobs extends readonly Hex[] ? 'hex' : never)\n    | (blobs extends readonly ByteArray[] ? 'bytes' : never),\n>(parameters: FromBlobsParameters<blobs, to>): FromBlobsReturnType<to> {\n  const to =\n    parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes')\n  const blobs = (\n    typeof parameters.blobs[0] === 'string'\n      ? parameters.blobs.map((x) => hexToBytes(x as Hex))\n      : parameters.blobs\n  ) as ByteArray[]\n\n  const length = blobs.reduce((length, blob) => length + blob.length, 0)\n  const data = createCursor(new Uint8Array(length))\n  let active = true\n\n  for (const blob of blobs) {\n    const cursor = createCursor(blob)\n    while (active && cursor.position < blob.length) {\n      // First byte will be a zero 0x00 byte – we can skip.\n      cursor.incrementPosition(1)\n\n      let consume = 31\n      if (blob.length - cursor.position < 31)\n        consume = blob.length - cursor.position\n\n      for (const _ in Array.from({ length: consume })) {\n        const byte = cursor.readByte()\n        const isTerminator =\n          byte === 0x80 && !cursor.inspectBytes(cursor.remaining).includes(0x80)\n        if (isTerminator) {\n          active = false\n          break\n        }\n        data.pushByte(byte)\n      }\n    }\n  }\n\n  const trimmedData = data.bytes.slice(0, data.position)\n  return (\n    to === 'hex' ? bytesToHex(trimmedData) : trimmedData\n  ) as FromBlobsReturnType<to>\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { BlobSidecars } from '../../types/eip4844.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport {\n  type CommitmentToVersionedHashErrorType,\n  commitmentToVersionedHash,\n} from './commitmentToVersionedHash.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type SidecarsToVersionedHashesParameters<\n  sidecars extends BlobSidecars = BlobSidecars,\n  to extends To | undefined = undefined,\n> = {\n  /** Sidecars from blobs. */\n  sidecars: sidecars | BlobSidecars\n  /** Return type. */\n  to?: to | To | undefined\n  /** Version to tag onto the hashes. */\n  version?: number | undefined\n}\n\nexport type SidecarsToVersionedHashesReturnType<to extends To> =\n  | (to extends 'bytes' ? readonly ByteArray[] : never)\n  | (to extends 'hex' ? readonly Hex[] : never)\n\nexport type SidecarsToVersionedHashesErrorType =\n  | CommitmentToVersionedHashErrorType\n  | ErrorType\n\n/**\n * Transforms a list of sidecars to their versioned hashes.\n *\n * @example\n * ```ts\n * import { toBlobSidecars, sidecarsToVersionedHashes, stringToHex } from 'viem'\n *\n * const sidecars = toBlobSidecars({ data: stringToHex('hello world') })\n * const versionedHashes = sidecarsToVersionedHashes({ sidecars })\n * ```\n */\nexport function sidecarsToVersionedHashes<\n  const sidecars extends BlobSidecars,\n  to extends To =\n    | (sidecars extends BlobSidecars<Hex> ? 'hex' : never)\n    | (sidecars extends BlobSidecars<ByteArray> ? 'bytes' : never),\n>(\n  parameters: SidecarsToVersionedHashesParameters<sidecars, to>,\n): SidecarsToVersionedHashesReturnType<to> {\n  const { sidecars, version } = parameters\n\n  const to =\n    parameters.to ?? (typeof sidecars[0].blob === 'string' ? 'hex' : 'bytes')\n\n  const hashes: Uint8Array[] | Hex[] = []\n  for (const { commitment } of sidecars) {\n    hashes.push(\n      commitmentToVersionedHash({\n        commitment,\n        to,\n        version,\n      }) as any,\n    )\n  }\n  return hashes as any\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { BlobSidecars } from '../../types/eip4844.js'\nimport type { Kzg } from '../../types/kzg.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport type { OneOf } from '../../types/utils.js'\nimport {\n  type BlobsToCommitmentsErrorType,\n  blobsToCommitments,\n} from './blobsToCommitments.js'\nimport { blobsToProofs, type blobsToProofsErrorType } from './blobsToProofs.js'\nimport { type ToBlobsErrorType, toBlobs } from './toBlobs.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type ToBlobSidecarsParameters<\n  data extends Hex | ByteArray | undefined = undefined,\n  blobs extends readonly Hex[] | readonly ByteArray[] | undefined = undefined,\n  to extends To =\n    | (blobs extends readonly Hex[] ? 'hex' : never)\n    | (blobs extends readonly ByteArray[] ? 'bytes' : never),\n  ///\n  _blobsType =\n    | (blobs extends readonly Hex[] ? readonly Hex[] : never)\n    | (blobs extends readonly ByteArray[] ? readonly ByteArray[] : never),\n> = {\n  /** Return type. */\n  to?: to | To | undefined\n} & OneOf<\n  | {\n      /** Data to transform into blobs. */\n      data: data | Hex | ByteArray\n      /** KZG implementation. */\n      kzg: Kzg\n    }\n  | {\n      /** Blobs. */\n      blobs: blobs | readonly Hex[] | readonly ByteArray[]\n      /** Commitment for each blob. */\n      commitments: _blobsType | readonly Hex[] | readonly ByteArray[]\n      /** Proof for each blob. */\n      proofs: _blobsType | readonly Hex[] | readonly ByteArray[]\n    }\n>\n\nexport type ToBlobSidecarsReturnType<to extends To> =\n  | (to extends 'bytes' ? BlobSidecars<ByteArray> : never)\n  | (to extends 'hex' ? BlobSidecars<Hex> : never)\n\nexport type ToBlobSidecarsErrorType =\n  | BlobsToCommitmentsErrorType\n  | ToBlobsErrorType\n  | blobsToProofsErrorType\n  | ErrorType\n\n/**\n * Transforms arbitrary data (or blobs, commitments, & proofs) into a sidecar array.\n *\n * @example\n * ```ts\n * import { toBlobSidecars, stringToHex } from 'viem'\n *\n * const sidecars = toBlobSidecars({ data: stringToHex('hello world') })\n * ```\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs,\n *   blobsToProofs,\n *   toBlobSidecars,\n *   stringToHex\n * } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n *\n * const sidecars = toBlobSidecars({ blobs, commitments, proofs })\n * ```\n */\nexport function toBlobSidecars<\n  const data extends Hex | ByteArray | undefined = undefined,\n  const blobs extends\n    | readonly Hex[]\n    | readonly ByteArray[]\n    | undefined = undefined,\n  to extends To =\n    | (data extends Hex ? 'hex' : never)\n    | (data extends ByteArray ? 'bytes' : never)\n    | (blobs extends readonly Hex[] ? 'hex' : never)\n    | (blobs extends readonly ByteArray[] ? 'bytes' : never),\n>(\n  parameters: ToBlobSidecarsParameters<data, blobs, to>,\n): ToBlobSidecarsReturnType<to> {\n  const { data, kzg, to } = parameters\n  const blobs = parameters.blobs ?? toBlobs({ data: data!, to })\n  const commitments =\n    parameters.commitments ?? blobsToCommitments({ blobs, kzg: kzg!, to })\n  const proofs =\n    parameters.proofs ?? blobsToProofs({ blobs, commitments, kzg: kzg!, to })\n\n  const sidecars: BlobSidecars = []\n  for (let i = 0; i < blobs.length; i++)\n    sidecars.push({\n      blob: blobs[i],\n      commitment: commitments[i],\n      proof: proofs[i],\n    })\n\n  return sidecars as ToBlobSidecarsReturnType<to>\n}\n","import {\n  bytesPerBlob,\n  bytesPerFieldElement,\n  fieldElementsPerBlob,\n  maxBytesPerTransaction,\n} from '../../constants/blob.js'\nimport {\n  BlobSizeTooLargeError,\n  type BlobSizeTooLargeErrorType,\n  EmptyBlobError,\n  type EmptyBlobErrorType,\n} from '../../errors/blob.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type CreateCursorErrorType, createCursor } from '../cursor.js'\nimport { type SizeErrorType, size } from '../data/size.js'\nimport { type HexToBytesErrorType, hexToBytes } from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type ToBlobsParameters<\n  data extends Hex | ByteArray = Hex | ByteArray,\n  to extends To | undefined = undefined,\n> = {\n  /** Data to transform to a blob. */\n  data: data | Hex | ByteArray\n  /** Return type. */\n  to?: to | To | undefined\n}\n\nexport type ToBlobsReturnType<to extends To> =\n  | (to extends 'bytes' ? readonly ByteArray[] : never)\n  | (to extends 'hex' ? readonly Hex[] : never)\n\nexport type ToBlobsErrorType =\n  | BlobSizeTooLargeErrorType\n  | BytesToHexErrorType\n  | CreateCursorErrorType\n  | EmptyBlobErrorType\n  | HexToBytesErrorType\n  | SizeErrorType\n  | ErrorType\n\n/**\n * Transforms arbitrary data to blobs.\n *\n * @example\n * ```ts\n * import { toBlobs, stringToHex } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * ```\n */\nexport function toBlobs<\n  const data extends Hex | ByteArray,\n  to extends To =\n    | (data extends Hex ? 'hex' : never)\n    | (data extends ByteArray ? 'bytes' : never),\n>(parameters: ToBlobsParameters<data, to>): ToBlobsReturnType<to> {\n  const to =\n    parameters.to ?? (typeof parameters.data === 'string' ? 'hex' : 'bytes')\n  const data = (\n    typeof parameters.data === 'string'\n      ? hexToBytes(parameters.data)\n      : parameters.data\n  ) as ByteArray\n\n  const size_ = size(data)\n  if (!size_) throw new EmptyBlobError()\n  if (size_ > maxBytesPerTransaction)\n    throw new BlobSizeTooLargeError({\n      maxSize: maxBytesPerTransaction,\n      size: size_,\n    })\n\n  const blobs = []\n\n  let active = true\n  let position = 0\n  while (active) {\n    const blob = createCursor(new Uint8Array(bytesPerBlob))\n\n    let size = 0\n    while (size < fieldElementsPerBlob) {\n      const bytes = data.slice(position, position + (bytesPerFieldElement - 1))\n\n      // Push a zero byte so the field element doesn't overflow the BLS modulus.\n      blob.pushByte(0x00)\n\n      // Push the current segment of data bytes.\n      blob.pushBytes(bytes)\n\n      // If we detect that the current segment of data bytes is less than 31 bytes,\n      // we can stop processing and push a terminator byte to indicate the end of the blob.\n      if (bytes.length < 31) {\n        blob.pushByte(0x80)\n        active = false\n        break\n      }\n\n      size++\n      position += 31\n    }\n\n    blobs.push(blob)\n  }\n\n  return (\n    to === 'bytes'\n      ? blobs.map((x) => x.bytes)\n      : blobs.map((x) => bytesToHex(x.bytes))\n  ) as any\n}\n","import { BaseError } from '../errors/base.js'\nimport {\n  HttpRequestError,\n  type HttpRequestErrorType,\n  type RpcRequestErrorType,\n  type TimeoutErrorType,\n  type WebSocketRequestErrorType,\n} from '../errors/request.js'\nimport {\n  AtomicReadyWalletRejectedUpgradeError,\n  type AtomicReadyWalletRejectedUpgradeErrorType,\n  AtomicityNotSupportedError,\n  type AtomicityNotSupportedErrorType,\n  BundleTooLargeError,\n  type BundleTooLargeErrorType,\n  ChainDisconnectedError,\n  type ChainDisconnectedErrorType,\n  DuplicateIdError,\n  type DuplicateIdErrorType,\n  InternalRpcError,\n  type InternalRpcErrorType,\n  InvalidInputRpcError,\n  type InvalidInputRpcErrorType,\n  InvalidParamsRpcError,\n  type InvalidParamsRpcErrorType,\n  InvalidRequestRpcError,\n  type InvalidRequestRpcErrorType,\n  JsonRpcVersionUnsupportedError,\n  type JsonRpcVersionUnsupportedErrorType,\n  LimitExceededRpcError,\n  type LimitExceededRpcErrorType,\n  MethodNotFoundRpcError,\n  type MethodNotFoundRpcErrorType,\n  MethodNotSupportedRpcError,\n  type MethodNotSupportedRpcErrorType,\n  ParseRpcError,\n  type ParseRpcErrorType,\n  ProviderDisconnectedError,\n  type ProviderDisconnectedErrorType,\n  type ProviderRpcErrorCode,\n  ResourceNotFoundRpcError,\n  type ResourceNotFoundRpcErrorType,\n  ResourceUnavailableRpcError,\n  type ResourceUnavailableRpcErrorType,\n  type RpcError,\n  type RpcErrorCode,\n  type RpcErrorType,\n  SwitchChainError,\n  type SwitchChainErrorType,\n  TransactionRejectedRpcError,\n  type TransactionRejectedRpcErrorType,\n  UnauthorizedProviderError,\n  type UnauthorizedProviderErrorType,\n  UnknownBundleIdError,\n  type UnknownBundleIdErrorType,\n  UnknownRpcError,\n  type UnknownRpcErrorType,\n  UnsupportedChainIdError,\n  type UnsupportedChainIdErrorType,\n  UnsupportedNonOptionalCapabilityError,\n  type UnsupportedNonOptionalCapabilityErrorType,\n  UnsupportedProviderMethodError,\n  type UnsupportedProviderMethodErrorType,\n  UserRejectedRequestError,\n  type UserRejectedRequestErrorType,\n} from '../errors/rpc.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type {\n  EIP1193RequestFn,\n  EIP1193RequestOptions,\n} from '../types/eip1193.js'\nimport { stringToHex } from './encoding/toHex.js'\nimport type { CreateBatchSchedulerErrorType } from './promise/createBatchScheduler.js'\nimport { withDedupe } from './promise/withDedupe.js'\nimport { type WithRetryErrorType, withRetry } from './promise/withRetry.js'\nimport type { GetSocketRpcClientErrorType } from './rpc/socket.js'\nimport { stringify } from './stringify.js'\n\nexport type RequestErrorType =\n  | AtomicityNotSupportedErrorType\n  | AtomicReadyWalletRejectedUpgradeErrorType\n  | BundleTooLargeErrorType\n  | ChainDisconnectedErrorType\n  | CreateBatchSchedulerErrorType\n  | DuplicateIdErrorType\n  | HttpRequestErrorType\n  | InternalRpcErrorType\n  | InvalidInputRpcErrorType\n  | InvalidParamsRpcErrorType\n  | InvalidRequestRpcErrorType\n  | GetSocketRpcClientErrorType\n  | JsonRpcVersionUnsupportedErrorType\n  | LimitExceededRpcErrorType\n  | MethodNotFoundRpcErrorType\n  | MethodNotSupportedRpcErrorType\n  | ParseRpcErrorType\n  | ProviderDisconnectedErrorType\n  | ResourceNotFoundRpcErrorType\n  | ResourceUnavailableRpcErrorType\n  | RpcErrorType\n  | RpcRequestErrorType\n  | SwitchChainErrorType\n  | TimeoutErrorType\n  | TransactionRejectedRpcErrorType\n  | UnauthorizedProviderErrorType\n  | UnknownBundleIdErrorType\n  | UnknownRpcErrorType\n  | UnsupportedChainIdErrorType\n  | UnsupportedNonOptionalCapabilityErrorType\n  | UnsupportedProviderMethodErrorType\n  | UserRejectedRequestErrorType\n  | WebSocketRequestErrorType\n  | WithRetryErrorType\n  | ErrorType\n\nexport function buildRequest<request extends (args: any) => Promise<any>>(\n  request: request,\n  options: EIP1193RequestOptions = {},\n): EIP1193RequestFn {\n  return async (args, overrideOptions = {}) => {\n    const {\n      dedupe = false,\n      methods,\n      retryDelay = 150,\n      retryCount = 3,\n      uid,\n    } = {\n      ...options,\n      ...overrideOptions,\n    }\n\n    const { method } = args\n    if (methods?.exclude?.includes(method))\n      throw new MethodNotSupportedRpcError(new Error('method not supported'), {\n        method,\n      })\n    if (methods?.include && !methods.include.includes(method))\n      throw new MethodNotSupportedRpcError(new Error('method not supported'), {\n        method,\n      })\n\n    const requestId = dedupe\n      ? stringToHex(`${uid}.${stringify(args)}`)\n      : undefined\n    return withDedupe(\n      () =>\n        withRetry(\n          async () => {\n            try {\n              return await request(args)\n            } catch (err_) {\n              const err = err_ as unknown as RpcError<\n                RpcErrorCode | ProviderRpcErrorCode\n              >\n              switch (err.code) {\n                // -32700\n                case ParseRpcError.code:\n                  throw new ParseRpcError(err)\n                // -32600\n                case InvalidRequestRpcError.code:\n                  throw new InvalidRequestRpcError(err)\n                // -32601\n                case MethodNotFoundRpcError.code:\n                  throw new MethodNotFoundRpcError(err, { method: args.method })\n                // -32602\n                case InvalidParamsRpcError.code:\n                  throw new InvalidParamsRpcError(err)\n                // -32603\n                case InternalRpcError.code:\n                  throw new InternalRpcError(err)\n                // -32000\n                case InvalidInputRpcError.code:\n                  throw new InvalidInputRpcError(err)\n                // -32001\n                case ResourceNotFoundRpcError.code:\n                  throw new ResourceNotFoundRpcError(err)\n                // -32002\n                case ResourceUnavailableRpcError.code:\n                  throw new ResourceUnavailableRpcError(err)\n                // -32003\n                case TransactionRejectedRpcError.code:\n                  throw new TransactionRejectedRpcError(err)\n                // -32004\n                case MethodNotSupportedRpcError.code:\n                  throw new MethodNotSupportedRpcError(err, {\n                    method: args.method,\n                  })\n                // -32005\n                case LimitExceededRpcError.code:\n                  throw new LimitExceededRpcError(err)\n                // -32006\n                case JsonRpcVersionUnsupportedError.code:\n                  throw new JsonRpcVersionUnsupportedError(err)\n\n                // 4001\n                case UserRejectedRequestError.code:\n                  throw new UserRejectedRequestError(err)\n                // 4100\n                case UnauthorizedProviderError.code:\n                  throw new UnauthorizedProviderError(err)\n                // 4200\n                case UnsupportedProviderMethodError.code:\n                  throw new UnsupportedProviderMethodError(err)\n                // 4900\n                case ProviderDisconnectedError.code:\n                  throw new ProviderDisconnectedError(err)\n                // 4901\n                case ChainDisconnectedError.code:\n                  throw new ChainDisconnectedError(err)\n                // 4902\n                case SwitchChainError.code:\n                  throw new SwitchChainError(err)\n\n                // 5700\n                case UnsupportedNonOptionalCapabilityError.code:\n                  throw new UnsupportedNonOptionalCapabilityError(err)\n                // 5710\n                case UnsupportedChainIdError.code:\n                  throw new UnsupportedChainIdError(err)\n                // 5720\n                case DuplicateIdError.code:\n                  throw new DuplicateIdError(err)\n                // 5730\n                case UnknownBundleIdError.code:\n                  throw new UnknownBundleIdError(err)\n                // 5740\n                case BundleTooLargeError.code:\n                  throw new BundleTooLargeError(err)\n                // 5750\n                case AtomicReadyWalletRejectedUpgradeError.code:\n                  throw new AtomicReadyWalletRejectedUpgradeError(err)\n                // 5760\n                case AtomicityNotSupportedError.code:\n                  throw new AtomicityNotSupportedError(err)\n\n                // CAIP-25: User Rejected Error\n                // https://docs.walletconnect.com/2.0/specs/clients/sign/error-codes#rejected-caip-25\n                case 5000:\n                  throw new UserRejectedRequestError(err)\n\n                default:\n                  if (err_ instanceof BaseError) throw err_\n                  throw new UnknownRpcError(err as Error)\n              }\n            }\n          },\n          {\n            delay: ({ count, error }) => {\n              // If we find a Retry-After header, let's retry after the given time.\n              if (error && error instanceof HttpRequestError) {\n                const retryAfter = error?.headers?.get('Retry-After')\n                if (retryAfter?.match(/\\d/))\n                  return Number.parseInt(retryAfter) * 1000\n              }\n\n              // Otherwise, let's retry with an exponential backoff.\n              return ~~(1 << count) * retryDelay\n            },\n            retryCount,\n            shouldRetry: ({ error }) => shouldRetry(error),\n          },\n        ),\n      { enabled: dedupe, id: requestId },\n    )\n  }\n}\n\n/** @internal */\nexport function shouldRetry(error: Error) {\n  if ('code' in error && typeof error.code === 'number') {\n    if (error.code === -1) return true // Unknown error\n    if (error.code === LimitExceededRpcError.code) return true\n    if (error.code === InternalRpcError.code) return true\n    return false\n  }\n  if (error instanceof HttpRequestError && error.status) {\n    // Forbidden\n    if (error.status === 403) return true\n    // Request Timeout\n    if (error.status === 408) return true\n    // Request Entity Too Large\n    if (error.status === 413) return true\n    // Too Many Requests\n    if (error.status === 429) return true\n    // Internal Server Error\n    if (error.status === 500) return true\n    // Bad Gateway\n    if (error.status === 502) return true\n    // Service Unavailable\n    if (error.status === 503) return true\n    // Gateway Timeout\n    if (error.status === 504) return true\n    return false\n  }\n  return true\n}\n","import type { Abi, Address } from 'abitype'\n\nimport { type CallParameters, call } from '../actions/public/call.js'\nimport type { Transport } from '../clients/transports/createTransport.js'\nimport type { BaseError } from '../errors/base.js'\nimport {\n  OffchainLookupError,\n  type OffchainLookupErrorType as OffchainLookupErrorType_,\n  OffchainLookupResponseMalformedError,\n  type OffchainLookupResponseMalformedErrorType,\n  OffchainLookupSenderMismatchError,\n} from '../errors/ccip.js'\nimport {\n  HttpRequestError,\n  type HttpRequestErrorType,\n} from '../errors/request.js'\nimport type { Chain } from '../types/chain.js'\nimport type { Hex } from '../types/misc.js'\n\nimport type { Client } from '../clients/createClient.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport { decodeErrorResult } from './abi/decodeErrorResult.js'\nimport { encodeAbiParameters } from './abi/encodeAbiParameters.js'\nimport { isAddressEqual } from './address/isAddressEqual.js'\nimport { concat } from './data/concat.js'\nimport { isHex } from './data/isHex.js'\nimport {\n  localBatchGatewayRequest,\n  localBatchGatewayUrl,\n} from './ens/localBatchGatewayRequest.js'\nimport { stringify } from './stringify.js'\n\nexport const offchainLookupSignature = '0x556f1830'\nexport const offchainLookupAbiItem = {\n  name: 'OffchainLookup',\n  type: 'error',\n  inputs: [\n    {\n      name: 'sender',\n      type: 'address',\n    },\n    {\n      name: 'urls',\n      type: 'string[]',\n    },\n    {\n      name: 'callData',\n      type: 'bytes',\n    },\n    {\n      name: 'callbackFunction',\n      type: 'bytes4',\n    },\n    {\n      name: 'extraData',\n      type: 'bytes',\n    },\n  ],\n} as const satisfies Abi[number]\n\nexport type OffchainLookupErrorType = OffchainLookupErrorType_ | ErrorType\n\nexport async function offchainLookup<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  {\n    blockNumber,\n    blockTag,\n    data,\n    to,\n  }: Pick<CallParameters, 'blockNumber' | 'blockTag'> & {\n    data: Hex\n    to: Address\n  },\n): Promise<Hex> {\n  const { args } = decodeErrorResult({\n    data,\n    abi: [offchainLookupAbiItem],\n  })\n  const [sender, urls, callData, callbackSelector, extraData] = args\n\n  const { ccipRead } = client\n  const ccipRequest_ =\n    ccipRead && typeof ccipRead?.request === 'function'\n      ? ccipRead.request\n      : ccipRequest\n\n  try {\n    if (!isAddressEqual(to, sender))\n      throw new OffchainLookupSenderMismatchError({ sender, to })\n\n    const result = urls.includes(localBatchGatewayUrl)\n      ? await localBatchGatewayRequest({\n          data: callData,\n          ccipRequest: ccipRequest_,\n        })\n      : await ccipRequest_({ data: callData, sender, urls })\n\n    const { data: data_ } = await call(client, {\n      blockNumber,\n      blockTag,\n      data: concat([\n        callbackSelector,\n        encodeAbiParameters(\n          [{ type: 'bytes' }, { type: 'bytes' }],\n          [result, extraData],\n        ),\n      ]),\n      to,\n    } as CallParameters)\n\n    return data_!\n  } catch (err) {\n    throw new OffchainLookupError({\n      callbackSelector,\n      cause: err as BaseError,\n      data,\n      extraData,\n      sender,\n      urls,\n    })\n  }\n}\n\nexport type CcipRequestParameters = {\n  data: Hex\n  sender: Address\n  urls: readonly string[]\n}\n\nexport type CcipRequestReturnType = Hex\n\nexport type CcipRequestErrorType =\n  | HttpRequestErrorType\n  | OffchainLookupResponseMalformedErrorType\n  | ErrorType\n\nexport async function ccipRequest({\n  data,\n  sender,\n  urls,\n}: CcipRequestParameters): Promise<CcipRequestReturnType> {\n  let error = new Error('An unknown error occurred.')\n\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const method = url.includes('{data}') ? 'GET' : 'POST'\n    const body = method === 'POST' ? { data, sender } : undefined\n    const headers: HeadersInit =\n      method === 'POST' ? { 'Content-Type': 'application/json' } : {}\n\n    try {\n      const response = await fetch(\n        url.replace('{sender}', sender.toLowerCase()).replace('{data}', data),\n        {\n          body: JSON.stringify(body),\n          headers,\n          method,\n        },\n      )\n\n      let result: any\n      if (\n        response.headers.get('Content-Type')?.startsWith('application/json')\n      ) {\n        result = (await response.json()).data\n      } else {\n        result = (await response.text()) as any\n      }\n\n      if (!response.ok) {\n        error = new HttpRequestError({\n          body,\n          details: result?.error\n            ? stringify(result.error)\n            : response.statusText,\n          headers: response.headers,\n          status: response.status,\n          url,\n        })\n        continue\n      }\n\n      if (!isHex(result)) {\n        error = new OffchainLookupResponseMalformedError({\n          result,\n          url,\n        })\n        continue\n      }\n\n      return result\n    } catch (err) {\n      error = new HttpRequestError({\n        body,\n        details: (err as Error).message,\n        url,\n      })\n    }\n  }\n\n  throw error\n}\n","import {\n  ChainMismatchError,\n  type ChainMismatchErrorType,\n  ChainNotFoundError,\n  type ChainNotFoundErrorType,\n} from '../../errors/chain.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\n\nexport type AssertCurrentChainParameters = {\n  chain?: Chain | undefined\n  currentChainId: number\n}\n\nexport type AssertCurrentChainErrorType =\n  | ChainNotFoundErrorType\n  | ChainMismatchErrorType\n  | ErrorType\n\nexport function assertCurrentChain({\n  chain,\n  currentChainId,\n}: AssertCurrentChainParameters): void {\n  if (!chain) throw new ChainNotFoundError()\n  if (currentChainId !== chain.id)\n    throw new ChainMismatchError({ chain, currentChainId })\n}\n","import type { Chain, ChainFormatters } from '../../types/chain.js'\nimport type { Assign, Prettify } from '../../types/utils.js'\n\nexport function defineChain<\n  formatters extends ChainFormatters,\n  const chain extends Chain<formatters>,\n>(chain: chain): Prettify<Assign<Chain<undefined>, chain>> {\n  return {\n    formatters: undefined,\n    fees: undefined,\n    serializers: undefined,\n    ...chain,\n  } as Assign<Chain<undefined>, chain>\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\n\nexport type ExtractChainParameters<\n  chains extends readonly Chain[],\n  chainId extends chains[number]['id'],\n> = {\n  chains: chains\n  id: chainId | chains[number]['id']\n}\n\nexport type ExtractChainReturnType<\n  chains extends readonly Chain[],\n  chainId extends chains[number]['id'],\n> = Extract<chains[number], { id: chainId }>\n\nexport type ExtractChainErrorType = ErrorType\n\nexport function extractChain<\n  const chains extends readonly Chain[],\n  chainId extends chains[number]['id'],\n>({\n  chains,\n  id,\n}: ExtractChainParameters<chains, chainId>): ExtractChainReturnType<\n  chains,\n  chainId\n> {\n  return chains.find((chain) => chain.id === id) as ExtractChainReturnType<\n    chains,\n    chainId\n  >\n}\n","import {\n  ChainDoesNotSupportContract,\n  type ChainDoesNotSupportContractErrorType,\n} from '../../errors/chain.js'\nimport type { Chain, ChainContract } from '../../types/chain.js'\n\nexport type GetChainContractAddressErrorType =\n  ChainDoesNotSupportContractErrorType\n\nexport function getChainContractAddress({\n  blockNumber,\n  chain,\n  contract: name,\n}: {\n  blockNumber?: bigint | undefined\n  chain: Chain\n  contract: string\n}) {\n  const contract = (chain?.contracts as Record<string, ChainContract>)?.[name]\n  if (!contract)\n    throw new ChainDoesNotSupportContract({\n      chain,\n      contract: { name },\n    })\n\n  if (\n    blockNumber &&\n    contract.blockCreated &&\n    contract.blockCreated > blockNumber\n  )\n    throw new ChainDoesNotSupportContract({\n      blockNumber,\n      chain,\n      contract: {\n        name,\n        blockCreated: contract.blockCreated,\n      },\n    })\n\n  return contract.address\n}\n","import {\n  NegativeOffsetError,\n  type NegativeOffsetErrorType,\n  PositionOutOfBoundsError,\n  type PositionOutOfBoundsErrorType,\n  RecursiveReadLimitExceededError,\n  type RecursiveReadLimitExceededErrorType,\n} from '../errors/cursor.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { ByteArray } from '../types/misc.js'\n\nexport type Cursor = {\n  bytes: ByteArray\n  dataView: DataView\n  position: number\n  positionReadCount: Map<number, number>\n  recursiveReadCount: number\n  recursiveReadLimit: number\n  remaining: number\n  assertReadLimit(position?: number): void\n  assertPosition(position: number): void\n  decrementPosition(offset: number): void\n  getReadCount(position?: number): number\n  incrementPosition(offset: number): void\n  inspectByte(position?: number): ByteArray[number]\n  inspectBytes(length: number, position?: number): ByteArray\n  inspectUint8(position?: number): number\n  inspectUint16(position?: number): number\n  inspectUint24(position?: number): number\n  inspectUint32(position?: number): number\n  pushByte(byte: ByteArray[number]): void\n  pushBytes(bytes: ByteArray): void\n  pushUint8(value: number): void\n  pushUint16(value: number): void\n  pushUint24(value: number): void\n  pushUint32(value: number): void\n  readByte(): ByteArray[number]\n  readBytes(length: number, size?: number): ByteArray\n  readUint8(): number\n  readUint16(): number\n  readUint24(): number\n  readUint32(): number\n  setPosition(position: number): () => void\n  _touch(): void\n}\n\ntype CursorErrorType =\n  | CursorAssertPositionErrorType\n  | CursorDecrementPositionErrorType\n  | CursorIncrementPositionErrorType\n  | ErrorType\n\ntype CursorAssertPositionErrorType = PositionOutOfBoundsErrorType | ErrorType\n\ntype CursorDecrementPositionErrorType = NegativeOffsetErrorType | ErrorType\n\ntype CursorIncrementPositionErrorType = NegativeOffsetErrorType | ErrorType\n\ntype StaticCursorErrorType =\n  | NegativeOffsetErrorType\n  | RecursiveReadLimitExceededErrorType\n\nconst staticCursor: Cursor = {\n  bytes: new Uint8Array(),\n  dataView: new DataView(new ArrayBuffer(0)),\n  position: 0,\n  positionReadCount: new Map(),\n  recursiveReadCount: 0,\n  recursiveReadLimit: Number.POSITIVE_INFINITY,\n  assertReadLimit() {\n    if (this.recursiveReadCount >= this.recursiveReadLimit)\n      throw new RecursiveReadLimitExceededError({\n        count: this.recursiveReadCount + 1,\n        limit: this.recursiveReadLimit,\n      })\n  },\n  assertPosition(position) {\n    if (position < 0 || position > this.bytes.length - 1)\n      throw new PositionOutOfBoundsError({\n        length: this.bytes.length,\n        position,\n      })\n  },\n  decrementPosition(offset) {\n    if (offset < 0) throw new NegativeOffsetError({ offset })\n    const position = this.position - offset\n    this.assertPosition(position)\n    this.position = position\n  },\n  getReadCount(position) {\n    return this.positionReadCount.get(position || this.position) || 0\n  },\n  incrementPosition(offset) {\n    if (offset < 0) throw new NegativeOffsetError({ offset })\n    const position = this.position + offset\n    this.assertPosition(position)\n    this.position = position\n  },\n  inspectByte(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position)\n    return this.bytes[position]\n  },\n  inspectBytes(length, position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + length - 1)\n    return this.bytes.subarray(position, position + length)\n  },\n  inspectUint8(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position)\n    return this.bytes[position]\n  },\n  inspectUint16(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 1)\n    return this.dataView.getUint16(position)\n  },\n  inspectUint24(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 2)\n    return (\n      (this.dataView.getUint16(position) << 8) +\n      this.dataView.getUint8(position + 2)\n    )\n  },\n  inspectUint32(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 3)\n    return this.dataView.getUint32(position)\n  },\n  pushByte(byte: ByteArray[number]) {\n    this.assertPosition(this.position)\n    this.bytes[this.position] = byte\n    this.position++\n  },\n  pushBytes(bytes: ByteArray) {\n    this.assertPosition(this.position + bytes.length - 1)\n    this.bytes.set(bytes, this.position)\n    this.position += bytes.length\n  },\n  pushUint8(value: number) {\n    this.assertPosition(this.position)\n    this.bytes[this.position] = value\n    this.position++\n  },\n  pushUint16(value: number) {\n    this.assertPosition(this.position + 1)\n    this.dataView.setUint16(this.position, value)\n    this.position += 2\n  },\n  pushUint24(value: number) {\n    this.assertPosition(this.position + 2)\n    this.dataView.setUint16(this.position, value >> 8)\n    this.dataView.setUint8(this.position + 2, value & ~4294967040)\n    this.position += 3\n  },\n  pushUint32(value: number) {\n    this.assertPosition(this.position + 3)\n    this.dataView.setUint32(this.position, value)\n    this.position += 4\n  },\n  readByte() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectByte()\n    this.position++\n    return value\n  },\n  readBytes(length, size) {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectBytes(length)\n    this.position += size ?? length\n    return value\n  },\n  readUint8() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint8()\n    this.position += 1\n    return value\n  },\n  readUint16() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint16()\n    this.position += 2\n    return value\n  },\n  readUint24() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint24()\n    this.position += 3\n    return value\n  },\n  readUint32() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint32()\n    this.position += 4\n    return value\n  },\n  get remaining() {\n    return this.bytes.length - this.position\n  },\n  setPosition(position) {\n    const oldPosition = this.position\n    this.assertPosition(position)\n    this.position = position\n    return () => (this.position = oldPosition)\n  },\n  _touch() {\n    if (this.recursiveReadLimit === Number.POSITIVE_INFINITY) return\n    const count = this.getReadCount()\n    this.positionReadCount.set(this.position, count + 1)\n    if (count > 0) this.recursiveReadCount++\n  },\n}\n\ntype CursorConfig = { recursiveReadLimit?: number | undefined }\n\nexport type CreateCursorErrorType =\n  | CursorErrorType\n  | StaticCursorErrorType\n  | ErrorType\n\nexport function createCursor(\n  bytes: ByteArray,\n  { recursiveReadLimit = 8_192 }: CursorConfig = {},\n): Cursor {\n  const cursor: Cursor = Object.create(staticCursor)\n  cursor.bytes = bytes\n  cursor.dataView = new DataView(\n    bytes.buffer,\n    bytes.byteOffset,\n    bytes.byteLength,\n  )\n  cursor.positionReadCount = new Map()\n  cursor.recursiveReadLimit = recursiveReadLimit\n  return cursor\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nexport type ConcatReturnType<value extends Hex | ByteArray> = value extends Hex\n  ? Hex\n  : ByteArray\n\nexport type ConcatErrorType =\n  | ConcatBytesErrorType\n  | ConcatHexErrorType\n  | ErrorType\n\nexport function concat<value extends Hex | ByteArray>(\n  values: readonly value[],\n): ConcatReturnType<value> {\n  if (typeof values[0] === 'string')\n    return concatHex(values as readonly Hex[]) as ConcatReturnType<value>\n  return concatBytes(values as readonly ByteArray[]) as ConcatReturnType<value>\n}\n\nexport type ConcatBytesErrorType = ErrorType\n\nexport function concatBytes(values: readonly ByteArray[]): ByteArray {\n  let length = 0\n  for (const arr of values) {\n    length += arr.length\n  }\n  const result = new Uint8Array(length)\n  let offset = 0\n  for (const arr of values) {\n    result.set(arr, offset)\n    offset += arr.length\n  }\n  return result\n}\n\nexport type ConcatHexErrorType = ErrorType\n\nexport function concatHex(values: readonly Hex[]): Hex {\n  return `0x${(values as Hex[]).reduce(\n    (acc, x) => acc + x.replace('0x', ''),\n    '',\n  )}`\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray } from '../../types/misc.js'\n\nexport type IsBytesErrorType = ErrorType\n\nexport function isBytes(value: unknown): value is ByteArray {\n  if (!value) return false\n  if (typeof value !== 'object') return false\n  if (!('BYTES_PER_ELEMENT' in value)) return false\n  return (\n    value.BYTES_PER_ELEMENT === 1 && value.constructor.name === 'Uint8Array'\n  )\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\n\nexport type IsHexErrorType = ErrorType\n\nexport function isHex(\n  value: unknown,\n  { strict = true }: { strict?: boolean | undefined } = {},\n): value is Hex {\n  if (!value) return false\n  if (typeof value !== 'string') return false\n  return strict ? /^0x[0-9a-fA-F]*$/.test(value) : value.startsWith('0x')\n}\n","import {\n  SizeExceedsPaddingSizeError,\n  type SizeExceedsPaddingSizeErrorType,\n} from '../../errors/data.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\ntype PadOptions = {\n  dir?: 'left' | 'right' | undefined\n  size?: number | null | undefined\n}\nexport type PadReturnType<value extends ByteArray | Hex> = value extends Hex\n  ? Hex\n  : ByteArray\n\nexport type PadErrorType = PadHexErrorType | PadBytesErrorType | ErrorType\n\nexport function pad<value extends ByteArray | Hex>(\n  hexOrBytes: value,\n  { dir, size = 32 }: PadOptions = {},\n): PadReturnType<value> {\n  if (typeof hexOrBytes === 'string')\n    return padHex(hexOrBytes, { dir, size }) as PadReturnType<value>\n  return padBytes(hexOrBytes, { dir, size }) as PadReturnType<value>\n}\n\nexport type PadHexErrorType = SizeExceedsPaddingSizeErrorType | ErrorType\n\nexport function padHex(hex_: Hex, { dir, size = 32 }: PadOptions = {}) {\n  if (size === null) return hex_\n  const hex = hex_.replace('0x', '')\n  if (hex.length > size * 2)\n    throw new SizeExceedsPaddingSizeError({\n      size: Math.ceil(hex.length / 2),\n      targetSize: size,\n      type: 'hex',\n    })\n\n  return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](\n    size * 2,\n    '0',\n  )}` as Hex\n}\n\nexport type PadBytesErrorType = SizeExceedsPaddingSizeErrorType | ErrorType\n\nexport function padBytes(\n  bytes: ByteArray,\n  { dir, size = 32 }: PadOptions = {},\n) {\n  if (size === null) return bytes\n  if (bytes.length > size)\n    throw new SizeExceedsPaddingSizeError({\n      size: bytes.length,\n      targetSize: size,\n      type: 'bytes',\n    })\n  const paddedBytes = new Uint8Array(size)\n  for (let i = 0; i < size; i++) {\n    const padEnd = dir === 'right'\n    paddedBytes[padEnd ? i : size - i - 1] =\n      bytes[padEnd ? i : bytes.length - i - 1]\n  }\n  return paddedBytes\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nimport { type IsHexErrorType, isHex } from './isHex.js'\n\nexport type SizeErrorType = IsHexErrorType | ErrorType\n\n/**\n * @description Retrieves the size of the value (in bytes).\n *\n * @param value The value (hex or byte array) to retrieve the size of.\n * @returns The size of the value (in bytes).\n */\nexport function size(value: Hex | ByteArray) {\n  if (isHex(value, { strict: false })) return Math.ceil((value.length - 2) / 2)\n  return value.length\n}\n","import {\n  SliceOffsetOutOfBoundsError,\n  type SliceOffsetOutOfBoundsErrorType,\n} from '../../errors/data.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nimport { type IsHexErrorType, isHex } from './isHex.js'\nimport { type SizeErrorType, size } from './size.js'\n\nexport type SliceReturnType<value extends ByteArray | Hex> = value extends Hex\n  ? Hex\n  : ByteArray\n\nexport type SliceErrorType =\n  | IsHexErrorType\n  | SliceBytesErrorType\n  | SliceHexErrorType\n  | ErrorType\n\n/**\n * @description Returns a section of the hex or byte array given a start/end bytes offset.\n *\n * @param value The hex or byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function slice<value extends ByteArray | Hex>(\n  value: value,\n  start?: number | undefined,\n  end?: number | undefined,\n  { strict }: { strict?: boolean | undefined } = {},\n): SliceReturnType<value> {\n  if (isHex(value, { strict: false }))\n    return sliceHex(value as Hex, start, end, {\n      strict,\n    }) as SliceReturnType<value>\n  return sliceBytes(value as ByteArray, start, end, {\n    strict,\n  }) as SliceReturnType<value>\n}\n\nexport type AssertStartOffsetErrorType =\n  | SliceOffsetOutOfBoundsErrorType\n  | SizeErrorType\n  | ErrorType\n\nfunction assertStartOffset(value: Hex | ByteArray, start?: number | undefined) {\n  if (typeof start === 'number' && start > 0 && start > size(value) - 1)\n    throw new SliceOffsetOutOfBoundsError({\n      offset: start,\n      position: 'start',\n      size: size(value),\n    })\n}\n\nexport type AssertEndOffsetErrorType =\n  | SliceOffsetOutOfBoundsErrorType\n  | SizeErrorType\n  | ErrorType\n\nfunction assertEndOffset(\n  value: Hex | ByteArray,\n  start?: number | undefined,\n  end?: number | undefined,\n) {\n  if (\n    typeof start === 'number' &&\n    typeof end === 'number' &&\n    size(value) !== end - start\n  ) {\n    throw new SliceOffsetOutOfBoundsError({\n      offset: end,\n      position: 'end',\n      size: size(value),\n    })\n  }\n}\n\nexport type SliceBytesErrorType =\n  | AssertStartOffsetErrorType\n  | AssertEndOffsetErrorType\n  | ErrorType\n\n/**\n * @description Returns a section of the byte array given a start/end bytes offset.\n *\n * @param value The byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceBytes(\n  value_: ByteArray,\n  start?: number | undefined,\n  end?: number | undefined,\n  { strict }: { strict?: boolean | undefined } = {},\n): ByteArray {\n  assertStartOffset(value_, start)\n  const value = value_.slice(start, end)\n  if (strict) assertEndOffset(value, start, end)\n  return value\n}\n\nexport type SliceHexErrorType =\n  | AssertStartOffsetErrorType\n  | AssertEndOffsetErrorType\n  | ErrorType\n\n/**\n * @description Returns a section of the hex value given a start/end bytes offset.\n *\n * @param value The hex value to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceHex(\n  value_: Hex,\n  start?: number | undefined,\n  end?: number | undefined,\n  { strict }: { strict?: boolean | undefined } = {},\n): Hex {\n  assertStartOffset(value_, start)\n  const value = `0x${value_\n    .replace('0x', '')\n    .slice((start ?? 0) * 2, (end ?? value_.length) * 2)}` as const\n  if (strict) assertEndOffset(value, start, end)\n  return value\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\ntype TrimOptions = {\n  dir?: 'left' | 'right' | undefined\n}\nexport type TrimReturnType<value extends ByteArray | Hex> = value extends Hex\n  ? Hex\n  : ByteArray\n\nexport type TrimErrorType = ErrorType\n\nexport function trim<value extends ByteArray | Hex>(\n  hexOrBytes: value,\n  { dir = 'left' }: TrimOptions = {},\n): TrimReturnType<value> {\n  let data: any =\n    typeof hexOrBytes === 'string' ? hexOrBytes.replace('0x', '') : hexOrBytes\n\n  let sliceLength = 0\n  for (let i = 0; i < data.length - 1; i++) {\n    if (data[dir === 'left' ? i : data.length - i - 1].toString() === '0')\n      sliceLength++\n    else break\n  }\n  data =\n    dir === 'left'\n      ? data.slice(sliceLength)\n      : data.slice(0, data.length - sliceLength)\n\n  if (typeof hexOrBytes === 'string') {\n    if (data.length === 1 && dir === 'right') data = `${data}0`\n    return `0x${\n      data.length % 2 === 1 ? `0${data}` : data\n    }` as TrimReturnType<value>\n  }\n  return data as TrimReturnType<value>\n}\n","import { InvalidBytesBooleanError } from '../../errors/encoding.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type TrimErrorType, trim } from '../data/trim.js'\n\nimport {\n  type AssertSizeErrorType,\n  type HexToBigIntErrorType,\n  type HexToNumberErrorType,\n  assertSize,\n  hexToBigInt,\n  hexToNumber,\n} from './fromHex.js'\nimport { type BytesToHexErrorType, bytesToHex } from './toHex.js'\n\nexport type FromBytesParameters<\n  to extends 'string' | 'hex' | 'bigint' | 'number' | 'boolean',\n> =\n  | to\n  | {\n      /** Size of the bytes. */\n      size?: number | undefined\n      /** Type to convert to. */\n      to: to\n    }\n\nexport type FromBytesReturnType<to> = to extends 'string'\n  ? string\n  : to extends 'hex'\n    ? Hex\n    : to extends 'bigint'\n      ? bigint\n      : to extends 'number'\n        ? number\n        : to extends 'boolean'\n          ? boolean\n          : never\n\nexport type FromBytesErrorType =\n  | BytesToHexErrorType\n  | BytesToBigIntErrorType\n  | BytesToBoolErrorType\n  | BytesToNumberErrorType\n  | BytesToStringErrorType\n  | ErrorType\n\n/**\n * Decodes a byte array into a UTF-8 string, hex value, number, bigint or boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes\n * - Example: https://viem.sh/docs/utilities/fromBytes#usage\n *\n * @param bytes Byte array to decode.\n * @param toOrOpts Type to convert to or options.\n * @returns Decoded value.\n *\n * @example\n * import { fromBytes } from 'viem'\n * const data = fromBytes(new Uint8Array([1, 164]), 'number')\n * // 420\n *\n * @example\n * import { fromBytes } from 'viem'\n * const data = fromBytes(\n *   new Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]),\n *   'string'\n * )\n * // 'Hello world'\n */\nexport function fromBytes<\n  to extends 'string' | 'hex' | 'bigint' | 'number' | 'boolean',\n>(\n  bytes: ByteArray,\n  toOrOpts: FromBytesParameters<to>,\n): FromBytesReturnType<to> {\n  const opts = typeof toOrOpts === 'string' ? { to: toOrOpts } : toOrOpts\n  const to = opts.to\n\n  if (to === 'number')\n    return bytesToNumber(bytes, opts) as FromBytesReturnType<to>\n  if (to === 'bigint')\n    return bytesToBigInt(bytes, opts) as FromBytesReturnType<to>\n  if (to === 'boolean')\n    return bytesToBool(bytes, opts) as FromBytesReturnType<to>\n  if (to === 'string')\n    return bytesToString(bytes, opts) as FromBytesReturnType<to>\n  return bytesToHex(bytes, opts) as FromBytesReturnType<to>\n}\n\nexport type BytesToBigIntOpts = {\n  /** Whether or not the number of a signed representation. */\n  signed?: boolean | undefined\n  /** Size of the bytes. */\n  size?: number | undefined\n}\n\nexport type BytesToBigIntErrorType =\n  | BytesToHexErrorType\n  | HexToBigIntErrorType\n  | ErrorType\n\n/**\n * Decodes a byte array into a bigint.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestobigint\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns BigInt value.\n *\n * @example\n * import { bytesToBigInt } from 'viem'\n * const data = bytesToBigInt(new Uint8Array([1, 164]))\n * // 420n\n */\nexport function bytesToBigInt(\n  bytes: ByteArray,\n  opts: BytesToBigIntOpts = {},\n): bigint {\n  if (typeof opts.size !== 'undefined') assertSize(bytes, { size: opts.size })\n  const hex = bytesToHex(bytes, opts)\n  return hexToBigInt(hex, opts)\n}\n\nexport type BytesToBoolOpts = {\n  /** Size of the bytes. */\n  size?: number | undefined\n}\n\nexport type BytesToBoolErrorType =\n  | AssertSizeErrorType\n  | TrimErrorType\n  | ErrorType\n\n/**\n * Decodes a byte array into a boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestobool\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns Boolean value.\n *\n * @example\n * import { bytesToBool } from 'viem'\n * const data = bytesToBool(new Uint8Array([1]))\n * // true\n */\nexport function bytesToBool(\n  bytes_: ByteArray,\n  opts: BytesToBoolOpts = {},\n): boolean {\n  let bytes = bytes_\n  if (typeof opts.size !== 'undefined') {\n    assertSize(bytes, { size: opts.size })\n    bytes = trim(bytes)\n  }\n  if (bytes.length > 1 || bytes[0] > 1)\n    throw new InvalidBytesBooleanError(bytes)\n  return Boolean(bytes[0])\n}\n\nexport type BytesToNumberOpts = BytesToBigIntOpts\n\nexport type BytesToNumberErrorType =\n  | BytesToHexErrorType\n  | HexToNumberErrorType\n  | ErrorType\n\n/**\n * Decodes a byte array into a number.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestonumber\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns Number value.\n *\n * @example\n * import { bytesToNumber } from 'viem'\n * const data = bytesToNumber(new Uint8Array([1, 164]))\n * // 420\n */\nexport function bytesToNumber(\n  bytes: ByteArray,\n  opts: BytesToNumberOpts = {},\n): number {\n  if (typeof opts.size !== 'undefined') assertSize(bytes, { size: opts.size })\n  const hex = bytesToHex(bytes, opts)\n  return hexToNumber(hex, opts)\n}\n\nexport type BytesToStringOpts = {\n  /** Size of the bytes. */\n  size?: number | undefined\n}\n\nexport type BytesToStringErrorType =\n  | AssertSizeErrorType\n  | TrimErrorType\n  | ErrorType\n\n/**\n * Decodes a byte array into a UTF-8 string.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestostring\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns String value.\n *\n * @example\n * import { bytesToString } from 'viem'\n * const data = bytesToString(new Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // 'Hello world'\n */\nexport function bytesToString(\n  bytes_: ByteArray,\n  opts: BytesToStringOpts = {},\n): string {\n  let bytes = bytes_\n  if (typeof opts.size !== 'undefined') {\n    assertSize(bytes, { size: opts.size })\n    bytes = trim(bytes, { dir: 'right' })\n  }\n  return new TextDecoder().decode(bytes)\n}\n","import {\n  InvalidHexBooleanError,\n  type InvalidHexBooleanErrorType,\n  SizeOverflowError,\n  type SizeOverflowErrorType,\n} from '../../errors/encoding.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type SizeErrorType, size as size_ } from '../data/size.js'\nimport { type TrimErrorType, trim } from '../data/trim.js'\n\nimport { type HexToBytesErrorType, hexToBytes } from './toBytes.js'\n\nexport type AssertSizeErrorType =\n  | SizeOverflowErrorType\n  | SizeErrorType\n  | ErrorType\n\nexport function assertSize(\n  hexOrBytes: Hex | ByteArray,\n  { size }: { size: number },\n): void {\n  if (size_(hexOrBytes) > size)\n    throw new SizeOverflowError({\n      givenSize: size_(hexOrBytes),\n      maxSize: size,\n    })\n}\n\nexport type FromHexParameters<\n  to extends 'string' | 'bigint' | 'number' | 'bytes' | 'boolean',\n> =\n  | to\n  | {\n      /** Size (in bytes) of the hex value. */\n      size?: number | undefined\n      /** Type to convert to. */\n      to: to\n    }\n\nexport type FromHexReturnType<to> = to extends 'string'\n  ? string\n  : to extends 'bigint'\n    ? bigint\n    : to extends 'number'\n      ? number\n      : to extends 'bytes'\n        ? ByteArray\n        : to extends 'boolean'\n          ? boolean\n          : never\n\nexport type FromHexErrorType =\n  | HexToNumberErrorType\n  | HexToBigIntErrorType\n  | HexToBoolErrorType\n  | HexToStringErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\n/**\n * Decodes a hex string into a string, number, bigint, boolean, or byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex\n * - Example: https://viem.sh/docs/utilities/fromHex#usage\n *\n * @param hex Hex string to decode.\n * @param toOrOpts Type to convert to or options.\n * @returns Decoded value.\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x1a4', 'number')\n * // 420\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x48656c6c6f20576f726c6421', 'string')\n * // 'Hello world'\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *   size: 32,\n *   to: 'string'\n * })\n * // 'Hello world'\n */\nexport function fromHex<\n  to extends 'string' | 'bigint' | 'number' | 'bytes' | 'boolean',\n>(hex: Hex, toOrOpts: FromHexParameters<to>): FromHexReturnType<to> {\n  const opts = typeof toOrOpts === 'string' ? { to: toOrOpts } : toOrOpts\n  const to = opts.to\n\n  if (to === 'number') return hexToNumber(hex, opts) as FromHexReturnType<to>\n  if (to === 'bigint') return hexToBigInt(hex, opts) as FromHexReturnType<to>\n  if (to === 'string') return hexToString(hex, opts) as FromHexReturnType<to>\n  if (to === 'boolean') return hexToBool(hex, opts) as FromHexReturnType<to>\n  return hexToBytes(hex, opts) as FromHexReturnType<to>\n}\n\nexport type HexToBigIntOpts = {\n  /** Whether or not the number of a signed representation. */\n  signed?: boolean | undefined\n  /** Size (in bytes) of the hex value. */\n  size?: number | undefined\n}\n\nexport type HexToBigIntErrorType = AssertSizeErrorType | ErrorType\n\n/**\n * Decodes a hex value into a bigint.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextobigint\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns BigInt value.\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x1a4', { signed: true })\n * // 420n\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420n\n */\nexport function hexToBigInt(hex: Hex, opts: HexToBigIntOpts = {}): bigint {\n  const { signed } = opts\n\n  if (opts.size) assertSize(hex, { size: opts.size })\n\n  const value = BigInt(hex)\n  if (!signed) return value\n\n  const size = (hex.length - 2) / 2\n  const max = (1n << (BigInt(size) * 8n - 1n)) - 1n\n  if (value <= max) return value\n\n  return value - BigInt(`0x${'f'.padStart(size * 2, 'f')}`) - 1n\n}\n\nexport type HexToBoolOpts = {\n  /** Size (in bytes) of the hex value. */\n  size?: number | undefined\n}\n\nexport type HexToBoolErrorType =\n  | AssertSizeErrorType\n  | InvalidHexBooleanErrorType\n  | TrimErrorType\n  | ErrorType\n\n/**\n * Decodes a hex value into a boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextobool\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Boolean value.\n *\n * @example\n * import { hexToBool } from 'viem'\n * const data = hexToBool('0x01')\n * // true\n *\n * @example\n * import { hexToBool } from 'viem'\n * const data = hexToBool('0x0000000000000000000000000000000000000000000000000000000000000001', { size: 32 })\n * // true\n */\nexport function hexToBool(hex_: Hex, opts: HexToBoolOpts = {}): boolean {\n  let hex = hex_\n  if (opts.size) {\n    assertSize(hex, { size: opts.size })\n    hex = trim(hex)\n  }\n  if (trim(hex) === '0x00') return false\n  if (trim(hex) === '0x01') return true\n  throw new InvalidHexBooleanError(hex)\n}\n\nexport type HexToNumberOpts = HexToBigIntOpts\n\nexport type HexToNumberErrorType = HexToBigIntErrorType | ErrorType\n\n/**\n * Decodes a hex string into a number.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextonumber\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Number value.\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToNumber('0x1a4')\n * // 420\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420\n */\nexport function hexToNumber(hex: Hex, opts: HexToNumberOpts = {}): number {\n  return Number(hexToBigInt(hex, opts))\n}\n\nexport type HexToStringOpts = {\n  /** Size (in bytes) of the hex value. */\n  size?: number | undefined\n}\n\nexport type HexToStringErrorType =\n  | AssertSizeErrorType\n  | HexToBytesErrorType\n  | TrimErrorType\n  | ErrorType\n\n/**\n * Decodes a hex value into a UTF-8 string.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextostring\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns String value.\n *\n * @example\n * import { hexToString } from 'viem'\n * const data = hexToString('0x48656c6c6f20576f726c6421')\n * // 'Hello world!'\n *\n * @example\n * import { hexToString } from 'viem'\n * const data = hexToString('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *  size: 32,\n * })\n * // 'Hello world'\n */\nexport function hexToString(hex: Hex, opts: HexToStringOpts = {}): string {\n  let bytes = hexToBytes(hex)\n  if (opts.size) {\n    assertSize(bytes, { size: opts.size })\n    bytes = trim(bytes, { dir: 'right' })\n  }\n  return new TextDecoder().decode(bytes)\n}\n","import { BaseError, type BaseErrorType } from '../../errors/base.js'\nimport {\n  InvalidHexValueError,\n  type InvalidHexValueErrorType,\n} from '../../errors/encoding.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport {\n  type CreateCursorErrorType,\n  type Cursor,\n  createCursor,\n} from '../cursor.js'\nimport { type HexToBytesErrorType, hexToBytes } from './toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from './toHex.js'\n\nimport type { RecursiveArray } from './toRlp.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type FromRlpReturnType<to extends To> =\n  | (to extends 'bytes' ? RecursiveArray<ByteArray> : never)\n  | (to extends 'hex' ? RecursiveArray<Hex> : never)\n\nexport type FromRlpErrorType =\n  | CreateCursorErrorType\n  | FromRlpCursorErrorType\n  | HexToBytesErrorType\n  | InvalidHexValueErrorType\n  | ErrorType\n\nexport function fromRlp<to extends To = 'hex'>(\n  value: ByteArray | Hex,\n  to: to | To | undefined = 'hex',\n): FromRlpReturnType<to> {\n  const bytes = (() => {\n    if (typeof value === 'string') {\n      if (value.length > 3 && value.length % 2 !== 0)\n        throw new InvalidHexValueError(value)\n      return hexToBytes(value)\n    }\n    return value\n  })()\n\n  const cursor = createCursor(bytes, {\n    recursiveReadLimit: Number.POSITIVE_INFINITY,\n  })\n  const result = fromRlpCursor(cursor, to)\n\n  return result as FromRlpReturnType<to>\n}\n\ntype FromRlpCursorErrorType =\n  | BytesToHexErrorType\n  | ReadLengthErrorType\n  | ReadListErrorType\n  | ErrorType\n\nfunction fromRlpCursor<to extends To = 'hex'>(\n  cursor: Cursor,\n  to: to | To | undefined = 'hex',\n): FromRlpReturnType<to> {\n  if (cursor.bytes.length === 0)\n    return (\n      to === 'hex' ? bytesToHex(cursor.bytes) : cursor.bytes\n    ) as FromRlpReturnType<to>\n\n  const prefix = cursor.readByte()\n  if (prefix < 0x80) cursor.decrementPosition(1)\n\n  // bytes\n  if (prefix < 0xc0) {\n    const length = readLength(cursor, prefix, 0x80)\n    const bytes = cursor.readBytes(length)\n    return (to === 'hex' ? bytesToHex(bytes) : bytes) as FromRlpReturnType<to>\n  }\n\n  // list\n  const length = readLength(cursor, prefix, 0xc0)\n  return readList(cursor, length, to) as {} as FromRlpReturnType<to>\n}\n\ntype ReadLengthErrorType = BaseErrorType | ErrorType\n\nfunction readLength(cursor: Cursor, prefix: number, offset: number) {\n  if (offset === 0x80 && prefix < 0x80) return 1\n  if (prefix <= offset + 55) return prefix - offset\n  if (prefix === offset + 55 + 1) return cursor.readUint8()\n  if (prefix === offset + 55 + 2) return cursor.readUint16()\n  if (prefix === offset + 55 + 3) return cursor.readUint24()\n  if (prefix === offset + 55 + 4) return cursor.readUint32()\n  throw new BaseError('Invalid RLP prefix')\n}\n\ntype ReadListErrorType = ErrorType\n\nfunction readList<to extends To>(cursor: Cursor, length: number, to: to | To) {\n  const position = cursor.position\n  const value: FromRlpReturnType<to>[] = []\n  while (cursor.position - position < length)\n    value.push(fromRlpCursor(cursor, to))\n  return value\n}\n","import { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { type PadErrorType, pad } from '../data/pad.js'\n\nimport { type AssertSizeErrorType, assertSize } from './fromHex.js'\nimport {\n  type NumberToHexErrorType,\n  type NumberToHexOpts,\n  numberToHex,\n} from './toHex.js'\n\nconst encoder = /*#__PURE__*/ new TextEncoder()\n\nexport type ToBytesParameters = {\n  /** Size of the output bytes. */\n  size?: number | undefined\n}\n\nexport type ToBytesErrorType =\n  | NumberToBytesErrorType\n  | BoolToBytesErrorType\n  | HexToBytesErrorType\n  | StringToBytesErrorType\n  | IsHexErrorType\n  | ErrorType\n\n/**\n * Encodes a UTF-8 string, hex value, bigint, number or boolean to a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes\n * - Example: https://viem.sh/docs/utilities/toBytes#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes('Hello world')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nexport function toBytes(\n  value: string | bigint | number | boolean | Hex,\n  opts: ToBytesParameters = {},\n): ByteArray {\n  if (typeof value === 'number' || typeof value === 'bigint')\n    return numberToBytes(value, opts)\n  if (typeof value === 'boolean') return boolToBytes(value, opts)\n  if (isHex(value)) return hexToBytes(value, opts)\n  return stringToBytes(value, opts)\n}\n\nexport type BoolToBytesOpts = {\n  /** Size of the output bytes. */\n  size?: number | undefined\n}\n\nexport type BoolToBytesErrorType =\n  | AssertSizeErrorType\n  | PadErrorType\n  | ErrorType\n\n/**\n * Encodes a boolean into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#booltobytes\n *\n * @param value Boolean value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true)\n * // Uint8Array([1])\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true, { size: 32 })\n * // Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])\n */\nexport function boolToBytes(value: boolean, opts: BoolToBytesOpts = {}) {\n  const bytes = new Uint8Array(1)\n  bytes[0] = Number(value)\n  if (typeof opts.size === 'number') {\n    assertSize(bytes, { size: opts.size })\n    return pad(bytes, { size: opts.size })\n  }\n  return bytes\n}\n\n// We use very optimized technique to convert hex string to byte array\nconst charCodeMap = {\n  zero: 48,\n  nine: 57,\n  A: 65,\n  F: 70,\n  a: 97,\n  f: 102,\n} as const\n\nfunction charCodeToBase16(char: number) {\n  if (char >= charCodeMap.zero && char <= charCodeMap.nine)\n    return char - charCodeMap.zero\n  if (char >= charCodeMap.A && char <= charCodeMap.F)\n    return char - (charCodeMap.A - 10)\n  if (char >= charCodeMap.a && char <= charCodeMap.f)\n    return char - (charCodeMap.a - 10)\n  return undefined\n}\n\nexport type HexToBytesOpts = {\n  /** Size of the output bytes. */\n  size?: number | undefined\n}\n\nexport type HexToBytesErrorType = AssertSizeErrorType | PadErrorType | ErrorType\n\n/**\n * Encodes a hex string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#hextobytes\n *\n * @param hex Hex string to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nexport function hexToBytes(hex_: Hex, opts: HexToBytesOpts = {}): ByteArray {\n  let hex = hex_\n  if (opts.size) {\n    assertSize(hex, { size: opts.size })\n    hex = pad(hex, { dir: 'right', size: opts.size })\n  }\n\n  let hexString = hex.slice(2) as string\n  if (hexString.length % 2) hexString = `0${hexString}`\n\n  const length = hexString.length / 2\n  const bytes = new Uint8Array(length)\n  for (let index = 0, j = 0; index < length; index++) {\n    const nibbleLeft = charCodeToBase16(hexString.charCodeAt(j++))\n    const nibbleRight = charCodeToBase16(hexString.charCodeAt(j++))\n    if (nibbleLeft === undefined || nibbleRight === undefined) {\n      throw new BaseError(\n        `Invalid byte sequence (\"${hexString[j - 2]}${\n          hexString[j - 1]\n        }\" in \"${hexString}\").`,\n      )\n    }\n    bytes[index] = nibbleLeft * 16 + nibbleRight\n  }\n  return bytes\n}\n\nexport type NumberToBytesErrorType =\n  | NumberToHexErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\n/**\n * Encodes a number into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#numbertobytes\n *\n * @param value Number to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nexport function numberToBytes(\n  value: bigint | number,\n  opts?: NumberToHexOpts | undefined,\n) {\n  const hex = numberToHex(value, opts)\n  return hexToBytes(hex)\n}\n\nexport type StringToBytesOpts = {\n  /** Size of the output bytes. */\n  size?: number | undefined\n}\n\nexport type StringToBytesErrorType =\n  | AssertSizeErrorType\n  | PadErrorType\n  | ErrorType\n\n/**\n * Encodes a UTF-8 string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#stringtobytes\n *\n * @param value String to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100, 33])\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nexport function stringToBytes(\n  value: string,\n  opts: StringToBytesOpts = {},\n): ByteArray {\n  const bytes = encoder.encode(value)\n  if (typeof opts.size === 'number') {\n    assertSize(bytes, { size: opts.size })\n    return pad(bytes, { dir: 'right', size: opts.size })\n  }\n  return bytes\n}\n","import {\n  IntegerOutOfRangeError,\n  type IntegerOutOfRangeErrorType,\n} from '../../errors/encoding.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type PadErrorType, pad } from '../data/pad.js'\n\nimport { type AssertSizeErrorType, assertSize } from './fromHex.js'\n\nconst hexes = /*#__PURE__*/ Array.from({ length: 256 }, (_v, i) =>\n  i.toString(16).padStart(2, '0'),\n)\n\nexport type ToHexParameters = {\n  /** The size (in bytes) of the output hex value. */\n  size?: number | undefined\n}\n\nexport type ToHexErrorType =\n  | BoolToHexErrorType\n  | BytesToHexErrorType\n  | NumberToHexErrorType\n  | StringToHexErrorType\n  | ErrorType\n\n/**\n * Encodes a string, number, bigint, or ByteArray into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex\n * - Example: https://viem.sh/docs/utilities/toHex#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world')\n * // '0x48656c6c6f20776f726c6421'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex(420)\n * // '0x1a4'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world', { size: 32 })\n * // '0x48656c6c6f20776f726c64210000000000000000000000000000000000000000'\n */\nexport function toHex(\n  value: string | number | bigint | boolean | ByteArray,\n  opts: ToHexParameters = {},\n): Hex {\n  if (typeof value === 'number' || typeof value === 'bigint')\n    return numberToHex(value, opts)\n  if (typeof value === 'string') {\n    return stringToHex(value, opts)\n  }\n  if (typeof value === 'boolean') return boolToHex(value, opts)\n  return bytesToHex(value, opts)\n}\n\nexport type BoolToHexOpts = {\n  /** The size (in bytes) of the output hex value. */\n  size?: number | undefined\n}\n\nexport type BoolToHexErrorType = AssertSizeErrorType | PadErrorType | ErrorType\n\n/**\n * Encodes a boolean into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#booltohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true)\n * // '0x1'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(false)\n * // '0x0'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true, { size: 32 })\n * // '0x0000000000000000000000000000000000000000000000000000000000000001'\n */\nexport function boolToHex(value: boolean, opts: BoolToHexOpts = {}): Hex {\n  const hex: Hex = `0x${Number(value)}`\n  if (typeof opts.size === 'number') {\n    assertSize(hex, { size: opts.size })\n    return pad(hex, { size: opts.size })\n  }\n  return hex\n}\n\nexport type BytesToHexOpts = {\n  /** The size (in bytes) of the output hex value. */\n  size?: number | undefined\n}\n\nexport type BytesToHexErrorType = AssertSizeErrorType | PadErrorType | ErrorType\n\n/**\n * Encodes a bytes array into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#bytestohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]), { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nexport function bytesToHex(value: ByteArray, opts: BytesToHexOpts = {}): Hex {\n  let string = ''\n  for (let i = 0; i < value.length; i++) {\n    string += hexes[value[i]]\n  }\n  const hex = `0x${string}` as const\n\n  if (typeof opts.size === 'number') {\n    assertSize(hex, { size: opts.size })\n    return pad(hex, { dir: 'right', size: opts.size })\n  }\n  return hex\n}\n\nexport type NumberToHexOpts =\n  | {\n      /** Whether or not the number of a signed representation. */\n      signed?: boolean | undefined\n      /** The size (in bytes) of the output hex value. */\n      size: number\n    }\n  | {\n      signed?: undefined\n      /** The size (in bytes) of the output hex value. */\n      size?: number | undefined\n    }\n\nexport type NumberToHexErrorType =\n  | IntegerOutOfRangeErrorType\n  | PadErrorType\n  | ErrorType\n\n/**\n * Encodes a number or bigint into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#numbertohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420)\n * // '0x1a4'\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420, { size: 32 })\n * // '0x00000000000000000000000000000000000000000000000000000000000001a4'\n */\nexport function numberToHex(\n  value_: number | bigint,\n  opts: NumberToHexOpts = {},\n): Hex {\n  const { signed, size } = opts\n\n  const value = BigInt(value_)\n\n  let maxValue: bigint | number | undefined\n  if (size) {\n    if (signed) maxValue = (1n << (BigInt(size) * 8n - 1n)) - 1n\n    else maxValue = 2n ** (BigInt(size) * 8n) - 1n\n  } else if (typeof value_ === 'number') {\n    maxValue = BigInt(Number.MAX_SAFE_INTEGER)\n  }\n\n  const minValue = typeof maxValue === 'bigint' && signed ? -maxValue - 1n : 0\n\n  if ((maxValue && value > maxValue) || value < minValue) {\n    const suffix = typeof value_ === 'bigint' ? 'n' : ''\n    throw new IntegerOutOfRangeError({\n      max: maxValue ? `${maxValue}${suffix}` : undefined,\n      min: `${minValue}${suffix}`,\n      signed,\n      size,\n      value: `${value_}${suffix}`,\n    })\n  }\n\n  const hex = `0x${(\n    signed && value < 0 ? (1n << BigInt(size * 8)) + BigInt(value) : value\n  ).toString(16)}` as Hex\n  if (size) return pad(hex, { size }) as Hex\n  return hex\n}\n\nexport type StringToHexOpts = {\n  /** The size (in bytes) of the output hex value. */\n  size?: number | undefined\n}\n\nexport type StringToHexErrorType = BytesToHexErrorType | ErrorType\n\nconst encoder = /*#__PURE__*/ new TextEncoder()\n\n/**\n * Encodes a UTF-8 string into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#stringtohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!')\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!', { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nexport function stringToHex(value_: string, opts: StringToHexOpts = {}): Hex {\n  const value = encoder.encode(value_)\n  return bytesToHex(value, opts)\n}\n","import { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport {\n  type CreateCursorErrorType,\n  type Cursor,\n  createCursor,\n} from '../cursor.js'\n\nimport { type HexToBytesErrorType, hexToBytes } from './toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from './toHex.js'\n\nexport type RecursiveArray<T> = T | readonly RecursiveArray<T>[]\n\ntype To = 'hex' | 'bytes'\n\ntype Encodable = {\n  length: number\n  encode(cursor: Cursor): void\n}\n\nexport type ToRlpReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type ToRlpErrorType =\n  | CreateCursorErrorType\n  | BytesToHexErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\nexport function toRlp<to extends To = 'hex'>(\n  bytes: RecursiveArray<ByteArray> | RecursiveArray<Hex>,\n  to: to | To | undefined = 'hex',\n): ToRlpReturnType<to> {\n  const encodable = getEncodable(bytes)\n  const cursor = createCursor(new Uint8Array(encodable.length))\n  encodable.encode(cursor)\n\n  if (to === 'hex') return bytesToHex(cursor.bytes) as ToRlpReturnType<to>\n  return cursor.bytes as ToRlpReturnType<to>\n}\n\nexport type BytesToRlpErrorType = ToRlpErrorType | ErrorType\n\nexport function bytesToRlp<to extends To = 'bytes'>(\n  bytes: RecursiveArray<ByteArray>,\n  to: to | To | undefined = 'bytes',\n): ToRlpReturnType<to> {\n  return toRlp(bytes, to)\n}\n\nexport type HexToRlpErrorType = ToRlpErrorType | ErrorType\n\nexport function hexToRlp<to extends To = 'hex'>(\n  hex: RecursiveArray<Hex>,\n  to: to | To | undefined = 'hex',\n): ToRlpReturnType<to> {\n  return toRlp(hex, to)\n}\n\nfunction getEncodable(\n  bytes: RecursiveArray<ByteArray> | RecursiveArray<Hex>,\n): Encodable {\n  if (Array.isArray(bytes))\n    return getEncodableList(bytes.map((x) => getEncodable(x)))\n  return getEncodableBytes(bytes as any)\n}\n\nfunction getEncodableList(list: Encodable[]): Encodable {\n  const bodyLength = list.reduce((acc, x) => acc + x.length, 0)\n\n  const sizeOfBodyLength = getSizeOfLength(bodyLength)\n  const length = (() => {\n    if (bodyLength <= 55) return 1 + bodyLength\n    return 1 + sizeOfBodyLength + bodyLength\n  })()\n\n  return {\n    length,\n    encode(cursor: Cursor) {\n      if (bodyLength <= 55) {\n        cursor.pushByte(0xc0 + bodyLength)\n      } else {\n        cursor.pushByte(0xc0 + 55 + sizeOfBodyLength)\n        if (sizeOfBodyLength === 1) cursor.pushUint8(bodyLength)\n        else if (sizeOfBodyLength === 2) cursor.pushUint16(bodyLength)\n        else if (sizeOfBodyLength === 3) cursor.pushUint24(bodyLength)\n        else cursor.pushUint32(bodyLength)\n      }\n      for (const { encode } of list) {\n        encode(cursor)\n      }\n    },\n  }\n}\n\nfunction getEncodableBytes(bytesOrHex: ByteArray | Hex): Encodable {\n  const bytes =\n    typeof bytesOrHex === 'string' ? hexToBytes(bytesOrHex) : bytesOrHex\n\n  const sizeOfBytesLength = getSizeOfLength(bytes.length)\n  const length = (() => {\n    if (bytes.length === 1 && bytes[0] < 0x80) return 1\n    if (bytes.length <= 55) return 1 + bytes.length\n    return 1 + sizeOfBytesLength + bytes.length\n  })()\n\n  return {\n    length,\n    encode(cursor: Cursor) {\n      if (bytes.length === 1 && bytes[0] < 0x80) {\n        cursor.pushBytes(bytes)\n      } else if (bytes.length <= 55) {\n        cursor.pushByte(0x80 + bytes.length)\n        cursor.pushBytes(bytes)\n      } else {\n        cursor.pushByte(0x80 + 55 + sizeOfBytesLength)\n        if (sizeOfBytesLength === 1) cursor.pushUint8(bytes.length)\n        else if (sizeOfBytesLength === 2) cursor.pushUint16(bytes.length)\n        else if (sizeOfBytesLength === 3) cursor.pushUint24(bytes.length)\n        else cursor.pushUint32(bytes.length)\n        cursor.pushBytes(bytes)\n      }\n    },\n  }\n}\n\nfunction getSizeOfLength(length: number) {\n  if (length < 2 ** 8) return 1\n  if (length < 2 ** 16) return 2\n  if (length < 2 ** 24) return 3\n  if (length < 2 ** 32) return 4\n  throw new BaseError('Length is too large.')\n}\n","import type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Chain } from '../../../types/chain.js'\nimport type { AssetGatewayUrls } from '../../../types/ens.js'\n\nimport {\n  type GetJsonImageErrorType,\n  type GetMetadataAvatarUriErrorType,\n  type GetNftTokenUriErrorType,\n  type ParseAvatarUriErrorType,\n  type ParseNftUriErrorType,\n  type ResolveAvatarUriErrorType,\n  getJsonImage,\n  getMetadataAvatarUri,\n  getNftTokenUri,\n  parseAvatarUri,\n  parseNftUri,\n  resolveAvatarUri,\n} from './utils.js'\n\nexport type ParseAvatarRecordErrorType =\n  | ParseNftAvatarUriErrorType\n  | ParseAvatarUriErrorType\n  | ErrorType\n\n/*\n * @description Parses an ENS avatar record.\n *\n * @example\n * parseAvatarRecord('eip155:1/erc1155:0xb32979486938aa9694bfc898f35dbed459f44424/10063')\n * 'https://ipfs.io/ipfs/QmSP4nq9fnN9dAiCj42ug9Wa79rqmQerZXZch82VqpiH7U/image.gif'\n *\n * @see https://docs.ens.domains/web/avatars\n *\n */\nexport async function parseAvatarRecord<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  {\n    gatewayUrls,\n    record,\n  }: {\n    gatewayUrls?: AssetGatewayUrls | undefined\n    record: string\n  },\n): Promise<string> {\n  if (/eip155:/i.test(record))\n    return parseNftAvatarUri(client, { gatewayUrls, record })\n  return parseAvatarUri({ uri: record, gatewayUrls })\n}\n\ntype ParseNftAvatarUriErrorType =\n  | ParseNftUriErrorType\n  | GetNftTokenUriErrorType\n  | ResolveAvatarUriErrorType\n  | ParseAvatarUriErrorType\n  | GetJsonImageErrorType\n  | GetMetadataAvatarUriErrorType\n  | ErrorType\n\nasync function parseNftAvatarUri<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  {\n    gatewayUrls,\n    record,\n  }: {\n    gatewayUrls?: AssetGatewayUrls | undefined\n    record: string\n  },\n): Promise<string> {\n  // parse NFT URI into properties\n  const nft = parseNftUri(record)\n  // fetch tokenURI from the NFT contract\n  const nftUri = await getNftTokenUri(client, { nft })\n  // resolve the URI from the fetched tokenURI\n  const {\n    uri: resolvedNftUri,\n    isOnChain,\n    isEncoded,\n  } = resolveAvatarUri({ uri: nftUri, gatewayUrls })\n\n  // if the resolved URI is on chain, return the data\n  if (\n    isOnChain &&\n    (resolvedNftUri.includes('data:application/json;base64,') ||\n      resolvedNftUri.startsWith('{'))\n  ) {\n    const encodedJson = isEncoded\n      ? // if it is encoded, decode it\n        atob(resolvedNftUri.replace('data:application/json;base64,', ''))\n      : // if it isn't encoded assume it is a JSON string, but it could be anything (it will error if it is)\n        resolvedNftUri\n\n    const decoded = JSON.parse(encodedJson)\n    return parseAvatarUri({ uri: getJsonImage(decoded), gatewayUrls })\n  }\n\n  let uriTokenId = nft.tokenID\n  if (nft.namespace === 'erc1155')\n    uriTokenId = uriTokenId.replace('0x', '').padStart(64, '0')\n\n  return getMetadataAvatarUri({\n    gatewayUrls,\n    uri: resolvedNftUri.replace(/(?:0x)?{id}/, uriTokenId),\n  })\n}\n","import type { Address } from 'abitype'\n\nimport {\n  type ReadContractErrorType,\n  readContract,\n} from '../../../actions/public/readContract.js'\nimport type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport {\n  EnsAvatarInvalidMetadataError,\n  type EnsAvatarInvalidMetadataErrorType,\n  EnsAvatarInvalidNftUriError,\n  type EnsAvatarInvalidNftUriErrorType,\n  EnsAvatarUnsupportedNamespaceError,\n  type EnsAvatarUnsupportedNamespaceErrorType,\n  EnsAvatarUriResolutionError,\n  type EnsAvatarUriResolutionErrorType,\n} from '../../../errors/ens.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Chain } from '../../../types/chain.js'\nimport type { AssetGatewayUrls } from '../../../types/ens.js'\n\ntype UriItem = {\n  uri: string\n  isOnChain: boolean\n  isEncoded: boolean\n}\n\nconst networkRegex =\n  /(?<protocol>https?:\\/\\/[^\\/]*|ipfs:\\/|ipns:\\/|ar:\\/)?(?<root>\\/)?(?<subpath>ipfs\\/|ipns\\/)?(?<target>[\\w\\-.]+)(?<subtarget>\\/.*)?/\nconst ipfsHashRegex =\n  /^(Qm[1-9A-HJ-NP-Za-km-z]{44,}|b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,}|z[1-9A-HJ-NP-Za-km-z]{48,}|F[0-9A-F]{50,})(\\/(?<target>[\\w\\-.]+))?(?<subtarget>\\/.*)?$/\nconst base64Regex = /^data:([a-zA-Z\\-/+]*);base64,([^\"].*)/\nconst dataURIRegex = /^data:([a-zA-Z\\-/+]*)?(;[a-zA-Z0-9].*?)?(,)/\n\ntype IsImageUriErrorType = ErrorType\n\n/** @internal */\nexport async function isImageUri(uri: string) {\n  try {\n    const res = await fetch(uri, { method: 'HEAD' })\n    // retrieve content type header to check if content is image\n    if (res.status === 200) {\n      const contentType = res.headers.get('content-type')\n      return contentType?.startsWith('image/')\n    }\n    return false\n  } catch (error: any) {\n    // if error is not cors related then fail\n    if (typeof error === 'object' && typeof error.response !== 'undefined') {\n      return false\n    }\n    // fail in NodeJS, since the error is not cors but any other network issue\n    // biome-ignore lint/suspicious/noPrototypeBuiltins:\n    if (!globalThis.hasOwnProperty('Image')) return false\n    // in case of cors, use image api to validate if given url is an actual image\n    return new Promise((resolve) => {\n      const img = new Image()\n      img.onload = () => {\n        resolve(true)\n      }\n      img.onerror = () => {\n        resolve(false)\n      }\n      img.src = uri\n    })\n  }\n}\n\ntype GetGatewayErrorType = ErrorType\n\n/** @internal */\nexport function getGateway(custom: string | undefined, defaultGateway: string) {\n  if (!custom) return defaultGateway\n  if (custom.endsWith('/')) return custom.slice(0, -1)\n  return custom\n}\n\nexport type ResolveAvatarUriErrorType =\n  | GetGatewayErrorType\n  | EnsAvatarUriResolutionErrorType\n  | ErrorType\n\nexport function resolveAvatarUri({\n  uri,\n  gatewayUrls,\n}: {\n  uri: string\n  gatewayUrls?: AssetGatewayUrls | undefined\n}): UriItem {\n  const isEncoded = base64Regex.test(uri)\n  if (isEncoded) return { uri, isOnChain: true, isEncoded }\n\n  const ipfsGateway = getGateway(gatewayUrls?.ipfs, 'https://ipfs.io')\n  const arweaveGateway = getGateway(gatewayUrls?.arweave, 'https://arweave.net')\n\n  const networkRegexMatch = uri.match(networkRegex)\n  const {\n    protocol,\n    subpath,\n    target,\n    subtarget = '',\n  } = networkRegexMatch?.groups || {}\n\n  const isIPNS = protocol === 'ipns:/' || subpath === 'ipns/'\n  const isIPFS =\n    protocol === 'ipfs:/' || subpath === 'ipfs/' || ipfsHashRegex.test(uri)\n\n  if (uri.startsWith('http') && !isIPNS && !isIPFS) {\n    let replacedUri = uri\n    if (gatewayUrls?.arweave)\n      replacedUri = uri.replace(/https:\\/\\/arweave.net/g, gatewayUrls?.arweave)\n    return { uri: replacedUri, isOnChain: false, isEncoded: false }\n  }\n\n  if ((isIPNS || isIPFS) && target) {\n    return {\n      uri: `${ipfsGateway}/${isIPNS ? 'ipns' : 'ipfs'}/${target}${subtarget}`,\n      isOnChain: false,\n      isEncoded: false,\n    }\n  }\n\n  if (protocol === 'ar:/' && target) {\n    return {\n      uri: `${arweaveGateway}/${target}${subtarget || ''}`,\n      isOnChain: false,\n      isEncoded: false,\n    }\n  }\n\n  let parsedUri = uri.replace(dataURIRegex, '')\n  if (parsedUri.startsWith('<svg')) {\n    // if svg, base64 encode\n    parsedUri = `data:image/svg+xml;base64,${btoa(parsedUri)}`\n  }\n\n  if (parsedUri.startsWith('data:') || parsedUri.startsWith('{')) {\n    return {\n      uri: parsedUri,\n      isOnChain: true,\n      isEncoded: false,\n    }\n  }\n\n  throw new EnsAvatarUriResolutionError({ uri })\n}\n\nexport type GetJsonImageErrorType =\n  | EnsAvatarInvalidMetadataErrorType\n  | ErrorType\n\nexport function getJsonImage(data: any) {\n  // validation check for json data, must include one of theses properties\n  if (\n    typeof data !== 'object' ||\n    (!('image' in data) && !('image_url' in data) && !('image_data' in data))\n  ) {\n    throw new EnsAvatarInvalidMetadataError({ data })\n  }\n\n  return data.image || data.image_url || data.image_data\n}\n\nexport type GetMetadataAvatarUriErrorType =\n  | EnsAvatarUriResolutionErrorType\n  | ParseAvatarUriErrorType\n  | GetJsonImageErrorType\n  | ErrorType\n\nexport async function getMetadataAvatarUri({\n  gatewayUrls,\n  uri,\n}: {\n  gatewayUrls?: AssetGatewayUrls | undefined\n  uri: string\n}): Promise<string> {\n  try {\n    const res = await fetch(uri).then((res) => res.json())\n    const image = await parseAvatarUri({\n      gatewayUrls,\n      uri: getJsonImage(res),\n    })\n    return image\n  } catch {\n    throw new EnsAvatarUriResolutionError({ uri })\n  }\n}\n\nexport type ParseAvatarUriErrorType =\n  | ResolveAvatarUriErrorType\n  | IsImageUriErrorType\n  | EnsAvatarUriResolutionErrorType\n  | ErrorType\n\nexport async function parseAvatarUri({\n  gatewayUrls,\n  uri,\n}: {\n  gatewayUrls?: AssetGatewayUrls | undefined\n  uri: string\n}): Promise<string> {\n  const { uri: resolvedURI, isOnChain } = resolveAvatarUri({ uri, gatewayUrls })\n  if (isOnChain) return resolvedURI\n\n  // check if resolvedURI is an image, if it is return the url\n  const isImage = await isImageUri(resolvedURI)\n  if (isImage) return resolvedURI\n\n  throw new EnsAvatarUriResolutionError({ uri })\n}\n\ntype ParsedNft = {\n  chainID: number\n  namespace: string\n  contractAddress: Address\n  tokenID: string\n}\n\nexport type ParseNftUriErrorType = EnsAvatarInvalidNftUriErrorType | ErrorType\n\nexport function parseNftUri(uri_: string): ParsedNft {\n  let uri = uri_\n  // parse valid nft spec (CAIP-22/CAIP-29)\n  // @see: https://github.com/ChainAgnostic/CAIPs/tree/master/CAIPs\n  if (uri.startsWith('did:nft:')) {\n    // convert DID to CAIP\n    uri = uri.replace('did:nft:', '').replace(/_/g, '/')\n  }\n\n  const [reference, asset_namespace, tokenID] = uri.split('/')\n  const [eip_namespace, chainID] = reference.split(':')\n  const [erc_namespace, contractAddress] = asset_namespace.split(':')\n\n  if (!eip_namespace || eip_namespace.toLowerCase() !== 'eip155')\n    throw new EnsAvatarInvalidNftUriError({ reason: 'Only EIP-155 supported' })\n  if (!chainID)\n    throw new EnsAvatarInvalidNftUriError({ reason: 'Chain ID not found' })\n  if (!contractAddress)\n    throw new EnsAvatarInvalidNftUriError({\n      reason: 'Contract address not found',\n    })\n  if (!tokenID)\n    throw new EnsAvatarInvalidNftUriError({ reason: 'Token ID not found' })\n  if (!erc_namespace)\n    throw new EnsAvatarInvalidNftUriError({ reason: 'ERC namespace not found' })\n\n  return {\n    chainID: Number.parseInt(chainID),\n    namespace: erc_namespace.toLowerCase(),\n    contractAddress: contractAddress as Address,\n    tokenID,\n  }\n}\n\nexport type GetNftTokenUriErrorType =\n  | ReadContractErrorType\n  | EnsAvatarUnsupportedNamespaceErrorType\n  | ErrorType\n\nexport async function getNftTokenUri<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  { nft }: { nft: ParsedNft },\n) {\n  if (nft.namespace === 'erc721') {\n    return readContract(client, {\n      address: nft.contractAddress,\n      abi: [\n        {\n          name: 'tokenURI',\n          type: 'function',\n          stateMutability: 'view',\n          inputs: [{ name: 'tokenId', type: 'uint256' }],\n          outputs: [{ name: '', type: 'string' }],\n        },\n      ],\n      functionName: 'tokenURI',\n      args: [BigInt(nft.tokenID)],\n    })\n  }\n  if (nft.namespace === 'erc1155') {\n    return readContract(client, {\n      address: nft.contractAddress,\n      abi: [\n        {\n          name: 'uri',\n          type: 'function',\n          stateMutability: 'view',\n          inputs: [{ name: '_id', type: 'uint256' }],\n          outputs: [{ name: '', type: 'string' }],\n        },\n      ],\n      functionName: 'uri',\n      args: [BigInt(nft.tokenID)],\n    })\n  }\n  throw new EnsAvatarUnsupportedNamespaceError({ namespace: nft.namespace })\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\n\nexport type EncodeLabelhashErrorType = ErrorType\n\nexport function encodeLabelhash(hash: Hex): `[${string}]` {\n  return `[${hash.slice(2)}]`\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\n\nexport type EncodedLabelToLabelhashErrorType = IsHexErrorType | ErrorType\n\nexport function encodedLabelToLabelhash(label: string): Hex | null {\n  if (label.length !== 66) return null\n  if (label.indexOf('[') !== 0) return null\n  if (label.indexOf(']') !== 65) return null\n  const hash = `0x${label.slice(1, 65)}`\n  if (!isHex(hash)) return null\n  return hash\n}\n","import { panicReasons } from '../../constants/solidity.js'\nimport { BaseError } from '../../errors/base.js'\nimport { ContractFunctionRevertedError } from '../../errors/contract.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\n/** @internal */\nexport type IsNullUniversalResolverErrorErrorType = ErrorType\n\n/*\n * @description Checks if error is a valid null result UniversalResolver error\n */\nexport function isNullUniversalResolverError(\n  err: unknown,\n  callType: 'resolve' | 'reverse',\n): boolean {\n  if (!(err instanceof BaseError)) return false\n  const cause = err.walk((e) => e instanceof ContractFunctionRevertedError)\n  if (!(cause instanceof ContractFunctionRevertedError)) return false\n  if (cause.data?.errorName === 'ResolverNotFound') return true\n  if (cause.data?.errorName === 'ResolverWildcardNotSupported') return true\n  if (cause.data?.errorName === 'ResolverNotContract') return true\n  if (cause.data?.errorName === 'ResolverError') return true\n  if (cause.data?.errorName === 'HttpError') return true\n  // Backwards compatibility for older UniversalResolver contracts\n  if (\n    cause.reason?.includes(\n      'Wildcard on non-extended resolvers is not supported',\n    )\n  )\n    return true\n  // No primary name set for address.\n  if (callType === 'reverse' && cause.reason === panicReasons[50]) return true\n  return false\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport {\n  type StringToBytesErrorType,\n  stringToBytes,\n} from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport {\n  type EncodedLabelToLabelhashErrorType,\n  encodedLabelToLabelhash,\n} from './encodedLabelToLabelhash.js'\n\nexport type LabelhashErrorType =\n  | BytesToHexErrorType\n  | EncodedLabelToLabelhashErrorType\n  | Keccak256ErrorType\n  | StringToBytesErrorType\n  | ErrorType\n\n/**\n * @description Hashes ENS label\n *\n * - Since ENS labels prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS labels](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `labelhash`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @example\n * labelhash('eth')\n * '0x4f5b812789fc606be1b3b16908db13fc7a9adf7ca72641f84d75b47069d3d7f0'\n */\nexport function labelhash(label: string) {\n  const result = new Uint8Array(32).fill(0)\n  if (!label) return bytesToHex(result)\n  return encodedLabelToLabelhash(label) || keccak256(stringToBytes(label))\n}\n","import { batchGatewayAbi } from '../../constants/abis.js'\nimport { solidityError } from '../../constants/solidity.js'\nimport type { Hex } from '../../types/misc.js'\nimport { decodeFunctionData } from '../abi/decodeFunctionData.js'\nimport { encodeErrorResult } from '../abi/encodeErrorResult.js'\nimport { encodeFunctionResult } from '../abi/encodeFunctionResult.js'\nimport type {\n  CcipRequestErrorType,\n  CcipRequestParameters,\n  CcipRequestReturnType,\n} from '../ccip.js'\n\nexport const localBatchGatewayUrl = 'x-batch-gateway:true'\n\nexport async function localBatchGatewayRequest(parameters: {\n  data: Hex\n  ccipRequest: (\n    parameters: CcipRequestParameters,\n  ) => Promise<CcipRequestReturnType>\n}): Promise<Hex> {\n  const { data, ccipRequest } = parameters\n\n  const {\n    args: [queries],\n  } = decodeFunctionData({ abi: batchGatewayAbi, data })\n\n  const failures: boolean[] = []\n  const responses: Hex[] = []\n  await Promise.all(\n    queries.map(async (query, i) => {\n      try {\n        responses[i] = await ccipRequest(query)\n        failures[i] = false\n      } catch (err) {\n        failures[i] = true\n        responses[i] = encodeError(err as CcipRequestErrorType)\n      }\n    }),\n  )\n\n  return encodeFunctionResult({\n    abi: batchGatewayAbi,\n    functionName: 'query',\n    result: [failures, responses],\n  })\n}\n\nfunction encodeError(error: CcipRequestErrorType): Hex {\n  if (error.name === 'HttpRequestError' && error.status)\n    return encodeErrorResult({\n      abi: batchGatewayAbi,\n      errorName: 'HttpError',\n      args: [error.status, error.shortMessage],\n    })\n  return encodeErrorResult({\n    abi: [solidityError],\n    errorName: 'Error',\n    args: ['shortMessage' in error ? error.shortMessage : error.message],\n  })\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray } from '../../types/misc.js'\nimport { type ConcatErrorType, concat } from '../data/concat.js'\nimport {\n  type StringToBytesErrorType,\n  type ToBytesErrorType,\n  stringToBytes,\n  toBytes,\n} from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport {\n  type EncodedLabelToLabelhashErrorType,\n  encodedLabelToLabelhash,\n} from './encodedLabelToLabelhash.js'\n\nexport type NamehashErrorType =\n  | BytesToHexErrorType\n  | EncodedLabelToLabelhashErrorType\n  | ToBytesErrorType\n  | Keccak256ErrorType\n  | StringToBytesErrorType\n  | ConcatErrorType\n  | ErrorType\n\n/**\n * @description Hashes ENS name\n *\n * - Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `namehash`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @example\n * namehash('wevm.eth')\n * '0xf246651c1b9a6b141d19c2604e9a58f567973833990f830d882534a747801359'\n *\n * @link https://eips.ethereum.org/EIPS/eip-137\n */\nexport function namehash(name: string) {\n  let result = new Uint8Array(32).fill(0) as ByteArray\n  if (!name) return bytesToHex(result)\n\n  const labels = name.split('.')\n  // Iterate in reverse order building up hash\n  for (let i = labels.length - 1; i >= 0; i -= 1) {\n    const hashFromEncodedLabel = encodedLabelToLabelhash(labels[i])\n    const hashed = hashFromEncodedLabel\n      ? toBytes(hashFromEncodedLabel)\n      : keccak256(stringToBytes(labels[i]), 'bytes')\n    result = keccak256(concat([result, hashed]), 'bytes')\n  }\n\n  return bytesToHex(result)\n}\n","// Adapted from https://github.com/mafintosh/dns-packet\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray } from '../../types/misc.js'\nimport {\n  type StringToBytesErrorType,\n  stringToBytes,\n} from '../encoding/toBytes.js'\nimport {\n  type EncodeLabelhashErrorType,\n  encodeLabelhash,\n} from './encodeLabelhash.js'\nimport { type LabelhashErrorType, labelhash } from './labelhash.js'\n\nexport type PacketToBytesErrorType =\n  | EncodeLabelhashErrorType\n  | LabelhashErrorType\n  | StringToBytesErrorType\n  | ErrorType\n\n/*\n * @description Encodes a DNS packet into a ByteArray containing a UDP payload.\n *\n * @example\n * packetToBytes('awkweb.eth')\n * '0x0661776b7765620365746800'\n *\n * @see https://docs.ens.domains/resolution/names#dns\n *\n */\nexport function packetToBytes(packet: string): ByteArray {\n  // strip leading and trailing `.`\n  const value = packet.replace(/^\\.|\\.$/gm, '')\n  if (value.length === 0) return new Uint8Array(1)\n\n  const bytes = new Uint8Array(stringToBytes(value).byteLength + 2)\n\n  let offset = 0\n  const list = value.split('.')\n  for (let i = 0; i < list.length; i++) {\n    let encoded = stringToBytes(list[i])\n    // if the length is > 255, make the encoded label value a labelhash\n    // this is compatible with the universal resolver\n    if (encoded.byteLength > 255)\n      encoded = stringToBytes(encodeLabelhash(labelhash(list[i])))\n    bytes[offset] = encoded.length\n    bytes.set(encoded, offset + 1)\n    offset += encoded.length + 1\n  }\n\n  if (bytes.byteLength !== offset + 1) return bytes.slice(0, offset + 1)\n\n  return bytes\n}\n","import type { CallParameters } from '../../actions/public/call.js'\nimport type { BaseError } from '../../errors/base.js'\nimport {\n  CallExecutionError,\n  type CallExecutionErrorType,\n} from '../../errors/contract.js'\nimport { UnknownNodeError } from '../../errors/node.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\n\nimport {\n  type GetNodeErrorParameters,\n  type GetNodeErrorReturnType,\n  getNodeError,\n} from './getNodeError.js'\n\nexport type GetCallErrorReturnType<cause = ErrorType> = Omit<\n  CallExecutionErrorType,\n  'cause'\n> & {\n  cause: cause | GetNodeErrorReturnType\n}\n\nexport function getCallError<err extends ErrorType<string>>(\n  err: err,\n  {\n    docsPath,\n    ...args\n  }: CallParameters & {\n    chain?: Chain | undefined\n    docsPath?: string | undefined\n  },\n): GetCallErrorReturnType<err> {\n  const cause = (() => {\n    const cause = getNodeError(\n      err as {} as BaseError,\n      args as GetNodeErrorParameters,\n    )\n    if (cause instanceof UnknownNodeError) return err as {} as BaseError\n    return cause\n  })()\n  return new CallExecutionError(cause, {\n    docsPath,\n    ...args,\n  }) as GetCallErrorReturnType<err>\n}\n","import type { Abi, Address } from 'abitype'\n\nimport { AbiDecodingZeroDataError } from '../../errors/abi.js'\nimport { BaseError } from '../../errors/base.js'\nimport {\n  ContractFunctionExecutionError,\n  type ContractFunctionExecutionErrorType,\n  ContractFunctionRevertedError,\n  type ContractFunctionRevertedErrorType,\n  ContractFunctionZeroDataError,\n  type ContractFunctionZeroDataErrorType,\n  RawContractError,\n} from '../../errors/contract.js'\nimport { RpcRequestError } from '../../errors/request.js'\nimport { InternalRpcError } from '../../errors/rpc.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\nconst EXECUTION_REVERTED_ERROR_CODE = 3\n\nexport type GetContractErrorReturnType<cause = ErrorType> = Omit<\n  ContractFunctionExecutionErrorType,\n  'cause'\n> & {\n  cause:\n    | cause\n    | ContractFunctionZeroDataErrorType\n    | ContractFunctionRevertedErrorType\n}\n\nexport function getContractError<err extends ErrorType<string>>(\n  err: err,\n  {\n    abi,\n    address,\n    args,\n    docsPath,\n    functionName,\n    sender,\n  }: {\n    abi: Abi\n    args: any\n    address?: Address | undefined\n    docsPath?: string | undefined\n    functionName: string\n    sender?: Address | undefined\n  },\n): GetContractErrorReturnType {\n  const error = (\n    err instanceof RawContractError\n      ? err\n      : err instanceof BaseError\n        ? err.walk((err) => 'data' in (err as Error)) || err.walk()\n        : {}\n  ) as BaseError\n  const { code, data, details, message, shortMessage } =\n    error as RawContractError\n\n  const cause = (() => {\n    if (err instanceof AbiDecodingZeroDataError)\n      return new ContractFunctionZeroDataError({ functionName })\n    if (\n      [EXECUTION_REVERTED_ERROR_CODE, InternalRpcError.code].includes(code) &&\n      (data || details || message || shortMessage)\n    ) {\n      return new ContractFunctionRevertedError({\n        abi,\n        data: typeof data === 'object' ? data.data : data,\n        functionName,\n        message:\n          error instanceof RpcRequestError\n            ? details\n            : (shortMessage ?? message),\n      })\n    }\n    return err\n  })()\n\n  return new ContractFunctionExecutionError(cause as BaseError, {\n    abi,\n    args,\n    contractAddress: address,\n    docsPath,\n    functionName,\n    sender,\n  }) as GetContractErrorReturnType\n}\n","import type { Account } from '../../accounts/types.js'\nimport type { EstimateGasParameters } from '../../actions/public/estimateGas.js'\nimport type { BaseError } from '../../errors/base.js'\nimport {\n  EstimateGasExecutionError,\n  type EstimateGasExecutionErrorType,\n} from '../../errors/estimateGas.js'\nimport { UnknownNodeError } from '../../errors/node.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\n\nimport {\n  type GetNodeErrorParameters,\n  type GetNodeErrorReturnType,\n  getNodeError,\n} from './getNodeError.js'\n\nexport type GetEstimateGasErrorReturnType<cause = ErrorType> = Omit<\n  EstimateGasExecutionErrorType,\n  'cause'\n> & { cause: cause | GetNodeErrorReturnType }\n\nexport function getEstimateGasError<err extends ErrorType<string>>(\n  err: err,\n  {\n    docsPath,\n    ...args\n  }: Omit<EstimateGasParameters, 'account'> & {\n    account?: Account | undefined\n    chain?: Chain | undefined\n    docsPath?: string | undefined\n  },\n): GetEstimateGasErrorReturnType<err> {\n  const cause = (() => {\n    const cause = getNodeError(\n      err as {} as BaseError,\n      args as GetNodeErrorParameters,\n    )\n    if (cause instanceof UnknownNodeError) return err as {} as BaseError\n    return cause\n  })()\n  return new EstimateGasExecutionError(cause, {\n    docsPath,\n    ...args,\n  }) as GetEstimateGasErrorReturnType<err>\n}\n","import type { SendTransactionParameters } from '../../actions/wallet/sendTransaction.js'\nimport { BaseError } from '../../errors/base.js'\nimport {\n  ExecutionRevertedError,\n  type ExecutionRevertedErrorType,\n  FeeCapTooHighError,\n  type FeeCapTooHighErrorType,\n  FeeCapTooLowError,\n  type FeeCapTooLowErrorType,\n  InsufficientFundsError,\n  type InsufficientFundsErrorType,\n  IntrinsicGasTooHighError,\n  type IntrinsicGasTooHighErrorType,\n  IntrinsicGasTooLowError,\n  type IntrinsicGasTooLowErrorType,\n  NonceMaxValueError,\n  type NonceMaxValueErrorType,\n  NonceTooHighError,\n  type NonceTooHighErrorType,\n  NonceTooLowError,\n  type NonceTooLowErrorType,\n  TipAboveFeeCapError,\n  type TipAboveFeeCapErrorType,\n  TransactionTypeNotSupportedError,\n  type TransactionTypeNotSupportedErrorType,\n  UnknownNodeError,\n  type UnknownNodeErrorType,\n} from '../../errors/node.js'\nimport { RpcRequestError } from '../../errors/request.js'\nimport {\n  InvalidInputRpcError,\n  TransactionRejectedRpcError,\n} from '../../errors/rpc.js'\nimport type { ExactPartial } from '../../types/utils.js'\n\nexport function containsNodeError(err: BaseError) {\n  return (\n    err instanceof TransactionRejectedRpcError ||\n    err instanceof InvalidInputRpcError ||\n    (err instanceof RpcRequestError && err.code === ExecutionRevertedError.code)\n  )\n}\n\nexport type GetNodeErrorParameters = ExactPartial<\n  SendTransactionParameters<any>\n>\n\nexport type GetNodeErrorReturnType =\n  | ExecutionRevertedErrorType\n  | FeeCapTooHighErrorType\n  | FeeCapTooLowErrorType\n  | NonceTooHighErrorType\n  | NonceTooLowErrorType\n  | NonceMaxValueErrorType\n  | InsufficientFundsErrorType\n  | IntrinsicGasTooHighErrorType\n  | IntrinsicGasTooLowErrorType\n  | TransactionTypeNotSupportedErrorType\n  | TipAboveFeeCapErrorType\n  | UnknownNodeErrorType\n\nexport function getNodeError(\n  err: BaseError,\n  args: GetNodeErrorParameters,\n): GetNodeErrorReturnType {\n  const message = (err.details || '').toLowerCase()\n\n  const executionRevertedError =\n    err instanceof BaseError\n      ? err.walk(\n          (e) =>\n            (e as { code: number } | null | undefined)?.code ===\n            ExecutionRevertedError.code,\n        )\n      : err\n  if (executionRevertedError instanceof BaseError)\n    return new ExecutionRevertedError({\n      cause: err,\n      message: executionRevertedError.details,\n    }) as any\n  if (ExecutionRevertedError.nodeMessage.test(message))\n    return new ExecutionRevertedError({\n      cause: err,\n      message: err.details,\n    }) as any\n  if (FeeCapTooHighError.nodeMessage.test(message))\n    return new FeeCapTooHighError({\n      cause: err,\n      maxFeePerGas: args?.maxFeePerGas,\n    }) as any\n  if (FeeCapTooLowError.nodeMessage.test(message))\n    return new FeeCapTooLowError({\n      cause: err,\n      maxFeePerGas: args?.maxFeePerGas,\n    }) as any\n  if (NonceTooHighError.nodeMessage.test(message))\n    return new NonceTooHighError({ cause: err, nonce: args?.nonce }) as any\n  if (NonceTooLowError.nodeMessage.test(message))\n    return new NonceTooLowError({ cause: err, nonce: args?.nonce }) as any\n  if (NonceMaxValueError.nodeMessage.test(message))\n    return new NonceMaxValueError({ cause: err, nonce: args?.nonce }) as any\n  if (InsufficientFundsError.nodeMessage.test(message))\n    return new InsufficientFundsError({ cause: err }) as any\n  if (IntrinsicGasTooHighError.nodeMessage.test(message))\n    return new IntrinsicGasTooHighError({ cause: err, gas: args?.gas }) as any\n  if (IntrinsicGasTooLowError.nodeMessage.test(message))\n    return new IntrinsicGasTooLowError({ cause: err, gas: args?.gas }) as any\n  if (TransactionTypeNotSupportedError.nodeMessage.test(message))\n    return new TransactionTypeNotSupportedError({ cause: err }) as any\n  if (TipAboveFeeCapError.nodeMessage.test(message))\n    return new TipAboveFeeCapError({\n      cause: err,\n      maxFeePerGas: args?.maxFeePerGas,\n      maxPriorityFeePerGas: args?.maxPriorityFeePerGas,\n    }) as any\n  return new UnknownNodeError({\n    cause: err,\n  }) as any\n}\n","import type { Account } from '../../accounts/types.js'\nimport type { SendTransactionParameters } from '../../actions/wallet/sendTransaction.js'\nimport type { BaseError } from '../../errors/base.js'\nimport { UnknownNodeError } from '../../errors/node.js'\nimport {\n  TransactionExecutionError,\n  type TransactionExecutionErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\n\nimport {\n  type GetNodeErrorParameters,\n  type GetNodeErrorReturnType,\n  getNodeError,\n} from './getNodeError.js'\n\nexport type GetTransactionErrorParameters = Omit<\n  SendTransactionParameters,\n  'account' | 'chain'\n> & {\n  account: Account | null\n  chain?: Chain | undefined\n  docsPath?: string | undefined\n}\n\nexport type GetTransactionErrorReturnType<cause = ErrorType> = Omit<\n  TransactionExecutionErrorType,\n  'cause'\n> & { cause: cause | GetNodeErrorReturnType }\n\nexport function getTransactionError<err extends ErrorType<string>>(\n  err: err,\n  { docsPath, ...args }: GetTransactionErrorParameters,\n): GetTransactionErrorReturnType<err> {\n  const cause = (() => {\n    const cause = getNodeError(\n      err as {} as BaseError,\n      args as GetNodeErrorParameters,\n    )\n    if (cause instanceof UnknownNodeError) return err as {} as BaseError\n    return cause\n  })()\n  return new TransactionExecutionError(cause, {\n    docsPath,\n    ...args,\n  }) as GetTransactionErrorReturnType<err>\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { OnResponseFn } from '../../clients/transports/fallback.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { PublicRpcSchema } from '../../types/eip1193.js'\nimport type { EIP1193RequestFn } from '../../types/eip1193.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { Filter } from '../../types/utils.js'\n\ntype CreateFilterRequestScopeParameters = {\n  method:\n    | 'eth_newFilter'\n    | 'eth_newPendingTransactionFilter'\n    | 'eth_newBlockFilter'\n}\n\ntype FilterRpcSchema = Filter<\n  PublicRpcSchema,\n  { Method: 'eth_getFilterLogs' | 'eth_getFilterChanges' }\n>\n\ntype CreateFilterRequestScopeReturnType = (\n  id: Hex,\n) => EIP1193RequestFn<FilterRpcSchema>\n\n/**\n * Scopes `request` to the filter ID. If the client is a fallback, it will\n * listen for responses and scope the child transport `request` function\n * to the successful filter ID.\n */\nexport function createFilterRequestScope<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  { method }: CreateFilterRequestScopeParameters,\n): CreateFilterRequestScopeReturnType {\n  const requestMap: Record<Hex, EIP1193RequestFn> = {}\n\n  if (client.transport.type === 'fallback')\n    client.transport.onResponse?.(\n      ({\n        method: method_,\n        response: id,\n        status,\n        transport,\n      }: Parameters<OnResponseFn>[0]) => {\n        if (status === 'success' && method === method_)\n          requestMap[id as Hex] = transport.request\n      },\n    )\n\n  return ((id) =>\n    requestMap[id] || client.request) as CreateFilterRequestScopeReturnType\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Block, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ExtractChainFormatterExclude,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RpcBlock } from '../../types/rpc.js'\nimport type { ExactPartial, Prettify } from '../../types/utils.js'\n\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\nimport { type FormattedTransaction, formatTransaction } from './transaction.js'\n\ntype BlockPendingDependencies = 'hash' | 'logsBloom' | 'nonce' | 'number'\n\nexport type FormattedBlock<\n  chain extends Chain | undefined = undefined,\n  includeTransactions extends boolean = boolean,\n  blockTag extends BlockTag = BlockTag,\n  _FormatterReturnType = ExtractChainFormatterReturnType<\n    chain,\n    'block',\n    Block<bigint, includeTransactions>\n  >,\n  _ExcludedPendingDependencies extends string = BlockPendingDependencies &\n    ExtractChainFormatterExclude<chain, 'block'>,\n  _Formatted = Omit<_FormatterReturnType, BlockPendingDependencies> & {\n    [_key in _ExcludedPendingDependencies]: never\n  } & Pick<\n      Block<bigint, includeTransactions, blockTag>,\n      BlockPendingDependencies\n    >,\n  _Transactions = includeTransactions extends true\n    ? Prettify<FormattedTransaction<chain, blockTag>>[]\n    : Hash[],\n> = Omit<_Formatted, 'transactions'> & {\n  transactions: _Transactions\n}\n\nexport type FormatBlockErrorType = ErrorType\n\nexport function formatBlock(block: ExactPartial<RpcBlock>) {\n  const transactions = (block.transactions ?? []).map((transaction) => {\n    if (typeof transaction === 'string') return transaction\n    return formatTransaction(transaction)\n  })\n  return {\n    ...block,\n    baseFeePerGas: block.baseFeePerGas ? BigInt(block.baseFeePerGas) : null,\n    blobGasUsed: block.blobGasUsed ? BigInt(block.blobGasUsed) : undefined,\n    difficulty: block.difficulty ? BigInt(block.difficulty) : undefined,\n    excessBlobGas: block.excessBlobGas\n      ? BigInt(block.excessBlobGas)\n      : undefined,\n    gasLimit: block.gasLimit ? BigInt(block.gasLimit) : undefined,\n    gasUsed: block.gasUsed ? BigInt(block.gasUsed) : undefined,\n    hash: block.hash ? block.hash : null,\n    logsBloom: block.logsBloom ? block.logsBloom : null,\n    nonce: block.nonce ? block.nonce : null,\n    number: block.number ? BigInt(block.number) : null,\n    size: block.size ? BigInt(block.size) : undefined,\n    timestamp: block.timestamp ? BigInt(block.timestamp) : undefined,\n    transactions,\n    totalDifficulty: block.totalDifficulty\n      ? BigInt(block.totalDifficulty)\n      : null,\n  } as Block\n}\n\nexport type DefineBlockErrorType = DefineFormatterErrorType | ErrorType\n\nexport const defineBlock = /*#__PURE__*/ defineFormatter('block', formatBlock)\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ChainFormatter } from '../../types/chain.js'\n\nexport type ExtractErrorType = ErrorType\n\n/**\n * @description Picks out the keys from `value` that exist in the formatter..\n */\nexport function extract(\n  value_: Record<string, unknown>,\n  { format }: { format?: ChainFormatter['format'] | undefined },\n) {\n  if (!format) return {}\n\n  const value: Record<string, unknown> = {}\n  function extract_(formatted: Record<string, any>) {\n    const keys = Object.keys(formatted)\n    for (const key of keys) {\n      if (key in value_) value[key] = value_[key]\n      if (\n        formatted[key] &&\n        typeof formatted[key] === 'object' &&\n        !Array.isArray(formatted[key])\n      )\n        extract_(formatted[key])\n    }\n  }\n\n  const formatted = format(value_ || {})\n  extract_(formatted)\n\n  return value\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { FeeHistory } from '../../types/fee.js'\nimport type { RpcFeeHistory } from '../../types/rpc.js'\n\nexport type FormatFeeHistoryErrorType = ErrorType\n\nexport function formatFeeHistory(feeHistory: RpcFeeHistory): FeeHistory {\n  return {\n    baseFeePerGas: feeHistory.baseFeePerGas.map((value) => BigInt(value)),\n    gasUsedRatio: feeHistory.gasUsedRatio,\n    oldestBlock: BigInt(feeHistory.oldestBlock),\n    reward: feeHistory.reward?.map((reward) =>\n      reward.map((value) => BigInt(value)),\n    ),\n  }\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Prettify } from '../../types/utils.js'\n\nexport type DefineFormatterErrorType = ErrorType\n\nexport function defineFormatter<type extends string, parameters, returnType>(\n  type: type,\n  format: (_: parameters) => returnType,\n) {\n  return <\n    parametersOverride,\n    returnTypeOverride,\n    exclude extends (keyof parameters | keyof parametersOverride)[] = [],\n  >({\n    exclude,\n    format: overrides,\n  }: {\n    exclude?: exclude | undefined\n    format: (_: parametersOverride) => returnTypeOverride\n  }) => {\n    return {\n      exclude,\n      format: (args: parametersOverride) => {\n        const formatted = format(args as any)\n        if (exclude) {\n          for (const key of exclude) {\n            delete (formatted as any)[key]\n          }\n        }\n        return {\n          ...formatted,\n          ...overrides(args),\n        } as Prettify<returnTypeOverride> & {\n          [_key in exclude[number]]: never\n        }\n      },\n      type,\n    }\n  }\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Log } from '../../types/log.js'\nimport type { RpcLog } from '../../types/rpc.js'\nimport type { ExactPartial } from '../../types/utils.js'\n\nexport type FormatLogErrorType = ErrorType\n\nexport function formatLog(\n  log: ExactPartial<RpcLog>,\n  {\n    args,\n    eventName,\n  }: { args?: unknown | undefined; eventName?: string | undefined } = {},\n) {\n  return {\n    ...log,\n    blockHash: log.blockHash ? log.blockHash : null,\n    blockNumber: log.blockNumber ? BigInt(log.blockNumber) : null,\n    logIndex: log.logIndex ? Number(log.logIndex) : null,\n    transactionHash: log.transactionHash ? log.transactionHash : null,\n    transactionIndex: log.transactionIndex\n      ? Number(log.transactionIndex)\n      : null,\n    ...(eventName ? { args, eventName } : {}),\n  } as Log\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Proof } from '../../types/proof.js'\nimport type { RpcProof } from '../../types/rpc.js'\nimport type { ExactPartial } from '../../types/utils.js'\nimport { hexToNumber } from '../index.js'\n\nexport type FormatProofErrorType = ErrorType\n\nfunction formatStorageProof(storageProof: RpcProof['storageProof']) {\n  return storageProof.map((proof) => ({\n    ...proof,\n    value: BigInt(proof.value),\n  }))\n}\n\nexport function formatProof(proof: ExactPartial<RpcProof>) {\n  return {\n    ...proof,\n    balance: proof.balance ? BigInt(proof.balance) : undefined,\n    nonce: proof.nonce ? hexToNumber(proof.nonce) : undefined,\n    storageProof: proof.storageProof\n      ? formatStorageProof(proof.storageProof)\n      : undefined,\n  } as Proof\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { SignedAuthorizationList } from '../../types/authorization.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ExtractChainFormatterExclude,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RpcAuthorizationList, RpcTransaction } from '../../types/rpc.js'\nimport type { Transaction, TransactionType } from '../../types/transaction.js'\nimport type { ExactPartial, UnionLooseOmit } from '../../types/utils.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\n\ntype TransactionPendingDependencies =\n  | 'blockHash'\n  | 'blockNumber'\n  | 'transactionIndex'\n\nexport type FormattedTransaction<\n  chain extends Chain | undefined = undefined,\n  blockTag extends BlockTag = BlockTag,\n  _FormatterReturnType = ExtractChainFormatterReturnType<\n    chain,\n    'transaction',\n    Transaction\n  >,\n  _ExcludedPendingDependencies extends string = TransactionPendingDependencies &\n    ExtractChainFormatterExclude<chain, 'transaction'>,\n> = UnionLooseOmit<_FormatterReturnType, TransactionPendingDependencies> & {\n  [_K in _ExcludedPendingDependencies]: never\n} & Pick<\n    Transaction<bigint, number, blockTag extends 'pending' ? true : false>,\n    TransactionPendingDependencies\n  >\n\nexport const transactionType = {\n  '0x0': 'legacy',\n  '0x1': 'eip2930',\n  '0x2': 'eip1559',\n  '0x3': 'eip4844',\n  '0x4': 'eip7702',\n} as const satisfies Record<Hex, TransactionType>\n\nexport type FormatTransactionErrorType = ErrorType\n\nexport function formatTransaction(transaction: ExactPartial<RpcTransaction>) {\n  const transaction_ = {\n    ...transaction,\n    blockHash: transaction.blockHash ? transaction.blockHash : null,\n    blockNumber: transaction.blockNumber\n      ? BigInt(transaction.blockNumber)\n      : null,\n    chainId: transaction.chainId ? hexToNumber(transaction.chainId) : undefined,\n    gas: transaction.gas ? BigInt(transaction.gas) : undefined,\n    gasPrice: transaction.gasPrice ? BigInt(transaction.gasPrice) : undefined,\n    maxFeePerBlobGas: transaction.maxFeePerBlobGas\n      ? BigInt(transaction.maxFeePerBlobGas)\n      : undefined,\n    maxFeePerGas: transaction.maxFeePerGas\n      ? BigInt(transaction.maxFeePerGas)\n      : undefined,\n    maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n      ? BigInt(transaction.maxPriorityFeePerGas)\n      : undefined,\n    nonce: transaction.nonce ? hexToNumber(transaction.nonce) : undefined,\n    to: transaction.to ? transaction.to : null,\n    transactionIndex: transaction.transactionIndex\n      ? Number(transaction.transactionIndex)\n      : null,\n    type: transaction.type\n      ? (transactionType as any)[transaction.type]\n      : undefined,\n    typeHex: transaction.type ? transaction.type : undefined,\n    value: transaction.value ? BigInt(transaction.value) : undefined,\n    v: transaction.v ? BigInt(transaction.v) : undefined,\n  } as Transaction\n\n  if (transaction.authorizationList)\n    transaction_.authorizationList = formatAuthorizationList(\n      transaction.authorizationList,\n    )\n\n  transaction_.yParity = (() => {\n    // If `yParity` is provided, we will use it.\n    if (transaction.yParity) return Number(transaction.yParity)\n\n    // If no `yParity` provided, try derive from `v`.\n    if (typeof transaction_.v === 'bigint') {\n      if (transaction_.v === 0n || transaction_.v === 27n) return 0\n      if (transaction_.v === 1n || transaction_.v === 28n) return 1\n      if (transaction_.v >= 35n) return transaction_.v % 2n === 0n ? 1 : 0\n    }\n\n    return undefined\n  })()\n\n  if (transaction_.type === 'legacy') {\n    delete transaction_.accessList\n    delete transaction_.maxFeePerBlobGas\n    delete transaction_.maxFeePerGas\n    delete transaction_.maxPriorityFeePerGas\n    delete transaction_.yParity\n  }\n  if (transaction_.type === 'eip2930') {\n    delete transaction_.maxFeePerBlobGas\n    delete transaction_.maxFeePerGas\n    delete transaction_.maxPriorityFeePerGas\n  }\n  if (transaction_.type === 'eip1559') {\n    delete transaction_.maxFeePerBlobGas\n  }\n  return transaction_\n}\n\nexport type DefineTransactionErrorType = DefineFormatterErrorType | ErrorType\n\nexport const defineTransaction = /*#__PURE__*/ defineFormatter(\n  'transaction',\n  formatTransaction,\n)\n\n//////////////////////////////////////////////////////////////////////////////\n\nfunction formatAuthorizationList(\n  authorizationList: RpcAuthorizationList,\n): SignedAuthorizationList {\n  return authorizationList.map((authorization) => ({\n    address: (authorization as any).address,\n    chainId: Number(authorization.chainId),\n    nonce: Number(authorization.nonce),\n    r: authorization.r,\n    s: authorization.s,\n    yParity: Number(authorization.yParity),\n  })) as SignedAuthorizationList\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type {\n  Chain,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { RpcTransactionReceipt } from '../../types/rpc.js'\nimport type { TransactionReceipt } from '../../types/transaction.js'\nimport type { ExactPartial } from '../../types/utils.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\n\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\nimport { formatLog } from './log.js'\nimport { transactionType } from './transaction.js'\n\nexport type FormattedTransactionReceipt<\n  chain extends Chain | undefined = undefined,\n> = ExtractChainFormatterReturnType<\n  chain,\n  'transactionReceipt',\n  TransactionReceipt\n>\n\nexport const receiptStatuses = {\n  '0x0': 'reverted',\n  '0x1': 'success',\n} as const\n\nexport type FormatTransactionReceiptErrorType = ErrorType\n\nexport function formatTransactionReceipt(\n  transactionReceipt: ExactPartial<RpcTransactionReceipt>,\n) {\n  const receipt = {\n    ...transactionReceipt,\n    blockNumber: transactionReceipt.blockNumber\n      ? BigInt(transactionReceipt.blockNumber)\n      : null,\n    contractAddress: transactionReceipt.contractAddress\n      ? transactionReceipt.contractAddress\n      : null,\n    cumulativeGasUsed: transactionReceipt.cumulativeGasUsed\n      ? BigInt(transactionReceipt.cumulativeGasUsed)\n      : null,\n    effectiveGasPrice: transactionReceipt.effectiveGasPrice\n      ? BigInt(transactionReceipt.effectiveGasPrice)\n      : null,\n    gasUsed: transactionReceipt.gasUsed\n      ? BigInt(transactionReceipt.gasUsed)\n      : null,\n    logs: transactionReceipt.logs\n      ? transactionReceipt.logs.map((log) => formatLog(log))\n      : null,\n    to: transactionReceipt.to ? transactionReceipt.to : null,\n    transactionIndex: transactionReceipt.transactionIndex\n      ? hexToNumber(transactionReceipt.transactionIndex)\n      : null,\n    status: transactionReceipt.status\n      ? receiptStatuses[transactionReceipt.status]\n      : null,\n    type: transactionReceipt.type\n      ? transactionType[\n          transactionReceipt.type as keyof typeof transactionType\n        ] || transactionReceipt.type\n      : null,\n  } as TransactionReceipt\n\n  if (transactionReceipt.blobGasPrice)\n    receipt.blobGasPrice = BigInt(transactionReceipt.blobGasPrice)\n  if (transactionReceipt.blobGasUsed)\n    receipt.blobGasUsed = BigInt(transactionReceipt.blobGasUsed)\n\n  return receipt\n}\n\nexport type DefineTransactionReceiptErrorType =\n  | DefineFormatterErrorType\n  | ErrorType\n\nexport const defineTransactionReceipt = /*#__PURE__*/ defineFormatter(\n  'transactionReceipt',\n  formatTransactionReceipt,\n)\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { AuthorizationList } from '../../types/authorization.js'\nimport type {\n  Chain,\n  ExtractChainFormatterParameters,\n} from '../../types/chain.js'\nimport type { ByteArray } from '../../types/misc.js'\nimport type {\n  RpcAuthorizationList,\n  RpcTransactionRequest,\n} from '../../types/rpc.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport type { ExactPartial } from '../../types/utils.js'\nimport { bytesToHex, numberToHex } from '../encoding/toHex.js'\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\n\nexport type FormattedTransactionRequest<\n  chain extends Chain | undefined = Chain | undefined,\n> = ExtractChainFormatterParameters<\n  chain,\n  'transactionRequest',\n  TransactionRequest\n>\n\nexport const rpcTransactionType = {\n  legacy: '0x0',\n  eip2930: '0x1',\n  eip1559: '0x2',\n  eip4844: '0x3',\n  eip7702: '0x4',\n} as const\n\nexport type FormatTransactionRequestErrorType = ErrorType\n\nexport function formatTransactionRequest(\n  request: ExactPartial<TransactionRequest>,\n) {\n  const rpcRequest = {} as RpcTransactionRequest\n\n  if (typeof request.authorizationList !== 'undefined')\n    rpcRequest.authorizationList = formatAuthorizationList(\n      request.authorizationList,\n    )\n  if (typeof request.accessList !== 'undefined')\n    rpcRequest.accessList = request.accessList\n  if (typeof request.blobVersionedHashes !== 'undefined')\n    rpcRequest.blobVersionedHashes = request.blobVersionedHashes\n  if (typeof request.blobs !== 'undefined') {\n    if (typeof request.blobs[0] !== 'string')\n      rpcRequest.blobs = (request.blobs as ByteArray[]).map((x) =>\n        bytesToHex(x),\n      )\n    else rpcRequest.blobs = request.blobs\n  }\n  if (typeof request.data !== 'undefined') rpcRequest.data = request.data\n  if (typeof request.from !== 'undefined') rpcRequest.from = request.from\n  if (typeof request.gas !== 'undefined')\n    rpcRequest.gas = numberToHex(request.gas)\n  if (typeof request.gasPrice !== 'undefined')\n    rpcRequest.gasPrice = numberToHex(request.gasPrice)\n  if (typeof request.maxFeePerBlobGas !== 'undefined')\n    rpcRequest.maxFeePerBlobGas = numberToHex(request.maxFeePerBlobGas)\n  if (typeof request.maxFeePerGas !== 'undefined')\n    rpcRequest.maxFeePerGas = numberToHex(request.maxFeePerGas)\n  if (typeof request.maxPriorityFeePerGas !== 'undefined')\n    rpcRequest.maxPriorityFeePerGas = numberToHex(request.maxPriorityFeePerGas)\n  if (typeof request.nonce !== 'undefined')\n    rpcRequest.nonce = numberToHex(request.nonce)\n  if (typeof request.to !== 'undefined') rpcRequest.to = request.to\n  if (typeof request.type !== 'undefined')\n    rpcRequest.type = rpcTransactionType[request.type]\n  if (typeof request.value !== 'undefined')\n    rpcRequest.value = numberToHex(request.value)\n\n  return rpcRequest\n}\n\nexport type DefineTransactionRequestErrorType =\n  | DefineFormatterErrorType\n  | ErrorType\n\nexport const defineTransactionRequest = /*#__PURE__*/ defineFormatter(\n  'transactionRequest',\n  formatTransactionRequest,\n)\n\n//////////////////////////////////////////////////////////////////////////////\n\nfunction formatAuthorizationList(\n  authorizationList: AuthorizationList<number, boolean>,\n): RpcAuthorizationList {\n  return authorizationList.map(\n    (authorization) =>\n      ({\n        address: authorization.address,\n        r: authorization.r\n          ? numberToHex(BigInt(authorization.r))\n          : authorization.r,\n        s: authorization.s\n          ? numberToHex(BigInt(authorization.s))\n          : authorization.s,\n        chainId: numberToHex(authorization.chainId),\n        nonce: numberToHex(authorization.nonce),\n        ...(typeof authorization.yParity !== 'undefined'\n          ? { yParity: numberToHex(authorization.yParity) }\n          : {}),\n        ...(typeof authorization.v !== 'undefined' &&\n        typeof authorization.yParity === 'undefined'\n          ? { v: numberToHex(authorization.v) }\n          : {}),\n      }) as any,\n  ) as RpcAuthorizationList\n}\n","import type { Client } from '../clients/createClient.js'\nimport type { PublicActions } from '../clients/decorators/public.js'\nimport type { WalletActions } from '../clients/decorators/wallet.js'\nimport type { Transport } from '../clients/transports/createTransport.js'\nimport type { Account } from '../types/account.js'\nimport type { Chain } from '../types/chain.js'\nimport type { RpcSchema } from '../types/eip1193.js'\n\n/**\n * Retrieves and returns an action from the client (if exists), and falls\n * back to the tree-shakable action.\n *\n * Useful for extracting overridden actions from a client (ie. if a consumer\n * wants to override the `sendTransaction` implementation).\n */\nexport function getAction<\n  transport extends Transport,\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  rpcSchema extends RpcSchema | undefined,\n  extended extends { [key: string]: unknown },\n  client extends Client<transport, chain, account, rpcSchema, extended>,\n  parameters,\n  returnType,\n>(\n  client: client,\n  actionFn: (_: any, parameters: parameters) => returnType,\n  // Some minifiers drop `Function.prototype.name`, or replace it with short letters,\n  // meaning that `actionFn.name` will not always work. For that case, the consumer\n  // needs to pass the name explicitly.\n  name: keyof PublicActions | keyof WalletActions | (string & {}),\n): (parameters: parameters) => returnType {\n  const action_implicit = client[actionFn.name]\n  if (typeof action_implicit === 'function')\n    return action_implicit as (params: parameters) => returnType\n\n  const action_explicit = client[name]\n  if (typeof action_explicit === 'function')\n    return action_explicit as (params: parameters) => returnType\n\n  return (params) => actionFn(client, params)\n}\n","import { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type Keccak256ErrorType, keccak256 } from './keccak256.js'\n\nconst hash = (value: string) => keccak256(toBytes(value))\n\nexport type HashSignatureErrorType =\n  | Keccak256ErrorType\n  | ToBytesErrorType\n  | ErrorType\n\nexport function hashSignature(sig: string) {\n  return hash(sig)\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { type SizeErrorType, size } from '../data/size.js'\n\nexport type IsHashErrorType = IsHexErrorType | SizeErrorType | ErrorType\n\nexport function isHash(hash: string): hash is Hex {\n  return isHex(hash) && size(hash) === 32\n}\n","import { keccak_256 } from '@noble/hashes/sha3'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { type ToHexErrorType, toHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type Keccak256Hash<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type Keccak256ErrorType =\n  | IsHexErrorType\n  | ToBytesErrorType\n  | ToHexErrorType\n  | ErrorType\n\nexport function keccak256<to extends To = 'hex'>(\n  value: Hex | ByteArray,\n  to_?: to | undefined,\n): Keccak256Hash<to> {\n  const to = to_ || 'hex'\n  const bytes = keccak_256(\n    isHex(value, { strict: false }) ? toBytes(value) : value,\n  )\n  if (to === 'bytes') return bytes as Keccak256Hash<to>\n  return toHex(bytes) as Keccak256Hash<to>\n}\n","import { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\ntype NormalizeSignatureParameters = string\ntype NormalizeSignatureReturnType = string\nexport type NormalizeSignatureErrorType = ErrorType\n\nexport function normalizeSignature(\n  signature: NormalizeSignatureParameters,\n): NormalizeSignatureReturnType {\n  let active = true\n  let current = ''\n  let level = 0\n  let result = ''\n  let valid = false\n\n  for (let i = 0; i < signature.length; i++) {\n    const char = signature[i]\n\n    // If the character is a separator, we want to reactivate.\n    if (['(', ')', ','].includes(char)) active = true\n\n    // If the character is a \"level\" token, we want to increment/decrement.\n    if (char === '(') level++\n    if (char === ')') level--\n\n    // If we aren't active, we don't want to mutate the result.\n    if (!active) continue\n\n    // If level === 0, we are at the definition level.\n    if (level === 0) {\n      if (char === ' ' && ['event', 'function', ''].includes(result))\n        result = ''\n      else {\n        result += char\n\n        // If we are at the end of the definition, we must be finished.\n        if (char === ')') {\n          valid = true\n          break\n        }\n      }\n\n      continue\n    }\n\n    // Ignore spaces\n    if (char === ' ') {\n      // If the previous character is a separator, and the current section isn't empty, we want to deactivate.\n      if (signature[i - 1] !== ',' && current !== ',' && current !== ',(') {\n        current = ''\n        active = false\n      }\n      continue\n    }\n\n    result += char\n    current += char\n  }\n\n  if (!valid) throw new BaseError('Unable to normalize signature.')\n\n  return result\n}\n","import { ripemd160 as noble_ripemd160 } from '@noble/hashes/ripemd160'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { type ToHexErrorType, toHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type Ripemd160Hash<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type Ripemd160ErrorType =\n  | IsHexErrorType\n  | ToBytesErrorType\n  | ToHexErrorType\n  | ErrorType\n\nexport function ripemd160<to extends To = 'hex'>(\n  value: Hex | ByteArray,\n  to_?: to | undefined,\n): Ripemd160Hash<to> {\n  const to = to_ || 'hex'\n  const bytes = noble_ripemd160(\n    isHex(value, { strict: false }) ? toBytes(value) : value,\n  )\n  if (to === 'bytes') return bytes as Ripemd160Hash<to>\n  return toHex(bytes) as Ripemd160Hash<to>\n}\n","import { sha256 as noble_sha256 } from '@noble/hashes/sha256'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { type ToHexErrorType, toHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type Sha256Hash<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type Sha256ErrorType =\n  | IsHexErrorType\n  | ToBytesErrorType\n  | ToHexErrorType\n  | ErrorType\n\nexport function sha256<to extends To = 'hex'>(\n  value: Hex | ByteArray,\n  to_?: to | undefined,\n): Sha256Hash<to> {\n  const to = to_ || 'hex'\n  const bytes = noble_sha256(\n    isHex(value, { strict: false }) ? toBytes(value) : value,\n  )\n  if (to === 'bytes') return bytes as Sha256Hash<to>\n  return toHex(bytes) as Sha256Hash<to>\n}\n","// biome-ignore lint/performance/noBarrelFile: intentional\nexport {\n  type ToSignatureHashErrorType as ToEventHashErrorType,\n  toSignatureHash as toEventHash,\n} from './toSignatureHash.js'\n","import type { ErrorType } from '../../errors/utils.js'\nimport {\n  type ToSignatureHashErrorType,\n  toSignatureHash,\n} from './toSignatureHash.js'\n\nexport type ToEventSelectorErrorType = ToSignatureHashErrorType | ErrorType\n\n/**\n * Returns the event selector for a given event definition.\n *\n * @example\n * const selector = toEventSelector('Transfer(address indexed from, address indexed to, uint256 amount)')\n * // 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n */\nexport const toEventSelector = toSignatureHash\n","// biome-ignore lint/performance/noBarrelFile: intentional\nexport {\n  type ToSignatureErrorType as ToEventSignatureErrorType,\n  toSignature as toEventSignature,\n} from './toSignature.js'\n","// biome-ignore lint/performance/noBarrelFile: intentional\nexport {\n  type ToSignatureHashErrorType as ToFunctionHashErrorType,\n  toSignatureHash as toFunctionHash,\n} from './toSignatureHash.js'\n","import type { AbiFunction } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type SliceErrorType, slice } from '../data/slice.js'\nimport {\n  type ToSignatureHashErrorType,\n  toSignatureHash,\n} from './toSignatureHash.js'\n\nexport type ToFunctionSelectorErrorType =\n  | ToSignatureHashErrorType\n  | SliceErrorType\n  | ErrorType\n\n/**\n * Returns the function selector for a given function definition.\n *\n * @example\n * const selector = toFunctionSelector('function ownerOf(uint256 tokenId)')\n * // 0x6352211e\n */\nexport const toFunctionSelector = (fn: string | AbiFunction) =>\n  slice(toSignatureHash(fn), 0, 4)\n","// biome-ignore lint/performance/noBarrelFile: intentional\nexport {\n  type ToSignatureErrorType as ToFunctionSignatureErrorType,\n  toSignature as toFunctionSignature,\n} from './toSignature.js'\n","import { type AbiEvent, type AbiFunction, formatAbiItem } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type NormalizeSignatureErrorType,\n  normalizeSignature,\n} from './normalizeSignature.js'\n\nexport type ToSignatureErrorType = NormalizeSignatureErrorType | ErrorType\n\n/**\n * Returns the signature for a given function or event definition.\n *\n * @example\n * const signature = toSignature('function ownerOf(uint256 tokenId)')\n * // 'ownerOf(uint256)'\n *\n * @example\n * const signature_3 = toSignature({\n *   name: 'ownerOf',\n *   type: 'function',\n *   inputs: [{ name: 'tokenId', type: 'uint256' }],\n *   outputs: [],\n *   stateMutability: 'view',\n * })\n * // 'ownerOf(uint256)'\n */\nexport const toSignature = (def: string | AbiFunction | AbiEvent) => {\n  const def_ = (() => {\n    if (typeof def === 'string') return def\n    return formatAbiItem(def)\n  })()\n  return normalizeSignature(def_)\n}\n","import type { AbiEvent, AbiFunction } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type HashSignatureErrorType, hashSignature } from './hashSignature.js'\nimport { type ToSignatureErrorType, toSignature } from './toSignature.js'\n\nexport type ToSignatureHashErrorType =\n  | HashSignatureErrorType\n  | ToSignatureErrorType\n  | ErrorType\n\n/**\n * Returns the hash (of the function/event signature) for a given event or function definition.\n */\nexport function toSignatureHash(fn: string | AbiFunction | AbiEvent) {\n  return hashSignature(toSignature(fn))\n}\n","// biome-ignore lint/performance/noBarrelFile: entrypoint module\nexport {\n  type RequestErrorType,\n  buildRequest,\n} from './buildRequest.js'\n\nexport {\n  type OffchainLookupErrorType,\n  ccipRequest,\n  /** @deprecated Use `ccipRequest`. */\n  ccipRequest as ccipFetch,\n  offchainLookup,\n  offchainLookupAbiItem,\n  offchainLookupSignature,\n} from './ccip.js'\n\nexport {\n  type AssertCurrentChainErrorType,\n  type AssertCurrentChainParameters,\n  assertCurrentChain,\n} from './chain/assertCurrentChain.js'\nexport { defineChain } from './chain/defineChain.js'\nexport {\n  type ExtractChainErrorType,\n  type ExtractChainParameters,\n  type ExtractChainReturnType,\n  extractChain,\n} from './chain/extractChain.js'\nexport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from './chain/getChainContractAddress.js'\n\nexport { arrayRegex, bytesRegex, integerRegex } from './regex.js'\n\nexport {\n  type WebSocketAsyncErrorType,\n  type WebSocketAsyncOptions,\n  type WebSocketAsyncReturnType,\n  type WebSocketErrorType,\n  type WebSocketOptions,\n  type WebSocketReturnType,\n  getSocket,\n  rpc,\n} from './rpc/compat.js'\nexport {\n  type HttpRpcClient,\n  type HttpRpcClientOptions,\n  type HttpRequestErrorType,\n  type HttpRequestParameters,\n  type HttpRequestReturnType,\n  getHttpRpcClient,\n} from './rpc/http.js'\nexport {\n  type GetSocketRpcClientErrorType,\n  type GetSocketRpcClientParameters,\n  type GetSocketParameters,\n  type Socket,\n  type SocketRpcClient,\n  getSocketRpcClient,\n  socketClientCache,\n} from './rpc/socket.js'\nexport { getWebSocketRpcClient } from './rpc/webSocket.js'\nexport { type StringifyErrorType, stringify } from './stringify.js'\nexport {\n  type DomainSeparatorErrorType,\n  type SerializeTypedDataErrorType,\n  type ValidateTypedDataErrorType,\n  serializeTypedData,\n  validateTypedData,\n} from './typedData.js'\nexport {\n  type DecodeAbiParametersErrorType,\n  type DecodeAbiParametersReturnType,\n  decodeAbiParameters,\n} from './abi/decodeAbiParameters.js'\nexport {\n  type DecodeErrorResultErrorType,\n  type DecodeErrorResultParameters,\n  type DecodeErrorResultReturnType,\n  decodeErrorResult,\n} from './abi/decodeErrorResult.js'\nexport {\n  type DecodeEventLogErrorType,\n  type DecodeEventLogParameters,\n  type DecodeEventLogReturnType,\n  decodeEventLog,\n} from './abi/decodeEventLog.js'\nexport {\n  type DecodeFunctionDataErrorType,\n  type DecodeFunctionDataParameters,\n  type DecodeFunctionDataReturnType,\n  decodeFunctionData,\n} from './abi/decodeFunctionData.js'\nexport {\n  type DecodeFunctionResultErrorType,\n  type DecodeFunctionResultParameters,\n  type DecodeFunctionResultReturnType,\n  decodeFunctionResult,\n} from './abi/decodeFunctionResult.js'\nexport {\n  type EncodeAbiParametersErrorType,\n  type EncodeAbiParametersReturnType,\n  encodeAbiParameters,\n} from './abi/encodeAbiParameters.js'\nexport {\n  type EncodeDeployDataErrorType,\n  type EncodeDeployDataParameters,\n  encodeDeployData,\n} from './abi/encodeDeployData.js'\nexport {\n  type EncodeErrorResultErrorType,\n  type EncodeErrorResultParameters,\n  encodeErrorResult,\n} from './abi/encodeErrorResult.js'\nexport {\n  type EncodeArgErrorType,\n  type EncodeEventTopicsParameters,\n  type EncodeEventTopicsReturnType,\n  encodeEventTopics,\n} from './abi/encodeEventTopics.js'\nexport {\n  type EncodeFunctionDataErrorType,\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from './abi/encodeFunctionData.js'\nexport {\n  type EncodeFunctionResultErrorType,\n  type EncodeFunctionResultParameters,\n  encodeFunctionResult,\n} from './abi/encodeFunctionResult.js'\nexport {\n  type ParseEventLogsErrorType,\n  type ParseEventLogsParameters,\n  type ParseEventLogsReturnType,\n  parseEventLogs,\n} from './abi/parseEventLogs.js'\nexport {\n  type GetAbiItemErrorType,\n  type GetAbiItemParameters,\n  getAbiItem,\n} from './abi/getAbiItem.js'\nexport {\n  type ParseAbi,\n  type ParseAbiItem,\n  type ParseAbiParameter,\n  type ParseAbiParameters,\n  parseAbi,\n  parseAbiItem,\n  parseAbiParameter,\n  parseAbiParameters,\n} from 'abitype'\nexport { type EncodePackedErrorType, encodePacked } from './abi/encodePacked.js'\nexport {\n  type FormatAbiItemWithArgsErrorType,\n  formatAbiItemWithArgs,\n} from './abi/formatAbiItemWithArgs.js'\nexport {\n  type FormatAbiItemErrorType,\n  type FormatAbiParamErrorType,\n  type FormatAbiParamsErrorType,\n  formatAbiItem,\n  formatAbiParams,\n} from './abi/formatAbiItem.js'\nexport {\n  type HashAuthorizationErrorType,\n  type HashAuthorizationParameters,\n  type HashAuthorizationReturnType,\n  hashAuthorization,\n} from './authorization/hashAuthorization.js'\nexport {\n  type RecoverAuthorizationAddressErrorType,\n  type RecoverAuthorizationAddressParameters,\n  type RecoverAuthorizationAddressReturnType,\n  recoverAuthorizationAddress,\n} from './authorization/recoverAuthorizationAddress.js'\nexport {\n  type SerializeAuthorizationListErrorType,\n  type SerializeAuthorizationListReturnType,\n  serializeAuthorizationList,\n} from './authorization/serializeAuthorizationList.js'\nexport {\n  type VerifyAuthorizationErrorType,\n  type VerifyAuthorizationParameters,\n  type VerifyAuthorizationReturnType,\n  verifyAuthorization,\n} from './authorization/verifyAuthorization.js'\nexport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../accounts/utils/parseAccount.js'\nexport {\n  type PublicKeyToAddressErrorType,\n  publicKeyToAddress,\n} from '../accounts/utils/publicKeyToAddress.js'\nexport {\n  type GetContractAddressOptions,\n  type GetCreate2AddressErrorType,\n  type GetCreate2AddressOptions,\n  type GetCreateAddressErrorType,\n  type GetCreateAddressOptions,\n  getContractAddress,\n  getCreateAddress,\n  getCreate2Address,\n} from './address/getContractAddress.js'\nexport {\n  type ChecksumAddressErrorType,\n  getAddress,\n} from './address/getAddress.js'\nexport { type IsAddressErrorType, isAddress } from './address/isAddress.js'\nexport {\n  type IsAddressEqualErrorType,\n  isAddressEqual,\n} from './address/isAddressEqual.js'\nexport {\n  type ConcatBytesErrorType,\n  type ConcatErrorType,\n  type ConcatHexErrorType,\n  concat,\n  concatBytes,\n  concatHex,\n} from './data/concat.js'\nexport { type IsBytesErrorType, isBytes } from './data/isBytes.js'\nexport { type IsHexErrorType, isHex } from './data/isHex.js'\nexport {\n  type PadBytesErrorType,\n  type PadErrorType,\n  type PadHexErrorType,\n  pad,\n  padBytes,\n  padHex,\n} from './data/pad.js'\nexport { type SizeErrorType, size } from './data/size.js'\nexport {\n  type AssertEndOffsetErrorType,\n  type AssertStartOffsetErrorType,\n  type SliceBytesErrorType,\n  type SliceErrorType,\n  type SliceHexErrorType,\n  type SliceReturnType,\n  slice,\n  sliceBytes,\n  sliceHex,\n} from './data/slice.js'\nexport { type TrimErrorType, type TrimReturnType, trim } from './data/trim.js'\nexport {\n  type DefineBlockErrorType,\n  type FormattedBlock,\n  type FormatBlockErrorType,\n  defineBlock,\n  formatBlock,\n} from './formatters/block.js'\nexport {\n  type DefineTransactionErrorType,\n  type FormattedTransaction,\n  type FormatTransactionErrorType,\n  defineTransaction,\n  formatTransaction,\n  transactionType,\n} from './formatters/transaction.js'\nexport { type FormatLogErrorType, formatLog } from './formatters/log.js'\nexport {\n  type DefineTransactionReceiptErrorType,\n  type FormatTransactionReceiptErrorType,\n  type FormattedTransactionReceipt,\n  defineTransactionReceipt,\n} from './formatters/transactionReceipt.js'\nexport {\n  type DefineTransactionRequestErrorType,\n  type FormatTransactionRequestErrorType,\n  type FormattedTransactionRequest,\n  defineTransactionRequest,\n  formatTransactionRequest,\n} from './formatters/transactionRequest.js'\nexport { type ExtractErrorType, extract } from './formatters/extract.js'\nexport {\n  type BytesToRlpErrorType,\n  type HexToRlpErrorType,\n  type ToRlpErrorType,\n  type ToRlpReturnType,\n  toRlp,\n} from './encoding/toRlp.js'\nexport {\n  type BoolToBytesErrorType,\n  type BoolToBytesOpts,\n  type HexToBytesErrorType,\n  type HexToBytesOpts,\n  type NumberToBytesErrorType,\n  type StringToBytesErrorType,\n  type StringToBytesOpts,\n  type ToBytesErrorType,\n  type ToBytesParameters,\n  boolToBytes,\n  toBytes,\n  hexToBytes,\n  numberToBytes,\n  stringToBytes,\n} from './encoding/toBytes.js'\nexport {\n  type BoolToHexErrorType,\n  type BoolToHexOpts,\n  type BytesToHexErrorType,\n  type BytesToHexOpts,\n  type NumberToHexErrorType,\n  type NumberToHexOpts,\n  type StringToHexErrorType,\n  type StringToHexOpts,\n  type ToHexErrorType,\n  type ToHexParameters,\n  boolToHex,\n  bytesToHex,\n  toHex,\n  numberToHex,\n  stringToHex,\n} from './encoding/toHex.js'\nexport {\n  type BytesToBigIntErrorType,\n  type BytesToBigIntOpts,\n  type BytesToBoolErrorType,\n  type BytesToBoolOpts,\n  type BytesToNumberErrorType,\n  type BytesToNumberOpts,\n  type BytesToStringErrorType,\n  type BytesToStringOpts,\n  type FromBytesErrorType,\n  type FromBytesParameters,\n  type FromBytesReturnType,\n  bytesToBigInt,\n  bytesToBigInt as bytesToBigint,\n  bytesToBool,\n  bytesToNumber,\n  bytesToString,\n  fromBytes,\n} from './encoding/fromBytes.js'\nexport {\n  type AssertSizeErrorType,\n  type FromHexErrorType,\n  type FromHexParameters,\n  type FromHexReturnType,\n  type HexToBigIntErrorType,\n  type HexToBigIntOpts,\n  type HexToBoolErrorType,\n  type HexToBoolOpts,\n  type HexToNumberErrorType,\n  type HexToNumberOpts,\n  type HexToStringErrorType,\n  type HexToStringOpts,\n  fromHex,\n  hexToBool,\n  hexToBigInt,\n  hexToNumber,\n  hexToString,\n} from './encoding/fromHex.js'\nexport {\n  type FromRlpErrorType,\n  fromRlp,\n} from './encoding/fromRlp.js'\nexport {\n  type GetNodeErrorParameters,\n  type GetNodeErrorReturnType,\n  containsNodeError,\n  getNodeError,\n} from './errors/getNodeError.js'\nexport {\n  type GetCallErrorReturnType,\n  getCallError,\n} from './errors/getCallError.js'\nexport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from './errors/getContractError.js'\nexport {\n  type GetEstimateGasErrorReturnType,\n  getEstimateGasError,\n} from './errors/getEstimateGasError.js'\nexport {\n  type GetTransactionErrorParameters,\n  type GetTransactionErrorReturnType,\n  getTransactionError,\n} from './errors/getTransactionError.js'\nexport { getAction } from './getAction.js'\nexport {\n  type DefineFormatterErrorType,\n  defineFormatter,\n} from './formatters/formatter.js'\nexport {\n  type ToEventSelectorErrorType,\n  toEventSelector,\n  /** @deprecated use `ToEventSelectorErrorType`. */\n  type ToEventSelectorErrorType as GetEventSelectorErrorType,\n  /** @deprecated use `toEventSelector`. */\n  toEventSelector as getEventSelector,\n} from './hash/toEventSelector.js'\nexport {\n  type ToFunctionSelectorErrorType,\n  toFunctionSelector,\n  /** @deprecated use `ToFunctionSelectorErrorType`. */\n  type ToFunctionSelectorErrorType as GetFunctionSelectorErrorType,\n  /** @deprecated use `toFunctionSelector`. */\n  toFunctionSelector as getFunctionSelector,\n} from './hash/toFunctionSelector.js'\nexport {\n  type ToEventSignatureErrorType,\n  toEventSignature,\n  /** @deprecated use `ToEventSignatureErrorType`. */\n  type ToEventSignatureErrorType as GetEventSignatureErrorType,\n  /** @deprecated use `toEventSignature`. */\n  toEventSignature as getEventSignature,\n} from './hash/toEventSignature.js'\nexport {\n  type ToFunctionSignatureErrorType,\n  toFunctionSignature,\n  /** @deprecated use `ToFunctionSignatureErrorType`. */\n  type ToFunctionSignatureErrorType as GetFunctionSignatureErrorType,\n  /** @deprecated use `toFunctionSignature`. */\n  toFunctionSignature as getFunctionSignature,\n} from './hash/toFunctionSignature.js'\nexport {\n  type ToEventHashErrorType,\n  toEventHash,\n} from './hash/toEventHash.js'\nexport {\n  type ToFunctionHashErrorType,\n  toFunctionHash,\n} from './hash/toFunctionHash.js'\nexport { type IsHashErrorType, isHash } from './hash/isHash.js'\nexport { type Keccak256ErrorType, keccak256 } from './hash/keccak256.js'\nexport { type Sha256ErrorType, sha256 } from './hash/sha256.js'\nexport { type Ripemd160ErrorType, ripemd160 } from './hash/ripemd160.js'\nexport {\n  type HashDomainErrorType,\n  type HashStructErrorType,\n  type HashTypedDataParameters,\n  type HashTypedDataReturnType,\n  hashStruct,\n  hashTypedData,\n} from './signature/hashTypedData.js'\nexport {\n  type RecoverAddressErrorType,\n  type RecoverAddressParameters,\n  type RecoverAddressReturnType,\n  recoverAddress,\n} from './signature/recoverAddress.js'\nexport {\n  type RecoverMessageAddressErrorType,\n  type RecoverMessageAddressParameters,\n  type RecoverMessageAddressReturnType,\n  recoverMessageAddress,\n} from './signature/recoverMessageAddress.js'\nexport {\n  type RecoverPublicKeyErrorType,\n  type RecoverPublicKeyParameters,\n  type RecoverPublicKeyReturnType,\n  recoverPublicKey,\n} from './signature/recoverPublicKey.js'\nexport {\n  type RecoverTypedDataAddressErrorType,\n  type RecoverTypedDataAddressParameters,\n  type RecoverTypedDataAddressReturnType,\n  recoverTypedDataAddress,\n} from './signature/recoverTypedDataAddress.js'\nexport {\n  type VerifyHashErrorType,\n  type VerifyHashParameters,\n  type VerifyHashReturnType,\n  verifyHash,\n} from './signature/verifyHash.js'\nexport {\n  type VerifyMessageErrorType,\n  type VerifyMessageParameters,\n  type VerifyMessageReturnType,\n  verifyMessage,\n} from './signature/verifyMessage.js'\nexport {\n  type VerifyTypedDataErrorType,\n  type VerifyTypedDataParameters,\n  type VerifyTypedDataReturnType,\n  verifyTypedData,\n} from './signature/verifyTypedData.js'\nexport {\n  type HashMessageReturnType,\n  type HashMessageErrorType,\n  hashMessage,\n} from './signature/hashMessage.js'\nexport {\n  type ParseErc6492SignatureErrorType,\n  type ParseErc6492SignatureParameters,\n  type ParseErc6492SignatureReturnType,\n  parseErc6492Signature,\n} from './signature/parseErc6492Signature.js'\nexport {\n  type IsErc6492SignatureErrorType,\n  type IsErc6492SignatureParameters,\n  type IsErc6492SignatureReturnType,\n  isErc6492Signature,\n} from './signature/isErc6492Signature.js'\nexport {\n  type SerializeErc6492SignatureErrorType,\n  type SerializeErc6492SignatureParameters,\n  type SerializeErc6492SignatureReturnType,\n  serializeErc6492Signature,\n} from './signature/serializeErc6492Signature.js'\nexport {\n  type GetSerializedTransactionTypeErrorType,\n  type GetSerializedTransactionType,\n  getSerializedTransactionType,\n} from './transaction/getSerializedTransactionType.js'\nexport {\n  type GetTransactionTypeErrorType,\n  type GetTransactionType,\n  getTransactionType,\n} from './transaction/getTransactionType.js'\nexport {\n  type AssertRequestErrorType,\n  assertRequest,\n} from './transaction/assertRequest.js'\nexport {\n  type AssertTransactionEIP1559ErrorType,\n  type AssertTransactionEIP2930ErrorType,\n  type AssertTransactionLegacyErrorType,\n  assertTransactionEIP1559,\n  assertTransactionEIP2930,\n  assertTransactionLegacy,\n} from './transaction/assertTransaction.js'\nexport {\n  type ParseTransactionErrorType,\n  parseTransaction,\n} from './transaction/parseTransaction.js'\nexport {\n  serializeTransaction,\n  type SerializeTransactionErrorType,\n  type SerializeTransactionFn,\n} from './transaction/serializeTransaction.js'\nexport {\n  type SerializeAccessListErrorType,\n  serializeAccessList,\n} from './transaction/serializeAccessList.js'\nexport { type FormatEtherErrorType, formatEther } from './unit/formatEther.js'\nexport { type FormatGweiErrorType, formatGwei } from './unit/formatGwei.js'\nexport { type FormatUnitsErrorType, formatUnits } from './unit/formatUnits.js'\nexport { type ParseUnitsErrorType, parseUnits } from './unit/parseUnits.js'\nexport { type ParseEtherErrorType, parseEther } from './unit/parseEther.js'\nexport { type ParseGweiErrorType, parseGwei } from './unit/parseGwei.js'\nexport {\n  type CreateNonceManagerParameters,\n  type NonceManager,\n  type NonceManagerSource,\n  createNonceManager,\n  nonceManager,\n} from './nonceManager.js'\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Kzg } from '../../types/kzg.js'\n\nexport type DefineKzgParameters = Kzg\nexport type DefineKzgReturnType = Kzg\nexport type DefineKzgErrorType = ErrorType\n\n/**\n * Defines a KZG interface.\n *\n * @example\n * ```ts\n * import * as cKzg from 'c-kzg'\n * import { defineKzg } from 'viem'\n * import { mainnetTrustedSetupPath } from 'viem/node'\n *\n * cKzg.loadTrustedSetup(mainnetTrustedSetupPath)\n *\n * const kzg = defineKzg(cKzg)\n * ```\n */\nexport function defineKzg({\n  blobToKzgCommitment,\n  computeBlobKzgProof,\n}: DefineKzgParameters): DefineKzgReturnType {\n  return {\n    blobToKzgCommitment,\n    computeBlobKzgProof,\n  }\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport {\n  type DefineKzgErrorType,\n  type DefineKzgParameters,\n  type DefineKzgReturnType,\n  defineKzg,\n} from './defineKzg.js'\n\nexport type SetupKzgParameters = DefineKzgParameters & {\n  loadTrustedSetup(path: string): void\n}\nexport type SetupKzgReturnType = DefineKzgReturnType\nexport type SetupKzgErrorType = DefineKzgErrorType | ErrorType\n\n/**\n * Sets up and returns a KZG interface.\n *\n * @example\n * ```ts\n * import * as cKzg from 'c-kzg'\n * import { setupKzg } from 'viem'\n * import { mainnetTrustedSetupPath } from 'viem/node'\n *\n * const kzg = setupKzg(cKzg, mainnetTrustedSetupPath)\n * ```\n */\nexport function setupKzg(\n  parameters: SetupKzgParameters,\n  path: string,\n): SetupKzgReturnType {\n  try {\n    parameters.loadTrustedSetup(path)\n  } catch (e) {\n    const error = e as Error\n    if (!error.message.includes('trusted setup is already loaded')) throw error\n  }\n  return defineKzg(parameters)\n}\n","/**\n * Map with a LRU (Least recently used) policy.\n *\n * @link https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\n */\nexport class LruMap<value = unknown> extends Map<string, value> {\n  maxSize: number\n\n  constructor(size: number) {\n    super()\n    this.maxSize = size\n  }\n\n  override get(key: string) {\n    const value = super.get(key)\n\n    if (super.has(key) && value !== undefined) {\n      this.delete(key)\n      super.set(key, value)\n    }\n\n    return value\n  }\n\n  override set(key: string, value: value) {\n    super.set(key, value)\n    if (this.maxSize && this.size > this.maxSize) {\n      const firstKey = this.keys().next().value\n      if (firstKey) this.delete(firstKey)\n    }\n    return this\n  }\n}\n","import type { Address } from 'abitype'\n\nimport { getTransactionCount } from '../actions/public/getTransactionCount.js'\nimport type { Client } from '../clients/createClient.js'\nimport type { MaybePromise } from '../types/utils.js'\nimport { LruMap } from './lru.js'\n\nexport type CreateNonceManagerParameters = {\n  source: NonceManagerSource\n}\n\ntype FunctionParameters = {\n  address: Address\n  chainId: number\n}\n\nexport type NonceManager = {\n  /** Get and increment a nonce. */\n  consume: (\n    parameters: FunctionParameters & { client: Client },\n  ) => Promise<number>\n  /** Increment a nonce. */\n  increment: (chainId: FunctionParameters) => void\n  /** Get a nonce. */\n  get: (chainId: FunctionParameters & { client: Client }) => Promise<number>\n  /** Reset a nonce. */\n  reset: (chainId: FunctionParameters) => void\n}\n\n/**\n * Creates a nonce manager for auto-incrementing transaction nonces.\n *\n * - Docs: https://viem.sh/docs/accounts/createNonceManager\n *\n * @example\n * ```ts\n * const nonceManager = createNonceManager({\n *   source: jsonRpc(),\n * })\n * ```\n */\nexport function createNonceManager(\n  parameters: CreateNonceManagerParameters,\n): NonceManager {\n  const { source } = parameters\n\n  const deltaMap = new Map()\n  const nonceMap = new LruMap<number>(8192)\n  const promiseMap = new Map<string, Promise<number>>()\n\n  const getKey = ({ address, chainId }: FunctionParameters) =>\n    `${address}.${chainId}`\n\n  return {\n    async consume({ address, chainId, client }) {\n      const key = getKey({ address, chainId })\n      const promise = this.get({ address, chainId, client })\n\n      this.increment({ address, chainId })\n      const nonce = await promise\n\n      await source.set({ address, chainId }, nonce)\n      nonceMap.set(key, nonce)\n\n      return nonce\n    },\n    async increment({ address, chainId }) {\n      const key = getKey({ address, chainId })\n      const delta = deltaMap.get(key) ?? 0\n      deltaMap.set(key, delta + 1)\n    },\n    async get({ address, chainId, client }) {\n      const key = getKey({ address, chainId })\n\n      let promise = promiseMap.get(key)\n      if (!promise) {\n        promise = (async () => {\n          try {\n            const nonce = await source.get({ address, chainId, client })\n            const previousNonce = nonceMap.get(key) ?? 0\n            if (previousNonce > 0 && nonce <= previousNonce)\n              return previousNonce + 1\n            nonceMap.delete(key)\n            return nonce\n          } finally {\n            this.reset({ address, chainId })\n          }\n        })()\n        promiseMap.set(key, promise)\n      }\n\n      const delta = deltaMap.get(key) ?? 0\n      return delta + (await promise)\n    },\n    reset({ address, chainId }) {\n      const key = getKey({ address, chainId })\n      deltaMap.delete(key)\n      promiseMap.delete(key)\n    },\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////\n// Sources\n\nexport type NonceManagerSource = {\n  /** Get a nonce. */\n  get(parameters: FunctionParameters & { client: Client }): MaybePromise<number>\n  /** Set a nonce. */\n  set(parameters: FunctionParameters, nonce: number): MaybePromise<void>\n}\n\n/** JSON-RPC source for a nonce manager. */\nexport function jsonRpc(): NonceManagerSource {\n  return {\n    async get(parameters) {\n      const { address, client } = parameters\n      return getTransactionCount(client, {\n        address,\n        blockTag: 'pending',\n      })\n    },\n    set() {},\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////\n// Default\n\n/** Default Nonce Manager with a JSON-RPC source. */\nexport const nonceManager = /*#__PURE__*/ createNonceManager({\n  source: jsonRpc(),\n})\n","import type { ErrorType } from '../errors/utils.js'\nimport type { MaybePromise } from '../types/utils.js'\n\ntype Callback = ((...args: any[]) => any) | undefined\ntype Callbacks = Record<string, Callback>\n\nexport type ObserveErrorType = ErrorType\n\n/** @internal */\nexport const listenersCache = /*#__PURE__*/ new Map<\n  string,\n  { id: number; fns: Callbacks }[]\n>()\n/** @internal */\nexport const cleanupCache = /*#__PURE__*/ new Map<string, () => void>()\n\ntype EmitFunction<callbacks extends Callbacks> = (\n  emit: callbacks,\n) => MaybePromise<void | (() => void)>\n\nlet callbackCount = 0\n\n/**\n * @description Sets up an observer for a given function. If another function\n * is set up under the same observer id, the function will only be called once\n * for both instances of the observer.\n */\nexport function observe<callbacks extends Callbacks>(\n  observerId: string,\n  callbacks: callbacks,\n  fn: EmitFunction<callbacks>,\n) {\n  const callbackId = ++callbackCount\n\n  const getListeners = () => listenersCache.get(observerId) || []\n\n  const unsubscribe = () => {\n    const listeners = getListeners()\n    listenersCache.set(\n      observerId,\n      listeners.filter((cb: any) => cb.id !== callbackId),\n    )\n  }\n\n  const unwatch = () => {\n    const listeners = getListeners()\n    if (!listeners.some((cb: any) => cb.id === callbackId)) return\n    const cleanup = cleanupCache.get(observerId)\n    if (listeners.length === 1 && cleanup) cleanup()\n    unsubscribe()\n  }\n\n  const listeners = getListeners()\n  listenersCache.set(observerId, [\n    ...listeners,\n    { id: callbackId, fns: callbacks },\n  ])\n\n  if (listeners && listeners.length > 0) return unwatch\n\n  const emit: callbacks = {} as callbacks\n  for (const key in callbacks) {\n    emit[key] = ((\n      ...args: Parameters<NonNullable<callbacks[keyof callbacks]>>\n    ) => {\n      const listeners = getListeners()\n      if (listeners.length === 0) return\n      for (const listener of listeners) listener.fns[key]?.(...args)\n    }) as callbacks[Extract<keyof callbacks, string>]\n  }\n\n  const cleanup = fn(emit)\n  if (typeof cleanup === 'function') cleanupCache.set(observerId, cleanup)\n\n  return unwatch\n}\n","import type { ErrorType } from '../errors/utils.js'\nimport { wait } from './wait.js'\n\ntype PollOptions<data> = {\n  // Whether or not to emit when the polling starts.\n  emitOnBegin?: boolean | undefined\n  // The initial wait time (in ms) before polling.\n  initialWaitTime?: ((data: data | void) => Promise<number>) | undefined\n  // The interval (in ms).\n  interval: number\n}\n\nexport type PollErrorType = ErrorType\n\n/**\n * @description Polls a function at a specified interval.\n */\nexport function poll<data>(\n  fn: ({ unpoll }: { unpoll: () => void }) => Promise<data | void>,\n  { emitOnBegin, initialWaitTime, interval }: PollOptions<data>,\n) {\n  let active = true\n\n  const unwatch = () => (active = false)\n\n  const watch = async () => {\n    let data: data | void = undefined\n    if (emitOnBegin) data = await fn({ unpoll: unwatch })\n\n    const initialWait = (await initialWaitTime?.(data)) ?? interval\n    await wait(initialWait)\n\n    const poll = async () => {\n      if (!active) return\n      await fn({ unpoll: unwatch })\n      await wait(interval)\n      poll()\n    }\n\n    poll()\n  }\n  watch()\n\n  return unwatch\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport { type PromiseWithResolvers, withResolvers } from './withResolvers.js'\n\ntype Resolved<returnType extends readonly unknown[] = any> = [\n  result: returnType[number],\n  results: returnType,\n]\n\ntype SchedulerItem = {\n  args: unknown\n  resolve: PromiseWithResolvers<unknown>['resolve']\n  reject: PromiseWithResolvers<unknown>['reject']\n}\n\ntype BatchResultsCompareFn<result = unknown> = (a: result, b: result) => number\n\ntype CreateBatchSchedulerArguments<\n  parameters = unknown,\n  returnType extends readonly unknown[] = readonly unknown[],\n> = {\n  fn: (args: parameters[]) => Promise<returnType>\n  id: number | string\n  shouldSplitBatch?: ((args: parameters[]) => boolean) | undefined\n  wait?: number | undefined\n  sort?: BatchResultsCompareFn<returnType[number]> | undefined\n}\n\ntype CreateBatchSchedulerReturnType<\n  parameters = unknown,\n  returnType extends readonly unknown[] = readonly unknown[],\n> = {\n  flush: () => void\n  schedule: parameters extends undefined\n    ? (args?: parameters | undefined) => Promise<Resolved<returnType>>\n    : (args: parameters) => Promise<Resolved<returnType>>\n}\n\nexport type CreateBatchSchedulerErrorType = ErrorType\n\nconst schedulerCache = /*#__PURE__*/ new Map<number | string, SchedulerItem[]>()\n\n/** @internal */\nexport function createBatchScheduler<\n  parameters,\n  returnType extends readonly unknown[],\n>({\n  fn,\n  id,\n  shouldSplitBatch,\n  wait = 0,\n  sort,\n}: CreateBatchSchedulerArguments<\n  parameters,\n  returnType\n>): CreateBatchSchedulerReturnType<parameters, returnType> {\n  const exec = async () => {\n    const scheduler = getScheduler()\n    flush()\n\n    const args = scheduler.map(({ args }) => args)\n\n    if (args.length === 0) return\n\n    fn(args as parameters[])\n      .then((data) => {\n        if (sort && Array.isArray(data)) data.sort(sort)\n        for (let i = 0; i < scheduler.length; i++) {\n          const { resolve } = scheduler[i]\n          resolve?.([data[i], data])\n        }\n      })\n      .catch((err) => {\n        for (let i = 0; i < scheduler.length; i++) {\n          const { reject } = scheduler[i]\n          reject?.(err)\n        }\n      })\n  }\n\n  const flush = () => schedulerCache.delete(id)\n\n  const getBatchedArgs = () =>\n    getScheduler().map(({ args }) => args) as parameters[]\n\n  const getScheduler = () => schedulerCache.get(id) || []\n\n  const setScheduler = (item: SchedulerItem) =>\n    schedulerCache.set(id, [...getScheduler(), item])\n\n  return {\n    flush,\n    async schedule(args: parameters) {\n      const { promise, resolve, reject } = withResolvers()\n\n      const split = shouldSplitBatch?.([...getBatchedArgs(), args])\n\n      if (split) exec()\n\n      const hasActiveScheduler = getScheduler().length > 0\n      if (hasActiveScheduler) {\n        setScheduler({ args, resolve, reject })\n        return promise\n      }\n\n      setScheduler({ args, resolve, reject })\n      setTimeout(exec, wait)\n      return promise\n    },\n  } as unknown as CreateBatchSchedulerReturnType<parameters, returnType>\n}\n","import type { ErrorType } from '../../errors/utils.js'\n\n/** @internal */\nexport const promiseCache = /*#__PURE__*/ new Map()\n/** @internal */\nexport const responseCache = /*#__PURE__*/ new Map()\n\nexport type GetCacheErrorType = ErrorType\n\nexport function getCache<data>(cacheKey: string) {\n  const buildCache = <data>(cacheKey: string, cache: Map<string, data>) => ({\n    clear: () => cache.delete(cacheKey),\n    get: () => cache.get(cacheKey),\n    set: (data: data) => cache.set(cacheKey, data),\n  })\n\n  const promise = buildCache<Promise<data>>(cacheKey, promiseCache)\n  const response = buildCache<{ created: Date; data: data }>(\n    cacheKey,\n    responseCache,\n  )\n\n  return {\n    clear: () => {\n      promise.clear()\n      response.clear()\n    },\n    promise,\n    response,\n  }\n}\n\ntype WithCacheParameters = {\n  /** The key to cache the data against. */\n  cacheKey: string\n  /** The time that cached data will remain in memory. Default: Infinity (no expiry) */\n  cacheTime?: number | undefined\n}\n\n/**\n * @description Returns the result of a given promise, and caches the result for\n * subsequent invocations against a provided cache key.\n */\nexport async function withCache<data>(\n  fn: () => Promise<data>,\n  { cacheKey, cacheTime = Number.POSITIVE_INFINITY }: WithCacheParameters,\n) {\n  const cache = getCache<data>(cacheKey)\n\n  // If a response exists in the cache, and it's not expired, return it\n  // and do not invoke the promise.\n  // If the max age is 0, the cache is disabled.\n  const response = cache.response.get()\n  if (response && cacheTime > 0) {\n    const age = new Date().getTime() - response.created.getTime()\n    if (age < cacheTime) return response.data\n  }\n\n  let promise = cache.promise.get()\n  if (!promise) {\n    promise = fn()\n\n    // Store the promise in the cache so that subsequent invocations\n    // will wait for the same promise to resolve (deduping).\n    cache.promise.set(promise)\n  }\n\n  try {\n    const data = await promise\n\n    // Store the response in the cache so that subsequent invocations\n    // will return the same response.\n    cache.response.set({ created: new Date(), data })\n\n    return data\n  } finally {\n    // Clear the promise cache so that subsequent invocations will\n    // invoke the promise again.\n    cache.promise.clear()\n  }\n}\n","import { LruMap } from '../lru.js'\n\n/** @internal */\nexport const promiseCache = /*#__PURE__*/ new LruMap<Promise<any>>(8192)\n\ntype WithDedupeOptions = {\n  enabled?: boolean | undefined\n  id?: string | undefined\n}\n\n/** Deduplicates in-flight promises. */\nexport function withDedupe<data>(\n  fn: () => Promise<data>,\n  { enabled = true, id }: WithDedupeOptions,\n): Promise<data> {\n  if (!enabled || !id) return fn()\n  if (promiseCache.get(id)) return promiseCache.get(id)!\n  const promise = fn().finally(() => promiseCache.delete(id))\n  promiseCache.set(id, promise)\n  return promise\n}\n","/** @internal */\nexport type PromiseWithResolvers<type> = {\n  promise: Promise<type>\n  resolve: (value: type | PromiseLike<type>) => void\n  reject: (reason?: unknown) => void\n}\n\n/** @internal */\nexport function withResolvers<type>(): PromiseWithResolvers<type> {\n  let resolve: PromiseWithResolvers<type>['resolve'] = () => undefined\n  let reject: PromiseWithResolvers<type>['reject'] = () => undefined\n\n  const promise = new Promise<type>((resolve_, reject_) => {\n    resolve = resolve_\n    reject = reject_\n  })\n\n  return { promise, resolve, reject }\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport { wait } from '../wait.js'\n\nexport type WithRetryParameters = {\n  // The delay (in ms) between retries.\n  delay?:\n    | ((config: { count: number; error: Error }) => number)\n    | number\n    | undefined\n  // The max number of times to retry.\n  retryCount?: number | undefined\n  // Whether or not to retry when an error is thrown.\n  shouldRetry?:\n    | (({\n        count,\n        error,\n      }: {\n        count: number\n        error: Error\n      }) => Promise<boolean> | boolean)\n    | undefined\n}\n\nexport type WithRetryErrorType = ErrorType\n\nexport function withRetry<data>(\n  fn: () => Promise<data>,\n  {\n    delay: delay_ = 100,\n    retryCount = 2,\n    shouldRetry = () => true,\n  }: WithRetryParameters = {},\n) {\n  return new Promise<data>((resolve, reject) => {\n    const attemptRetry = async ({ count = 0 } = {}) => {\n      const retry = async ({ error }: { error: Error }) => {\n        const delay =\n          typeof delay_ === 'function' ? delay_({ count, error }) : delay_\n        if (delay) await wait(delay)\n        attemptRetry({ count: count + 1 })\n      }\n\n      try {\n        const data = await fn()\n        resolve(data)\n      } catch (err) {\n        if (\n          count < retryCount &&\n          (await shouldRetry({ count, error: err as Error }))\n        )\n          return retry({ error: err as Error })\n        reject(err)\n      }\n    }\n    attemptRetry()\n  })\n}\n","import type { ErrorType } from '../../errors/utils.js'\n\nexport type WithTimeoutErrorType = ErrorType\n\nexport function withTimeout<data>(\n  fn: ({\n    signal,\n  }: { signal: AbortController['signal'] | null }) => Promise<data>,\n  {\n    errorInstance = new Error('timed out'),\n    timeout,\n    signal,\n  }: {\n    // The error instance to throw when the timeout is reached.\n    errorInstance?: Error | undefined\n    // The timeout (in ms).\n    timeout: number\n    // Whether or not the timeout should use an abort signal.\n    signal?: boolean | undefined\n  },\n): Promise<data> {\n  return new Promise((resolve, reject) => {\n    ;(async () => {\n      let timeoutId!: NodeJS.Timeout\n      try {\n        const controller = new AbortController()\n        if (timeout > 0) {\n          timeoutId = setTimeout(() => {\n            if (signal) {\n              controller.abort()\n            } else {\n              reject(errorInstance)\n            }\n          }, timeout) as NodeJS.Timeout // need to cast because bun globals.d.ts overrides @types/node\n        }\n        resolve(await fn({ signal: controller?.signal || null }))\n      } catch (err) {\n        if ((err as Error)?.name === 'AbortError') reject(errorInstance)\n        reject(err)\n      } finally {\n        clearTimeout(timeoutId)\n      }\n    })()\n  })\n}\n","export const arrayRegex = /^(.*)\\[([0-9]*)\\]$/\n\n// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n// https://regexr.com/6va55\nexport const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/\n\n// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n// https://regexr.com/6v8hp\nexport const integerRegex =\n  /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/\n","// TODO(v3): This file is here for backwards compatibility, and to prevent breaking changes.\n// These APIs will be removed in v3.\n\n/* c8 ignore start */\nimport type {\n  TimeoutErrorType,\n  WebSocketRequestError,\n} from '../../errors/request.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { RpcResponse } from '../../types/rpc.js'\nimport type { WithTimeoutErrorType } from '../promise/withTimeout.js'\nimport { type HttpRequestParameters, getHttpRpcClient } from './http.js'\nimport type { SocketRpcClient } from './socket.js'\nimport { getWebSocketRpcClient } from './webSocket.js'\n\nexport type WebSocketOptions = Parameters<\n  SocketRpcClient<WebSocket>['request']\n>[0]\nexport type WebSocketReturnType = SocketRpcClient<WebSocket>\nexport type WebSocketErrorType = WebSocketRequestError | ErrorType\n\nfunction webSocket(\n  socketClient: SocketRpcClient<WebSocket>,\n  { body, onError, onResponse }: WebSocketOptions,\n): WebSocketReturnType {\n  socketClient.request({\n    body,\n    onError,\n    onResponse,\n  })\n  return socketClient\n}\n\nexport type WebSocketAsyncOptions = Parameters<\n  SocketRpcClient<WebSocket>['requestAsync']\n>[0]\nexport type WebSocketAsyncReturnType = RpcResponse\nexport type WebSocketAsyncErrorType =\n  | WebSocketErrorType\n  | TimeoutErrorType\n  | WithTimeoutErrorType\n  | ErrorType\n\nasync function webSocketAsync(\n  socketClient: SocketRpcClient<WebSocket>,\n  { body, timeout = 10_000 }: WebSocketAsyncOptions,\n): Promise<WebSocketAsyncReturnType> {\n  return socketClient.requestAsync({\n    body,\n    timeout,\n  })\n}\n\n/**\n * @deprecated use `getSocketClient` instead.\n *\n * ```diff\n * -import { getSocket } from 'viem/utils'\n * +import { getSocketClient } from 'viem/utils'\n *\n * -const socket = await getSocket(url)\n * +const socketClient = await getSocketClient(url)\n * +const socket = socketClient.socket\n * ```\n */\nexport async function getSocket(url: string) {\n  const client = await getWebSocketRpcClient(url)\n  return Object.assign(client.socket, {\n    requests: client.requests,\n    subscriptions: client.subscriptions,\n  })\n}\n\nexport const rpc = {\n  /**\n   * @deprecated use `getHttpRpcClient` instead.\n   *\n   * ```diff\n   * -import { rpc } from 'viem/utils'\n   * +import { getHttpRpcClient } from 'viem/utils'\n   *\n   * -rpc.http(url, params)\n   * +const httpClient = getHttpRpcClient(url)\n   * +httpClient.request(params)\n   * ```\n   */\n  http(url: string, params: HttpRequestParameters) {\n    return getHttpRpcClient(url).request(params)\n  },\n  /**\n   * @deprecated use `getWebSocketRpcClient` instead.\n   *\n   * ```diff\n   * -import { rpc } from 'viem/utils'\n   * +import { getWebSocketRpcClient } from 'viem/utils'\n   *\n   * -rpc.webSocket(url, params)\n   * +const webSocketClient = getWebSocketRpcClient(url)\n   * +webSocketClient.request(params)\n   * ```\n   */\n  webSocket,\n  /**\n   * @deprecated use `getWebSocketRpcClient` instead.\n   *\n   * ```diff\n   * -import { rpc } from 'viem/utils'\n   * +import { getWebSocketRpcClient } from 'viem/utils'\n   *\n   * -const response = await rpc.webSocketAsync(url, params)\n   * +const webSocketClient = getWebSocketRpcClient(url)\n   * +const response = await webSocketClient.requestAsync(params)\n   * ```\n   */\n  webSocketAsync,\n}\n/* c8 ignore end */\n","import {\n  HttpRequestError,\n  type HttpRequestErrorType as HttpRequestErrorType_,\n  TimeoutError,\n  type TimeoutErrorType,\n} from '../../errors/request.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { RpcRequest, RpcResponse } from '../../types/rpc.js'\nimport type { MaybePromise } from '../../types/utils.js'\nimport {\n  type WithTimeoutErrorType,\n  withTimeout,\n} from '../promise/withTimeout.js'\nimport { stringify } from '../stringify.js'\nimport { idCache } from './id.js'\n\nexport type HttpRpcClientOptions = {\n  /** Request configuration to pass to `fetch`. */\n  fetchOptions?: Omit<RequestInit, 'body'> | undefined\n  /** A callback to handle the request. */\n  onRequest?:\n    | ((\n        request: Request,\n        init: RequestInit,\n      ) => MaybePromise<\n        void | undefined | (RequestInit & { url?: string | undefined })\n      >)\n    | undefined\n  /** A callback to handle the response. */\n  onResponse?: ((response: Response) => Promise<void> | void) | undefined\n  /** The timeout (in ms) for the request. */\n  timeout?: number | undefined\n}\n\nexport type HttpRequestParameters<\n  body extends RpcRequest | RpcRequest[] = RpcRequest,\n> = {\n  /** The RPC request body. */\n  body: body\n  /** Request configuration to pass to `fetch`. */\n  fetchOptions?: HttpRpcClientOptions['fetchOptions'] | undefined\n  /** A callback to handle the response. */\n  onRequest?:\n    | ((\n        request: Request,\n        init: RequestInit,\n      ) => MaybePromise<\n        void | undefined | (RequestInit & { url?: string | undefined })\n      >)\n    | undefined\n  /** A callback to handle the response. */\n  onResponse?: ((response: Response) => Promise<void> | void) | undefined\n  /** The timeout (in ms) for the request. */\n  timeout?: HttpRpcClientOptions['timeout'] | undefined\n}\n\nexport type HttpRequestReturnType<\n  body extends RpcRequest | RpcRequest[] = RpcRequest,\n> = body extends RpcRequest[] ? RpcResponse[] : RpcResponse\n\nexport type HttpRequestErrorType =\n  | HttpRequestErrorType_\n  | TimeoutErrorType\n  | WithTimeoutErrorType\n  | ErrorType\n\nexport type HttpRpcClient = {\n  request<body extends RpcRequest | RpcRequest[]>(\n    params: HttpRequestParameters<body>,\n  ): Promise<HttpRequestReturnType<body>>\n}\n\nexport function getHttpRpcClient(\n  url: string,\n  options: HttpRpcClientOptions = {},\n): HttpRpcClient {\n  return {\n    async request(params) {\n      const {\n        body,\n        onRequest = options.onRequest,\n        onResponse = options.onResponse,\n        timeout = options.timeout ?? 10_000,\n      } = params\n\n      const fetchOptions = {\n        ...(options.fetchOptions ?? {}),\n        ...(params.fetchOptions ?? {}),\n      }\n\n      const { headers, method, signal: signal_ } = fetchOptions\n\n      try {\n        const response = await withTimeout(\n          async ({ signal }) => {\n            const init: RequestInit = {\n              ...fetchOptions,\n              body: Array.isArray(body)\n                ? stringify(\n                    body.map((body) => ({\n                      jsonrpc: '2.0',\n                      id: body.id ?? idCache.take(),\n                      ...body,\n                    })),\n                  )\n                : stringify({\n                    jsonrpc: '2.0',\n                    id: body.id ?? idCache.take(),\n                    ...body,\n                  }),\n              headers: {\n                'Content-Type': 'application/json',\n                ...headers,\n              },\n              method: method || 'POST',\n              signal: signal_ || (timeout > 0 ? signal : null),\n            }\n            const request = new Request(url, init)\n            const args = (await onRequest?.(request, init)) ?? { ...init, url }\n            const response = await fetch(args.url ?? url, args)\n            return response\n          },\n          {\n            errorInstance: new TimeoutError({ body, url }),\n            timeout,\n            signal: true,\n          },\n        )\n\n        if (onResponse) await onResponse(response)\n\n        let data: any\n        if (\n          response.headers.get('Content-Type')?.startsWith('application/json')\n        )\n          data = await response.json()\n        else {\n          data = await response.text()\n          try {\n            data = JSON.parse(data || '{}')\n          } catch (err) {\n            if (response.ok) throw err\n            data = { error: data }\n          }\n        }\n\n        if (!response.ok) {\n          throw new HttpRequestError({\n            body,\n            details: stringify(data.error) || response.statusText,\n            headers: response.headers,\n            status: response.status,\n            url,\n          })\n        }\n\n        return data\n      } catch (err) {\n        if (err instanceof HttpRequestError) throw err\n        if (err instanceof TimeoutError) throw err\n        throw new HttpRequestError({\n          body,\n          cause: err as Error,\n          url,\n        })\n      }\n    },\n  }\n}\n","function createIdStore() {\n  return {\n    current: 0,\n    take() {\n      return this.current++\n    },\n    reset() {\n      this.current = 0\n    },\n  }\n}\n\nexport const idCache = /*#__PURE__*/ createIdStore()\n","import { SocketClosedError, TimeoutError } from '../../errors/request.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { RpcRequest, RpcResponse } from '../../types/rpc.js'\nimport {\n  type CreateBatchSchedulerErrorType,\n  createBatchScheduler,\n} from '../promise/createBatchScheduler.js'\nimport { withTimeout } from '../promise/withTimeout.js'\nimport { idCache } from './id.js'\n\ntype Id = string | number\ntype CallbackFn = {\n  onResponse: (message: any) => void\n  onError?: ((error?: Error | Event | undefined) => void) | undefined\n}\ntype CallbackMap = Map<Id, CallbackFn>\n\nexport type GetSocketParameters = {\n  onClose: () => void\n  onError: (error?: Error | Event | undefined) => void\n  onOpen: () => void\n  onResponse: (data: RpcResponse) => void\n}\n\nexport type Socket<socket extends {}> = socket & {\n  close(): void\n  ping?: (() => void) | undefined\n  request(params: { body: RpcRequest }): void\n}\n\nexport type SocketRpcClient<socket extends {}> = {\n  close(): void\n  socket: Socket<socket>\n  request(params: {\n    body: RpcRequest\n    onError?: ((error?: Error | Event | undefined) => void) | undefined\n    onResponse: (message: RpcResponse) => void\n  }): void\n  requestAsync(params: {\n    body: RpcRequest\n    timeout?: number | undefined\n  }): Promise<RpcResponse>\n  requests: CallbackMap\n  subscriptions: CallbackMap\n  url: string\n}\n\nexport type GetSocketRpcClientParameters<socket extends {} = {}> = {\n  getSocket(params: GetSocketParameters): Promise<Socket<socket>>\n  /**\n   * Whether or not to send keep-alive messages.\n   * @default true\n   */\n  keepAlive?:\n    | boolean\n    | {\n        /**\n         * The interval (in ms) to send keep-alive messages.\n         * @default 30_000\n         */\n        interval?: number | undefined\n      }\n    | undefined\n  key?: string\n  /**\n   * Whether or not to attempt to reconnect on socket failure or closure.\n   * @default true\n   */\n  reconnect?:\n    | boolean\n    | {\n        /**\n         * The maximum number of reconnection attempts.\n         * @default 5\n         */\n        attempts?: number | undefined\n        /**\n         * The delay (in ms) between reconnection attempts.\n         * @default 2_000\n         */\n        delay?: number | undefined\n      }\n    | undefined\n  url: string\n}\n\nexport type GetSocketRpcClientErrorType =\n  | CreateBatchSchedulerErrorType\n  | ErrorType\n\nexport const socketClientCache = /*#__PURE__*/ new Map<\n  string,\n  SocketRpcClient<Socket<{}>>\n>()\n\nexport async function getSocketRpcClient<socket extends {}>(\n  parameters: GetSocketRpcClientParameters<socket>,\n): Promise<SocketRpcClient<socket>> {\n  const {\n    getSocket,\n    keepAlive = true,\n    key = 'socket',\n    reconnect = true,\n    url,\n  } = parameters\n  const { interval: keepAliveInterval = 30_000 } =\n    typeof keepAlive === 'object' ? keepAlive : {}\n  const { attempts = 5, delay = 2_000 } =\n    typeof reconnect === 'object' ? reconnect : {}\n\n  let socketClient = socketClientCache.get(`${key}:${url}`)\n\n  // If the socket already exists, return it.\n  if (socketClient) return socketClient as {} as SocketRpcClient<socket>\n\n  let reconnectCount = 0\n  const { schedule } = createBatchScheduler<\n    undefined,\n    [SocketRpcClient<socket>]\n  >({\n    id: `${key}:${url}`,\n    fn: async () => {\n      // Set up a cache for incoming \"synchronous\" requests.\n      const requests = new Map<Id, CallbackFn>()\n\n      // Set up a cache for subscriptions (eth_subscribe).\n      const subscriptions = new Map<Id, CallbackFn>()\n\n      let error: Error | Event | undefined\n      let socket: Socket<{}>\n      let keepAliveTimer: ReturnType<typeof setInterval> | undefined\n\n      // Set up socket implementation.\n      async function setup() {\n        const result = await getSocket({\n          onClose() {\n            // Notify all requests and subscriptions of the closure error.\n            for (const request of requests.values())\n              request.onError?.(new SocketClosedError({ url }))\n            for (const subscription of subscriptions.values())\n              subscription.onError?.(new SocketClosedError({ url }))\n\n            // Clear all requests and subscriptions.\n            requests.clear()\n            subscriptions.clear()\n\n            // Attempt to reconnect.\n            if (reconnect && reconnectCount < attempts)\n              setTimeout(async () => {\n                reconnectCount++\n                await setup().catch(console.error)\n              }, delay)\n          },\n          onError(error_) {\n            error = error_\n\n            // Notify all requests and subscriptions of the error.\n            for (const request of requests.values()) request.onError?.(error)\n            for (const subscription of subscriptions.values())\n              subscription.onError?.(error)\n\n            // Clear all requests and subscriptions.\n            requests.clear()\n            subscriptions.clear()\n\n            // Make sure socket is definitely closed.\n            socketClient?.close()\n\n            // Attempt to reconnect.\n            if (reconnect && reconnectCount < attempts)\n              setTimeout(async () => {\n                reconnectCount++\n                await setup().catch(console.error)\n              }, delay)\n          },\n          onOpen() {\n            error = undefined\n            reconnectCount = 0\n          },\n          onResponse(data) {\n            const isSubscription = data.method === 'eth_subscription'\n            const id = isSubscription ? data.params.subscription : data.id\n            const cache = isSubscription ? subscriptions : requests\n            const callback = cache.get(id)\n            if (callback) callback.onResponse(data)\n            if (!isSubscription) cache.delete(id)\n          },\n        })\n\n        socket = result\n\n        if (keepAlive) {\n          if (keepAliveTimer) clearInterval(keepAliveTimer)\n          keepAliveTimer = setInterval(() => socket.ping?.(), keepAliveInterval)\n        }\n\n        return result\n      }\n      await setup()\n      error = undefined\n\n      // Create a new socket instance.\n      socketClient = {\n        close() {\n          keepAliveTimer && clearInterval(keepAliveTimer)\n          socket.close()\n          socketClientCache.delete(`${key}:${url}`)\n        },\n        get socket() {\n          return socket\n        },\n        request({ body, onError, onResponse }) {\n          if (error && onError) onError(error)\n\n          const id = body.id ?? idCache.take()\n\n          const callback = (response: RpcResponse) => {\n            if (typeof response.id === 'number' && id !== response.id) return\n\n            // If we are subscribing to a topic, we want to set up a listener for incoming\n            // messages.\n            if (\n              body.method === 'eth_subscribe' &&\n              typeof response.result === 'string'\n            )\n              subscriptions.set(response.result, {\n                onResponse: callback,\n                onError,\n              })\n\n            // If we are unsubscribing from a topic, we want to remove the listener.\n            if (body.method === 'eth_unsubscribe')\n              subscriptions.delete(body.params?.[0])\n\n            onResponse(response)\n          }\n\n          requests.set(id, { onResponse: callback, onError })\n          try {\n            socket.request({\n              body: {\n                jsonrpc: '2.0',\n                id,\n                ...body,\n              },\n            })\n          } catch (error) {\n            onError?.(error as Error)\n          }\n        },\n        requestAsync({ body, timeout = 10_000 }) {\n          return withTimeout(\n            () =>\n              new Promise<RpcResponse>((onResponse, onError) =>\n                this.request({\n                  body,\n                  onError,\n                  onResponse,\n                }),\n              ),\n            {\n              errorInstance: new TimeoutError({ body, url }),\n              timeout,\n            },\n          )\n        },\n        requests,\n        subscriptions,\n        url,\n      }\n      socketClientCache.set(`${key}:${url}`, socketClient)\n\n      return [socketClient as {} as SocketRpcClient<socket>]\n    },\n  })\n\n  const [_, [socketClient_]] = await schedule()\n  return socketClient_\n}\n","import type { MessageEvent } from 'isows'\n\nimport {\n  SocketClosedError,\n  WebSocketRequestError,\n} from '../../errors/request.js'\nimport type { RpcRequest } from '../../types/rpc.js'\nimport {\n  type GetSocketRpcClientParameters,\n  type Socket,\n  type SocketRpcClient,\n  getSocketRpcClient,\n} from './socket.js'\n\nexport type GetWebSocketRpcClientOptions = Pick<\n  GetSocketRpcClientParameters,\n  'keepAlive' | 'reconnect'\n>\n\nexport async function getWebSocketRpcClient(\n  url: string,\n  options: GetWebSocketRpcClientOptions | undefined = {},\n): Promise<SocketRpcClient<WebSocket>> {\n  const { keepAlive, reconnect } = options\n\n  return getSocketRpcClient({\n    async getSocket({ onClose, onError, onOpen, onResponse }) {\n      const WebSocket = await import('isows').then((module) => module.WebSocket)\n      const socket = new WebSocket(url)\n\n      function onClose_() {\n        socket.removeEventListener('close', onClose_)\n        socket.removeEventListener('message', onMessage)\n        socket.removeEventListener('error', onError)\n        socket.removeEventListener('open', onOpen)\n        onClose()\n      }\n      function onMessage({ data }: MessageEvent) {\n        try {\n          const _data = JSON.parse(data)\n          onResponse(_data)\n        } catch (error) {\n          onError(error as Error)\n        }\n      }\n\n      // Setup event listeners for RPC & subscription responses.\n      socket.addEventListener('close', onClose_)\n      socket.addEventListener('message', onMessage)\n      socket.addEventListener('error', onError)\n      socket.addEventListener('open', onOpen)\n\n      // Wait for the socket to open.\n      if (socket.readyState === WebSocket.CONNECTING) {\n        await new Promise((resolve, reject) => {\n          if (!socket) return\n          socket.onopen = resolve\n          socket.onerror = reject\n        })\n      }\n\n      const { close: close_ } = socket\n\n      return Object.assign(socket, {\n        close() {\n          close_.bind(socket)()\n          onClose_()\n        },\n        ping() {\n          try {\n            if (\n              socket.readyState === socket.CLOSED ||\n              socket.readyState === socket.CLOSING\n            )\n              throw new WebSocketRequestError({\n                url: socket.url,\n                cause: new SocketClosedError({ url: socket.url }),\n              })\n\n            const body: RpcRequest = {\n              jsonrpc: '2.0',\n              method: 'net_version',\n              params: [],\n            }\n            socket.send(JSON.stringify(body))\n          } catch (error) {\n            onError(error as Error)\n          }\n        },\n        request({ body }) {\n          if (\n            socket.readyState === socket.CLOSED ||\n            socket.readyState === socket.CLOSING\n          )\n            throw new WebSocketRequestError({\n              body,\n              url: socket.url,\n              cause: new SocketClosedError({ url: socket.url }),\n            })\n\n          return socket.send(JSON.stringify(body))\n        },\n      } as Socket<WebSocket>)\n    },\n    keepAlive,\n    reconnect,\n    url,\n  })\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { CompactSignature, Signature } from '../../types/misc.js'\nimport { type HexToBytesErrorType, hexToBytes } from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\n\nexport type CompactSignatureToSignatureErrorType =\n  | BytesToHexErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\n/**\n * @description Converts an [EIP-2098 compact signature](https://eips.ethereum.org/EIPS/eip-2098) into signature format.\n *\n * @param signature The compact signature to convert.\n * @returns The compact signature in signature format.\n *\n * @example\n * compactSignatureToSignature({\n *   r: '0x68a020a209d3d56c46f38cc50a33f704f4a9a10a59377f8dd762ac66910e9b90',\n *   yParityAndS: '0x7e865ad05c4035ab5792787d4a0297a43617ae897930a6fe4d822b8faea52064',\n * })\n * // {\n * //   r: '0x68a020a209d3d56c46f38cc50a33f704f4a9a10a59377f8dd762ac66910e9b90',\n * //   s: '0x7e865ad05c4035ab5792787d4a0297a43617ae897930a6fe4d822b8faea52064',\n * //   v: 27n\n * // }\n */\nexport function compactSignatureToSignature({\n  r,\n  yParityAndS,\n}: CompactSignature): Signature {\n  const yParityAndS_bytes = hexToBytes(yParityAndS)\n  const yParity = yParityAndS_bytes[0] & 0x80 ? 1 : 0\n  const s = yParityAndS_bytes\n  if (yParity === 1) s[0] &= 0x7f\n  return { r, s: bytesToHex(s), yParity }\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex, SignableMessage } from '../../types/misc.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport { toPrefixedMessage } from './toPrefixedMessage.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type HashMessageReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type HashMessageErrorType = Keccak256ErrorType | ErrorType\n\nexport function hashMessage<to extends To = 'hex'>(\n  message: SignableMessage,\n  to_?: to | undefined,\n): HashMessageReturnType<to> {\n  return keccak256(toPrefixedMessage(message), to_)\n}\n","// Implementation forked and adapted from https://github.com/MetaMask/eth-sig-util/blob/main/src/sign-typed-data.ts\n\nimport type { AbiParameter, TypedData, TypedDataDomain } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from '../abi/encodeAbiParameters.js'\nimport { concat } from '../data/concat.js'\nimport { type ToHexErrorType, toHex } from '../encoding/toHex.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport {\n  type GetTypesForEIP712DomainErrorType,\n  type ValidateTypedDataErrorType,\n  getTypesForEIP712Domain,\n  validateTypedData,\n} from '../typedData.js'\n\ntype MessageTypeProperty = {\n  name: string\n  type: string\n}\n\nexport type HashTypedDataParameters<\n  typedData extends TypedData | Record<string, unknown> = TypedData,\n  primaryType extends keyof typedData | 'EIP712Domain' = keyof typedData,\n> = TypedDataDefinition<typedData, primaryType>\n\nexport type HashTypedDataReturnType = Hex\n\nexport type HashTypedDataErrorType =\n  | GetTypesForEIP712DomainErrorType\n  | HashDomainErrorType\n  | HashStructErrorType\n  | ValidateTypedDataErrorType\n  | ErrorType\n\nexport function hashTypedData<\n  const typedData extends TypedData | Record<string, unknown>,\n  primaryType extends keyof typedData | 'EIP712Domain',\n>(\n  parameters: HashTypedDataParameters<typedData, primaryType>,\n): HashTypedDataReturnType {\n  const {\n    domain = {},\n    message,\n    primaryType,\n  } = parameters as HashTypedDataParameters\n  const types = {\n    EIP712Domain: getTypesForEIP712Domain({ domain }),\n    ...parameters.types,\n  }\n\n  // Need to do a runtime validation check on addresses, byte ranges, integer ranges, etc\n  // as we can't statically check this with TypeScript.\n  validateTypedData({\n    domain,\n    message,\n    primaryType,\n    types,\n  })\n\n  const parts: Hex[] = ['0x1901']\n  if (domain)\n    parts.push(\n      hashDomain({\n        domain,\n        types: types as Record<string, MessageTypeProperty[]>,\n      }),\n    )\n\n  if (primaryType !== 'EIP712Domain')\n    parts.push(\n      hashStruct({\n        data: message,\n        primaryType,\n        types: types as Record<string, MessageTypeProperty[]>,\n      }),\n    )\n\n  return keccak256(concat(parts))\n}\n\nexport type HashDomainErrorType = HashStructErrorType | ErrorType\n\nexport function hashDomain({\n  domain,\n  types,\n}: {\n  domain: TypedDataDomain\n  types: Record<string, MessageTypeProperty[]>\n}) {\n  return hashStruct({\n    data: domain,\n    primaryType: 'EIP712Domain',\n    types,\n  })\n}\n\nexport type HashStructErrorType =\n  | EncodeDataErrorType\n  | Keccak256ErrorType\n  | ErrorType\n\nexport function hashStruct({\n  data,\n  primaryType,\n  types,\n}: {\n  data: Record<string, unknown>\n  primaryType: string\n  types: Record<string, readonly MessageTypeProperty[]>\n}) {\n  const encoded = encodeData({\n    data,\n    primaryType,\n    types,\n  })\n  return keccak256(encoded)\n}\n\ntype EncodeDataErrorType =\n  | EncodeAbiParametersErrorType\n  | EncodeFieldErrorType\n  | HashTypeErrorType\n  | ErrorType\n\nfunction encodeData({\n  data,\n  primaryType,\n  types,\n}: {\n  data: Record<string, unknown>\n  primaryType: string\n  types: Record<string, readonly MessageTypeProperty[]>\n}) {\n  const encodedTypes: AbiParameter[] = [{ type: 'bytes32' }]\n  const encodedValues: unknown[] = [hashType({ primaryType, types })]\n\n  for (const field of types[primaryType]) {\n    const [type, value] = encodeField({\n      types,\n      name: field.name,\n      type: field.type,\n      value: data[field.name],\n    })\n    encodedTypes.push(type)\n    encodedValues.push(value)\n  }\n\n  return encodeAbiParameters(encodedTypes, encodedValues)\n}\n\ntype HashTypeErrorType =\n  | ToHexErrorType\n  | EncodeTypeErrorType\n  | Keccak256ErrorType\n  | ErrorType\n\nfunction hashType({\n  primaryType,\n  types,\n}: {\n  primaryType: string\n  types: Record<string, readonly MessageTypeProperty[]>\n}) {\n  const encodedHashType = toHex(encodeType({ primaryType, types }))\n  return keccak256(encodedHashType)\n}\n\ntype EncodeTypeErrorType = FindTypeDependenciesErrorType\n\nexport function encodeType({\n  primaryType,\n  types,\n}: {\n  primaryType: string\n  types: Record<string, readonly MessageTypeProperty[]>\n}) {\n  let result = ''\n  const unsortedDeps = findTypeDependencies({ primaryType, types })\n  unsortedDeps.delete(primaryType)\n\n  const deps = [primaryType, ...Array.from(unsortedDeps).sort()]\n  for (const type of deps) {\n    result += `${type}(${types[type]\n      .map(({ name, type: t }) => `${t} ${name}`)\n      .join(',')})`\n  }\n\n  return result\n}\n\ntype FindTypeDependenciesErrorType = ErrorType\n\nfunction findTypeDependencies(\n  {\n    primaryType: primaryType_,\n    types,\n  }: {\n    primaryType: string\n    types: Record<string, readonly MessageTypeProperty[]>\n  },\n  results: Set<string> = new Set(),\n): Set<string> {\n  const match = primaryType_.match(/^\\w*/u)\n  const primaryType = match?.[0]!\n  if (results.has(primaryType) || types[primaryType] === undefined) {\n    return results\n  }\n\n  results.add(primaryType)\n\n  for (const field of types[primaryType]) {\n    findTypeDependencies({ primaryType: field.type, types }, results)\n  }\n  return results\n}\n\ntype EncodeFieldErrorType =\n  | Keccak256ErrorType\n  | EncodeAbiParametersErrorType\n  | ToHexErrorType\n  | ErrorType\n\nfunction encodeField({\n  types,\n  name,\n  type,\n  value,\n}: {\n  types: Record<string, readonly MessageTypeProperty[]>\n  name: string\n  type: string\n  value: any\n}): [type: AbiParameter, value: any] {\n  if (types[type] !== undefined) {\n    return [\n      { type: 'bytes32' },\n      keccak256(encodeData({ data: value, primaryType: type, types })),\n    ]\n  }\n\n  if (type === 'bytes') {\n    const prepend = value.length % 2 ? '0' : ''\n    value = `0x${prepend + value.slice(2)}`\n    return [{ type: 'bytes32' }, keccak256(value)]\n  }\n\n  if (type === 'string') return [{ type: 'bytes32' }, keccak256(toHex(value))]\n\n  if (type.lastIndexOf(']') === type.length - 1) {\n    const parsedType = type.slice(0, type.lastIndexOf('['))\n    const typeValuePairs = (value as [AbiParameter, any][]).map((item) =>\n      encodeField({\n        name,\n        type: parsedType,\n        types,\n        value: item,\n      }),\n    )\n    return [\n      { type: 'bytes32' },\n      keccak256(\n        encodeAbiParameters(\n          typeValuePairs.map(([t]) => t),\n          typeValuePairs.map(([, v]) => v),\n        ),\n      ),\n    ]\n  }\n\n  return [{ type }, value]\n}\n","import { erc6492MagicBytes } from '../../constants/bytes.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type SliceHexErrorType, sliceHex } from '../data/slice.js'\n\nexport type IsErc6492SignatureParameters = Hex\nexport type IsErc6492SignatureReturnType = boolean\nexport type IsErc6492SignatureErrorType = SliceHexErrorType | ErrorType\n\n/** Whether or not the signature is an ERC-6492 formatted signature. */\nexport function isErc6492Signature(\n  signature: IsErc6492SignatureParameters,\n): IsErc6492SignatureReturnType {\n  return sliceHex(signature, -32) === erc6492MagicBytes\n}\n","import { secp256k1 } from '@noble/curves/secp256k1'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { CompactSignature, Hex } from '../../types/misc.js'\nimport { type NumberToHexErrorType, numberToHex } from '../encoding/toHex.js'\n\nexport type ParseCompactSignatureErrorType = NumberToHexErrorType | ErrorType\n\n/**\n * @description Parses a hex formatted compact signature into a structured compact signature.\n *\n * @param signatureHex Signature in hex format.\n * @returns The structured signature.\n *\n * @example\n * parseCompactSignature('0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c')\n * // { r: '0x...', yParityAndS: '0x...' }\n */\nexport function parseCompactSignature(signatureHex: Hex): CompactSignature {\n  const { r, s } = secp256k1.Signature.fromCompact(signatureHex.slice(2, 130))\n  return {\n    r: numberToHex(r, { size: 32 }),\n    yParityAndS: numberToHex(s, { size: 32 }),\n  }\n}\n","import type { Address } from 'abitype'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { OneOf, Prettify } from '../../types/utils.js'\nimport {\n  type DecodeAbiParametersErrorType,\n  decodeAbiParameters,\n} from '../abi/decodeAbiParameters.js'\nimport {\n  type IsErc6492SignatureErrorType,\n  isErc6492Signature,\n} from './isErc6492Signature.js'\n\nexport type ParseErc6492SignatureParameters = Hex\n\nexport type ParseErc6492SignatureReturnType = Prettify<\n  OneOf<\n    | {\n        /**\n         * The ERC-4337 Account Factory or preparation address to use for counterfactual verification.\n         * `undefined` if the signature is not in ERC-6492 format.\n         */\n        address: Address\n        /**\n         * Calldata to pass to deploy account (if not deployed) for counterfactual verification.\n         * `undefined` if the signature is not in ERC-6492 format.\n         */\n        data: Hex\n        /** The original signature. */\n        signature: Hex\n      }\n    | {\n        /** The original signature. */\n        signature: Hex\n      }\n  >\n>\n\nexport type ParseErc6492SignatureErrorType =\n  | IsErc6492SignatureErrorType\n  | DecodeAbiParametersErrorType\n  | ErrorType\n\n/**\n * @description Parses a hex-formatted ERC-6492 flavoured signature.\n * If the signature is not in ERC-6492 format, then the underlying (original) signature is returned.\n *\n * @param signature ERC-6492 signature in hex format.\n * @returns The parsed ERC-6492 signature.\n *\n * @example\n * parseSignature('0x000000000000000000000000cafebabecafebabecafebabecafebabecafebabe000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000004deadbeef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041a461f509887bd19e312c0c58467ce8ff8e300d3c1a90b608a760c5b80318eaf15fe57c96f9175d6cd4daad4663763baa7e78836e067d0163e9a2ccf2ff753f5b1b000000000000000000000000000000000000000000000000000000000000006492649264926492649264926492649264926492649264926492649264926492')\n * // { address: '0x...', data: '0x...', signature: '0x...' }\n */\nexport function parseErc6492Signature(\n  signature: ParseErc6492SignatureParameters,\n): ParseErc6492SignatureReturnType {\n  if (!isErc6492Signature(signature)) return { signature }\n\n  const [address, data, signature_] = decodeAbiParameters(\n    [{ type: 'address' }, { type: 'bytes' }, { type: 'bytes' }],\n    signature,\n  )\n  return { address, data, signature: signature_ }\n}\n","import { secp256k1 } from '@noble/curves/secp256k1'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex, Signature } from '../../types/misc.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type ParseSignatureErrorType = NumberToHexErrorType | ErrorType\n\n/**\n * @description Parses a hex formatted signature into a structured signature.\n *\n * @param signatureHex Signature in hex format.\n * @returns The structured signature.\n *\n * @example\n * parseSignature('0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c')\n * // { r: '0x...', s: '0x...', v: 28n }\n */\nexport function parseSignature(signatureHex: Hex) {\n  const { r, s } = secp256k1.Signature.fromCompact(signatureHex.slice(2, 130))\n  const yParityOrV = Number(`0x${signatureHex.slice(130)}`)\n  const [v, yParity] = (() => {\n    if (yParityOrV === 0 || yParityOrV === 1) return [undefined, yParityOrV]\n    if (yParityOrV === 27) return [BigInt(yParityOrV), 0]\n    if (yParityOrV === 28) return [BigInt(yParityOrV), 1]\n    throw new Error('Invalid yParityOrV value')\n  })()\n\n  if (typeof v !== 'undefined')\n    return {\n      r: numberToHex(r, { size: 32 }),\n      s: numberToHex(s, { size: 32 }),\n      v,\n      yParity,\n    } satisfies Signature\n  return {\n    r: numberToHex(r, { size: 32 }),\n    s: numberToHex(s, { size: 32 }),\n    yParity,\n  } satisfies Signature\n}\n","import type { Address } from 'abitype'\n\nimport { publicKeyToAddress } from '../../accounts/utils/publicKeyToAddress.js'\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { recoverPublicKey } from './recoverPublicKey.js'\n\nexport type RecoverAddressParameters = {\n  hash: Hex | ByteArray\n  signature: Hex | ByteArray | Signature\n}\n\nexport type RecoverAddressReturnType = Address\n\nexport type RecoverAddressErrorType = ErrorType\n\nexport async function recoverAddress({\n  hash,\n  signature,\n}: RecoverAddressParameters): Promise<RecoverAddressReturnType> {\n  return publicKeyToAddress(await recoverPublicKey({ hash, signature }))\n}\n","import type { Address } from 'abitype'\n\nimport type {\n  ByteArray,\n  Hex,\n  SignableMessage,\n  Signature,\n} from '../../types/misc.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type HashMessageErrorType, hashMessage } from './hashMessage.js'\nimport {\n  type RecoverAddressErrorType,\n  recoverAddress,\n} from './recoverAddress.js'\n\nexport type RecoverMessageAddressParameters = {\n  message: SignableMessage\n  signature: Hex | ByteArray | Signature\n}\n\nexport type RecoverMessageAddressReturnType = Address\n\nexport type RecoverMessageAddressErrorType =\n  | HashMessageErrorType\n  | RecoverAddressErrorType\n  | ErrorType\n\nexport async function recoverMessageAddress({\n  message,\n  signature,\n}: RecoverMessageAddressParameters): Promise<RecoverMessageAddressReturnType> {\n  return recoverAddress({ hash: hashMessage(message), signature })\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { size } from '../data/size.js'\nimport {\n  type HexToNumberErrorType,\n  hexToBigInt,\n  hexToNumber,\n} from '../encoding/fromHex.js'\nimport { toHex } from '../encoding/toHex.js'\n\nexport type RecoverPublicKeyParameters = {\n  hash: Hex | ByteArray\n  signature: Hex | ByteArray | Signature\n}\n\nexport type RecoverPublicKeyReturnType = Hex\n\nexport type RecoverPublicKeyErrorType =\n  | HexToNumberErrorType\n  | IsHexErrorType\n  | ErrorType\n\nexport async function recoverPublicKey({\n  hash,\n  signature,\n}: RecoverPublicKeyParameters): Promise<RecoverPublicKeyReturnType> {\n  const hashHex = isHex(hash) ? hash : toHex(hash)\n\n  const { secp256k1 } = await import('@noble/curves/secp256k1')\n  const signature_ = (() => {\n    // typeof signature: `Signature`\n    if (typeof signature === 'object' && 'r' in signature && 's' in signature) {\n      const { r, s, v, yParity } = signature\n      const yParityOrV = Number(yParity ?? v)!\n      const recoveryBit = toRecoveryBit(yParityOrV)\n      return new secp256k1.Signature(\n        hexToBigInt(r),\n        hexToBigInt(s),\n      ).addRecoveryBit(recoveryBit)\n    }\n\n    // typeof signature: `Hex | ByteArray`\n    const signatureHex = isHex(signature) ? signature : toHex(signature)\n    if (size(signatureHex) !== 65) throw new Error('invalid signature length')\n    const yParityOrV = hexToNumber(`0x${signatureHex.slice(130)}`)\n    const recoveryBit = toRecoveryBit(yParityOrV)\n    return secp256k1.Signature.fromCompact(\n      signatureHex.substring(2, 130),\n    ).addRecoveryBit(recoveryBit)\n  })()\n\n  const publicKey = signature_\n    .recoverPublicKey(hashHex.substring(2))\n    .toHex(false)\n  return `0x${publicKey}`\n}\n\nfunction toRecoveryBit(yParityOrV: number) {\n  if (yParityOrV === 0 || yParityOrV === 1) return yParityOrV\n  if (yParityOrV === 27) return 0\n  if (yParityOrV === 28) return 1\n  throw new Error('Invalid yParityOrV value')\n}\n","import type { Address } from 'abitype'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\nimport type { TransactionSerialized } from '../../types/transaction.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport { parseTransaction } from '../transaction/parseTransaction.js'\nimport {\n  type SerializeTransactionErrorType,\n  serializeTransaction,\n} from '../transaction/serializeTransaction.js'\nimport {\n  type RecoverAddressErrorType,\n  recoverAddress,\n} from './recoverAddress.js'\nimport type { SerializeSignatureErrorType } from './serializeSignature.js'\n\nexport type RecoverTransactionAddressParameters = {\n  serializedTransaction: TransactionSerialized\n  signature?: Hex | ByteArray | Signature\n}\n\nexport type RecoverTransactionAddressReturnType = Address\n\nexport type RecoverTransactionAddressErrorType =\n  | SerializeTransactionErrorType\n  | RecoverAddressErrorType\n  | Keccak256ErrorType\n  | SerializeSignatureErrorType\n  | ErrorType\n\nexport async function recoverTransactionAddress(\n  parameters: RecoverTransactionAddressParameters,\n): Promise<RecoverTransactionAddressReturnType> {\n  const { serializedTransaction, signature: signature_ } = parameters\n\n  const transaction = parseTransaction(serializedTransaction)\n\n  const signature = signature_ ?? {\n    r: transaction.r!,\n    s: transaction.s!,\n    v: transaction.v!,\n    yParity: transaction.yParity!,\n  }\n\n  const serialized = serializeTransaction({\n    ...transaction,\n    r: undefined,\n    s: undefined,\n    v: undefined,\n    yParity: undefined,\n    sidecars: undefined,\n  })\n\n  return await recoverAddress({\n    hash: keccak256(serialized),\n    signature,\n  })\n}\n","import type { Address, TypedData } from 'abitype'\n\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type HashTypedDataErrorType, hashTypedData } from './hashTypedData.js'\nimport {\n  type RecoverAddressErrorType,\n  recoverAddress,\n} from './recoverAddress.js'\n\nexport type RecoverTypedDataAddressParameters<\n  typedData extends TypedData | Record<string, unknown> = TypedData,\n  primaryType extends keyof typedData | 'EIP712Domain' = keyof typedData,\n> = TypedDataDefinition<typedData, primaryType> & {\n  signature: Hex | ByteArray | Signature\n}\n\nexport type RecoverTypedDataAddressReturnType = Address\n\nexport type RecoverTypedDataAddressErrorType =\n  | RecoverAddressErrorType\n  | HashTypedDataErrorType\n  | ErrorType\n\nexport async function recoverTypedDataAddress<\n  const typedData extends TypedData | Record<string, unknown>,\n  primaryType extends keyof typedData | 'EIP712Domain',\n>(\n  parameters: RecoverTypedDataAddressParameters<typedData, primaryType>,\n): Promise<RecoverTypedDataAddressReturnType> {\n  const { domain, message, primaryType, signature, types } =\n    parameters as unknown as RecoverTypedDataAddressParameters\n  return recoverAddress({\n    hash: hashTypedData({\n      domain,\n      message,\n      primaryType,\n      types,\n    }),\n    signature,\n  })\n}\n","import { secp256k1 } from '@noble/curves/secp256k1'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { CompactSignature, Hex } from '../../types/misc.js'\nimport { type HexToBigIntErrorType, hexToBigInt } from '../encoding/fromHex.js'\n\nexport type SerializeCompactSignatureErrorType =\n  | HexToBigIntErrorType\n  | ErrorType\n\n/**\n * @description Converts an [EIP-2098 compact signature](https://eips.ethereum.org/EIPS/eip-2098) into hex format.\n *\n * @param signature The compact signature to convert.\n * @returns The compact signature in hex format.\n *\n * @example\n * serializeCompactSignature({\n *   r: '0x68a020a209d3d56c46f38cc50a33f704f4a9a10a59377f8dd762ac66910e9b90',\n *   yParityAndS: '0x7e865ad05c4035ab5792787d4a0297a43617ae897930a6fe4d822b8faea52064',\n * })\n * // \"0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c\"\n */\nexport function serializeCompactSignature({\n  r,\n  yParityAndS,\n}: CompactSignature): Hex {\n  return `0x${new secp256k1.Signature(\n    hexToBigInt(r),\n    hexToBigInt(yParityAndS),\n  ).toCompactHex()}`\n}\n","import type { Address } from 'abitype'\nimport { erc6492MagicBytes } from '../../constants/bytes.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { encodeAbiParameters } from '../abi/encodeAbiParameters.js'\nimport { concatHex } from '../data/concat.js'\nimport { hexToBytes } from '../encoding/toBytes.js'\n\ntype To = 'bytes' | 'hex'\n\nexport type SerializeErc6492SignatureParameters<to extends To = 'hex'> = {\n  /** The ERC-4337 Account Factory address to use for counterfactual verification. */\n  address: Address\n  /** Calldata to pass to deploy account (if not deployed) for counterfactual verification. */\n  data: Hex\n  /** The original signature. */\n  signature: Hex\n  to?: to | To | undefined\n}\n\nexport type SerializeErc6492SignatureReturnType<to extends To = 'hex'> =\n  | (to extends 'hex' ? Hex : never)\n  | (to extends 'bytes' ? ByteArray : never)\n\nexport type SerializeErc6492SignatureErrorType = ErrorType\n\n/**\n * @description Serializes a ERC-6492 flavoured signature into hex format.\n *\n * @param signature ERC-6492 signature in object format.\n * @returns ERC-6492 signature in hex format.\n *\n * @example\n * serializeSignature({ address: '0x...', data: '0x...', signature: '0x...' })\n * // '0x000000000000000000000000cafebabecafebabecafebabecafebabecafebabe000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000004deadbeef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041a461f509887bd19e312c0c58467ce8ff8e300d3c1a90b608a760c5b80318eaf15fe57c96f9175d6cd4daad4663763baa7e78836e067d0163e9a2ccf2ff753f5b1b000000000000000000000000000000000000000000000000000000000000006492649264926492649264926492649264926492649264926492649264926492'\n */\nexport function serializeErc6492Signature<to extends To = 'hex'>(\n  parameters: SerializeErc6492SignatureParameters<to>,\n): SerializeErc6492SignatureReturnType<to> {\n  const { address, data, signature, to = 'hex' } = parameters\n  const signature_ = concatHex([\n    encodeAbiParameters(\n      [{ type: 'address' }, { type: 'bytes' }, { type: 'bytes' }],\n      [address, data, signature],\n    ),\n    erc6492MagicBytes,\n  ])\n\n  if (to === 'hex') return signature_ as SerializeErc6492SignatureReturnType<to>\n  return hexToBytes(signature_) as SerializeErc6492SignatureReturnType<to>\n}\n","import { secp256k1 } from '@noble/curves/secp256k1'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\nimport { type HexToBigIntErrorType, hexToBigInt } from '../encoding/fromHex.js'\nimport { hexToBytes } from '../encoding/toBytes.js'\nimport type { ToHexErrorType } from '../encoding/toHex.js'\n\ntype To = 'bytes' | 'hex'\n\nexport type SerializeSignatureParameters<to extends To = 'hex'> = Signature & {\n  to?: to | To | undefined\n}\n\nexport type SerializeSignatureReturnType<to extends To = 'hex'> =\n  | (to extends 'hex' ? Hex : never)\n  | (to extends 'bytes' ? ByteArray : never)\n\nexport type SerializeSignatureErrorType =\n  | HexToBigIntErrorType\n  | ToHexErrorType\n  | ErrorType\n\n/**\n * @description Converts a signature into hex format.\n *\n * @param signature The signature to convert.\n * @returns The signature in hex format.\n *\n * @example\n * serializeSignature({\n *   r: '0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf',\n *   s: '0x4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db8',\n *   yParity: 1\n * })\n * // \"0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c\"\n */\nexport function serializeSignature<to extends To = 'hex'>({\n  r,\n  s,\n  to = 'hex',\n  v,\n  yParity,\n}: SerializeSignatureParameters<to>): SerializeSignatureReturnType<to> {\n  const yParity_ = (() => {\n    if (yParity === 0 || yParity === 1) return yParity\n    if (v && (v === 27n || v === 28n || v >= 35n)) return v % 2n === 0n ? 1 : 0\n    throw new Error('Invalid `v` or `yParity` value')\n  })()\n  const signature = `0x${new secp256k1.Signature(\n    hexToBigInt(r),\n    hexToBigInt(s),\n  ).toCompactHex()}${yParity_ === 0 ? '1b' : '1c'}` as const\n\n  if (to === 'hex') return signature as SerializeSignatureReturnType<to>\n  return hexToBytes(signature) as SerializeSignatureReturnType<to>\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { CompactSignature, Signature } from '../../types/misc.js'\nimport { type HexToBytesErrorType, hexToBytes } from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\n\nexport type SignatureToCompactSignatureErrorType =\n  | HexToBytesErrorType\n  | BytesToHexErrorType\n  | ErrorType\n\n/**\n * @description Converts a signature into an [EIP-2098 compact signature](https://eips.ethereum.org/EIPS/eip-2098).\n *\n * @param signature The signature to convert.\n * @returns The signature in compact format.\n *\n * @example\n * signatureToCompactSignature({\n *   r: '0x68a020a209d3d56c46f38cc50a33f704f4a9a10a59377f8dd762ac66910e9b90',\n *   s: '0x7e865ad05c4035ab5792787d4a0297a43617ae897930a6fe4d822b8faea52064',\n *   yParity: 0\n * })\n * // {\n * //   r: '0x68a020a209d3d56c46f38cc50a33f704f4a9a10a59377f8dd762ac66910e9b90',\n * //   yParityAndS: '0x7e865ad05c4035ab5792787d4a0297a43617ae897930a6fe4d822b8faea52064'\n * // }\n */\nexport function signatureToCompactSignature(\n  signature: Signature,\n): CompactSignature {\n  const { r, s, v, yParity } = signature\n  const yParity_ = Number(yParity ?? v! - 27n)\n  let yParityAndS = s\n  if (yParity_ === 1) {\n    const bytes = hexToBytes(s)\n    bytes[0] |= 0x80\n    yParityAndS = bytesToHex(bytes)\n  }\n  return { r, yParityAndS }\n}\n","import { presignMessagePrefix } from '../../constants/strings.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex, SignableMessage } from '../../types/misc.js'\nimport { type ConcatErrorType, concat } from '../data/concat.js'\nimport { size } from '../data/size.js'\nimport {\n  type BytesToHexErrorType,\n  type StringToHexErrorType,\n  bytesToHex,\n  stringToHex,\n} from '../encoding/toHex.js'\n\nexport type ToPrefixedMessageErrorType =\n  | ConcatErrorType\n  | StringToHexErrorType\n  | BytesToHexErrorType\n  | ErrorType\n\nexport function toPrefixedMessage(message_: SignableMessage): Hex {\n  const message = (() => {\n    if (typeof message_ === 'string') return stringToHex(message_)\n    if (typeof message_.raw === 'string') return message_.raw\n    return bytesToHex(message_.raw)\n  })()\n  const prefix = stringToHex(`${presignMessagePrefix}${size(message)}`)\n  return concat([prefix, message])\n}\n","import type { Address } from 'abitype'\n\nimport type { ByteArray, Hash, Hex, Signature } from '../../types/misc.js'\nimport { type GetAddressErrorType, getAddress } from '../address/getAddress.js'\nimport {\n  type IsAddressEqualErrorType,\n  isAddressEqual,\n} from '../address/isAddressEqual.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type RecoverAddressErrorType,\n  recoverAddress,\n} from './recoverAddress.js'\n\nexport type VerifyHashParameters = {\n  /** The address that signed the original message. */\n  address: Address\n  /** The hash to be verified. */\n  hash: Hash\n  /** The signature that was generated by signing the message with the address's private key. */\n  signature: Hex | ByteArray | Signature\n}\n\nexport type VerifyHashReturnType = boolean\n\nexport type VerifyHashErrorType =\n  | IsAddressEqualErrorType\n  | GetAddressErrorType\n  | RecoverAddressErrorType\n  | ErrorType\n\n/**\n * Verify that a message was signed by the provided address.\n *\n * Note:  Only supports Externally Owned Accounts. Does not support Contract Accounts.\n *        It is highly recommended to use `publicClient.verifyHash` instead to ensure\n *        wallet interoperability.\n *\n * - Docs {@link https://viem.sh/docs/utilities/verifyHash}\n *\n * @param parameters - {@link VerifyHashParameters}\n * @returns Whether or not the signature is valid. {@link VerifyHashReturnType}\n */\nexport async function verifyHash({\n  address,\n  hash,\n  signature,\n}: VerifyHashParameters): Promise<VerifyHashReturnType> {\n  return isAddressEqual(\n    getAddress(address),\n    await recoverAddress({ hash, signature }),\n  )\n}\n","import type { Address } from 'abitype'\n\nimport type {\n  ByteArray,\n  Hex,\n  SignableMessage,\n  Signature,\n} from '../../types/misc.js'\nimport { type GetAddressErrorType, getAddress } from '../address/getAddress.js'\nimport {\n  type IsAddressEqualErrorType,\n  isAddressEqual,\n} from '../address/isAddressEqual.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type RecoverMessageAddressErrorType,\n  recoverMessageAddress,\n} from './recoverMessageAddress.js'\n\nexport type VerifyMessageParameters = {\n  /** The address that signed the original message. */\n  address: Address\n  /** The message to be verified. */\n  message: SignableMessage\n  /** The signature that was generated by signing the message with the address's private key. */\n  signature: Hex | ByteArray | Signature\n}\n\nexport type VerifyMessageReturnType = boolean\n\nexport type VerifyMessageErrorType =\n  | IsAddressEqualErrorType\n  | GetAddressErrorType\n  | RecoverMessageAddressErrorType\n  | ErrorType\n\n/**\n * Verify that a message was signed by the provided address.\n *\n * Note:  Only supports Externally Owned Accounts. Does not support Contract Accounts.\n *        It is highly recommended to use `publicClient.verifyMessage` instead to ensure\n *        wallet interoperability.\n *\n * - Docs {@link https://viem.sh/docs/utilities/verifyMessage}\n *\n * @param parameters - {@link VerifyMessageParameters}\n * @returns Whether or not the signature is valid. {@link VerifyMessageReturnType}\n */\nexport async function verifyMessage({\n  address,\n  message,\n  signature,\n}: VerifyMessageParameters): Promise<VerifyMessageReturnType> {\n  return isAddressEqual(\n    getAddress(address),\n    await recoverMessageAddress({ message, signature }),\n  )\n}\n","import type { Address, TypedData } from 'abitype'\n\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\nimport { type GetAddressErrorType, getAddress } from '../address/getAddress.js'\nimport {\n  type IsAddressEqualErrorType,\n  isAddressEqual,\n} from '../address/isAddressEqual.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type RecoverTypedDataAddressParameters,\n  recoverTypedDataAddress,\n} from './recoverTypedDataAddress.js'\n\nexport type VerifyTypedDataParameters<\n  typedData extends TypedData | Record<string, unknown> = TypedData,\n  primaryType extends keyof typedData | 'EIP712Domain' = keyof typedData,\n> = TypedDataDefinition<typedData, primaryType> & {\n  /** The address to verify the typed data for. */\n  address: Address\n  /** The signature to verify */\n  signature: Hex | ByteArray | Signature\n}\n\nexport type VerifyTypedDataReturnType = boolean\n\nexport type VerifyTypedDataErrorType =\n  | IsAddressEqualErrorType\n  | GetAddressErrorType\n  | RecoverTypedDataAddressParameters\n  | ErrorType\n\n/**\n * Verify that typed data was signed by the provided address.\n *\n * Note:  Only supports Externally Owned Accounts. Does not support Contract Accounts.\n *        It is highly recommended to use `publicClient.verifyTypedData` instead to ensure\n *        wallet interoperability.\n *\n * - Docs {@link https://viem.sh/docs/utilities/verifyTypedData}\n *\n * @param parameters - {@link VerifyTypedDataParameters}\n * @returns Whether or not the signature is valid. {@link VerifyTypedDataReturnType}\n */\nexport async function verifyTypedData<\n  const typedData extends TypedData | Record<string, unknown>,\n  primaryType extends keyof typedData | 'EIP712Domain',\n>(\n  parameters: VerifyTypedDataParameters<typedData, primaryType>,\n): Promise<VerifyTypedDataReturnType> {\n  const { address, domain, message, primaryType, signature, types } =\n    parameters as unknown as VerifyTypedDataParameters\n  return isAddressEqual(\n    getAddress(address),\n    await recoverTypedDataAddress({\n      domain,\n      message,\n      primaryType,\n      signature,\n      types,\n    } as RecoverTypedDataAddressParameters),\n  )\n}\n","import type { Address } from 'abitype'\n\nimport type { ExactPartial, Prettify } from '../../types/utils.js'\nimport type { SiweMessage } from './types.js'\n\n/**\n * @description Parses EIP-4361 formatted message into message fields object.\n *\n * @see https://eips.ethereum.org/EIPS/eip-4361\n *\n * @returns EIP-4361 fields object\n */\nexport function parseSiweMessage(\n  message: string,\n): Prettify<ExactPartial<SiweMessage>> {\n  const { scheme, statement, ...prefix } = (message.match(prefixRegex)\n    ?.groups ?? {}) as {\n    address: Address\n    domain: string\n    scheme?: string\n    statement?: string\n  }\n  const { chainId, expirationTime, issuedAt, notBefore, requestId, ...suffix } =\n    (message.match(suffixRegex)?.groups ?? {}) as {\n      chainId: string\n      expirationTime?: string\n      issuedAt?: string\n      nonce: string\n      notBefore?: string\n      requestId?: string\n      uri: string\n      version: '1'\n    }\n  const resources = message.split('Resources:')[1]?.split('\\n- ').slice(1)\n  return {\n    ...prefix,\n    ...suffix,\n    ...(chainId ? { chainId: Number(chainId) } : {}),\n    ...(expirationTime ? { expirationTime: new Date(expirationTime) } : {}),\n    ...(issuedAt ? { issuedAt: new Date(issuedAt) } : {}),\n    ...(notBefore ? { notBefore: new Date(notBefore) } : {}),\n    ...(requestId ? { requestId } : {}),\n    ...(resources ? { resources } : {}),\n    ...(scheme ? { scheme } : {}),\n    ...(statement ? { statement } : {}),\n  }\n}\n\n// https://regexr.com/80gdj\nconst prefixRegex =\n  /^(?:(?<scheme>[a-zA-Z][a-zA-Z0-9+-.]*):\\/\\/)?(?<domain>[a-zA-Z0-9+-.]*(?::[0-9]{1,5})?) (?:wants you to sign in with your Ethereum account:\\n)(?<address>0x[a-fA-F0-9]{40})\\n\\n(?:(?<statement>.*)\\n\\n)?/\n\n// https://regexr.com/80gf9\nconst suffixRegex =\n  /(?:URI: (?<uri>.+))\\n(?:Version: (?<version>.+))\\n(?:Chain ID: (?<chainId>\\d+))\\n(?:Nonce: (?<nonce>[a-zA-Z0-9]+))\\n(?:Issued At: (?<issuedAt>.+))(?:\\nExpiration Time: (?<expirationTime>.+))?(?:\\nNot Before: (?<notBefore>.+))?(?:\\nRequest ID: (?<requestId>.+))?/\n","import type { Address } from 'abitype'\n\nimport type { ExactPartial } from '../../types/utils.js'\nimport { isAddress } from '../address/isAddress.js'\nimport { isAddressEqual } from '../address/isAddressEqual.js'\nimport type { SiweMessage } from './types.js'\n\nexport type ValidateSiweMessageParameters = {\n  /**\n   * Ethereum address to check against.\n   */\n  address?: Address | undefined\n  /**\n   * [RFC 3986](https://www.rfc-editor.org/rfc/rfc3986) authority to check against.\n   */\n  domain?: string | undefined\n  /**\n   * EIP-4361 message fields.\n   */\n  message: ExactPartial<SiweMessage>\n  /**\n   * Random string to check against.\n   */\n  nonce?: string | undefined\n  /**\n   * [RFC 3986](https://www.rfc-editor.org/rfc/rfc3986#section-3.1) URI scheme to check against.\n   */\n  scheme?: string | undefined\n  /**\n   * Current time to check optional `expirationTime` and `notBefore` fields.\n   *\n   * @default new Date()\n   */\n  time?: Date | undefined\n}\n\nexport type ValidateSiweMessageReturnType = boolean\n\n/**\n * @description Validates EIP-4361 message.\n *\n * @see https://eips.ethereum.org/EIPS/eip-4361\n */\nexport function validateSiweMessage(\n  parameters: ValidateSiweMessageParameters,\n): ValidateSiweMessageReturnType {\n  const {\n    address,\n    domain,\n    message,\n    nonce,\n    scheme,\n    time = new Date(),\n  } = parameters\n\n  if (domain && message.domain !== domain) return false\n  if (nonce && message.nonce !== nonce) return false\n  if (scheme && message.scheme !== scheme) return false\n\n  if (message.expirationTime && time >= message.expirationTime) return false\n  if (message.notBefore && time < message.notBefore) return false\n\n  try {\n    if (!message.address) return false\n    if (!isAddress(message.address, { strict: false })) return false\n    if (address && !isAddressEqual(message.address, address)) return false\n  } catch {\n    return false\n  }\n\n  return true\n}\n","import {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../errors/address.js'\nimport {\n  InvalidBytesLengthError,\n  type InvalidBytesLengthErrorType,\n} from '../errors/data.js'\nimport {\n  AccountStateConflictError,\n  type AccountStateConflictErrorType,\n  StateAssignmentConflictError,\n  type StateAssignmentConflictErrorType,\n} from '../errors/stateOverride.js'\nimport type {\n  RpcAccountStateOverride,\n  RpcStateMapping,\n  RpcStateOverride,\n} from '../types/rpc.js'\nimport type { StateMapping, StateOverride } from '../types/stateOverride.js'\nimport { isAddress } from './address/isAddress.js'\nimport { type NumberToHexErrorType, numberToHex } from './encoding/toHex.js'\n\ntype SerializeStateMappingParameters = StateMapping | undefined\n\ntype SerializeStateMappingErrorType = InvalidBytesLengthErrorType\n\n/** @internal */\nexport function serializeStateMapping(\n  stateMapping: SerializeStateMappingParameters,\n): RpcStateMapping | undefined {\n  if (!stateMapping || stateMapping.length === 0) return undefined\n  return stateMapping.reduce((acc, { slot, value }) => {\n    if (slot.length !== 66)\n      throw new InvalidBytesLengthError({\n        size: slot.length,\n        targetSize: 66,\n        type: 'hex',\n      })\n    if (value.length !== 66)\n      throw new InvalidBytesLengthError({\n        size: value.length,\n        targetSize: 66,\n        type: 'hex',\n      })\n    acc[slot] = value\n    return acc\n  }, {} as RpcStateMapping)\n}\n\ntype SerializeAccountStateOverrideParameters = Omit<\n  StateOverride[number],\n  'address'\n>\n\ntype SerializeAccountStateOverrideErrorType =\n  | NumberToHexErrorType\n  | StateAssignmentConflictErrorType\n  | SerializeStateMappingErrorType\n\n/** @internal */\nexport function serializeAccountStateOverride(\n  parameters: SerializeAccountStateOverrideParameters,\n): RpcAccountStateOverride {\n  const { balance, nonce, state, stateDiff, code } = parameters\n  const rpcAccountStateOverride: RpcAccountStateOverride = {}\n  if (code !== undefined) rpcAccountStateOverride.code = code\n  if (balance !== undefined)\n    rpcAccountStateOverride.balance = numberToHex(balance)\n  if (nonce !== undefined) rpcAccountStateOverride.nonce = numberToHex(nonce)\n  if (state !== undefined)\n    rpcAccountStateOverride.state = serializeStateMapping(state)\n  if (stateDiff !== undefined) {\n    if (rpcAccountStateOverride.state) throw new StateAssignmentConflictError()\n    rpcAccountStateOverride.stateDiff = serializeStateMapping(stateDiff)\n  }\n  return rpcAccountStateOverride\n}\n\ntype SerializeStateOverrideParameters = StateOverride | undefined\n\nexport type SerializeStateOverrideErrorType =\n  | InvalidAddressErrorType\n  | AccountStateConflictErrorType\n  | SerializeAccountStateOverrideErrorType\n\n/** @internal */\nexport function serializeStateOverride(\n  parameters?: SerializeStateOverrideParameters,\n): RpcStateOverride | undefined {\n  if (!parameters) return undefined\n  const rpcStateOverride: RpcStateOverride = {}\n  for (const { address, ...accountState } of parameters) {\n    if (!isAddress(address, { strict: false }))\n      throw new InvalidAddressError({ address })\n    if (rpcStateOverride[address])\n      throw new AccountStateConflictError({ address: address })\n    rpcStateOverride[address] = serializeAccountStateOverride(accountState)\n  }\n  return rpcStateOverride\n}\n","import type { ErrorType } from '../errors/utils.js'\n\nexport type StringifyErrorType = ErrorType\n\nexport const stringify: typeof JSON.stringify = (value, replacer, space) =>\n  JSON.stringify(\n    value,\n    (key, value_) => {\n      const value = typeof value_ === 'bigint' ? value_.toString() : value_\n      return typeof replacer === 'function' ? replacer(key, value) : value\n    },\n    space,\n  )\n","import {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { SendTransactionParameters } from '../../actions/wallet/sendTransaction.js'\nimport { maxUint256 } from '../../constants/number.js'\nimport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport {\n  FeeCapTooHighError,\n  type FeeCapTooHighErrorType,\n  TipAboveFeeCapError,\n  type TipAboveFeeCapErrorType,\n} from '../../errors/node.js'\nimport {\n  FeeConflictError,\n  type FeeConflictErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { ExactPartial } from '../../types/utils.js'\nimport { isAddress } from '../address/isAddress.js'\n\nexport type AssertRequestParameters = ExactPartial<\n  SendTransactionParameters<Chain>\n>\n\nexport type AssertRequestErrorType =\n  | InvalidAddressErrorType\n  | FeeConflictErrorType\n  | FeeCapTooHighErrorType\n  | ParseAccountErrorType\n  | TipAboveFeeCapErrorType\n  | ErrorType\n\nexport function assertRequest(args: AssertRequestParameters) {\n  const {\n    account: account_,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    to,\n  } = args\n  const account = account_ ? parseAccount(account_) : undefined\n  if (account && !isAddress(account.address))\n    throw new InvalidAddressError({ address: account.address })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (\n    typeof gasPrice !== 'undefined' &&\n    (typeof maxFeePerGas !== 'undefined' ||\n      typeof maxPriorityFeePerGas !== 'undefined')\n  )\n    throw new FeeConflictError()\n\n  if (maxFeePerGas && maxFeePerGas > maxUint256)\n    throw new FeeCapTooHighError({ maxFeePerGas })\n  if (\n    maxPriorityFeePerGas &&\n    maxFeePerGas &&\n    maxPriorityFeePerGas > maxFeePerGas\n  )\n    throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas })\n}\n","import { versionedHashVersionKzg } from '../../constants/kzg.js'\nimport { maxUint256 } from '../../constants/number.js'\nimport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport { BaseError, type BaseErrorType } from '../../errors/base.js'\nimport {\n  EmptyBlobError,\n  type EmptyBlobErrorType,\n  InvalidVersionedHashSizeError,\n  type InvalidVersionedHashSizeErrorType,\n  InvalidVersionedHashVersionError,\n  type InvalidVersionedHashVersionErrorType,\n} from '../../errors/blob.js'\nimport {\n  InvalidChainIdError,\n  type InvalidChainIdErrorType,\n} from '../../errors/chain.js'\nimport {\n  FeeCapTooHighError,\n  type FeeCapTooHighErrorType,\n  TipAboveFeeCapError,\n  type TipAboveFeeCapErrorType,\n} from '../../errors/node.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  TransactionSerializableEIP1559,\n  TransactionSerializableEIP2930,\n  TransactionSerializableEIP4844,\n  TransactionSerializableEIP7702,\n  TransactionSerializableLegacy,\n} from '../../types/transaction.js'\nimport { type IsAddressErrorType, isAddress } from '../address/isAddress.js'\nimport { size } from '../data/size.js'\nimport { slice } from '../data/slice.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\n\nexport type AssertTransactionEIP7702ErrorType =\n  | AssertTransactionEIP1559ErrorType\n  | InvalidAddressErrorType\n  | InvalidChainIdErrorType\n  | ErrorType\n\nexport function assertTransactionEIP7702(\n  transaction: TransactionSerializableEIP7702,\n) {\n  const { authorizationList } = transaction\n  if (authorizationList) {\n    for (const authorization of authorizationList) {\n      const { chainId } = authorization\n      const address = authorization.address\n      if (!isAddress(address)) throw new InvalidAddressError({ address })\n      if (chainId < 0) throw new InvalidChainIdError({ chainId })\n    }\n  }\n  assertTransactionEIP1559(transaction as {} as TransactionSerializableEIP1559)\n}\n\nexport type AssertTransactionEIP4844ErrorType =\n  | AssertTransactionEIP1559ErrorType\n  | EmptyBlobErrorType\n  | InvalidVersionedHashSizeErrorType\n  | InvalidVersionedHashVersionErrorType\n  | ErrorType\n\nexport function assertTransactionEIP4844(\n  transaction: TransactionSerializableEIP4844,\n) {\n  const { blobVersionedHashes } = transaction\n  if (blobVersionedHashes) {\n    if (blobVersionedHashes.length === 0) throw new EmptyBlobError()\n    for (const hash of blobVersionedHashes) {\n      const size_ = size(hash)\n      const version = hexToNumber(slice(hash, 0, 1))\n      if (size_ !== 32)\n        throw new InvalidVersionedHashSizeError({ hash, size: size_ })\n      if (version !== versionedHashVersionKzg)\n        throw new InvalidVersionedHashVersionError({\n          hash,\n          version,\n        })\n    }\n  }\n  assertTransactionEIP1559(transaction as {} as TransactionSerializableEIP1559)\n}\n\nexport type AssertTransactionEIP1559ErrorType =\n  | BaseErrorType\n  | IsAddressErrorType\n  | InvalidAddressErrorType\n  | InvalidChainIdErrorType\n  | FeeCapTooHighErrorType\n  | TipAboveFeeCapErrorType\n  | ErrorType\n\nexport function assertTransactionEIP1559(\n  transaction: TransactionSerializableEIP1559,\n) {\n  const { chainId, maxPriorityFeePerGas, maxFeePerGas, to } = transaction\n  if (chainId <= 0) throw new InvalidChainIdError({ chainId })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (maxFeePerGas && maxFeePerGas > maxUint256)\n    throw new FeeCapTooHighError({ maxFeePerGas })\n  if (\n    maxPriorityFeePerGas &&\n    maxFeePerGas &&\n    maxPriorityFeePerGas > maxFeePerGas\n  )\n    throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas })\n}\n\nexport type AssertTransactionEIP2930ErrorType =\n  | BaseErrorType\n  | IsAddressErrorType\n  | InvalidAddressErrorType\n  | InvalidChainIdErrorType\n  | FeeCapTooHighErrorType\n  | ErrorType\n\nexport function assertTransactionEIP2930(\n  transaction: TransactionSerializableEIP2930,\n) {\n  const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to } =\n    transaction\n  if (chainId <= 0) throw new InvalidChainIdError({ chainId })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (maxPriorityFeePerGas || maxFeePerGas)\n    throw new BaseError(\n      '`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute.',\n    )\n  if (gasPrice && gasPrice > maxUint256)\n    throw new FeeCapTooHighError({ maxFeePerGas: gasPrice })\n}\n\nexport type AssertTransactionLegacyErrorType =\n  | BaseErrorType\n  | IsAddressErrorType\n  | InvalidAddressErrorType\n  | InvalidChainIdErrorType\n  | FeeCapTooHighErrorType\n  | ErrorType\n\nexport function assertTransactionLegacy(\n  transaction: TransactionSerializableLegacy,\n) {\n  const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to } =\n    transaction\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (typeof chainId !== 'undefined' && chainId <= 0)\n    throw new InvalidChainIdError({ chainId })\n  if (maxPriorityFeePerGas || maxFeePerGas)\n    throw new BaseError(\n      '`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute.',\n    )\n  if (gasPrice && gasPrice > maxUint256)\n    throw new FeeCapTooHighError({ maxFeePerGas: gasPrice })\n}\n","import {\n  InvalidSerializedTransactionTypeError,\n  type InvalidSerializedTransactionTypeErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../index.js'\nimport type {\n  TransactionSerialized,\n  TransactionSerializedEIP1559,\n  TransactionSerializedEIP2930,\n  TransactionSerializedEIP4844,\n  TransactionSerializedEIP7702,\n  TransactionSerializedGeneric,\n  TransactionSerializedLegacy,\n  TransactionType,\n} from '../../types/transaction.js'\nimport type { IsNarrowable, IsNever } from '../../types/utils.js'\nimport { type SliceHexErrorType, sliceHex } from '../data/slice.js'\nimport { type HexToNumberErrorType, hexToNumber } from '../encoding/fromHex.js'\n\nexport type GetSerializedTransactionType<\n  serializedTransaction extends\n    TransactionSerializedGeneric = TransactionSerialized,\n  result =\n    | (serializedTransaction extends TransactionSerializedEIP1559\n        ? 'eip1559'\n        : never)\n    | (serializedTransaction extends TransactionSerializedEIP2930\n        ? 'eip2930'\n        : never)\n    | (serializedTransaction extends TransactionSerializedEIP4844\n        ? 'eip4844'\n        : never)\n    | (serializedTransaction extends TransactionSerializedEIP7702\n        ? 'eip7702'\n        : never)\n    | (serializedTransaction extends TransactionSerializedLegacy\n        ? 'legacy'\n        : never),\n> = IsNarrowable<serializedTransaction, Hex> extends true\n  ? IsNever<result> extends false\n    ? result\n    : 'legacy'\n  : TransactionType\n\nexport type GetSerializedTransactionTypeErrorType =\n  | HexToNumberErrorType\n  | InvalidSerializedTransactionTypeErrorType\n  | SliceHexErrorType\n  | ErrorType\n\nexport function getSerializedTransactionType<\n  const serializedTransaction extends TransactionSerializedGeneric,\n>(\n  serializedTransaction: serializedTransaction,\n): GetSerializedTransactionType<serializedTransaction> {\n  const serializedType = sliceHex(serializedTransaction, 0, 1)\n\n  if (serializedType === '0x04')\n    return 'eip7702' as GetSerializedTransactionType<serializedTransaction>\n\n  if (serializedType === '0x03')\n    return 'eip4844' as GetSerializedTransactionType<serializedTransaction>\n\n  if (serializedType === '0x02')\n    return 'eip1559' as GetSerializedTransactionType<serializedTransaction>\n\n  if (serializedType === '0x01')\n    return 'eip2930' as GetSerializedTransactionType<serializedTransaction>\n\n  if (serializedType !== '0x' && hexToNumber(serializedType) >= 0xc0)\n    return 'legacy' as GetSerializedTransactionType<serializedTransaction>\n\n  throw new InvalidSerializedTransactionTypeError({ serializedType })\n}\n","import {\n  InvalidSerializableTransactionError,\n  type InvalidSerializableTransactionErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  FeeValuesEIP1559,\n  FeeValuesEIP4844,\n  FeeValuesLegacy,\n} from '../../index.js'\nimport type {\n  TransactionRequestGeneric,\n  TransactionSerializableEIP2930,\n  TransactionSerializableEIP4844,\n  TransactionSerializableEIP7702,\n  TransactionSerializableGeneric,\n} from '../../types/transaction.js'\nimport type { Assign, ExactPartial, IsNever, OneOf } from '../../types/utils.js'\n\nexport type GetTransactionType<\n  transaction extends OneOf<\n    TransactionSerializableGeneric | TransactionRequestGeneric\n  > = TransactionSerializableGeneric,\n  result =\n    | (transaction extends LegacyProperties ? 'legacy' : never)\n    | (transaction extends EIP1559Properties ? 'eip1559' : never)\n    | (transaction extends EIP2930Properties ? 'eip2930' : never)\n    | (transaction extends EIP4844Properties ? 'eip4844' : never)\n    | (transaction extends EIP7702Properties ? 'eip7702' : never)\n    | (transaction['type'] extends TransactionSerializableGeneric['type']\n        ? Extract<transaction['type'], string>\n        : never),\n> = IsNever<keyof transaction> extends true\n  ? string\n  : IsNever<result> extends false\n    ? result\n    : string\n\nexport type GetTransactionTypeErrorType =\n  | InvalidSerializableTransactionErrorType\n  | ErrorType\n\nexport function getTransactionType<\n  const transaction extends OneOf<\n    TransactionSerializableGeneric | TransactionRequestGeneric\n  >,\n>(transaction: transaction): GetTransactionType<transaction> {\n  if (transaction.type)\n    return transaction.type as GetTransactionType<transaction>\n\n  if (typeof transaction.authorizationList !== 'undefined')\n    return 'eip7702' as any\n\n  if (\n    typeof transaction.blobs !== 'undefined' ||\n    typeof transaction.blobVersionedHashes !== 'undefined' ||\n    typeof transaction.maxFeePerBlobGas !== 'undefined' ||\n    typeof transaction.sidecars !== 'undefined'\n  )\n    return 'eip4844' as any\n\n  if (\n    typeof transaction.maxFeePerGas !== 'undefined' ||\n    typeof transaction.maxPriorityFeePerGas !== 'undefined'\n  ) {\n    return 'eip1559' as any\n  }\n\n  if (typeof transaction.gasPrice !== 'undefined') {\n    if (typeof transaction.accessList !== 'undefined') return 'eip2930' as any\n    return 'legacy' as any\n  }\n\n  throw new InvalidSerializableTransactionError({ transaction })\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////\n// Types\n\ntype BaseProperties = {\n  accessList?: undefined\n  authorizationList?: undefined\n  blobs?: undefined\n  blobVersionedHashes?: undefined\n  gasPrice?: undefined\n  maxFeePerBlobGas?: undefined\n  maxFeePerGas?: undefined\n  maxPriorityFeePerGas?: undefined\n  sidecars?: undefined\n}\n\ntype LegacyProperties = Assign<BaseProperties, FeeValuesLegacy>\ntype EIP1559Properties = Assign<\n  BaseProperties,\n  OneOf<\n    | {\n        maxFeePerGas: FeeValuesEIP1559['maxFeePerGas']\n      }\n    | {\n        maxPriorityFeePerGas: FeeValuesEIP1559['maxPriorityFeePerGas']\n      },\n    FeeValuesEIP1559\n  > & {\n    accessList?: TransactionSerializableEIP2930['accessList'] | undefined\n  }\n>\ntype EIP2930Properties = Assign<\n  ExactPartial<LegacyProperties>,\n  {\n    accessList: TransactionSerializableEIP2930['accessList']\n  }\n>\ntype EIP4844Properties = Assign<\n  ExactPartial<EIP1559Properties>,\n  ExactPartial<FeeValuesEIP4844> &\n    OneOf<\n      | {\n          blobs: TransactionSerializableEIP4844['blobs']\n        }\n      | {\n          blobVersionedHashes: TransactionSerializableEIP4844['blobVersionedHashes']\n        }\n      | {\n          sidecars: TransactionSerializableEIP4844['sidecars']\n        },\n      TransactionSerializableEIP4844\n    >\n>\ntype EIP7702Properties = Assign<\n  ExactPartial<EIP1559Properties>,\n  {\n    authorizationList: TransactionSerializableEIP7702['authorizationList']\n  }\n>\n","import {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport {\n  InvalidLegacyVError,\n  type InvalidLegacyVErrorType,\n  InvalidSerializedTransactionError,\n  type InvalidSerializedTransactionErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  SerializedAuthorizationList,\n  SignedAuthorizationList,\n} from '../../types/authorization.js'\nimport type { Hex, Signature } from '../../types/misc.js'\nimport type {\n  AccessList,\n  TransactionRequestEIP2930,\n  TransactionRequestLegacy,\n  TransactionSerializable,\n  TransactionSerializableEIP1559,\n  TransactionSerializableEIP2930,\n  TransactionSerializableEIP4844,\n  TransactionSerializableEIP7702,\n  TransactionSerializableLegacy,\n  TransactionSerialized,\n  TransactionSerializedEIP1559,\n  TransactionSerializedEIP2930,\n  TransactionSerializedEIP4844,\n  TransactionSerializedEIP7702,\n  TransactionSerializedGeneric,\n  TransactionType,\n} from '../../types/transaction.js'\nimport type { IsNarrowable, Mutable } from '../../types/utils.js'\nimport { type IsAddressErrorType, isAddress } from '../address/isAddress.js'\nimport { toBlobSidecars } from '../blob/toBlobSidecars.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { type PadHexErrorType, padHex } from '../data/pad.js'\nimport { trim } from '../data/trim.js'\nimport {\n  type HexToBigIntErrorType,\n  type HexToNumberErrorType,\n  hexToBigInt,\n  hexToNumber,\n} from '../encoding/fromHex.js'\nimport { type FromRlpErrorType, fromRlp } from '../encoding/fromRlp.js'\nimport type { RecursiveArray } from '../encoding/toRlp.js'\nimport { isHash } from '../hash/isHash.js'\n\nimport {\n  type AssertTransactionEIP1559ErrorType,\n  type AssertTransactionEIP2930ErrorType,\n  type AssertTransactionEIP4844ErrorType,\n  type AssertTransactionEIP7702ErrorType,\n  type AssertTransactionLegacyErrorType,\n  assertTransactionEIP1559,\n  assertTransactionEIP2930,\n  assertTransactionEIP4844,\n  assertTransactionEIP7702,\n  assertTransactionLegacy,\n} from './assertTransaction.js'\nimport {\n  type GetSerializedTransactionType,\n  type GetSerializedTransactionTypeErrorType,\n  getSerializedTransactionType,\n} from './getSerializedTransactionType.js'\n\nexport type ParseTransactionReturnType<\n  serialized extends TransactionSerializedGeneric = TransactionSerialized,\n  type extends TransactionType = GetSerializedTransactionType<serialized>,\n> = IsNarrowable<serialized, Hex> extends true\n  ?\n      | (type extends 'eip1559' ? TransactionSerializableEIP1559 : never)\n      | (type extends 'eip2930' ? TransactionSerializableEIP2930 : never)\n      | (type extends 'eip4844' ? TransactionSerializableEIP4844 : never)\n      | (type extends 'eip7702' ? TransactionSerializableEIP7702 : never)\n      | (type extends 'legacy' ? TransactionSerializableLegacy : never)\n  : TransactionSerializable\n\nexport type ParseTransactionErrorType =\n  | GetSerializedTransactionTypeErrorType\n  | ParseTransactionEIP1559ErrorType\n  | ParseTransactionEIP2930ErrorType\n  | ParseTransactionEIP4844ErrorType\n  | ParseTransactionEIP7702ErrorType\n  | ParseTransactionLegacyErrorType\n\nexport function parseTransaction<\n  const serialized extends TransactionSerializedGeneric,\n>(serializedTransaction: serialized): ParseTransactionReturnType<serialized> {\n  const type = getSerializedTransactionType(serializedTransaction)\n\n  if (type === 'eip1559')\n    return parseTransactionEIP1559(\n      serializedTransaction as TransactionSerializedEIP1559,\n    ) as ParseTransactionReturnType<serialized>\n\n  if (type === 'eip2930')\n    return parseTransactionEIP2930(\n      serializedTransaction as TransactionSerializedEIP2930,\n    ) as ParseTransactionReturnType<serialized>\n\n  if (type === 'eip4844')\n    return parseTransactionEIP4844(\n      serializedTransaction as TransactionSerializedEIP4844,\n    ) as ParseTransactionReturnType<serialized>\n\n  if (type === 'eip7702')\n    return parseTransactionEIP7702(\n      serializedTransaction as TransactionSerializedEIP7702,\n    ) as ParseTransactionReturnType<serialized>\n\n  return parseTransactionLegacy(\n    serializedTransaction,\n  ) as ParseTransactionReturnType<serialized>\n}\n\ntype ParseTransactionEIP7702ErrorType =\n  | ToTransactionArrayErrorType\n  | AssertTransactionEIP7702ErrorType\n  | ToTransactionArrayErrorType\n  | HexToBigIntErrorType\n  | HexToNumberErrorType\n  | InvalidLegacyVErrorType\n  | InvalidSerializedTransactionErrorType\n  | IsHexErrorType\n  | ParseAuthorizationListErrorType\n  | ParseEIP155SignatureErrorType\n  | ErrorType\n\nfunction parseTransactionEIP7702(\n  serializedTransaction: TransactionSerializedEIP7702,\n): TransactionSerializableEIP7702 {\n  const transactionArray = toTransactionArray(serializedTransaction)\n\n  const [\n    chainId,\n    nonce,\n    maxPriorityFeePerGas,\n    maxFeePerGas,\n    gas,\n    to,\n    value,\n    data,\n    accessList,\n    authorizationList,\n    v,\n    r,\n    s,\n  ] = transactionArray\n\n  if (transactionArray.length !== 10 && transactionArray.length !== 13)\n    throw new InvalidSerializedTransactionError({\n      attributes: {\n        chainId,\n        nonce,\n        maxPriorityFeePerGas,\n        maxFeePerGas,\n        gas,\n        to,\n        value,\n        data,\n        accessList,\n        authorizationList,\n        ...(transactionArray.length > 9\n          ? {\n              v,\n              r,\n              s,\n            }\n          : {}),\n      },\n      serializedTransaction,\n      type: 'eip7702',\n    })\n\n  const transaction = {\n    chainId: hexToNumber(chainId as Hex),\n    type: 'eip7702',\n  } as TransactionSerializableEIP7702\n  if (isHex(to) && to !== '0x') transaction.to = to\n  if (isHex(gas) && gas !== '0x') transaction.gas = hexToBigInt(gas)\n  if (isHex(data) && data !== '0x') transaction.data = data\n  if (isHex(nonce) && nonce !== '0x') transaction.nonce = hexToNumber(nonce)\n  if (isHex(value) && value !== '0x') transaction.value = hexToBigInt(value)\n  if (isHex(maxFeePerGas) && maxFeePerGas !== '0x')\n    transaction.maxFeePerGas = hexToBigInt(maxFeePerGas)\n  if (isHex(maxPriorityFeePerGas) && maxPriorityFeePerGas !== '0x')\n    transaction.maxPriorityFeePerGas = hexToBigInt(maxPriorityFeePerGas)\n  if (accessList.length !== 0 && accessList !== '0x')\n    transaction.accessList = parseAccessList(accessList as RecursiveArray<Hex>)\n  if (authorizationList.length !== 0 && authorizationList !== '0x')\n    transaction.authorizationList = parseAuthorizationList(\n      authorizationList as SerializedAuthorizationList,\n    )\n\n  assertTransactionEIP7702(transaction)\n\n  const signature =\n    transactionArray.length === 13\n      ? parseEIP155Signature(transactionArray as RecursiveArray<Hex>)\n      : undefined\n\n  return { ...signature, ...transaction }\n}\n\ntype ParseTransactionEIP4844ErrorType =\n  | ToTransactionArrayErrorType\n  | AssertTransactionEIP4844ErrorType\n  | ToTransactionArrayErrorType\n  | HexToBigIntErrorType\n  | HexToNumberErrorType\n  | InvalidLegacyVErrorType\n  | InvalidSerializedTransactionErrorType\n  | IsHexErrorType\n  | ParseEIP155SignatureErrorType\n  | ErrorType\n\nfunction parseTransactionEIP4844(\n  serializedTransaction: TransactionSerializedEIP4844,\n): TransactionSerializableEIP4844 {\n  const transactionOrWrapperArray = toTransactionArray(serializedTransaction)\n\n  const hasNetworkWrapper = transactionOrWrapperArray.length === 4\n\n  const transactionArray = hasNetworkWrapper\n    ? transactionOrWrapperArray[0]\n    : transactionOrWrapperArray\n  const wrapperArray = hasNetworkWrapper\n    ? transactionOrWrapperArray.slice(1)\n    : []\n\n  const [\n    chainId,\n    nonce,\n    maxPriorityFeePerGas,\n    maxFeePerGas,\n    gas,\n    to,\n    value,\n    data,\n    accessList,\n    maxFeePerBlobGas,\n    blobVersionedHashes,\n    v,\n    r,\n    s,\n  ] = transactionArray\n  const [blobs, commitments, proofs] = wrapperArray\n\n  if (!(transactionArray.length === 11 || transactionArray.length === 14))\n    throw new InvalidSerializedTransactionError({\n      attributes: {\n        chainId,\n        nonce,\n        maxPriorityFeePerGas,\n        maxFeePerGas,\n        gas,\n        to,\n        value,\n        data,\n        accessList,\n        ...(transactionArray.length > 9\n          ? {\n              v,\n              r,\n              s,\n            }\n          : {}),\n      },\n      serializedTransaction,\n      type: 'eip4844',\n    })\n\n  const transaction = {\n    blobVersionedHashes: blobVersionedHashes as Hex[],\n    chainId: hexToNumber(chainId as Hex),\n    type: 'eip4844',\n  } as TransactionSerializableEIP4844\n  if (isHex(to) && to !== '0x') transaction.to = to\n  if (isHex(gas) && gas !== '0x') transaction.gas = hexToBigInt(gas)\n  if (isHex(data) && data !== '0x') transaction.data = data\n  if (isHex(nonce) && nonce !== '0x') transaction.nonce = hexToNumber(nonce)\n  if (isHex(value) && value !== '0x') transaction.value = hexToBigInt(value)\n  if (isHex(maxFeePerBlobGas) && maxFeePerBlobGas !== '0x')\n    transaction.maxFeePerBlobGas = hexToBigInt(maxFeePerBlobGas)\n  if (isHex(maxFeePerGas) && maxFeePerGas !== '0x')\n    transaction.maxFeePerGas = hexToBigInt(maxFeePerGas)\n  if (isHex(maxPriorityFeePerGas) && maxPriorityFeePerGas !== '0x')\n    transaction.maxPriorityFeePerGas = hexToBigInt(maxPriorityFeePerGas)\n  if (accessList.length !== 0 && accessList !== '0x')\n    transaction.accessList = parseAccessList(accessList as RecursiveArray<Hex>)\n  if (blobs && commitments && proofs)\n    transaction.sidecars = toBlobSidecars({\n      blobs: blobs as Hex[],\n      commitments: commitments as Hex[],\n      proofs: proofs as Hex[],\n    })\n\n  assertTransactionEIP4844(transaction)\n\n  const signature =\n    transactionArray.length === 14\n      ? parseEIP155Signature(transactionArray as RecursiveArray<Hex>)\n      : undefined\n\n  return { ...signature, ...transaction }\n}\n\ntype ParseTransactionEIP1559ErrorType =\n  | ToTransactionArrayErrorType\n  | AssertTransactionEIP1559ErrorType\n  | ToTransactionArrayErrorType\n  | HexToBigIntErrorType\n  | HexToNumberErrorType\n  | InvalidLegacyVErrorType\n  | InvalidSerializedTransactionErrorType\n  | IsHexErrorType\n  | ParseEIP155SignatureErrorType\n  | ParseAccessListErrorType\n  | ErrorType\n\nfunction parseTransactionEIP1559(\n  serializedTransaction: TransactionSerializedEIP1559,\n): TransactionSerializableEIP1559 {\n  const transactionArray = toTransactionArray(serializedTransaction)\n\n  const [\n    chainId,\n    nonce,\n    maxPriorityFeePerGas,\n    maxFeePerGas,\n    gas,\n    to,\n    value,\n    data,\n    accessList,\n    v,\n    r,\n    s,\n  ] = transactionArray\n\n  if (!(transactionArray.length === 9 || transactionArray.length === 12))\n    throw new InvalidSerializedTransactionError({\n      attributes: {\n        chainId,\n        nonce,\n        maxPriorityFeePerGas,\n        maxFeePerGas,\n        gas,\n        to,\n        value,\n        data,\n        accessList,\n        ...(transactionArray.length > 9\n          ? {\n              v,\n              r,\n              s,\n            }\n          : {}),\n      },\n      serializedTransaction,\n      type: 'eip1559',\n    })\n\n  const transaction: TransactionSerializableEIP1559 = {\n    chainId: hexToNumber(chainId as Hex),\n    type: 'eip1559',\n  }\n  if (isHex(to) && to !== '0x') transaction.to = to\n  if (isHex(gas) && gas !== '0x') transaction.gas = hexToBigInt(gas)\n  if (isHex(data) && data !== '0x') transaction.data = data\n  if (isHex(nonce) && nonce !== '0x') transaction.nonce = hexToNumber(nonce)\n  if (isHex(value) && value !== '0x') transaction.value = hexToBigInt(value)\n  if (isHex(maxFeePerGas) && maxFeePerGas !== '0x')\n    transaction.maxFeePerGas = hexToBigInt(maxFeePerGas)\n  if (isHex(maxPriorityFeePerGas) && maxPriorityFeePerGas !== '0x')\n    transaction.maxPriorityFeePerGas = hexToBigInt(maxPriorityFeePerGas)\n  if (accessList.length !== 0 && accessList !== '0x')\n    transaction.accessList = parseAccessList(accessList as RecursiveArray<Hex>)\n\n  assertTransactionEIP1559(transaction)\n\n  const signature =\n    transactionArray.length === 12\n      ? parseEIP155Signature(transactionArray)\n      : undefined\n\n  return { ...signature, ...transaction }\n}\n\ntype ParseTransactionEIP2930ErrorType =\n  | ToTransactionArrayErrorType\n  | AssertTransactionEIP2930ErrorType\n  | ToTransactionArrayErrorType\n  | HexToBigIntErrorType\n  | HexToNumberErrorType\n  | InvalidLegacyVErrorType\n  | InvalidSerializedTransactionErrorType\n  | IsHexErrorType\n  | ParseEIP155SignatureErrorType\n  | ParseAccessListErrorType\n  | ErrorType\n\nfunction parseTransactionEIP2930(\n  serializedTransaction: TransactionSerializedEIP2930,\n): Omit<TransactionRequestEIP2930, 'from'> &\n  ({ chainId: number } | ({ chainId: number } & Signature)) {\n  const transactionArray = toTransactionArray(serializedTransaction)\n\n  const [chainId, nonce, gasPrice, gas, to, value, data, accessList, v, r, s] =\n    transactionArray\n\n  if (!(transactionArray.length === 8 || transactionArray.length === 11))\n    throw new InvalidSerializedTransactionError({\n      attributes: {\n        chainId,\n        nonce,\n        gasPrice,\n        gas,\n        to,\n        value,\n        data,\n        accessList,\n        ...(transactionArray.length > 8\n          ? {\n              v,\n              r,\n              s,\n            }\n          : {}),\n      },\n      serializedTransaction,\n      type: 'eip2930',\n    })\n\n  const transaction: TransactionSerializableEIP2930 = {\n    chainId: hexToNumber(chainId as Hex),\n    type: 'eip2930',\n  }\n  if (isHex(to) && to !== '0x') transaction.to = to\n  if (isHex(gas) && gas !== '0x') transaction.gas = hexToBigInt(gas)\n  if (isHex(data) && data !== '0x') transaction.data = data\n  if (isHex(nonce) && nonce !== '0x') transaction.nonce = hexToNumber(nonce)\n  if (isHex(value) && value !== '0x') transaction.value = hexToBigInt(value)\n  if (isHex(gasPrice) && gasPrice !== '0x')\n    transaction.gasPrice = hexToBigInt(gasPrice)\n  if (accessList.length !== 0 && accessList !== '0x')\n    transaction.accessList = parseAccessList(accessList as RecursiveArray<Hex>)\n\n  assertTransactionEIP2930(transaction)\n\n  const signature =\n    transactionArray.length === 11\n      ? parseEIP155Signature(transactionArray)\n      : undefined\n\n  return { ...signature, ...transaction }\n}\n\ntype ParseTransactionLegacyErrorType =\n  | AssertTransactionLegacyErrorType\n  | FromRlpErrorType\n  | HexToBigIntErrorType\n  | HexToNumberErrorType\n  | InvalidLegacyVErrorType\n  | InvalidSerializedTransactionErrorType\n  | IsHexErrorType\n  | ErrorType\n\nfunction parseTransactionLegacy(\n  serializedTransaction: Hex,\n): Omit<TransactionRequestLegacy, 'from'> &\n  ({ chainId?: number | undefined } | ({ chainId: number } & Signature)) {\n  const transactionArray = fromRlp(serializedTransaction, 'hex')\n\n  const [nonce, gasPrice, gas, to, value, data, chainIdOrV_, r, s] =\n    transactionArray\n\n  if (!(transactionArray.length === 6 || transactionArray.length === 9))\n    throw new InvalidSerializedTransactionError({\n      attributes: {\n        nonce,\n        gasPrice,\n        gas,\n        to,\n        value,\n        data,\n        ...(transactionArray.length > 6\n          ? {\n              v: chainIdOrV_,\n              r,\n              s,\n            }\n          : {}),\n      },\n      serializedTransaction,\n      type: 'legacy',\n    })\n\n  const transaction: TransactionSerializableLegacy = {\n    type: 'legacy',\n  }\n  if (isHex(to) && to !== '0x') transaction.to = to\n  if (isHex(gas) && gas !== '0x') transaction.gas = hexToBigInt(gas)\n  if (isHex(data) && data !== '0x') transaction.data = data\n  if (isHex(nonce) && nonce !== '0x') transaction.nonce = hexToNumber(nonce)\n  if (isHex(value) && value !== '0x') transaction.value = hexToBigInt(value)\n  if (isHex(gasPrice) && gasPrice !== '0x')\n    transaction.gasPrice = hexToBigInt(gasPrice)\n\n  assertTransactionLegacy(transaction)\n\n  if (transactionArray.length === 6) return transaction\n\n  const chainIdOrV =\n    isHex(chainIdOrV_) && chainIdOrV_ !== '0x'\n      ? hexToBigInt(chainIdOrV_ as Hex)\n      : 0n\n\n  if (s === '0x' && r === '0x') {\n    if (chainIdOrV > 0) transaction.chainId = Number(chainIdOrV)\n    return transaction\n  }\n\n  const v = chainIdOrV\n\n  const chainId: number | undefined = Number((v - 35n) / 2n)\n  if (chainId > 0) transaction.chainId = chainId\n  else if (v !== 27n && v !== 28n) throw new InvalidLegacyVError({ v })\n\n  transaction.v = v\n  transaction.s = s as Hex\n  transaction.r = r as Hex\n  transaction.yParity = v % 2n === 0n ? 1 : 0\n\n  return transaction\n}\n\ntype ToTransactionArrayErrorType = FromRlpErrorType | ErrorType\n\nexport function toTransactionArray(serializedTransaction: string) {\n  return fromRlp(`0x${serializedTransaction.slice(4)}` as Hex, 'hex')\n}\n\ntype ParseAccessListErrorType =\n  | InvalidAddressErrorType\n  | IsAddressErrorType\n  | ErrorType\n\nexport function parseAccessList(accessList_: RecursiveArray<Hex>): AccessList {\n  const accessList: Mutable<AccessList> = []\n  for (let i = 0; i < accessList_.length; i++) {\n    const [address, storageKeys] = accessList_[i] as [Hex, Hex[]]\n\n    if (!isAddress(address, { strict: false }))\n      throw new InvalidAddressError({ address })\n\n    accessList.push({\n      address: address,\n      storageKeys: storageKeys.map((key) => (isHash(key) ? key : trim(key))),\n    })\n  }\n  return accessList\n}\n\ntype ParseAuthorizationListErrorType =\n  | HexToNumberErrorType\n  | ParseEIP155SignatureErrorType\n  | ErrorType\n\nfunction parseAuthorizationList(\n  serializedAuthorizationList: SerializedAuthorizationList,\n): SignedAuthorizationList {\n  const authorizationList: Mutable<SignedAuthorizationList> = []\n  for (let i = 0; i < serializedAuthorizationList.length; i++) {\n    const [chainId, address, nonce, yParity, r, s] =\n      serializedAuthorizationList[i]\n\n    authorizationList.push({\n      address,\n      chainId: hexToNumber(chainId),\n      nonce: hexToNumber(nonce),\n      ...parseEIP155Signature([yParity, r, s]),\n    })\n  }\n  return authorizationList\n}\n\ntype ParseEIP155SignatureErrorType =\n  | HexToBigIntErrorType\n  | PadHexErrorType\n  | ErrorType\n\nfunction parseEIP155Signature(\n  transactionArray: RecursiveArray<Hex>,\n): Signature & { yParity: number } {\n  const signature = transactionArray.slice(-3)\n  const v =\n    signature[0] === '0x' || hexToBigInt(signature[0] as Hex) === 0n ? 27n : 28n\n  return {\n    r: padHex(signature[1] as Hex, { size: 32 }),\n    s: padHex(signature[2] as Hex, { size: 32 }),\n    v,\n    yParity: v === 27n ? 0 : 1,\n  }\n}\n","import {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport {\n  InvalidStorageKeySizeError,\n  type InvalidStorageKeySizeErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { AccessList } from '../../types/transaction.js'\nimport { type IsAddressErrorType, isAddress } from '../address/isAddress.js'\nimport type { RecursiveArray } from '../encoding/toRlp.js'\n\nexport type SerializeAccessListErrorType =\n  | InvalidStorageKeySizeErrorType\n  | InvalidAddressErrorType\n  | IsAddressErrorType\n  | ErrorType\n\n/*\n * Serialize an  EIP-2930 access list\n * @remarks\n * Use to create a transaction serializer with support for EIP-2930 access lists\n *\n * @param accessList - Array of objects of address and arrays of Storage Keys\n * @throws InvalidAddressError, InvalidStorageKeySizeError\n * @returns Array of hex strings\n */\nexport function serializeAccessList(\n  accessList?: AccessList | undefined,\n): RecursiveArray<Hex> {\n  if (!accessList || accessList.length === 0) return []\n\n  const serializedAccessList = []\n  for (let i = 0; i < accessList.length; i++) {\n    const { address, storageKeys } = accessList[i]\n\n    for (let j = 0; j < storageKeys.length; j++) {\n      if (storageKeys[j].length - 2 !== 64) {\n        throw new InvalidStorageKeySizeError({ storageKey: storageKeys[j] })\n      }\n    }\n\n    if (!isAddress(address, { strict: false })) {\n      throw new InvalidAddressError({ address })\n    }\n\n    serializedAccessList.push([address, storageKeys])\n  }\n  return serializedAccessList\n}\n","import {\n  InvalidLegacyVError,\n  type InvalidLegacyVErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  ByteArray,\n  Hex,\n  Signature,\n  SignatureLegacy,\n} from '../../types/misc.js'\nimport type {\n  TransactionSerializable,\n  TransactionSerializableEIP1559,\n  TransactionSerializableEIP2930,\n  TransactionSerializableEIP4844,\n  TransactionSerializableEIP7702,\n  TransactionSerializableGeneric,\n  TransactionSerializableLegacy,\n  TransactionSerialized,\n  TransactionSerializedEIP1559,\n  TransactionSerializedEIP2930,\n  TransactionSerializedEIP4844,\n  TransactionSerializedEIP7702,\n  TransactionSerializedLegacy,\n  TransactionType,\n} from '../../types/transaction.js'\nimport type { OneOf } from '../../types/utils.js'\nimport {\n  type SerializeAuthorizationListErrorType,\n  serializeAuthorizationList,\n} from '../authorization/serializeAuthorizationList.js'\nimport {\n  type BlobsToCommitmentsErrorType,\n  blobsToCommitments,\n} from '../blob/blobsToCommitments.js'\nimport {\n  blobsToProofs,\n  type blobsToProofsErrorType,\n} from '../blob/blobsToProofs.js'\nimport {\n  type CommitmentsToVersionedHashesErrorType,\n  commitmentsToVersionedHashes,\n} from '../blob/commitmentsToVersionedHashes.js'\nimport {\n  type ToBlobSidecarsErrorType,\n  toBlobSidecars,\n} from '../blob/toBlobSidecars.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\nimport { trim } from '../data/trim.js'\nimport { type ToHexErrorType, bytesToHex, toHex } from '../encoding/toHex.js'\nimport { type ToRlpErrorType, toRlp } from '../encoding/toRlp.js'\n\nimport {\n  type AssertTransactionEIP1559ErrorType,\n  type AssertTransactionEIP2930ErrorType,\n  type AssertTransactionEIP4844ErrorType,\n  type AssertTransactionEIP7702ErrorType,\n  type AssertTransactionLegacyErrorType,\n  assertTransactionEIP1559,\n  assertTransactionEIP2930,\n  assertTransactionEIP4844,\n  assertTransactionEIP7702,\n  assertTransactionLegacy,\n} from './assertTransaction.js'\nimport {\n  type GetTransactionType,\n  type GetTransactionTypeErrorType,\n  getTransactionType,\n} from './getTransactionType.js'\nimport {\n  type SerializeAccessListErrorType,\n  serializeAccessList,\n} from './serializeAccessList.js'\n\nexport type SerializedTransactionReturnType<\n  transaction extends TransactionSerializable = TransactionSerializable,\n  ///\n  _transactionType extends TransactionType = GetTransactionType<transaction>,\n> = TransactionSerialized<_transactionType>\n\nexport type SerializeTransactionFn<\n  transaction extends TransactionSerializableGeneric = TransactionSerializable,\n  ///\n  _transactionType extends TransactionType = never,\n> = typeof serializeTransaction<\n  OneOf<TransactionSerializable | transaction>,\n  _transactionType\n>\n\nexport type SerializeTransactionErrorType =\n  | GetTransactionTypeErrorType\n  | SerializeTransactionEIP1559ErrorType\n  | SerializeTransactionEIP2930ErrorType\n  | SerializeTransactionEIP4844ErrorType\n  | SerializeTransactionEIP7702ErrorType\n  | SerializeTransactionLegacyErrorType\n  | ErrorType\n\nexport function serializeTransaction<\n  const transaction extends TransactionSerializable,\n  ///\n  _transactionType extends TransactionType = GetTransactionType<transaction>,\n>(\n  transaction: transaction,\n  signature?: Signature | undefined,\n): SerializedTransactionReturnType<transaction, _transactionType> {\n  const type = getTransactionType(transaction) as GetTransactionType\n\n  if (type === 'eip1559')\n    return serializeTransactionEIP1559(\n      transaction as TransactionSerializableEIP1559,\n      signature,\n    ) as SerializedTransactionReturnType<transaction>\n\n  if (type === 'eip2930')\n    return serializeTransactionEIP2930(\n      transaction as TransactionSerializableEIP2930,\n      signature,\n    ) as SerializedTransactionReturnType<transaction>\n\n  if (type === 'eip4844')\n    return serializeTransactionEIP4844(\n      transaction as TransactionSerializableEIP4844,\n      signature,\n    ) as SerializedTransactionReturnType<transaction>\n\n  if (type === 'eip7702')\n    return serializeTransactionEIP7702(\n      transaction as TransactionSerializableEIP7702,\n      signature,\n    ) as SerializedTransactionReturnType<transaction>\n\n  return serializeTransactionLegacy(\n    transaction as TransactionSerializableLegacy,\n    signature as SignatureLegacy,\n  ) as SerializedTransactionReturnType<transaction>\n}\n\ntype SerializeTransactionEIP7702ErrorType =\n  | AssertTransactionEIP7702ErrorType\n  | SerializeAuthorizationListErrorType\n  | ConcatHexErrorType\n  | InvalidLegacyVErrorType\n  | ToHexErrorType\n  | ToRlpErrorType\n  | SerializeAccessListErrorType\n  | ErrorType\n\nfunction serializeTransactionEIP7702(\n  transaction: TransactionSerializableEIP7702,\n  signature?: Signature | undefined,\n): TransactionSerializedEIP7702 {\n  const {\n    authorizationList,\n    chainId,\n    gas,\n    nonce,\n    to,\n    value,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    accessList,\n    data,\n  } = transaction\n\n  assertTransactionEIP7702(transaction)\n\n  const serializedAccessList = serializeAccessList(accessList)\n  const serializedAuthorizationList =\n    serializeAuthorizationList(authorizationList)\n\n  return concatHex([\n    '0x04',\n    toRlp([\n      toHex(chainId),\n      nonce ? toHex(nonce) : '0x',\n      maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n      maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n      gas ? toHex(gas) : '0x',\n      to ?? '0x',\n      value ? toHex(value) : '0x',\n      data ?? '0x',\n      serializedAccessList,\n      serializedAuthorizationList,\n      ...toYParitySignatureArray(transaction, signature),\n    ]),\n  ]) as TransactionSerializedEIP7702\n}\n\ntype SerializeTransactionEIP4844ErrorType =\n  | AssertTransactionEIP4844ErrorType\n  | BlobsToCommitmentsErrorType\n  | CommitmentsToVersionedHashesErrorType\n  | blobsToProofsErrorType\n  | ToBlobSidecarsErrorType\n  | ConcatHexErrorType\n  | InvalidLegacyVErrorType\n  | ToHexErrorType\n  | ToRlpErrorType\n  | SerializeAccessListErrorType\n  | ErrorType\n\nfunction serializeTransactionEIP4844(\n  transaction: TransactionSerializableEIP4844,\n  signature?: Signature | undefined,\n): TransactionSerializedEIP4844 {\n  const {\n    chainId,\n    gas,\n    nonce,\n    to,\n    value,\n    maxFeePerBlobGas,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    accessList,\n    data,\n  } = transaction\n\n  assertTransactionEIP4844(transaction)\n\n  let blobVersionedHashes = transaction.blobVersionedHashes\n  let sidecars = transaction.sidecars\n  // If `blobs` are passed, we will need to compute the KZG commitments & proofs.\n  if (\n    transaction.blobs &&\n    (typeof blobVersionedHashes === 'undefined' ||\n      typeof sidecars === 'undefined')\n  ) {\n    const blobs = (\n      typeof transaction.blobs[0] === 'string'\n        ? transaction.blobs\n        : (transaction.blobs as ByteArray[]).map((x) => bytesToHex(x))\n    ) as Hex[]\n    const kzg = transaction.kzg!\n    const commitments = blobsToCommitments({\n      blobs,\n      kzg,\n    })\n\n    if (typeof blobVersionedHashes === 'undefined')\n      blobVersionedHashes = commitmentsToVersionedHashes({\n        commitments,\n      })\n    if (typeof sidecars === 'undefined') {\n      const proofs = blobsToProofs({ blobs, commitments, kzg })\n      sidecars = toBlobSidecars({ blobs, commitments, proofs })\n    }\n  }\n\n  const serializedAccessList = serializeAccessList(accessList)\n\n  const serializedTransaction = [\n    toHex(chainId),\n    nonce ? toHex(nonce) : '0x',\n    maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n    maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x',\n    serializedAccessList,\n    maxFeePerBlobGas ? toHex(maxFeePerBlobGas) : '0x',\n    blobVersionedHashes ?? [],\n    ...toYParitySignatureArray(transaction, signature),\n  ] as const\n\n  const blobs: Hex[] = []\n  const commitments: Hex[] = []\n  const proofs: Hex[] = []\n  if (sidecars)\n    for (let i = 0; i < sidecars.length; i++) {\n      const { blob, commitment, proof } = sidecars[i]\n      blobs.push(blob)\n      commitments.push(commitment)\n      proofs.push(proof)\n    }\n\n  return concatHex([\n    '0x03',\n    sidecars\n      ? // If sidecars are enabled, envelope turns into a \"wrapper\":\n        toRlp([serializedTransaction, blobs, commitments, proofs])\n      : // If sidecars are disabled, standard envelope is used:\n        toRlp(serializedTransaction),\n  ]) as TransactionSerializedEIP4844\n}\n\ntype SerializeTransactionEIP1559ErrorType =\n  | AssertTransactionEIP1559ErrorType\n  | ConcatHexErrorType\n  | InvalidLegacyVErrorType\n  | ToHexErrorType\n  | ToRlpErrorType\n  | SerializeAccessListErrorType\n  | ErrorType\n\nfunction serializeTransactionEIP1559(\n  transaction: TransactionSerializableEIP1559,\n  signature?: Signature | undefined,\n): TransactionSerializedEIP1559 {\n  const {\n    chainId,\n    gas,\n    nonce,\n    to,\n    value,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    accessList,\n    data,\n  } = transaction\n\n  assertTransactionEIP1559(transaction)\n\n  const serializedAccessList = serializeAccessList(accessList)\n\n  const serializedTransaction = [\n    toHex(chainId),\n    nonce ? toHex(nonce) : '0x',\n    maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n    maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x',\n    serializedAccessList,\n    ...toYParitySignatureArray(transaction, signature),\n  ]\n\n  return concatHex([\n    '0x02',\n    toRlp(serializedTransaction),\n  ]) as TransactionSerializedEIP1559\n}\n\ntype SerializeTransactionEIP2930ErrorType =\n  | AssertTransactionEIP2930ErrorType\n  | ConcatHexErrorType\n  | InvalidLegacyVErrorType\n  | ToHexErrorType\n  | ToRlpErrorType\n  | SerializeAccessListErrorType\n  | ErrorType\n\nfunction serializeTransactionEIP2930(\n  transaction: TransactionSerializableEIP2930,\n  signature?: Signature | undefined,\n): TransactionSerializedEIP2930 {\n  const { chainId, gas, data, nonce, to, value, accessList, gasPrice } =\n    transaction\n\n  assertTransactionEIP2930(transaction)\n\n  const serializedAccessList = serializeAccessList(accessList)\n\n  const serializedTransaction = [\n    toHex(chainId),\n    nonce ? toHex(nonce) : '0x',\n    gasPrice ? toHex(gasPrice) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x',\n    serializedAccessList,\n    ...toYParitySignatureArray(transaction, signature),\n  ]\n\n  return concatHex([\n    '0x01',\n    toRlp(serializedTransaction),\n  ]) as TransactionSerializedEIP2930\n}\n\ntype SerializeTransactionLegacyErrorType =\n  | AssertTransactionLegacyErrorType\n  | InvalidLegacyVErrorType\n  | ToHexErrorType\n  | ToRlpErrorType\n  | ErrorType\n\nfunction serializeTransactionLegacy(\n  transaction: TransactionSerializableLegacy,\n  signature?: SignatureLegacy | undefined,\n): TransactionSerializedLegacy {\n  const { chainId = 0, gas, data, nonce, to, value, gasPrice } = transaction\n\n  assertTransactionLegacy(transaction)\n\n  let serializedTransaction = [\n    nonce ? toHex(nonce) : '0x',\n    gasPrice ? toHex(gasPrice) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x',\n  ]\n\n  if (signature) {\n    const v = (() => {\n      // EIP-155 (inferred chainId)\n      if (signature.v >= 35n) {\n        const inferredChainId = (signature.v - 35n) / 2n\n        if (inferredChainId > 0) return signature.v\n        return 27n + (signature.v === 35n ? 0n : 1n)\n      }\n\n      // EIP-155 (explicit chainId)\n      if (chainId > 0)\n        return BigInt(chainId * 2) + BigInt(35n + signature.v - 27n)\n\n      // Pre-EIP-155 (no chainId)\n      const v = 27n + (signature.v === 27n ? 0n : 1n)\n      if (signature.v !== v) throw new InvalidLegacyVError({ v: signature.v })\n      return v\n    })()\n\n    const r = trim(signature.r)\n    const s = trim(signature.s)\n\n    serializedTransaction = [\n      ...serializedTransaction,\n      toHex(v),\n      r === '0x00' ? '0x' : r,\n      s === '0x00' ? '0x' : s,\n    ]\n  } else if (chainId > 0) {\n    serializedTransaction = [\n      ...serializedTransaction,\n      toHex(chainId),\n      '0x',\n      '0x',\n    ]\n  }\n\n  return toRlp(serializedTransaction) as TransactionSerializedLegacy\n}\n\nexport function toYParitySignatureArray(\n  transaction: TransactionSerializableGeneric,\n  signature_?: Signature | undefined,\n) {\n  const signature = signature_ ?? transaction\n  const { v, yParity } = signature\n\n  if (typeof signature.r === 'undefined') return []\n  if (typeof signature.s === 'undefined') return []\n  if (typeof v === 'undefined' && typeof yParity === 'undefined') return []\n\n  const r = trim(signature.r)\n  const s = trim(signature.s)\n\n  const yParity_ = (() => {\n    if (typeof yParity === 'number') return yParity ? toHex(1) : '0x'\n    if (v === 0n) return '0x'\n    if (v === 1n) return toHex(1)\n\n    return v === 27n ? '0x' : toHex(1)\n  })()\n\n  return [yParity_, r === '0x00' ? '0x' : r, s === '0x00' ? '0x' : s]\n}\n","import type { TypedData, TypedDataDomain, TypedDataParameter } from 'abitype'\n\nimport { BytesSizeMismatchError } from '../errors/abi.js'\nimport { InvalidAddressError } from '../errors/address.js'\nimport {\n  InvalidDomainError,\n  InvalidPrimaryTypeError,\n  InvalidStructTypeError,\n} from '../errors/typedData.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { Hex } from '../types/misc.js'\nimport type { TypedDataDefinition } from '../types/typedData.js'\nimport { type IsAddressErrorType, isAddress } from './address/isAddress.js'\nimport { type SizeErrorType, size } from './data/size.js'\nimport { type NumberToHexErrorType, numberToHex } from './encoding/toHex.js'\nimport { bytesRegex, integerRegex } from './regex.js'\nimport {\n  type HashDomainErrorType,\n  hashDomain,\n} from './signature/hashTypedData.js'\nimport { stringify } from './stringify.js'\n\nexport type SerializeTypedDataErrorType =\n  | HashDomainErrorType\n  | IsAddressErrorType\n  | NumberToHexErrorType\n  | SizeErrorType\n  | ErrorType\n\nexport function serializeTypedData<\n  const typedData extends TypedData | Record<string, unknown>,\n  primaryType extends keyof typedData | 'EIP712Domain',\n>(parameters: TypedDataDefinition<typedData, primaryType>) {\n  const {\n    domain: domain_,\n    message: message_,\n    primaryType,\n    types,\n  } = parameters as unknown as TypedDataDefinition\n\n  const normalizeData = (\n    struct: readonly TypedDataParameter[],\n    data_: Record<string, unknown>,\n  ) => {\n    const data = { ...data_ }\n    for (const param of struct) {\n      const { name, type } = param\n      if (type === 'address') data[name] = (data[name] as string).toLowerCase()\n    }\n    return data\n  }\n\n  const domain = (() => {\n    if (!types.EIP712Domain) return {}\n    if (!domain_) return {}\n    return normalizeData(types.EIP712Domain, domain_)\n  })()\n\n  const message = (() => {\n    if (primaryType === 'EIP712Domain') return undefined\n    return normalizeData(types[primaryType], message_)\n  })()\n\n  return stringify({ domain, message, primaryType, types })\n}\n\nexport type ValidateTypedDataErrorType =\n  | HashDomainErrorType\n  | IsAddressErrorType\n  | NumberToHexErrorType\n  | SizeErrorType\n  | ErrorType\n\nexport function validateTypedData<\n  const typedData extends TypedData | Record<string, unknown>,\n  primaryType extends keyof typedData | 'EIP712Domain',\n>(parameters: TypedDataDefinition<typedData, primaryType>) {\n  const { domain, message, primaryType, types } =\n    parameters as unknown as TypedDataDefinition\n\n  const validateData = (\n    struct: readonly TypedDataParameter[],\n    data: Record<string, unknown>,\n  ) => {\n    for (const param of struct) {\n      const { name, type } = param\n      const value = data[name]\n\n      const integerMatch = type.match(integerRegex)\n      if (\n        integerMatch &&\n        (typeof value === 'number' || typeof value === 'bigint')\n      ) {\n        const [_type, base, size_] = integerMatch\n        // If number cannot be cast to a sized hex value, it is out of range\n        // and will throw.\n        numberToHex(value, {\n          signed: base === 'int',\n          size: Number.parseInt(size_) / 8,\n        })\n      }\n\n      if (type === 'address' && typeof value === 'string' && !isAddress(value))\n        throw new InvalidAddressError({ address: value })\n\n      const bytesMatch = type.match(bytesRegex)\n      if (bytesMatch) {\n        const [_type, size_] = bytesMatch\n        if (size_ && size(value as Hex) !== Number.parseInt(size_))\n          throw new BytesSizeMismatchError({\n            expectedSize: Number.parseInt(size_),\n            givenSize: size(value as Hex),\n          })\n      }\n\n      const struct = types[type]\n      if (struct) {\n        validateReference(type)\n        validateData(struct, value as Record<string, unknown>)\n      }\n    }\n  }\n\n  // Validate domain types.\n  if (types.EIP712Domain && domain) {\n    if (typeof domain !== 'object') throw new InvalidDomainError({ domain })\n    validateData(types.EIP712Domain, domain)\n  }\n\n  // Validate message types.\n  if (primaryType !== 'EIP712Domain') {\n    if (types[primaryType]) validateData(types[primaryType], message)\n    else throw new InvalidPrimaryTypeError({ primaryType, types })\n  }\n}\n\nexport type GetTypesForEIP712DomainErrorType = ErrorType\n\nexport function getTypesForEIP712Domain({\n  domain,\n}: { domain?: TypedDataDomain | undefined }): TypedDataParameter[] {\n  return [\n    typeof domain?.name === 'string' && { name: 'name', type: 'string' },\n    domain?.version && { name: 'version', type: 'string' },\n    (typeof domain?.chainId === 'number' ||\n      typeof domain?.chainId === 'bigint') && {\n      name: 'chainId',\n      type: 'uint256',\n    },\n    domain?.verifyingContract && {\n      name: 'verifyingContract',\n      type: 'address',\n    },\n    domain?.salt && { name: 'salt', type: 'bytes32' },\n  ].filter(Boolean) as TypedDataParameter[]\n}\n\nexport type DomainSeparatorErrorType =\n  | GetTypesForEIP712DomainErrorType\n  | HashDomainErrorType\n  | ErrorType\n\nexport function domainSeparator({ domain }: { domain: TypedDataDomain }): Hex {\n  return hashDomain({\n    domain,\n    types: {\n      EIP712Domain: getTypesForEIP712Domain({ domain }),\n    },\n  })\n}\n\n/** @internal */\nfunction validateReference(type: string) {\n  // Struct type must not be a Solidity type.\n  if (\n    type === 'address' ||\n    type === 'bool' ||\n    type === 'string' ||\n    type.startsWith('bytes') ||\n    type.startsWith('uint') ||\n    type.startsWith('int')\n  )\n    throw new InvalidStructTypeError({ type })\n}\n","const size = 256\nlet index = size\nlet buffer: string\n\nexport function uid(length = 11) {\n  if (!buffer || index + length > size * 2) {\n    buffer = ''\n    index = 0\n    for (let i = 0; i < size; i++) {\n      buffer += ((256 + Math.random() * 256) | 0).toString(16).substring(1)\n    }\n  }\n  return buffer.substring(index, index++ + length)\n}\n","import { etherUnits } from '../../constants/unit.js'\n\nimport { type FormatUnitsErrorType, formatUnits } from './formatUnits.js'\n\nexport type FormatEtherErrorType = FormatUnitsErrorType\n\n/**\n * Converts numerical wei to a string representation of ether.\n *\n * - Docs: https://viem.sh/docs/utilities/formatEther\n *\n * @example\n * import { formatEther } from 'viem'\n *\n * formatEther(1000000000000000000n)\n * // '1'\n */\nexport function formatEther(wei: bigint, unit: 'wei' | 'gwei' = 'wei') {\n  return formatUnits(wei, etherUnits[unit])\n}\n","import { gweiUnits } from '../../constants/unit.js'\n\nimport { type FormatUnitsErrorType, formatUnits } from './formatUnits.js'\n\nexport type FormatGweiErrorType = FormatUnitsErrorType\n\n/**\n * Converts numerical wei to a string representation of gwei.\n *\n * - Docs: https://viem.sh/docs/utilities/formatGwei\n *\n * @example\n * import { formatGwei } from 'viem'\n *\n * formatGwei(1000000000n)\n * // '1'\n */\nexport function formatGwei(wei: bigint, unit: 'wei' = 'wei') {\n  return formatUnits(wei, gweiUnits[unit])\n}\n","import type { ErrorType } from '../../errors/utils.js'\n\nexport type FormatUnitsErrorType = ErrorType\n\n/**\n *  Divides a number by a given exponent of base 10 (10exponent), and formats it into a string representation of the number..\n *\n * - Docs: https://viem.sh/docs/utilities/formatUnits\n *\n * @example\n * import { formatUnits } from 'viem'\n *\n * formatUnits(420000000000n, 9)\n * // '420'\n */\nexport function formatUnits(value: bigint, decimals: number) {\n  let display = value.toString()\n\n  const negative = display.startsWith('-')\n  if (negative) display = display.slice(1)\n\n  display = display.padStart(decimals, '0')\n\n  let [integer, fraction] = [\n    display.slice(0, display.length - decimals),\n    display.slice(display.length - decimals),\n  ]\n  fraction = fraction.replace(/(0+)$/, '')\n  return `${negative ? '-' : ''}${integer || '0'}${\n    fraction ? `.${fraction}` : ''\n  }`\n}\n","import { etherUnits } from '../../constants/unit.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\nimport { type ParseUnitsErrorType, parseUnits } from './parseUnits.js'\n\nexport type ParseEtherErrorType = ParseUnitsErrorType | ErrorType\n\n/**\n * Converts a string representation of ether to numerical wei.\n *\n * - Docs: https://viem.sh/docs/utilities/parseEther\n *\n * @example\n * import { parseEther } from 'viem'\n *\n * parseEther('420')\n * // 420000000000000000000n\n */\nexport function parseEther(ether: string, unit: 'wei' | 'gwei' = 'wei') {\n  return parseUnits(ether, etherUnits[unit])\n}\n","import { gweiUnits } from '../../constants/unit.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\nimport { type ParseUnitsErrorType, parseUnits } from './parseUnits.js'\n\nexport type ParseGweiErrorType = ParseUnitsErrorType | ErrorType\n\n/**\n * Converts a string representation of gwei to numerical wei.\n *\n * - Docs: https://viem.sh/docs/utilities/parseGwei\n *\n * @example\n * import { parseGwei } from 'viem'\n *\n * parseGwei('420')\n * // 420000000000n\n */\nexport function parseGwei(ether: string, unit: 'wei' = 'wei') {\n  return parseUnits(ether, gweiUnits[unit])\n}\n","import { InvalidDecimalNumberError } from '../../errors/unit.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\nexport type ParseUnitsErrorType = ErrorType\n\n/**\n * Multiplies a string representation of a number by a given exponent of base 10 (10exponent).\n *\n * - Docs: https://viem.sh/docs/utilities/parseUnits\n *\n * @example\n * import { parseUnits } from 'viem'\n *\n * parseUnits('420', 9)\n * // 420000000000n\n */\nexport function parseUnits(value: string, decimals: number) {\n  if (!/^(-?)([0-9]*)\\.?([0-9]*)$/.test(value))\n    throw new InvalidDecimalNumberError({ value })\n\n  let [integer, fraction = '0'] = value.split('.')\n\n  const negative = integer.startsWith('-')\n  if (negative) integer = integer.slice(1)\n\n  // trim trailing zeros.\n  fraction = fraction.replace(/(0+)$/, '')\n\n  // round off if the fraction is larger than the number of decimals.\n  if (decimals === 0) {\n    if (Math.round(Number(`.${fraction}`)) === 1)\n      integer = `${BigInt(integer) + 1n}`\n    fraction = ''\n  } else if (fraction.length > decimals) {\n    const [left, unit, right] = [\n      fraction.slice(0, decimals - 1),\n      fraction.slice(decimals - 1, decimals),\n      fraction.slice(decimals),\n    ]\n\n    const rounded = Math.round(Number(`${unit}.${right}`))\n    if (rounded > 9)\n      fraction = `${BigInt(left) + BigInt(1)}0`.padStart(left.length + 1, '0')\n    else fraction = `${left}${rounded}`\n\n    if (fraction.length > decimals) {\n      fraction = fraction.slice(1)\n      integer = `${BigInt(integer) + 1n}`\n    }\n\n    fraction = fraction.slice(0, decimals)\n  } else {\n    fraction = fraction.padEnd(decimals, '0')\n  }\n\n  return BigInt(`${negative ? '-' : ''}${integer}${fraction}`)\n}\n","export async function wait(time: number) {\n  return new Promise((res) => setTimeout(res, time))\n}\n","import { getNativeWebSocket } from \"./utils.js\";\n\nexport const WebSocket = getNativeWebSocket();\n\ntype MessageEvent_ = MessageEvent;\nexport type { MessageEvent_ as MessageEvent };\n","export function getNativeWebSocket() {\n  if (typeof WebSocket !== \"undefined\") return WebSocket;\n  if (typeof global.WebSocket !== \"undefined\") return global.WebSocket;\n  if (typeof window.WebSocket !== \"undefined\") return window.WebSocket;\n  if (typeof self.WebSocket !== \"undefined\") return self.WebSocket;\n  throw new Error(\"`WebSocket` is not supported in this environment\");\n}\n"],"names":["exports","title","value","Error","bytes","hexToNumber","bytesToHex","abytes","Uint8Array","from","reverse","n","len","numberToBytesBE","hexToBytes","numberToHexUnpadded","hex","expectedLength","res","e","isBytes","length","a","b","diff","i","str","TextEncoder","encode","min","max","inRange","_0n","_1n","pos","BigInt","hashLen","qByteLen","hmacFn","v","u8n","k","reset","fill","h","reseed","seed","u8fr","gen","out","sl","slice","push","concatBytes","pred","object","validators","optValidators","checkField","fieldName","type","isOptional","checkVal","validatorFns","val","undefined","String","Object","entries","fn","map","WeakMap","arg","get","args","computed","set","ArrayBuffer","isView","constructor","name","item","num","toString","hasHexBuiltin","toHex","fromHex","hexes","Array","_","padStart","asciis","asciiToBase16","ch","hl","al","array","ai","hi","n1","charCodeAt","n2","char","sum","pad","isPosBig","arr","bigint","function","boolean","string","stringOrUint8Array","isSafeInteger","Number","isArray","field","Fp","isValid","hash","outputLen","c","setBigUint64","view","byteOffset","isLE","_32n","_u32_max","wh","wl","l","setUint32","HashMD","utils_ts_1","blockLen","padOffset","super","finished","destroyed","this","buffer","createView","update","data","aexists","toBytes","take","Math","subarray","process","dataView","roundClean","digestInto","aoutput","clean","oview","outLen","state","digest","destroy","_cloneInto","to","clone","Uint32Array","U32_MASK64","fromBig","le","split","lst","Ah","Al","toBig","shrSH","_l","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","_h","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u64","globalThis","crypto","SHA1_IV","SHA1_W","SHA1","_md_ts_1","A","B","C","D","E","offset","getUint32","rotl","F","K","Chi","Maj","T","createHasher","p32","pow","floor","abs","sin","MD5_IV","MD5_W","MD5","g","Rho160","Id160","Pi160","idxLR","j","idxL","idxR","shifts160","shiftsL160","idx","shiftsR160","Kl160","Kr160","ripemd_f","group","x","y","z","BUF_160","RIPEMD160","h0","h1","h2","h3","h4","ar","bl","br","cl","cr","dl","dr","el","er","rGroup","hbl","hbr","rl","rr","sr","tl","tr","legacy_ts_1","SHA256_K","SHA256_W","SHA256","G","H","W15","W2","s0","rotr","s1","T1","T2","SHA224","K512","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA384","T224_IV","T256_IV","SHA512_224","SHA512_256","sha2_ts_1","_2n","_7n","_256n","_0x71n","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","round","R","t","IOTAS","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","keccakP","rounds","idx1","idx0","B0","B1","Th","Tl","curH","curL","shift","PI","Keccak","suffix","enableXOF","posOut","anumber","state32","u32","keccak","swap32IfBE","finish","writeInto","bufferOut","xofInto","xof","genShake","createXOFer","opts","dkLen","create","instance","checkFinished","byteLength","arrays","DataView","word","async","iters","tick","cb","ts","Date","now","nextTick","TextDecoder","decode","utf8ToBytes","defaults","call","assign","bytesLength","crypto_1","getRandomValues","randomBytes","lengths","includes","byteSwap","byteSwap32","u","hashCons","hashC","msg","tmp","createOptHasher","enumerable","SafeAppProvider","events_1","safe","sdk","submittedTxs","Map","emit","chainId","request","method","params","safeAddress","numberToHex","message","address","toLowerCase","response","txs","signMessage","signature","messageHash","startsWith","typedData","parsedTypedData","JSON","parse","signTypedMessage","tx","gas","parseInt","resp","send","safeTxGas","safeTxHash","gasPrice","nonce","input","blockHash","blockNumber","transactionIndex","eth","getBlockByNumber","number","getBalance","getLowerCase","getCode","getTransactionCount","getStorageAt","getBlockByHash","txHash","getBySafeTxHash","has","getTransactionByHash","then","getTransactionReceipt","transactionHash","getEstimateGas","getPastLogs","getGasPrice","wallet","getPermissions","requestPermissions","setSafeSettings","calls","id","CallStatus","safe_apps_sdk_1","AWAITING_CONFIRMATIONS","AWAITING_EXECUTION","SUCCESS","CANCELLED","FAILED","result","version","status","txStatus","receipt","txData","dataDecoded","parameters","valueDecoded","gasUsed","receipts","logs","atomicBatch","supported","callback","jsonrpc","catch","error","ReflectOwnKeys","Reflect","ReflectApply","apply","target","receiver","Function","prototype","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","isNaN","EventEmitter","init","module","once","emitter","Promise","resolve","reject","errorListener","err","removeListener","resolver","arguments","eventTargetAgnosticAddListener","handler","flags","on","addErrorHandlerIfEventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","prepend","m","events","existing","warning","newListener","unshift","warned","w","count","console","warn","onceWrapper","fired","wrapFn","_onceWrap","wrapped","bind","_listeners","unwrap","evlistener","ret","unwrapListeners","arrayClone","listenerCount","copy","addEventListener","wrapListener","removeEventListener","defineProperty","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","context","listeners","addListener","prependListener","prependOnceListener","list","position","originalListener","index","pop","spliceOne","off","removeAllListeners","key","keys","rawListeners","eventNames","curveDef","defHash","weierstrass","getHash","hmac","msgs","utils_1","bits","constTimeNegate","hasPrecomputes","elm","getW","unsafeLadder","p","ZERO","d","double","precomputeWindow","W","windows","windowSize","calcWOpts","points","base","window","wNAF","precomputes","f","BASE","wo","nextN","isZero","isNeg","isNegF","offsetF","calcOffsets","wNAFUnsafe","acc","negate","getPrecomputes","P","transform","comp","pointPrecomputes","wNAFCached","wNAFCachedUnsafe","prev","setWindowSize","validateW","pointWindowSizes","delete","fieldN","scalars","validateMSMPoints","validateMSMScalars","zero","wbits","bitLen","MASK","bitMask","buckets","lastBits","BITS","scalar","resI","sumI","tableSize","chunks","ceil","tables","shiftBy","curr","curve","validateField","validateObject","Gx","Gy","nBitLength","nByteLength","freeze","nLength","ORDER","condition","neg","scalarBits","maxNumber","mask","wOpts","offsetStart","forEach","COEFF","xNum","xDen","yNum","yDen","reduce","mul","is0","div","Point","mapToCurve","def","hashToCurve","options","hash_to_field","DST","u0","fromAffine","u1","clearCofactor","assertValidity","encodeToCurve","encodeDST","os2ip","i2osp","anum","strxor","expand_message_xmd","lenInBytes","b_in_bytes","r_in_bytes","ell","DST_prime","Z_pad","l_i_b_str","b_0","expand_message_xof","expand","_DST","log2p","L","len_in_bytes","prb","elm_offset","tv","mod","power","modulo","FIELD_FIELDS","BYTES","lhs","rhs","invert","inv","legendre","FpLegendre","eql","ONE","redef","sqrtP","isOdd","sqr","sub","FpPow","sqrN","addN","subN","mulN","sqrt","FpSqrt","invertBatch","FpInvertBatch","cmov","numberToBytesLE","fromBytes","bytesToNumberLE","bytesToNumberBE","root","groupOrder","ensureBytes","minLen","fieldOrder","fieldLen","getFieldBytesLength","getMinHashLength","reduced","_3n","_4n","_5n","_8n","q","r","tonelliShanks","legendreC","Q","S","Z","p1div4","Q1div2","t2","ge","c1","nv","nums","lastMultiplied","inverted","reduceRight","order","legendreConst","_nBitLength","bitLength","CURVE","validateBasic","bits2int","bits2int_modN","lowS","validateOpts","CURVE_ORDER","compressedLen","uncompressedLen","modN","invN","ProjectivePoint","normPrivateKeyToScalar","weierstrassEquation","isWithinCurveOrder","weierstrassPoints","_c","point","isCompressed","toAffine","cat","abool","hasEvenY","head","tail","y2","sqrtError","numToNByteHex","isBiggerThanHalfOrder","normalizeS","slcNum","Signature","recovery","aInRange","toSig","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","prefix","ir","u2","multiplyAndAddUnsafe","hasHighS","toDERRawBytes","toDERHex","hexFromSig","toCompactRawBytes","toCompactHex","utils","isValidPrivateKey","privateKey","randomPrivateKey","mapHashToField","precompute","_setWindowSize","multiply","isProbPub","delta","ORDER_MASK","int2octets","prepSig","defaultSigOpts","some","prehash","extraEntropy","ent","validateSigVerOpts","h1int","seedArgs","k2sig","kBytes","ik","normS","defaultVerOpts","getPublicKey","fromPrivateKey","toRawBytes","getSharedSecret","privateA","publicB","sign","privKey","createHmacDrbg","drbg","verify","publicKey","sg","format","isHex","isObj","_sig","fromDER","derError","Err","fromCompact","is","sqrtRatio","SWUFpSqrtRatio","tv1","tv2","tv3","tv4","tv5","tv6","e1","DERErr","_tlv","tag","dataLen","lenLen","first","lengthBytes","_int","int","tlv","seqBytes","seqLeftBytes","rBytes","rLeftBytes","sBytes","sLeftBytes","sig","seq","allowedPrivateKeyLengths","wrapPrivateKey","isTorsionFree","allowInfinityPoint","endo","beta","splitScalar","validatePointOpts","Fn","Field","_isCompressed","x2","x3","N","aprjpoint","other","toAffineMemo","memoized","iz","px","py","pz","ax","ay","zz","assertValidMemo","left","right","toInv","pippenger","wnaf","equals","X1","Y1","Z1","X2","Y2","Z2","U1","U2","b3","X3","Y3","Z3","t0","t1","t3","t4","t5","subtract","normalizeZ","multiplyUnsafe","sc","I","k1neg","k1","k2neg","k2","k1p","k2p","fake","f1p","f2p","cofactor","_bits","o","_2n_pow_c1_1","_2n_pow_c1","c2","c3","c4","c5","c6","c7","isQR","tvv5","y1","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b2","b6","pow2","b9","b11","b22","b44","b88","b176","b220","b223","Fpk1","createCurve","a1","b1","a2","POW_2_128","sha2_1","TAGGED_HASH_PREFIXES","taggedHash","tagP","tagH","sha256","messages","pointToBytes","numTo32b","modP","schnorrGetExtPubKey","priv","d_","lift_x","xx","challenge","schnorrGetPublicKey","schnorrSign","auxRand","rand","k_","rx","schnorrVerify","pub","modular_ts_1","isoMap","isogenyMap","mapSWU","mapToCurveSimpleSWU","htf","HMAC","_key","ahash","iHash","oHash","buf","Rho","Id","shifts","shiftsL","shiftsR","Kl","Kr","R_BUF","wrapConstructor","sha224","sha384","sha512","sha512_224","sha512_256","SHA256_IV","wrapXOFConstructorWithOpts","_u64_ts_1","allowedOrigins","debugMode","callbacks","isServer","isValidMessage","origin","source","emptyOrMalformed","sentFromParentEl","parent","majorVersionNumber","allowedSDKVersion","validOrigin","find","regExp","test","logIncomingMessage","info","onParentMessage","handleIncomingMessage","payload","messageFormatter_js_1","makeRequest","postMessage","success","__exportStar","MessageFormatter","generateRequestId","env","sdkVersion","getSDKVersion","Methods","RestrictedMethods","dec2hex","dec","join","generateId","getTime","hasPermission","required","permissions","permission","parentCapability","propertyKey","descriptor","originalMethod","index_js_1","communicator","currentPermissions","permissions_js_1","eth_call","eth_gasPrice","eth_getLogs","eth_getBalance","eth_getCode","eth_getBlockByHash","eth_getBlockByNumber","eth_getStorageAt","eth_getTransactionByHash","eth_getTransactionReceipt","eth_getTransactionCount","eth_estimateGas","safe_setSettings","inputFormatters","defaultBlockParam","returnFullTxObjectParam","blockNumberToHex","isInteger","buildRequest","constants_js_1","formatters","transaction","formatter","methods_js_1","rpcCall","sdk_js_1","Safe","getChainInfo","getSafeInfo","currency","getSafeBalances","safeInfo","getInfo","encodedIsValidSignatureCall","encodeFunctionData","abi","constant","inputs","outputs","payable","stateMutability","functionName","signatures_js_1","calculateMessageHash","hashMessage","calculateTypedMessageHash","typedMessage","domain","toNumber","primaryType","fields","values","types","primaryTypes","filter","typeName","every","dataTypes","replace","hashTypedData","verifyingContract","salt","getOffChainSignature","check","isMessageHashSigned","isObjectEIP712TypedData","checks","check1271Signature","check1271SignatureBytes","getEnvironmentInfo","requestAddressBook","__decorate","allowedDomains","debug","index_js_3","index_js_2","index_js_4","index_js_5","getTxBySafeTxHash","messagePayload","sendTransactions","Operation","TokenType","TransactionStatus","TransferDirection","PermissionsError","code","setPrototypeOf","obj","wallet_getPermissions","isPermissionRequestValid","wallet_requestPermissions","pr","BaseError","shortMessage","details","cause","docsPath","metaMessages","version_js_1","narrow","formatAbi","formatAbiItem","formatAbiParameter","formatAbiParameters","parseAbi","parseAbiItem","parseAbiParameter","parseAbiParameters","UnknownTypeError","InvalidAbiItemError","UnknownSolidityTypeError","InvalidAbiTypeParameterError","InvalidFunctionModifierError","InvalidModifierError","SolidityProtectedKeywordError","InvalidParameterError","InvalidAbiParametersError","InvalidAbiParameterError","InvalidStructSignatureError","InvalidSignatureError","UnknownSignatureError","InvalidParenthesisError","CircularReferenceError","errors_js_1","stringify","param","modifier","abiParameter","current","depth","trim","signatures","abiItem","tupleRegex","components","component","execTyped","indexed","abiParameters","structs","parseStructs","isStructSignature","parseSignature","signature_","abiItem_js_1","modifiers","abiParameter_js_1","splitParameters","structKey","struct","property","errorSignatureRegex","eventSignatureRegex","functionSignatureRegex","structSignatureRegex","constructorSignatureRegex","fallbackSignatureRegex","receiveSignatureRegex","Set","shallowStructs","signaturesLength","match","execStructSignature","signature_js_1","properties","propertiesLength","trimmed","resolvedStructs","entriesLength","resolveStructs","typeWithoutTupleRegex","ancestors","regex_js_1","struct_js_1","isSolidityType","isFunctionSignature","parseFunctionSignature","isEventSignature","parseEventSignature","isErrorSignature","parseErrorSignature","isConstructorSignature","parseConstructorSignature","isFallbackSignature","parseFallbackSignature","isReceiveSignature","execFunctionSignature","inputParams","inputLength","returns","outputParams","outputLength","execEventSignature","execErrorSignature","execConstructorSignature","execFallbackSignature","abiParameterWithoutTupleRegex","abiParameterWithTupleRegex","dynamicIntegerRegex","parameterCacheKey","getParameterCacheKey","cache_js_1","isTuple","isSolidityKeyword","components_","isValidDataLocation","splitParameters_js_1","protectedKeywordsRegex","regex","exec","groups","abiConstructor","bytecode","AbiParameters","Hex","abitype","AbiItem","NotFoundError","abiFunction","overloads","size","InvalidSelectorSizeError","fromAbi","selector","getSelector","output","as","prepare","getSignatureHash","isSelector","validate","strict","abiItems","matchedAbiItem","internal","isArgOfType","ambiguousTypes","getAmbiguousTypes","AmbiguityError","getSignature","normalizeSignature","Hash","keccak256","fromString","Errors","checksumAddress","Bytes","cursor","Cursor","ZeroDataError","DataSizeTooSmallError","consumed","setPosition","consumed_","decodeParameter","staticPosition","LengthMismatchError","givenLength","preparedParameters","prepareParameters","encodePacked","Address","assert","padLeft","fromBoolean","intMatch","Solidity","integerRegex","_type","baseType","fromNumber","signed","bytesMatch","bytesRegex","BytesSizeMismatchError","expectedSize","padRight","arrayMatch","arrayRegex","childType","InvalidTypeError","ArrayLengthMismatchError","InvalidArrayError","PublicKey","substring","addressA","addressB","addressRegex","InvalidAddressError","InvalidInputError","checksum","InvalidChecksumError","Caches","hexAddress","characters","toUpperCase","checksumVal","rpcBlockOverrides","baseFeePerGas","blobBaseFee","feeRecipient","gasLimit","prevRandao","time","withdrawals","Withdrawal","fromRpc","blockOverrides","toRpc","fromArray","assertSize","encoder","bytesA","bytesB","equalBytes","start","end","assertStartOffset","value_","assertEndOffset","toBigInt","bytes_","trimLeft","InvalidBytesBooleanError","Boolean","trimRight","decoder","InvalidBytesTypeError","BYTES_PER_ELEMENT","internal_hex","hexString","nibbleLeft","charCodeToBase16","nibbleRight","dir","Json","SizeOverflowError","givenSize","maxSize","SliceOffsetOutOfBoundsError","SizeExceedsPaddingSizeError","targetSize","charAt","cache","caches","clear","lru_js_1","docs","getVersion","walk","maxValue","MAX_SAFE_INTEGER","minValue","IntegerOutOfRangeError","stringValue","hexA","hexB","random","hex_","InvalidHexBooleanError","internal_bytes","_v","InvalidHexTypeError","InvalidHexValueError","max_unsigned","max_signed","InvalidLengthError","reviver","endsWith","bigIntSuffix","replacer","space","compressed","InvalidPrefixError","InvalidUncompressedPrefixError","InvalidError","InvalidCompressedPrefixError","InvalidSerializedSizeError","includePrefix","publicKey_","withdrawal","amount","validatorIndex","active","level","valid","argType","abiParameterType","sourceParameters","targetParameters","parameterIndex","sourceParameter","targetParameter","prepareParameter","parameter","arrayComponents","getArrayComponents","decodeArray","decodeTuple","decodeAddress","decodeBool","decodeBytes","decodeNumber","decodeString","readBytes","wrap","startOfData","dynamicChild","hasDynamicChild","toBoolean","hasUnnamedChild","parameter_","encodeArray","encodeTuple","encodeAddress","encodeBoolean","Solidity_js_1","encodeNumber","encodeBytes","encodeString","staticSize","dynamic","encoded","staticParameters","dynamicParameters","dynamicSize","preparedParam","parametersize","bytesSize","hexValue","partsLength","parts","param_","matches","size_","nine","paddedBytes","padEnd","sliceLength","recursiveReadLimit","staticCursor","positionReadCount","recursiveReadCount","POSITIVE_INFINITY","assertReadLimit","RecursiveReadLimitExceededError","limit","assertPosition","PositionOutOfBoundsError","decrementPosition","NegativeOffsetError","getReadCount","incrementPosition","inspectByte","position_","inspectBytes","inspectUint8","inspectUint16","getUint16","inspectUint24","getUint8","inspectUint32","pushByte","byte","pushBytes","pushUint8","pushUint16","setUint16","pushUint24","setUint8","pushUint32","readByte","_touch","readUint8","readUint16","readUint24","readUint32","remaining","oldPosition","url","maxLength","LruMap","firstKey","next","account","client","blockTag","coinType","gatewayUrls","chain","universalResolverAddress","getChainContractAddress","contract","tlds","ensTlds","tld","functionData","abis_js_1","namehash","readContractParameters","packetToBytes","localBatchGatewayRequest_js_1","readContractAction","getAction","readContract_js_1","decodeFunctionResult","isNullUniversalResolverError","assetGatewayUrls","record","getEnsText_js_1","parseAvatarRecord","universalResolverAddress_","reverseNode","resolvedAddress","resolverAddress","client_","publicClient","walletClient","public","hasPublicClient","hasWalletClient","hasReadFunction","hasWriteFunction","hasEvent","read","Proxy","getFunctionParameters","simulate","simulateContract_js_1","createEventFilter","eventName","abiEvent","getEventParameters","createContractEventFilter_js_1","getEvents","getContractEvents_js_1","watchEvent","watchContractEvent_js_1","write","writeContract_js_1","estimateGas","estimateContractGas_js_1","hasArgs","account_","batch","multicall","accessList","blobs","data_","factory","factoryData","maxFeePerBlobGas","maxFeePerGas","maxPriorityFeePerGas","stateOverride","rest","parseAccount","base_js_1","deploylessCallViaBytecode","deploylessCallViaFactory","deploylessCall","encodeDeployData","contracts_js_1","toDeploylessCallViaBytecodeData","toDeploylessCallViaFactoryData","assertRequest","block","BlockOverrides","rpcStateOverride","serializeStateOverride","chainFormat","transactionRequest","transactionRequest_js_1","extract","request_","contract_js_1","shouldPerformMulticall","batchSize","wait","multicallAddress","multicallAddress_","chain_js_1","schedule","createBatchScheduler","uid","shouldSplitBatch","requests","allowFailure","callData","calldata","returnData","contract_js_2","scheduleMulticall","getRevertErrorData","offchainLookup","offchainLookupSignature","ccipRead","getCallError","getRequest","createFilterRequestScope","fromBlock","toBlock","topics","encodeEventTopics","event","events_","flatMap","dataSuffix","estimateGas_js_1","getContractError","sender","internal_estimateFeesPerGas","block_","baseFeeMultiplier","fees","fee_js_1","denominator","getBlock_js_1","estimateFeesPerGas","internal_estimateMaxPriorityFeePerGas","getGasPrice_js_1","authorizationList","blobVersionedHashes","prepareTransactionRequest","recoverAuthorizationAddress","authorization","estimateGas_rpc","estimate","estimates","all","getEstimateGasError","defaultPriorityFee","maxPriorityFeePerGas_","maxPriorityFeePerGasHex","hexToBigInt","blockNumberHex","balance","baseFee","blockTag_","includeTransactions","includeTransactions_","dedupe","block_js_1","block_js_2","getCache","cacheKey","cacheTime","withCache","chainIdHex","getAbiItem","getLogs_js_1","extensions","eip712_js_1","blockCount","rewardPercentiles","feeHistory","formatFeeHistory","_client","formattedLogs","log","formatLog","parseEventLogs","strict_","storageKeys","proof","formatProof","slot","transaction_js_1","transaction_js_2","transactionReceipt","getBlockNumber_js_1","getTransaction_js_1","transactionBlockNumber","transactionReceipt_js_1","batchSize_","contracts","chunkedCalls","currentChunk","currentChunkSize","aggregate3Results","allSettled","results","reason","aggregate3Result","abi_js_1","call_js_1","blocks","returnFullTransactions","traceTransfers","validation","blockStateCalls","call_","formatTransactionRequest","stateOverrides","formatBlock","getNodeError","node_js_1","traceAssetChanges","getBalanceData","AbiConstructor","AbiFunction","encodeData","assetAddresses","createAccessList","flat","resultsStateOverrides","override","simulateBlocks","address_js_1","block_results","block_ethPre","block_assetsPre","block_ethPost","block_assetsPost","block_decimals","block_tokenURI","block_symbols","block_calls","ethPre","assetsPre","balancesPre","ethPost","assetsPost","balancesPost","decimals","symbols","tokenURI","changes","balancePost","balancePre","decimals_","symbol_","tokenURI_","token","symbol","change","pre","post","assetChanges","callRequest","minimizedAbi","universalSignatureVerifierAddress","universalSignatureVerifier","signatureHex","serializeSignature","wrappedSignature","isErc6492Signature","serializeErc6492Signature","hexToBool","isAddressEqual","getAddress","recoverAddress","verifyHash","confirmations","onReplaced","pollingInterval","retryCount","retryDelay","timeout","observerId","replacedTransaction","retrying","promise","withResolvers","timer","setTimeout","_unobserve","observe","_unwatch","watchBlockNumber_js_1","emitMissed","emitOnBegin","poll","blockNumber_","done","clearTimeout","withRetry","delay","getTransactionReceipt_js_1","shouldRetry","replacementTransaction","transactions","err_","onBlockNumber","onError","poll_","enablePolling","transport","transports","config","prevBlockNumber","interval","pollBlockNumber","unsubscribe","unsubscribe_","subscribe","onData","subscribeBlockNumber","onBlock","prevBlock","pollBlocks","emitFetched","subscribeBlocks","onLogs","previousBlockNumber","initialized","unwatch","getFilterChanges_js_1","rpc_js_1","uninstallFilter_js_1","pollContractEvent","decodeEventLog","formatted","isUnnamed","subscribeContractEvent","createEventFilter_js_1","pollEvent","subscribeEvent","onTransactions","createPendingTransactionFilter_js_1","hashes","pollPendingTransactions","subscribePendingTransactions","scheme","parsed","parseSiweMessage","validateSiweMessage","mode","pending","queued","seconds","jsonRpcUrl","forking","enabled","interval_","timestamp","nativeCurrency","rpcUrls","blockExplorers","chainName","default","http","blockExplorerUrls","sendTransaction","atomic","statusCode","capabilities_raw","capabilities","capabilities_","account_js_1","executor","contractAddress","getChainId_js_1","getTransactionCount_js_1","kzg","nonceManager","getBlock","getChainId","chainId_","consume","commitments","blobsToCommitments","versionedHashes","commitmentsToVersionedHashes","proofs","blobsToProofs","sidecars","toBlobSidecars","getTransactionType","isEip1559Network","gasPrice_","forceAtomic","atomicRequired","formatRequestCapabilities","getTransactionError","paymasterService","serializedTransaction","assertCurrentChain","currentChainId","isWalletNamespaceSupported","supportsWalletNamespace","walletNamespaceError","prepareTransactionRequest_js_1","serializer","serializers","signTransaction","sendRawTransaction_js_1","signAuthorization","prepareAuthorization","message_","stringToHex","raw","EIP712Domain","getTypesForEIP712Domain","validateTypedData","signTypedData","serializeTypedData","unobserve","unpoll","getCallsStatus","WaitForCallsStatusTimeoutError","sendTransaction_js_1","extend","extendFn","extended","combined","createClient","public_js_1","testActions","wallet_js_1","createBlockFilter","createContractEventFilter","createPendingTransactionFilter","estimateContractGas","getBlobBaseFee","getBlockNumber","getBlockTransactionCount","getBytecode","getContractEvents","getEip712Domain","getEnsAddress","getEnsAvatar","getEnsName","getEnsResolver","getEnsText","getFeeHistory","getFilterChanges","getFilterLogs","getLogs","getProof","estimateMaxPriorityFeePerGas","getTransaction","getTransactionConfirmations","readContract","sendRawTransaction","simulateCalls","simulateContract","verifyMessage","verifySiweMessage","verifyTypedData","uninstallFilter","waitForTransactionReceipt","watchBlocks","watchBlockNumber","watchContractEvent","watchPendingTransactions","dropTransaction","dumpState","getAutomine","getTxpoolContent","getTxpoolStatus","impersonateAccount","increaseTime","inspectTxpool","loadState","mine","removeBlockTimestampInterval","revert","sendUnsignedTransaction","setAutomine","setBalance","setBlockGasLimit","setBlockTimestampInterval","setCode","setCoinbase","setIntervalMining","setLoggingEnabled","setMinGasPrice","setNextBlockBaseFeePerGas","setNextBlockTimestamp","setNonce","setRpcUrl","setStorageAt","snapshot","stopImpersonatingAccount","addChain","deployContract","getAddresses","getCapabilities","requestAddresses","sendCalls","showCallsStatus","switchChain","waitForCallsStatus","watchAsset","writeContract","methods","provider","defaultRetryCount","createTransport","transports_","rank","shouldThrow","shouldThrow_","onResponse","fetch","include","exclude","rankOptions","rankTransports","onTransports","ping","sampleCount","weights","nodeMessage","stability","stabilityWeight","latency","latencyWeight","samples","rankTransports_","sample","transport_","maxLatency","scores","latencies","latencyScore","successes","stabilityScore","sort","fetchOptions","onFetchRequest","onFetchResponse","retryCount_","timeout_","url_","transport_js_1","rpcClient","getHttpRpcClient","onRequest","body","request_js_1","keepAlive","reconnect","webSocket","wsRpcClientOpts","getWebSocketRpcClient","requestAsync","getSocket","getRpcClient","subscriptionId","universalResolverErrors","internalType","anonymous","gwei","wei","ether","AbiConstructorNotFoundError","AbiConstructorParamsNotFoundError","AbiDecodingDataSizeInvalidError","AbiDecodingDataSizeTooSmallError","formatAbiParams","includeName","AbiDecodingZeroDataError","AbiEncodingArrayLengthMismatchError","AbiEncodingBytesSizeMismatchError","AbiEncodingLengthMismatchError","AbiErrorInputsNotFoundError","errorName","AbiErrorNotFoundError","AbiErrorSignatureNotFoundError","AbiEventSignatureEmptyTopicsError","AbiEventSignatureNotFoundError","AbiEventNotFoundError","AbiFunctionNotFoundError","AbiFunctionOutputsNotFoundError","AbiFunctionSignatureNotFoundError","AbiItemAmbiguityError","DecodeLogDataMismatch","DecodeLogTopicsMismatch","InvalidAbiEncodingTypeError","InvalidAbiDecodingTypeError","InvalidDefinitionTypeError","UnsupportedPackedAbiType","AccountNotFoundError","docsSlug","AccountTypeNotSupportedError","errorConfig","getDocsUrl","docsBaseUrl","docsUrl","BlobSizeTooLargeError","EmptyBlobError","InvalidVersionedHashSizeError","InvalidVersionedHashVersionError","kzg_js_1","BlockNotFoundError","identifier","OffchainLookupError","callbackSelector","extraData","urls","getUrl","OffchainLookupResponseMalformedError","OffchainLookupSenderMismatchError","ChainDoesNotSupportContract","blockCreated","ChainMismatchError","ChainNotFoundError","ClientChainNotConfiguredError","InvalidChainIdError","CallExecutionError","prettyArgs","prettyPrint","formatEther","formatGwei","prettyStateOverride","ContractFunctionExecutionError","formattedArgs","formatAbiItemWithArgs","includeFunctionName","functionWithParams","getContractAddress","ContractFunctionRevertedError","decodedData","decodeErrorResult","errorArgs","firstArg","solidity_js_1","errorWithParams","ContractFunctionZeroDataError","CounterfactualDeploymentFailedError","RawContractError","InvalidBytesLengthError","Eip712DomainNotFoundError","EnsAvatarInvalidMetadataError","EnsAvatarInvalidNftUriError","EnsAvatarUriResolutionError","uri","EnsAvatarUnsupportedNamespaceError","namespace","EstimateGasExecutionError","BaseFeeScalarError","Eip1559FeesNotSupportedError","MaxFeePerGasTooLowError","FilterTypeNotSupportedError","ExecutionRevertedError","FeeCapTooHighError","FeeCapTooLowError","NonceTooHighError","NonceTooLowError","NonceMaxValueError","InsufficientFundsError","IntrinsicGasTooHighError","IntrinsicGasTooLowError","TransactionTypeNotSupportedError","TipAboveFeeCapError","UnknownNodeError","HttpRequestError","headers","WebSocketRequestError","RpcRequestError","SocketClosedError","TimeoutError","RpcError","ProviderRpcError","ParseRpcError","InvalidRequestRpcError","MethodNotFoundRpcError","InvalidParamsRpcError","InternalRpcError","InvalidInputRpcError","ResourceNotFoundRpcError","ResourceUnavailableRpcError","TransactionRejectedRpcError","MethodNotSupportedRpcError","LimitExceededRpcError","JsonRpcVersionUnsupportedError","UserRejectedRequestError","UnauthorizedProviderError","UnsupportedProviderMethodError","ProviderDisconnectedError","ChainDisconnectedError","SwitchChainError","UnsupportedNonOptionalCapabilityError","UnsupportedChainIdError","DuplicateIdError","UnknownBundleIdError","BundleTooLargeError","AtomicReadyWalletRejectedUpgradeError","AtomicityNotSupportedError","pretty","prettyStateMapping","stateDiff","AccountStateConflictError","StateAssignmentConflictError","stateMapping","FeeConflictError","InvalidLegacyVError","InvalidSerializableTransactionError","InvalidSerializedTransactionTypeError","serializedType","InvalidSerializedTransactionError","attributes","missing","InvalidStorageKeySizeError","storageKey","TransactionExecutionError","TransactionNotFoundError","TransactionReceiptNotFoundError","WaitForTransactionReceiptTimeoutError","UrlRequiredError","InvalidDomainError","InvalidPrimaryTypeError","InvalidStructTypeError","InvalidDecimalNumberError","getContract","rpcSchema","custom","fallback","createPublicClient","createTestClient","publicActions","walletActions","createWalletClient","multicall3Abi","erc20Abi","erc20Abi_bytes32","erc721Abi","erc1155Abi","erc4626Abi","universalSignatureValidatorAbi","ethAddress","zeroAddress","deploylessCallViaBytecodeBytecode","deploylessCallViaFactoryBytecode","universalSignatureValidatorByteCode","etherUnits","gweiUnits","weiUnits","maxInt8","maxInt16","maxInt24","maxInt32","maxInt40","maxInt48","maxInt56","maxInt64","maxInt72","maxInt80","maxInt88","maxInt96","maxInt104","maxInt112","maxInt120","maxInt128","maxInt136","maxInt144","maxInt152","maxInt160","maxInt168","maxInt176","maxInt184","maxInt192","maxInt200","maxInt208","maxInt216","maxInt224","maxInt232","maxInt240","maxInt248","maxInt256","maxUint8","maxUint16","maxUint24","maxUint32","maxUint40","maxUint48","maxUint56","maxUint64","maxUint72","maxUint80","maxUint88","maxUint96","maxUint104","maxUint112","maxUint120","maxUint128","maxUint136","maxUint144","maxUint152","maxUint160","maxUint168","maxUint176","maxUint184","maxUint192","maxUint200","maxUint208","maxUint216","maxUint224","maxUint232","maxUint240","maxUint248","maxUint256","minInt8","minInt16","minInt24","minInt32","minInt40","minInt48","minInt56","minInt64","minInt72","minInt80","minInt88","minInt96","minInt104","minInt112","minInt120","minInt128","minInt136","minInt144","minInt152","minInt160","minInt168","minInt176","minInt184","minInt192","minInt200","minInt208","minInt216","minInt224","minInt232","minInt240","minInt248","minInt256","zeroHash","presignMessagePrefix","setErrorConfig","UnknownRpcError","labelhash","defineBlock","decodeAbiParameters","decodeDeployData","decodeFunctionData","encodeAbiParameters","encodeErrorResult","prepareEncodeFunctionData","encodeFunctionResult","defineTransaction","formatTransaction","transactionType","defineTransactionReceipt","formatTransactionReceipt","defineTransactionRequest","rpcTransactionType","getCreate2Address","getCreateAddress","getSerializedTransactionType","hashDomain","hashStruct","compactSignatureToSignature","parseCompactSignature","recoverMessageAddress","recoverTransactionAddress","recoverTypedDataAddress","signatureToCompactSignature","serializeCompactSignature","bytesToRlp","hexToRlp","toRlp","parseErc6492Signature","assertTransactionEIP1559","assertTransactionEIP2930","assertTransactionLegacy","boolToBytes","numberToBytes","stringToBytes","boolToHex","bytesToBigInt","bytesToBool","bytesToNumber","bytesToString","ccipRequest","offchainLookupAbiItem","commitmentToVersionedHash","sidecarsToVersionedHashes","fromBlobs","toBlobs","defineKzg","setupKzg","concatHex","defineChain","extractChain","withTimeout","formatUnits","hexToString","fromRlp","toEventSelector","toFunctionSelector","toEventSignature","toFunctionSignature","toEventHash","toFunctionHash","toPrefixedMessage","isAddress","isHash","ripemd160","padBytes","padHex","parseEther","parseGwei","parseTransaction","parseUnits","serializeAccessList","serializeTransaction","sliceBytes","sliceHex","domainSeparator","createNonceManager","createCursor","sizeOfOffset","description","argTopics","indexedInputs","topic","decodeTopic","nonIndexedInputs","cursor_js_1","encodeParams","preparedParams","prepareParam","prepareParams","encodeBool","encoding_js_1","paramSize","staticParams","dynamicParams","definition","args_","encodeArg","log_js_1","formatAbiParam","matchArgs","isEqual","includesArgs","checksumAddressCache","address_","opcode","bytecodeHash","hashAuthorization","serializedAuthorizationList","toYParitySignatureArray","blob","blobToKzgCommitment","commitment","computeBlobKzgProof","versionedHash","trimmedData","blob_js_2","blob_js_1","overrideOptions","requestId","withDedupe","retryAfter","ccipRequest_","ccip_js_1","localBatchGatewayRequest","json","text","ok","statusText","chains","hexOrBytes","data_js_1","toOrOpts","fromRlpCursor","readLength","readList","charCodeMap","encodable","getEncodable","bodyLength","sizeOfBodyLength","getSizeOfLength","getEncodableList","bytesOrHex","sizeOfBytesLength","getEncodableBytes","nft","parseNftUri","nftUri","getNftTokenUri","resolvedNftUri","isOnChain","isEncoded","resolveAvatarUri","encodedJson","atob","decoded","parseAvatarUri","getJsonImage","uriTokenId","tokenID","getMetadataAvatarUri","parseNftAvatarUri","ens_js_1","uri_","reference","asset_namespace","eip_namespace","chainID","erc_namespace","networkRegex","ipfsHashRegex","base64Regex","dataURIRegex","isImageUri","contentType","hasOwnProperty","img","Image","onload","onerror","src","getGateway","defaultGateway","ipfsGateway","ipfs","arweaveGateway","arweave","networkRegexMatch","protocol","subpath","subtarget","isIPNS","isIPFS","replacedUri","parsedUri","btoa","image","image_url","image_data","resolvedURI","label","indexOf","callType","encodedLabelToLabelhash","queries","failures","responses","query","labels","hashFromEncodedLabel","hashed","packet","encodeLabelhash","EXECUTION_REVERTED_ERROR_CODE","executionRevertedError","requestMap","method_","blobGasUsed","difficulty","excessBlobGas","logsBloom","totalDifficulty","defineFormatter","extract_","gasUsedRatio","oldestBlock","reward","overrides","logIndex","storageProof","transaction_","typeHex","yParity","cumulativeGasUsed","effectiveGasPrice","blobGasPrice","rpcRequest","legacy","eip2930","eip1559","eip4844","eip7702","actionFn","action_implicit","action_explicit","to_","keccak_256","toSignatureHash","toSignatureHash_js_1","toSignature","def_","hashSignature","rpc","getSocketRpcClient","socketClientCache","serializeAuthorizationList","verifyAuthorization","publicKeyToAddress","containsNodeError","path","loadTrustedSetup","deltaMap","nonceMap","promiseMap","getKey","increment","previousNonce","jsonRpc","callbackId","callbackCount","getListeners","cleanup","fns","initialWaitTime","initialWait","watch","scheduler","getScheduler","flush","schedulerCache","setScheduler","buildCache","created","finally","resolve_","reject_","delay_","attemptRetry","retry","errorInstance","signal","timeoutId","controller","AbortController","abort","socket","subscriptions","socketClient","webSocketAsync","signal_","id_js_1","Request","keepAliveInterval","attempts","reconnectCount","keepAliveTimer","setup","onClose","subscription","error_","close","onOpen","isSubscription","clearInterval","setInterval","socketClient_","WebSocket","onClose_","onMessage","_data","readyState","CONNECTING","onopen","close_","CLOSED","CLOSING","yParityAndS","yParityAndS_bytes","encodedTypes","encodedValues","hashType","encodeField","encodedHashType","encodeType","unsortedDeps","findTypeDependencies","deps","primaryType_","lastIndexOf","parsedType","typeValuePairs","bytes_js_1","secp256k1_1","yParityOrV","hashHex","secp256k1","recoveryBit","toRecoveryBit","serialized","yParity_","strings_js_1","statement","prefixRegex","expirationTime","issuedAt","notBefore","suffixRegex","resources","accountState","stateOverride_js_1","serializeAccountStateOverride","serializeStateMapping","rpcAccountStateOverride","number_js_1","transactionArray","toTransactionArray","parseAccessList","parseEIP155Signature","parseTransactionEIP1559","parseTransactionEIP2930","transactionOrWrapperArray","hasNetworkWrapper","wrapperArray","assertTransactionEIP4844","parseTransactionEIP4844","parseAuthorizationList","assertTransactionEIP7702","parseTransactionEIP7702","chainIdOrV_","chainIdOrV","parseTransactionLegacy","accessList_","serializedAccessList","serializeTransactionEIP1559","serializeTransactionEIP2930","serializeTransactionEIP4844","serializeTransactionEIP7702","serializeTransactionLegacy","domain_","normalizeData","validateData","integerMatch","validateReference","typedData_js_1","unit","unit_js_1","display","negative","integer","fraction","rounded","global","self","getNativeWebSocket"],"sourceRoot":""}